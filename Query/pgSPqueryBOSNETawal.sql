create or replace function bos_ar_ar_getarhistory_013(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szarclassid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_bunclosedonly bit)
returns void as
$body$
begin

if p_bunclosedonly = 1
  then

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.szarclassid,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.szfinvoiceusage,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode,
bsc.szchangenote
from
bos_ar_artrans as baa
left join bos_sd_cjrtracking as bsc on bsc.sztrnid = baa.sztrnid and bsc.szdocid = baa.szdocid

where
baa.szcustid = p_szcustid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.bclosed = 0
and baa.szarclassid like p_szarclassid

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;

else

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.szarclassid,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.szfinvoiceusage,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode,
bsc.szchangenote

from
bos_ar_artrans as baa
left join bos_sd_cjrtracking as bsc on bsc.sztrnid = baa.sztrnid and bsc.szdocid = baa.szdocid

where
baa.szcustid = p_szcustid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.szarclassid like p_szarclassid

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;


end if;
end;
$body$
language plpgsql volatile;
--=====================================================
create or replace function bos_ar_fcustchginvaddress_createfcustchginvaddress_013(
p_szfcustciaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffinvoiceaddress bit,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szmediumname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szmediumname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szmediumname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustchginvaddress
(
szfcustciaid,
szfcallid,
szsalesorgid,
dtmdoc,
szcustid,
szcustinvoicenm,
szcusttaxnm,
szcustcollectnm,
custszcontactperson ,
custszroomno ,
custszfloor ,
custszbuilding ,
custszaddress_1 ,
custszaddress_2 ,
custszdistrict ,
custszcity ,
custszzipcode ,
custszstate ,
custszcountry ,
custszphoneno_1 ,
custszphoneno_2 ,
custszfaxno ,
custszmobileno ,
custszemail ,
custszwebsite ,
bisdiffinvoiceaddress,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
szremark,
szinvworkplaceid,
szcollworkplaceid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustciaid,
p_szfcallid,
p_szsalesorgid,
p_dtmdoc,
p_szcustid,
p_szcustinvoicenm,
p_szcusttaxnm,
p_szcustcollectnm,
p_custszcontactperson ,
p_custszroomno ,
p_custszfloor ,
p_custszbuilding ,
p_custszaddress_1 ,
p_custszaddress_2 ,
p_custszdistrict ,
p_custszcity ,
p_custszzipcode ,
p_custszstate ,
p_custszcountry ,
p_custszphoneno_1 ,
p_custszphoneno_2 ,
p_custszfaxno ,
p_custszmobileno ,
p_custszemail ,
p_custszwebsite ,
p_bisdiffinvoiceaddress,
p_invoiceszcontactperson,
p_invoiceszroomno,
p_invoiceszfloor,
p_invoiceszbuilding,
p_invoiceszaddress_1,
p_invoiceszaddress_2,
p_invoiceszdistrict,
p_invoiceszcity,
p_invoiceszzipcode,
p_invoiceszstate,
p_invoiceszcountry,
p_invoiceszphoneno_1,
p_invoiceszphoneno_2,
p_invoiceszfaxno,
p_invoiceszmobileno,
p_invoiceszemail,
p_invoiceszwebsite,
p_bisdifftaxaddress,
p_taxszcontactperson,
p_taxszroomno,
p_taxszfloor,
p_taxszbuilding,
p_taxszaddress_1,
p_taxszaddress_2,
p_taxszdistrict,
p_taxszcity,
p_taxszzipcode,
p_taxszstate,
p_taxszcountry,
p_taxszphoneno_1,
p_taxszphoneno_2,
p_taxszfaxno,
p_taxszmobileno,
p_taxszemail,
p_taxszwebsite,
p_bisdiffcollectaddress,
p_collectszcontactperson,
p_collectszroomno,
p_collectszfloor,
p_collectszbuilding,
p_collectszaddress_1,
p_collectszaddress_2,
p_collectszdistrict,
p_collectszcity,
p_collectszzipcode,
p_collectszstate,
p_collectszcountry,
p_collectszphoneno_1,
p_collectszphoneno_2,
p_collectszfaxno,
p_collectszmobileno,
p_collectszemail,
p_collectszwebsite,
p_szremark,
p_szinvworkplaceid ,
p_szcollworkplaceid ,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;
--====================================
create or replace function bos_ar_fcustchginvaddress_updatefcustchginvaddress_013(
p_szfcustciaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffinvoiceaddress bit,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szmediumname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szmediumname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szmediumname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchginvaddress
set 
szsalesorgid = p_szsalesorgid,
szfcallid = p_szfcallid,
dtmdoc = p_dtmdoc,
szcustid = p_szcustid,
szcustinvoicenm = p_szcustinvoicenm,
szcusttaxnm = p_szcusttaxnm,
szcustcollectnm = p_szcustcollectnm,

custszcontactperson = p_custszcontactperson,
custszroomno = p_custszroomno,
custszfloor = p_custszfloor,
custszbuilding = p_custszbuilding,
custszaddress_1 = p_custszaddress_1,
custszaddress_2 = p_custszaddress_2,
custszdistrict = p_custszdistrict,
custszcity = p_custszcity,
custszzipcode = p_custszzipcode,
custszstate = p_custszstate,
custszcountry = p_custszcountry,
custszphoneno_1 = p_custszphoneno_1,
custszphoneno_2 = p_custszphoneno_2,
custszfaxno = p_custszfaxno,
custszmobileno = p_custszmobileno,
custszemail = p_custszemail,
custszwebsite = p_custszwebsite,

bisdiffinvoiceaddress = p_bisdiffinvoiceaddress,

invoiceszcontactperson = p_invoiceszcontactperson,
invoiceszroomno = p_invoiceszroomno,
invoiceszfloor = p_invoiceszfloor,
invoiceszbuilding = p_invoiceszbuilding,
invoiceszaddress_1 = p_invoiceszaddress_1,
invoiceszaddress_2 = p_invoiceszaddress_2,
invoiceszdistrict = p_invoiceszdistrict,
invoiceszcity = p_invoiceszcity,
invoiceszzipcode = p_invoiceszzipcode,
invoiceszstate = p_invoiceszstate,
invoiceszcountry = p_invoiceszcountry,
invoiceszphoneno_1 = p_invoiceszphoneno_1,
invoiceszphoneno_2 = p_invoiceszphoneno_2,
invoiceszfaxno = p_invoiceszfaxno,
invoiceszmobileno = p_invoiceszmobileno,
invoiceszemail = p_invoiceszemail,
invoiceszwebsite = p_invoiceszwebsite,

bisdifftaxaddress = p_bisdifftaxaddress,

taxszcontactperson = p_taxszcontactperson,
taxszroomno = p_taxszroomno,
taxszfloor = p_taxszfloor,
taxszbuilding = p_taxszbuilding,
taxszaddress_1 = p_taxszaddress_1,
taxszaddress_2 = p_taxszaddress_2,
taxszdistrict = p_taxszdistrict,
taxszcity = p_taxszcity,
taxszzipcode = p_taxszzipcode,
taxszstate = p_taxszstate,
taxszcountry = p_taxszcountry,
taxszphoneno_1 = p_taxszphoneno_1,
taxszphoneno_2 = p_taxszphoneno_2,
taxszfaxno = p_taxszfaxno,
taxszmobileno = p_taxszmobileno,
taxszemail = p_taxszemail,
taxszwebsite = p_taxszwebsite,

bisdiffcollectaddress = p_bisdiffcollectaddress,

collectszcontactperson = p_collectszcontactperson,
collectszroomno = p_collectszroomno,
collectszfloor = p_collectszfloor,
collectszbuilding = p_collectszbuilding,
collectszaddress_1 = p_collectszaddress_1,
collectszaddress_2 = p_collectszaddress_2,
collectszdistrict = p_collectszdistrict,
collectszcity = p_collectszcity,
collectszzipcode = p_collectszzipcode,
collectszstate = p_collectszstate,
collectszcountry = p_collectszcountry,
collectszphoneno_1 = p_collectszphoneno_1,
collectszphoneno_2 = p_collectszphoneno_2,
collectszfaxno = p_collectszfaxno,
collectszmobileno = p_collectszmobileno,
collectszemail = p_collectszemail,
collectszwebsite = p_collectszwebsite,

szremark = p_szremark,
szinvworkplaceid = p_szinvworkplaceid,
szcollworkplaceid = p_szcollworkplaceid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated ,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid

where 
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;
--=============================

create or replace function bos_ar_fcustpayment_createfcustpayment_014(
p_szfcustpaymentid bos_dt_szid,
p_dtmfcustpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_buploadfrommodis bit)
returns void as
$body$
begin
insert into bos_ar_fcustpayment
(
szfcustpaymentid,
dtmfcustpayment,
szfcashreceiptid,
szdeposanid,
szaccountid1,
szsubaccountid1,
decamount1,
szaccountid2,
szsubaccountid2,
decamount2,
szaccountid3,
szsubaccountid3,
decamount3,
szaccountid4,
szsubaccountid4,
decamount4,
decamount,
szccyid,
szccyrateid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
buploadfrommodis
)
values
(
p_szfcustpaymentid,
p_dtmfcustpayment,
p_szfcashreceiptid,
p_szdeposanid,
p_szaccountid1,
p_szsubaccountid1,
p_decamount1,
p_szaccountid2,
p_szsubaccountid2,
p_decamount2,
p_szaccountid3,
p_szsubaccountid3,
p_decamount3,
p_szaccountid4,
p_szsubaccountid4,
p_decamount4,
p_decamount,
p_szccyid,
p_szccyrateid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_buploadfrommodis
);

end;
$body$
language plpgsql volatile;
--====================================================
create or replace function bos_inv_lotinfo_getlotinfo_013(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_lotinfo.szlottypeid,
bos_inv_lotinfo.declotstrength,
	bos_inv_lotinfo.dtmexpired,
	bos_inv_lotinfo.szproductioncode,
	bos_inv_lotinfo.szlotstatus,
	coalesce(bos_inv_product.szname,'') as szproductnm,
	bos_inv_lotinfo.dtmlastupdated

from 
bos_inv_lotinfo left join bos_inv_product on bos_inv_lotinfo.szproductid=bos_inv_product.szproductid
where 
bos_inv_lotinfo.szlotid = p_szlotid and bos_inv_lotinfo.szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;
--======================================================================
create or replace function bos_inv_price_createprice_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szproductcat_4 bos_dt_szid,
p_szproductcat_5 bos_dt_szid,
p_szproductcat_6 bos_dt_szid,
p_szproductcat_7 bos_dt_szid,
p_szproductcat_8 bos_dt_szid,
p_szproductcat_9 bos_dt_szid,
p_szproductcat_10 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid,
p_szdiscgroupid_4 bos_dt_szid,
p_szdiscgroupid_5 bos_dt_szid,
p_szdiscgroupid_6 bos_dt_szid,
p_szdiscgroupid_7 bos_dt_szid,
p_szdiscgroupid_8 bos_dt_szid,
p_szdiscgroupid_9 bos_dt_szid,
p_szdiscgroupid_10 bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_price
(
szownertrnid,
szpriceid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,
szproductcat_1,
szproductcat_2,
szproductcat_3,
szproductcat_4,
szproductcat_5,
szproductcat_6,
szproductcat_7,
szproductcat_8,
szproductcat_9,
szproductcat_10,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_dtmvalidstart,
p_bisspecificenddate,
p_dtmvalidend,
p_sznextownertrnid,
p_sznextpriceid,
p_szproductcat_1,
p_szproductcat_2,
p_szproductcat_3,
p_szproductcat_4,
p_szproductcat_5,
p_szproductcat_6,
p_szproductcat_7,
p_szproductcat_8,
p_szproductcat_9,
p_szproductcat_10,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
p_szdiscgroupid_4,
p_szdiscgroupid_5,
p_szdiscgroupid_6,
p_szdiscgroupid_7,
p_szdiscgroupid_8,
p_szdiscgroupid_9,
p_szdiscgroupid_10,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;
--=================================================
create or replace function bos_inv_price_getpricewhereguid_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,
szproductcat_4,
szproductcat_5,
szproductcat_6,
szproductcat_7,
szproductcat_8,
szproductcat_9,
szproductcat_10,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql;
--======================================================
create or replace function bos_inv_price_getpricewherestatus_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,
szproductcat_4,
szproductcat_5,
szproductcat_6,
szproductcat_7,
szproductcat_8,
szproductcat_9,
szproductcat_10,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;
--==============================================

create or replace function bos_inv_price_updateprice_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szproductcat_4 bos_dt_szid,
p_szproductcat_5 bos_dt_szid,
p_szproductcat_6 bos_dt_szid,
p_szproductcat_7 bos_dt_szid,
p_szproductcat_8 bos_dt_szid,
p_szproductcat_9 bos_dt_szid,
p_szproductcat_10 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid,
p_szdiscgroupid_4 bos_dt_szid,
p_szdiscgroupid_5 bos_dt_szid,
p_szdiscgroupid_6 bos_dt_szid,
p_szdiscgroupid_7 bos_dt_szid,
p_szdiscgroupid_8 bos_dt_szid,
p_szdiscgroupid_9 bos_dt_szid,
p_szdiscgroupid_10 bos_dt_szid)
returns void as
$body$
begin
update bos_inv_price
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
dtmvalidstart = p_dtmvalidstart,
bisspecificenddate = p_bisspecificenddate,
dtmvalidend = p_dtmvalidend,
sznextownertrnid = p_sznextownertrnid,
sznextpriceid = p_sznextpriceid,

szproductcat_1 = p_szproductcat_1,
szproductcat_2 = p_szproductcat_2,
szproductcat_3 = p_szproductcat_3,
szproductcat_4 = p_szproductcat_4,
szproductcat_5 = p_szproductcat_5,
szproductcat_6 = p_szproductcat_6,
szproductcat_7 = p_szproductcat_7,
szproductcat_8 = p_szproductcat_8,
szproductcat_9 = p_szproductcat_9,
szproductcat_10 = p_szproductcat_10,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3,
szdiscgroupid_4 = p_szdiscgroupid_4,
szdiscgroupid_5 = p_szdiscgroupid_5,
szdiscgroupid_6 = p_szdiscgroupid_6,
szdiscgroupid_7 = p_szdiscgroupid_7,
szdiscgroupid_8 = p_szdiscgroupid_8,
szdiscgroupid_9 = p_szdiscgroupid_9,
szdiscgroupid_10 = p_szdiscgroupid_10

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;
--=============================================
create or replace function bos_inv_priceorder_createpriceorder_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid,
p_szdiscgroupid_4 bos_dt_szbigid,
p_szdiscgroupid_5 bos_dt_szbigid,
p_szdiscgroupid_6 bos_dt_szbigid,
p_szdiscgroupid_7 bos_dt_szbigid,
p_szdiscgroupid_8 bos_dt_szbigid,
p_szdiscgroupid_9 bos_dt_szbigid,
p_szdiscgroupid_10 bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_priceorder
(
szownertrnid,
szpriceorderid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
szccyid,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,
bmindiscbaseonamount,
bunitdiscbaseonamount,
bminbonusbaseonamount,
bunitbonusbaseonamount,
szuomid,
sznextownertrnid,
sznextpriceorderid,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_bisspecificenddate,
p_dtmvalidstart,
p_dtmvalidend,
p_szccyid,
p_bhascombinationbonus,
p_bonlycalculatefrcombination,
p_bhasamountdiscbonus,
p_bhasamountproductbonus,
p_bhasprovisionbonus,
p_bmindiscbaseonamount,
p_bunitdiscbaseonamount,
p_bminbonusbaseonamount,
p_bunitbonusbaseonamount,
p_szuomid,
p_sznextownertrnid,
p_sznextpriceorderid,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
p_szdiscgroupid_4,
p_szdiscgroupid_5,
p_szdiscgroupid_6,
p_szdiscgroupid_7,
p_szdiscgroupid_8,
p_szdiscgroupid_9,
p_szdiscgroupid_10,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;
--========================================
create or replace function bos_inv_priceorder_getpriceorderwhereguid_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;
--=======================================
create or replace function bos_inv_priceorder_getpriceorderwherestatus_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
szdiscgroupid_4,
szdiscgroupid_5,
szdiscgroupid_6,
szdiscgroupid_7,
szdiscgroupid_8,
szdiscgroupid_9,
szdiscgroupid_10,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;
--======================================

create or replace function bos_inv_priceorder_updatepriceorder_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid,
p_szdiscgroupid_4 bos_dt_szbigid,
p_szdiscgroupid_5 bos_dt_szbigid,
p_szdiscgroupid_6 bos_dt_szbigid,
p_szdiscgroupid_7 bos_dt_szbigid,
p_szdiscgroupid_8 bos_dt_szbigid,
p_szdiscgroupid_9 bos_dt_szbigid,
p_szdiscgroupid_10 bos_dt_szbigid)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
bisspecificenddate = p_bisspecificenddate,
dtmvalidstart = p_dtmvalidstart,
dtmvalidend = p_dtmvalidend,
szccyid = p_szccyid,
bhascombinationbonus = p_bhascombinationbonus,
bonlycalculatefrcombination = p_bonlycalculatefrcombination,
bhasamountdiscbonus = p_bhasamountdiscbonus,
bhasamountproductbonus = p_bhasamountproductbonus,
bhasprovisionbonus = p_bhasprovisionbonus,

bmindiscbaseonamount = p_bmindiscbaseonamount,
bunitdiscbaseonamount = p_bunitdiscbaseonamount,

bminbonusbaseonamount = p_bminbonusbaseonamount,
bunitbonusbaseonamount = p_bunitbonusbaseonamount,

szuomid = p_szuomid,

sznextownertrnid = p_sznextownertrnid,
sznextpriceorderid = p_sznextpriceorderid,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3,
szdiscgroupid_4 = p_szdiscgroupid_4,
szdiscgroupid_5 = p_szdiscgroupid_5,
szdiscgroupid_6 = p_szdiscgroupid_6,
szdiscgroupid_7 = p_szdiscgroupid_7,
szdiscgroupid_8 = p_szdiscgroupid_8,
szdiscgroupid_9 = p_szdiscgroupid_9,
szdiscgroupid_10 = p_szdiscgroupid_10

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;
--====================================

create or replace function bos_inv_stock_getlistofsnviewerdata_013(
p_szworkplaceid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szserialnumber varchar,
p_szproductid bos_dt_szid,
p_dtmtransaction timestamp,
p_szstocktypeid varchar)
returns void as
$body$
begin

select distinct
bos_inv_stocksn.szreportedasid as szworkplaceid,
coalesce(bos_gl_workplace.szname,'') as szworkplacenm,
coalesce(dbo.kgenlocationtypetoname(bos_inv_stocksn.szlocationtype),'') as szlocationtype,
bos_inv_stocksn.szlocationid,
coalesce(bos_ar_custlocation.szcustdeliverynm,
coalesce(bos_pi_employee.szname,
coalesce(bos_ap_supplier.szname,
coalesce(bos_inv_carrier.szname,
coalesce(bos_inv_warehouse.szname,
coalesce(bos_inv_vehicle.szpoliceno,'')))))) as szlocationnm,
coalesce(bos_ar_custlocation.locationszaddress_1+' '+
bos_ar_custlocation.locationszaddress_2+' '+
bos_ar_custlocation.locationszcity+' '+
bos_ar_custlocation.locationszzipcode,'') as szaddress,
bos_inv_stocksn.szproductsn as szproductsn,
coalesce(bos_inv_stocksn.szproductid,'') as szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
bos_inv_stocksn.szstocktypeid,
coalesce(dbo.kgenpaymenttypetoname(bos_sd_fdoitem.szpaymenttype),'') as szpaymenttype,
coalesce(bos_sd_rentalproduct.sztrnid+' '+bos_sd_rentalproduct.szdocid,' ') as szreffdoc,
coalesce(dbo.kgenreturndatenotime(bos_sd_fdo.dtmdelivery),'1900-01-01') as dtminstalled,
coalesce(dbo.kgenreturndatenotime(bos_sd_rentalproduct.dtmlastinvoiced),'1900-01-01') as dtminvoiced,
coalesce(bos_sd_rentalproduct.deccharge,0) as decprice,
coalesce(dbo.kgenbittroubletostringtrouble(bos_sd_rentalproduct.btrouble),'') as sztrouble
from
(
select 
szproductsn,
szreportedasid,
szproductid,
szreportedastype,
szlocationtype,
szlocationid,
szstocktypeid
from
(	select 
a.szproductsn,
shqty*-1 as flag, 
a.szreportedasid, 
a.szproductid, 
a.szreportedastype, 
a.szlocationtype, 
a.szlocationid, 
a.szstocktypeid
from bos_inv_stocksnhistory a
inner join bos_inv_stockhistory b on b.gdhistoryid = a.gdstockhistoryid
where cast(b.dtmtransaction as date) > p_dtmtransaction
and a.szreportedasid like p_szworkplaceid
and a.szproductid like p_szproductid
and a.szstocktypeid like p_szstocktypeid
and a.szlocationid like p_szlocationid
and a.szlocationtype like p_szlocationtype
and a.szreportedastype = 'wor'
and a.szproductsn like p_szserialnumber
union all
select 
c.szproductsn,shqty as flag,
szreportedasid,szproductid,
c.szreportedastype,
c.szlocationtype,
c.szlocationid,
c.szstocktypeid
from bos_inv_stocksn c 
inner join bos_inv_stocksnproduct d on c.szproductsn = d.szproductsn
and szreportedasid like p_szworkplaceid
and szproductid like p_szproductid
and szstocktypeid like p_szstocktypeid
and szlocationid like p_szlocationid
and szlocationtype like p_szlocationtype
and szreportedastype = 'wor'
and c.szproductsn like p_szserialnumber
) z
group by 
szproductsn,
szreportedasid,
szproductid,
szreportedastype,
szlocationtype,
szlocationid,
szstocktypeid
having sum(flag) <> 0
) as bos_inv_stocksn
left join bos_sd_rentalproduct on bos_sd_rentalproduct.szsernum = bos_inv_stocksn.szproductsn
--left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_inv_stocksn.szproductsn
left join bos_sd_fdoitemsn on bos_sd_fdoitemsn.szproductsn = bos_sd_rentalproduct.szsernum 
left join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdoitemsn.szdoid 
and bos_sd_fdoitem.shitemnumber = bos_sd_fdoitemsn.shitemnumber 
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_rentalproduct.szdocid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksn.szreportedasid
left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_inv_stocksn.szlocationid
left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_inv_stocksn.szlocationid
left join bos_ar_custlocation on bos_ar_custlocation.szcustid = bos_inv_stocksn.szlocationid
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_inv_stocksn.szlocationid
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_inv_stocksn.szlocationid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szsalesid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksn.szproductid
order by
szworkplaceid,
szlocationtype,
szlocationid,
szproductid,
szproductsn;


end;
$body$
language plpgsql volatile;
--===================================
create or replace function bos_inv_stocklot_createstocklot_013(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decqtyonhand bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocklot
(
szlotid,
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
decqtyonhand,
dtmlastupdated
)
values
(
p_szlotid,
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_decqtyonhand,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;
--==================================================

create or replace function bos_sd_custtoroutine_createcusttoroutine_014(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred,
isynctransferstatus
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred,
0
);

end;
$body$
language plpgsql volatile;
--=================================

create or replace function bos_sd_custtoroutine_createcusttoroutine_014_draft_014(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred,
isynctransferstatus
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred,
0
);

end;
$body$
language plpgsql volatile;
--==================================

create or replace function bos_sd_custtoroutine_updatecusttoroutine_014(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid=p_szdeliverygroupid,
isynctransferstatus = 0
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;
--====================================
create or replace function bos_sd_custtoroutine_updatecusttoroutine_014_draft_014(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid = p_szdeliverygroupid,
isynctransferstatus = 0
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;
--=================================
create or replace function bos_sd_fcjr_createfcjritem_013(
p_szfcjrid bos_dt_szid,
p_shitemnumber smallint,
p_szcjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bsuccess bit,
p_szcollrefno bos_dt_szdescription,
p_szcolltasktype bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sd_fcjritem
(
szfcjrid,
shitemnumber,
szcjrtrackingid,
szreasonid,
szdescription,
bsuccess,
szcollrefno,
szcolltasktype
)
values
(
p_szfcjrid,
p_shitemnumber,
p_szcjrtrackingid,
p_szreasonid,
p_szdescription,
p_bsuccess,
p_szcollrefno,
p_szcolltasktype
);

end;
$body$
language plpgsql volatile;
--=================================
create or replace function bos_sd_fcjr_getfcjritem_013(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
szcjrtrackingid,
szreasonid,
szdescription,
szcollrefno,
szcolltasktype,
bsuccess

from 
bos_sd_fcjritem
where 
szfcjrid = p_szfcjrid 
order by 
shitemnumber;


end;
$body$
language plpgsql volatile;
--==========================
create or replace function bos_sd_fdo_createfdo_016(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_szfdnid bos_dt_szid,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid,
p_szreference_1 bos_dt_szname,
p_szreference_2 bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_fdo
(
szdoid,
szapplyno,
szfsoid,
szlogistictype,
szfdnid,
breturntowarehouse,
szreturnfdoid,
szreturnwarehouseid,
szreturnstocktypeid,
szsalesorgid,
szordertypeid,
dtmdelivery,
dtmprice,
szcustid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szfinvoiceid,
szfirstfinvoiceid,
bdropship,
busethirdpartycarrier,
szvehicleid,
szdriverid,
szhelperid,
szhelperid_2,
szhelperid_3,
szsalesid,
szsalessupervisorid,
szsalessupervisorid_2,
szsalessupervisorid_3,
szsalesdivisionid,
szsalesdepartmentid,
szsalesteamid,
szcarrierid,
szvehiclenumber,
szdrivername,
szremark,
szlatitude,
szlongitude,
szcustpoid,
dtmcustpo,
szwarehouseid,
szstocktypeid,
bcash,
gdcreditlimitapprovedid,
szpaymenttermid,
deliveryszcontactperson,
deliveryszroomno,
deliveryszfloor,
deliveryszbuilding,
deliveryszaddress_1,
deliveryszaddress_2,
deliveryszdistrict,
deliveryszcity,
deliveryszzipcode,
deliveryszstate,
deliveryszcountry,
deliveryszphoneno_1,
deliveryszphoneno_2,
deliveryszfaxno,
deliveryszmobileno,
deliveryszemail,
deliveryszwebsite,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szmanualno,
szfcustbiid,
dtmmobiletransaction,
-- volume and weight,
dectonase,
deccubication,
buploadedfrommodis,
dtmstartvisit ,
dtmendvisit ,
decvisitspendtime ,
bscansuccess ,
szscanfailreason,
szbarcodescanfailreason,
bscanbarcodesuccess,
decjourneyspendtime,
adcid,
szcustreceiptno,
szreference_1,
szreference_2
)
values
(
p_szdoid,
p_szapplyno,
p_szfsoid,
p_szlogistictype,
p_szfdnid,
p_breturntowarehouse,
p_szreturnfdoid,
p_szreturnwarehouseid,
p_szreturnstocktypeid,
p_szsalesorgid,
p_szordertypeid,
p_dtmdelivery,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szfirstfinvoiceid,
p_bdropship,
p_busethirdpartycarrier,
p_szvehicleid,
p_szdriverid,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_szwarehouseid,
p_szstocktypeid,
p_bcash,
p_gdcreditlimitapprovedid,
p_szpaymenttermid,
p_deliveryszcontactperson,
p_deliveryszroomno,
p_deliveryszfloor,
p_deliveryszbuilding,
p_deliveryszaddress_1,
p_deliveryszaddress_2,
p_deliveryszdistrict,
p_deliveryszcity,
p_deliveryszzipcode,
p_deliveryszstate,
p_deliveryszcountry,
p_deliveryszphoneno_1,
p_deliveryszphoneno_2,
p_deliveryszfaxno,
p_deliveryszmobileno,
p_deliveryszemail,
p_deliveryszwebsite,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szmanualno,
p_szfcustbiid,
p_dtmmobiletransaction,
-- volume and weight,
p_dectonase,
p_deccubication,
p_buploadedfrommodis ,
p_dtmstartvisit ,
p_dtmendvisit ,
p_decvisitspendtime ,
p_bscansuccess ,
p_szscanfailreason,
p_szbarcodescanfailreason,
p_bscanbarcodesuccess,
p_decjourneyspendtime,
p_adcid,
p_szcustreceiptno,
p_szreference_1,
p_szreference_2
);

end;
$body$
language plpgsql volatile;
--================================
create or replace function bos_sd_fdo_getfdo_016(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select      
bos_sd_fdo.szdoid,      
bos_sd_fdo.szapplyno,      
bos_sd_fdo.szfsoid,      

bos_sd_fdo.szlogistictype,      
bos_sd_fdo.szfdnid,      

bos_sd_fdo.breturntowarehouse,      
bos_sd_fdo.szreturnfdoid,      
bos_sd_fdo.szreturnwarehouseid,      
bos_sd_fdo.szreturnstocktypeid,      

bos_sd_fdo.szsalesorgid,      

bos_sd_fdo.szordertypeid,      
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,      
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,      

bos_sd_fdo.dtmdelivery,      
bos_sd_fdo.dtmprice,      

bos_sd_fdo.szcustid,      
bos_ar_customer.szname as szcustnm_j,      
custsales.ballowtocredit as bcustallowtocredit_j,      

bos_sd_fdo.decamount,      
bos_sd_fdo.dectax,      

bos_sd_fdo.szccyid,      
bos_cu_currency.szamountformat as szccyamountformat_j,      

bos_sd_fdo.szccyrateid,      
bos_sd_fdo.decccyrate,      
bos_sd_fdo.szfinvoiceid,      
bos_sd_fdo.szfirstfinvoiceid,      
bos_sd_fdo.bdropship,      
bos_sd_fdo.busethirdpartycarrier,      

bos_sd_fdo.szvehicleid,      
bos_sd_fdo.szvehiclenumber,      

bos_sd_fdo.szdriverid,      
bos_sd_fdo.szdrivername,      

bos_sd_fdo.szhelperid,      
helper1.szname as szhelpernm,      

bos_sd_fdo.szhelperid_2,      
helper2.szname as szhelpernm_2,      

bos_sd_fdo.szhelperid_3,      
helper3.szname as szhelpernm_3,      

bos_sd_fdo.szsalesid,      
sales.szname as szsalesnm_j,      

bos_sd_fdo.szsalessupervisorid,      
bos_sd_fdo.szsalessupervisorid_2,      
bos_sd_fdo.szsalessupervisorid_3,      
bos_sd_fdo.szsalesdivisionid,      
bos_sd_fdo.szsalesdepartmentid,      
bos_sd_fdo.szsalesteamid,      

bos_sd_fdo.szcarrierid,      
bos_inv_carrier.szname as szcarriernm,      

bos_sd_fdo.szremark,      
bos_sd_fdo.szlatitude,      
bos_sd_fdo.szlongitude,      

bos_sd_fdo.szcustpoid,      
bos_sd_fdo.dtmcustpo,      

bos_sd_fdo.szwarehouseid,      
bos_inv_warehouse.szname as szwarehousenm,      

bos_sd_fdo.szstocktypeid,      
bos_sd_fdo.bcash,      

bos_sd_fdo.gdcreditlimitapprovedid,      
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,      
creditlimitapproved.bapproved as bcreditlimitapproved_j,      

bos_sd_djrtracking.szdjrtrackingid as szdjrtrackingid_j,      
bos_sd_djrtracking.szfdjrid as szdjrtrackingfdjrid_j,      

bos_sd_fdo.szpaymenttermid,      

bos_sd_fdo.deliveryszcontactperson,      
bos_sd_fdo.deliveryszroomno,      
bos_sd_fdo.deliveryszfloor,      
bos_sd_fdo.deliveryszbuilding,      
bos_sd_fdo.deliveryszaddress_1,      
bos_sd_fdo.deliveryszaddress_2,      
bos_sd_fdo.deliveryszdistrict,      
bos_sd_fdo.deliveryszcity,      
bos_sd_fdo.deliveryszzipcode,      
bos_sd_fdo.deliveryszstate,      
bos_sd_fdo.deliveryszcountry,      
bos_sd_fdo.deliveryszphoneno_1,      
bos_sd_fdo.deliveryszphoneno_2,      
bos_sd_fdo.deliveryszfaxno,      
bos_sd_fdo.deliveryszmobileno,      
bos_sd_fdo.deliveryszemail,      
bos_sd_fdo.deliveryszwebsite,      

--customer's collection info      
bsr.szrouteid as szcollrouteid,      
bsr.szdescription as szcollroutedescription,      
bsr.szopuserid as szcollectorid,      
bpe.szname as szcollectornm,      

bos_sd_fdo.bresultfrtransfer,      
bos_sd_fdo.bvoid,      
bos_gen_approved.bapproved,      
bos_sd_fdo.bapplied,      
bos_gl_fjournaltrans.szfjournalid as bjournal,      
bos_gl_fjournaltrans.bposted,      
bos_sd_fdo.btprintedcount,      
bos_sd_fdo.btransferred,      

bos_sd_fdo.szcompanyid,      
bos_gl_company.szname as szcompanynm,      

bos_sd_fdo.szworkplaceid,      
bos_gl_workplace.szname as szworkplacenm,      

bos_sd_fdo.sztaxentityid,      

bos_sd_fdo.bneedapproval,      
bos_gen_approved.gdapprovedid,      
bos_gen_approved.szapprovalid,      

bos_gl_fjournaltrans.szfjournalid,      

bos_sd_fdo.dtmcreated,      
bos_sd_fdo.bsystemcreated,      

bos_sd_fdo.szuserid,      
bos_sm_user.szname as szusernm_j,      

-- data status.      
bos_sd_fdo.dtmlastupdated,      
bos_sd_fdo.balreadytransferred,      
bos_sd_fdo.szmanualno,      
bos_sd_fdo.szfcustbiid,      
bos_sd_fdo.dtmmobiletransaction,      

-- weight and volume      
bos_sd_fdo.dectonase,      
bos_sd_fdo.deccubication,      
bos_sd_fdo.buploadedfrommodis,      
bos_sd_fdo.dtmstartvisit,     
bos_sd_fdo.dtmendvisit,     
bos_sd_fdo.decvisitspendtime,    
bos_sd_fdo.bscansuccess,     
bos_sd_fdo.szscanfailreason,
bos_sd_fdo.szbarcodescanfailreason,
bos_sd_fdo.bscanbarcodesuccess,
bos_sd_fdo.decjourneyspendtime,
bos_sd_fdo.adcid,
bos_sd_fdo.szcustreturntaxrefnote,
bos_sd_fdo.szcustreceiptno,
bos_sd_fdo.szreference_1,
bos_sd_fdo.szreference_2
from      
bos_sd_fdo       
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fdo.gdcreditlimitapprovedid      
left join bos_gen_approved on bos_sd_fdo.gdapprovedid = bos_gen_approved.gdapprovedid      
left join bos_gl_fjournaltrans on bos_sd_fdo.szfjournalid = bos_gl_fjournaltrans.szfjournalid      
left join bos_pi_employee as helper1 on bos_sd_fdo.szhelperid = helper1.szemployeeid      
left join bos_pi_employee as helper2 on bos_sd_fdo.szhelperid_2 = helper2.szemployeeid      
left join bos_pi_employee as helper3 on bos_sd_fdo.szhelperid_3 = helper3.szemployeeid      

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fdo.szsalesid      

--  these join fields are not really needed. but to retrieve them makes      
--  to do join to six different tables.      
--  so just de-activate it temporarily and activate it when it is absolutely      
--  necessary (and the processing power has increased).      
--left join bos_pi_employee as sup on sup.szemployeeid = bos_sd_fdo.szsalessupervisorid      
--left join bos_pi_employee as sup2 on sup2.szemployeeid = bos_sd_fdo.szsalessupervisorid_2      
--left join bos_pi_employee as sup3 on sup3.szemployeeid = bos_sd_fdo.szsalessupervisorid_3      
--left join bos_pi_division as div on div.szdivisionid = bos_sd_fdo.szsalesdivisionid      
--left join bos_pi_department as dep on dep.szdepartmentid = bos_sd_fdo.szsalesdepartmentid      
--left join bos_pi_team as tea on tea.szteamid = bos_sd_fdo.szsalesteamid      

left join bos_ar_customer on bos_sd_fdo.szcustid = bos_ar_customer.szcustid      

left join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid      
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_sd_fdo.szcarrierid      

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdo.szcompanyid      
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid      
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdo.szuserid      

left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_sd_fdo.szwarehouseid      

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid      

--allow to credit is based on original customer, not from invoice-to customer.      
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid      

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid      
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid      
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid      
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid      
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid      

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fdo.szordertypeid      

where      
bos_sd_fdo.szdoid = p_szdoid;


end;
$body$
language plpgsql volatile;
--==========================================
create or replace function bos_sd_fdo_updatefdo_016(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid,
p_szreference_1 bos_dt_szname,
p_szreference_2 bos_dt_szname)
returns void as
$body$
begin
update bos_sd_fdo
set 
szapplyno = p_szapplyno,
szfsoid = p_szfsoid,

szlogistictype = p_szlogistictype,
--fdn field can not be updated.

breturntowarehouse = p_breturntowarehouse,
szreturnfdoid = p_szreturnfdoid,
szreturnwarehouseid = p_szreturnwarehouseid,
szreturnstocktypeid = p_szreturnstocktypeid,

szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmdelivery = p_dtmdelivery,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,
busethirdpartycarrier = p_busethirdpartycarrier,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szcarrierid = p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

szpaymenttermid = p_szpaymenttermid,

deliveryszcontactperson = p_deliveryszcontactperson,
deliveryszroomno = p_deliveryszroomno,
deliveryszfloor = p_deliveryszfloor,
deliveryszbuilding = p_deliveryszbuilding,
deliveryszaddress_1 = p_deliveryszaddress_1,
deliveryszaddress_2 = p_deliveryszaddress_2,
deliveryszdistrict = p_deliveryszdistrict,
deliveryszcity = p_deliveryszcity,
deliveryszzipcode = p_deliveryszzipcode,
deliveryszstate = p_deliveryszstate,
deliveryszcountry = p_deliveryszcountry,
deliveryszphoneno_1 = p_deliveryszphoneno_1,
deliveryszphoneno_2 = p_deliveryszphoneno_2,
deliveryszfaxno = p_deliveryszfaxno,
deliveryszmobileno = p_deliveryszmobileno,
deliveryszemail = p_deliveryszemail,
deliveryszwebsite = p_deliveryszwebsite,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,
szmanualno = p_szmanualno,
szfcustbiid = p_szfcustbiid,
dtmmobiletransaction = p_dtmmobiletransaction,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,

szfinvoiceid = p_szfinvoiceid,
szfirstfinvoiceid = p_szfirstfinvoiceid,

dtmlastupdated = p_dtmlastupdated,
dtmstartvisit= p_dtmstartvisit,
dtmendvisit=p_dtmendvisit,
decvisitspendtime=p_decvisitspendtime ,
bscansuccess=p_bscansuccess,
szscanfailreason=p_szscanfailreason,
szbarcodescanfailreason=p_szbarcodescanfailreason,
bscanbarcodesuccess=p_bscanbarcodesuccess,
decjourneyspendtime=p_decjourneyspendtime,
adcid=p_adcid,
szcustreceiptno=p_szcustreceiptno,
szreference_1=p_szreference_1,
szreference_2=p_szreference_2
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;
--======================================

create or replace function bos_sd_finvoice_createfinvoice_014(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmbad timestamp,
p_dtmdoubt timestamp,
p_szfinvoiceusage varchar,
p_bcash bit,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_szfinvoicetype bos_dt_szsmallid,
p_szinvoicecollwpid bos_dt_szid,
p_szkeptbyopuserid bos_dt_szid,
p_szcurrentlocwpid bos_dt_szid,
p_sztransitlocwpid bos_dt_szid,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szlastfinvhandoverid bos_dt_szid,
p_szlastfinvmoveoutid bos_dt_szid,
p_szlastfinvmoveinid bos_dt_szid,
p_szlastfinvopnameid bos_dt_szid,
p_szrebatefinvoiceid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp,
p_adcid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoice
(
szfinvoiceid,
szsalesorgid,
szcustid,
dtmperiode,
szcanceledbyinvid,
szcorrectedbyinvid,
szcanceltoinvid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szpaymenttermid,
szfinvoicestatus,
dtmbad,
dtmdoubt,
szfinvoiceusage,
bcash,
btaxreported,
szfakturpajakid,
szfinvoicetype,
szinvoicecollwpid,
szkeptbyopuserid,
szcurrentlocwpid,
sztransitlocwpid,
szchain_firstid,
szchain_nextid,
szlastfinvhandoverid,
szlastfinvmoveoutid,
szlastfinvmoveinid,
szlastfinvopnameid,
szrebatefinvoiceid,
szfirstfdoid_s,
szsalesid,
szreasonid,
szremark,
cntbonusitem,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,  --doc status 2,
bsystemcreated,  --doc status 2,
szuserid,  --doc status 3,
-- data status.,
dtmlastupdated,
balreadytransferred,
dtmfakturpajakcreated,
dtminvoicecorrected,
dtminvoicecanceled,
adcid
)
values
(
p_szfinvoiceid,
p_szsalesorgid,
p_szcustid,
p_dtmperiode,
p_szcanceledbyinvid,
p_szcorrectedbyinvid,
p_szcanceltoinvid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szpaymenttermid,
p_szfinvoicestatus,
p_dtmbad,
p_dtmdoubt,
p_szfinvoiceusage,
p_bcash,
p_btaxreported,
p_szfakturpajakid,
p_szfinvoicetype,
p_szinvoicecollwpid,
p_szkeptbyopuserid,
p_szcurrentlocwpid,
p_sztransitlocwpid,
p_szchain_firstid,
p_szchain_nextid,
p_szlastfinvhandoverid,
p_szlastfinvmoveoutid,
p_szlastfinvmoveinid,
p_szlastfinvopnameid,
p_szrebatefinvoiceid,
p_szfirstfdoid_s,
p_szsalesid,
p_szreasonid,
p_szremark,
p_cntbonusitem,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmfakturpajakcreated,
p_dtminvoicecorrected,
p_dtminvoicecanceled,
p_adcid
);

end;
$body$
language plpgsql volatile;
--===========================
create or replace function bos_sd_finvoice_getfinvoice_014(
p_szfinvoiceid bos_dt_szid,
p_sztrnid bos_dt_szmediumid)
returns void as
$body$
begin

select    
bos_sd_finvoice.btaxreported,    
bos_sd_finvoice.szfakturpajakid,    
bos_sd_finvoice.szsalesorgid,    

bos_sd_finvoice.szcustid,    
invcust.szname as szcustnm_j,    

coll_to.szcollworkplaceid as szcustcollwpid_j,    
colltowp.szname as szcustcollwpnm_j,    

bos_sd_route.szopuserid as szcustcollid_j,    

bos_sd_finvoice.dtmperiode,    
bos_sd_finvoice.szcanceledbyinvid,    
cancelinv.dtmcreated as dtmcanceled_j,    
bos_sd_finvoice.szcorrectedbyinvid,    
correctinv.dtmcreated as dtmcorrected_j,    
bos_sd_finvoice.szcanceltoinvid,    
bos_sd_finvoice.decamount,    
bos_sd_finvoice.dectax,    

bos_sd_finvoice.szccyid,    
bos_cu_currency.szamountformat as szccyamountformat_j,    

bos_sd_finvoice.szccyrateid,    
bos_sd_finvoice.decccyrate,     
bos_sd_finvoice.szpaymenttermid,    
bos_sd_finvoice.szfinvoicestatus,    
bos_sd_finvoice.dtmbad,    
bos_sd_finvoice.dtmdoubt,    
bos_sd_finvoice.szfinvoiceusage,    
bos_sd_finvoice.bcash,    
bos_sd_finvoice.szfinvoicetype,    

bos_sd_finvoice.szinvoicecollwpid,    

bos_sd_finvoice.szkeptbyopuserid,    
keptbyemp.szname as szkeptbyopusernm_j,    

bos_sd_finvoice.szcurrentlocwpid,    
currlocwp.szname as szcurrentlocwpnm_j,    

bos_sd_finvoice.sztransitlocwpid,    
transitlocwp.szname as sztransitlocwpnm_j,    

bos_ar_artrans.dtmdue as dtmdue_j,    
bos_ar_artrans.dtmdue_printed as dtmdue_printed_j,    
bos_ar_artrans.bclosed as bpaid_j,    
bos_ar_artrans.dtmclosed as dtmclosed_j,    
bos_ar_artrans.decremain as decremain_j,    

bos_ar_artrans.szarclassid as szarclassid_j,    

bos_sd_cjrtracking.szcjrtrackingid as szcjrtrackingid_j,    
bos_sd_fcjr.szbaserouteid as szcjrtrackingrouteid_j,    

bos_sd_finvoice.szchain_firstid,    
bos_sd_finvoice.szchain_nextid,    
prevfinv.szfinvoiceid as szchain_previd_j,    

bos_sd_finvoice.szlastfinvhandoverid,    
bos_sd_finvoice.szlastfinvmoveoutid,    
bos_sd_finvoice.szlastfinvmoveinid,    

bos_sd_finvoice.szlastfinvopnameid,    
bos_sd_finvopname.dtmopname as dtmlastfinvopnamedate_j,    

bos_sd_finvoice.szrebatefinvoiceid,    

bos_sd_finvoice.szfirstfdoid_s,    
bos_sd_finvoice.szsalesid,    
bos_sd_finvoice.szreasonid,    
bos_sd_finvoice.szremark,    

bos_sd_finvoice.cntbonusitem,    

bos_sd_finvoice.bresultfrtransfer,    
bos_sd_finvoice.bvoid,    
bos_gen_approved.bapproved,    
bos_sd_finvoice.bapplied,    
bos_gl_fjournaltrans.szfjournalid as bjournal,    
bos_gl_fjournaltrans.bposted,    
bos_sd_finvoice.btprintedcount,    
bos_sd_finvoice.btransferred,    
bos_sd_finvoice.szcompanyid,    
bos_gl_company.szname as szcompanynm,    
bos_sd_finvoice.szworkplaceid,    
bos_gl_workplace.szname as szworkplacenm,    
bos_sd_finvoice.sztaxentityid,    
bos_sd_finvoice.bneedapproval,    
bos_gen_approved.szapprovalid,    
bos_sd_finvoice.gdapprovedid,    
bos_gl_fjournaltrans.szfjournalid,    
bos_sd_finvoice.dtmcreated,    
bos_sd_finvoice.bsystemcreated,    
bos_sd_finvoice.szuserid,    
bos_sm_user.szname as szusernm_j,    

-- data status.    
bos_sd_finvoice.dtmlastupdated,    
bos_sd_finvoice.balreadytransferred,    
bos_sd_finvoice.dtmfakturpajakcreated,  
bos_sd_finvoice.dtminvoicecanceled,  
bos_sd_finvoice.dtminvoicecorrected,
bos_sd_finvoice.adcid  
from    
bos_sd_finvoice    
left join bos_ar_artrans on     
bos_sd_finvoice.szfinvoiceid = bos_ar_artrans.szdocid and     
bos_sd_finvoice.szcustid = bos_ar_artrans.szcustid and    
bos_ar_artrans.sztrnid = p_sztrnid    
left join bos_gen_approved on bos_sd_finvoice.gdapprovedid = bos_gen_approved.gdapprovedid    
left join bos_gl_fjournaltrans on bos_sd_finvoice.szfjournalid = bos_gl_fjournaltrans.szfjournalid    
left join bos_sd_cjrtracking on bos_sd_cjrtracking.szdocid = bos_sd_finvoice.szfinvoiceid    
left join bos_sd_fcjr on bos_sd_fcjr.szfcjrid = bos_sd_cjrtracking.szfcjrid    
left join bos_sd_finvoice as cancelinv on cancelinv.szfinvoiceid = bos_sd_finvoice.szcanceledbyinvid    
left join bos_sd_finvoice as correctinv on correctinv.szfinvoiceid = bos_sd_finvoice.szcorrectedbyinvid    
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvoice.szcompanyid    
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvoice.szworkplaceid    
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvoice.szuserid    
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid    
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid    
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid    

left join bos_ar_customer as coll_to on coll_to.szcustid = invcust.szcollecttocustid    
left join bos_gl_workplace as colltowp on colltowp.szworkplaceid = coll_to.szcollworkplaceid    

left join bos_sd_custcollroutine on bos_sd_custcollroutine.szcustid = coll_to.szcustid    
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custcollroutine.szdefaultrouteid    

left join bos_gl_workplace as currlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.szcurrentlocwpid    
left join bos_gl_workplace as transitlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.sztransitlocwpid    

left join bos_sd_finvoice as prevfinv on prevfinv.szchain_nextid = bos_sd_finvoice.szfinvoiceid    

left join bos_sd_finvopname on bos_sd_finvopname.szfinvopnameid = bos_sd_finvoice.szlastfinvopnameid    
left join bos_pi_employee as keptbyemp on keptbyemp.szemployeeid = bos_sd_finvoice.szkeptbyopuserid    

where    
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid;


end;
$body$
language plpgsql volatile;
--=====================================
create or replace function bos_sd_finvoice_updatefinvoice_014(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoiceusage varchar,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_adcid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szsalesorgid = p_szsalesorgid,
szcustid = p_szcustid,
dtmperiode = p_dtmperiode,
szcanceltoinvid = p_szcanceltoinvid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
szpaymenttermid = p_szpaymenttermid,
szfinvoiceusage = p_szfinvoiceusage,
szchain_firstid = p_szchain_firstid,
szchain_nextid = p_szchain_nextid,
szfirstfdoid_s = p_szfirstfdoid_s,
szsalesid = p_szsalesid,
szreasonid = p_szreasonid,
szremark = p_szremark,
cntbonusitem = p_cntbonusitem,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szuserid = p_szuserid,
dtmcreated = p_dtmcreated,
dtmlastupdated = p_dtmlastupdated,
btaxreported = p_btaxreported,
szfakturpajakid = p_szfakturpajakid,
dtmfakturpajakcreated = p_dtmfakturpajakcreated,
dtminvoicecorrected = p_dtminvoicecorrected,
dtminvoicecanceled = p_dtminvoicecanceled,
szcanceledbyinvid = p_szcanceledbyinvid,
szcorrectedbyinvid = p_szcorrectedbyinvid,
adcid=p_adcid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;
--====================================
create or replace function bos_sd_fso_createfso_014(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szcompletedfinvoiceid bos_dt_szid,
p_szfirstcompletedfinvoiceid bos_dt_szid,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_decjourneyspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_adcid bos_dt_szid,
p_dtmexpiration timestamp)
returns void as
$body$
begin
insert into bos_sd_fso
(

szfsoid        ,
szsalesorgid        ,
szordertypeid        ,
dtmorder        ,
dtmprice        ,
szcustid        ,
decamount        ,
dectax        ,
decdownpayment        ,
szstatus        ,
szccyid        ,
szccyrateid        ,
decccyrate        ,
szfinvoiceid        ,
szcompletedfinvoiceid        ,
szfirstcompletedfinvoiceid        ,
bdropship        ,
szsalesid        ,
szsalessupervisorid        ,
szsalessupervisorid_2        ,
szsalessupervisorid_3        ,
szsalesdivisionid        ,
szsalesdepartmentid        ,
szsalesteamid        ,
szremark        ,
szlatitude        ,
szlongitude        ,
szcustpoid        ,
dtmcustpo        ,
bcash        ,
gdcreditlimitapprovedid        ,
bneedfinvoice        ,
szpaymenttermid        ,
bresultfrtransfer        ,
bvoid        ,
bapplied        ,
btprintedcount        ,
btransferred        ,
szcompanyid        ,
szworkplaceid        ,
sztaxentityid        ,
bneedapproval        ,
gdapprovedid        ,
szfjournalid        ,
dtmcreated        ,
bsystemcreated        ,
szuserid        ,
-- data status.        ,
dtmlastupdated        ,
balreadytransferred        ,
-- weight and volume        ,
dectonase        ,
deccubication        ,
buploadedfrommodis        ,
szfdoreffid      ,
dtmstartvisit      ,
dtmendvisit      ,
decvisitspendtime,
decjourneyspendtime    ,
bscansuccess    ,
szscanfailreason,
szbarcodescanfailreason,
adcid,
dtmexpiration        
 
)
values
(
p_szfsoid,
p_szsalesorgid,
p_szordertypeid,
p_dtmorder,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_decdownpayment,
p_szstatus,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szcompletedfinvoiceid,
p_szfirstcompletedfinvoiceid,
p_bdropship,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_bcash,
p_gdcreditlimitapprovedid,
p_bneedfinvoice,
p_szpaymenttermid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- weight and volume,
p_dectonase,
p_deccubication,
p_buploadedfrommodis,
p_szfdoreffid,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_decjourneyspendtime,
p_bscansuccess,
p_szscanfailreason,
p_szbarcodescanfailreason,
p_adcid,
p_dtmexpiration
);

end;
$body$
language plpgsql volatile;
--====================================
create or replace function bos_sd_fso_getfso_014(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin

select        
bos_sd_fso.szfsoid,        
bos_sd_fso.szsalesorgid,        

bos_sd_fso.szordertypeid,        
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,        
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,        

bos_sd_fso.dtmorder,        
bos_sd_fso.dtmprice,        

bos_sd_fso.szcustid,        
bos_ar_customer.szname as szcustnm_j,        
custsales.ballowtocredit as bcustallowtocredit_j,        

custloc.locationszcontactperson,        
custloc.locationszroomno,        
custloc.locationszfloor,        
custloc.locationszbuilding,        
custloc.locationszaddress_1,        
custloc.locationszaddress_2,        
custloc.locationszdistrict,        
custloc.locationszcity,        
custloc.locationszzipcode,        
custloc.locationszstate,        
custloc.locationszcountry,        
custloc.locationszphoneno_1,        
custloc.locationszphoneno_2,        
custloc.locationszfaxno,        
custloc.locationszmobileno,        
custloc.locationszemail,        
custloc.locationszwebsite,        

bos_sd_fso.decamount,        
bos_sd_fso.dectax,        

bos_sd_fso.szccyid,        
bos_cu_currency.szamountformat as szccyamountformat_j,        

bos_sd_fso.szccyrateid,        
bos_sd_fso.decccyrate,        

bos_sd_fso.szfinvoiceid,        
art.bclosed as bpaid_j,        

bos_sd_fso.szcompletedfinvoiceid,        
bos_sd_fso.szfirstcompletedfinvoiceid,        
completed_art.bclosed as bcompletedpaid_j,        

bos_sd_fso.bdropship,        

bos_sd_fso.szsalesid,        
sales.szname as szsalesnm_j,        

bos_sd_fso.szsalessupervisorid,        
bos_sd_fso.szsalessupervisorid_2,        
bos_sd_fso.szsalessupervisorid_3,        
bos_sd_fso.szsalesdivisionid,        
bos_sd_fso.szsalesdepartmentid,        
bos_sd_fso.szsalesteamid,        

bos_sd_fso.szstatus,        
bos_sd_fso.decdownpayment,        

bos_sd_fso.szremark,        
bos_sd_fso.szlatitude,        
bos_sd_fso.szlongitude,        

bos_sd_fso.szcustpoid,        
bos_sd_fso.dtmcustpo,        

bos_sd_fso.bcash,        

bos_sd_fso.gdcreditlimitapprovedid,        
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,        
creditlimitapproved.bapproved as bcreditlimitapproved_j,        

bos_sd_fso.bneedfinvoice,        

bos_sd_totracking.sztotrackingid as sztotrackingid_j,        

--customer's collection info        
bsr.szrouteid as szcollrouteid,        
bsr.szdescription as szcollroutedescription,        
bsr.szopuserid as szcollectorid,        
bpe.szname as szcollectornm,        

bos_sd_fso.szpaymenttermid,        

bos_sd_fso.bresultfrtransfer,        
bos_sd_fso.bvoid,        
bos_gen_approved.bapproved,        
bos_sd_fso.bapplied,        
bos_gl_fjournaltrans.szfjournalid as bjournal,        
bos_gl_fjournaltrans.bposted,        
bos_sd_fso.btprintedcount,        
bos_sd_fso.btransferred,        
bos_sd_fso.szcompanyid,        
bos_gl_company.szname as szcompanynm,        
bos_sd_fso.szworkplaceid,        
bos_gl_workplace.szname as szworkplacenm,        
bos_sd_fso.sztaxentityid,        
bos_sd_fso.bneedapproval,        
bos_gen_approved.gdapprovedid,        
bos_gen_approved.szapprovalid,        
bos_gl_fjournaltrans.szfjournalid,        

bos_sd_fso.dtmcreated,        
bos_sd_fso.bsystemcreated,        

bos_sd_fso.szuserid,        
bos_sm_user.szname as szusernm_j,        

-- data status.        
bos_sd_fso.dtmlastupdated,        
bos_sd_fso.balreadytransferred,        

-- weight and volume        
bos_sd_fso.dectonase,        
bos_sd_fso.deccubication,        
bos_sd_fso.buploadedfrommodis,        
bos_sd_fso.szfdoreffid,      
bos_sd_fso.dtmstartvisit,      
bos_sd_fso.dtmendvisit,      
bos_sd_fso.decvisitspendtime,
bos_sd_fso.decjourneyspendtime,    
bos_sd_fso.bscansuccess,    
bos_sd_fso.szscanfailreason,
bos_sd_fso.szbarcodescanfailreason,
bos_sd_fso.adcid,
bos_sd_fso.dtmexpiration
from        
bos_sd_fso         
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fso.gdcreditlimitapprovedid        
left join bos_gen_approved on bos_sd_fso.gdapprovedid = bos_gen_approved.gdapprovedid        
left join bos_gl_fjournaltrans on bos_sd_fso.szfjournalid = bos_gl_fjournaltrans.szfjournalid        

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fso.szsalesid        

left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fso.szcustid        

left join bos_ar_custlocation custloc on custloc.szcustid = bos_ar_customer.szdelivertocustid        
and custloc.btlocid = 0        

left join bos_sd_totracking on bos_sd_totracking.szfsoid = bos_sd_fso.szfsoid        

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fso.szcompanyid        
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid        

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid        

--allow to credit or not is based on original customer, not from invoice to customer.        
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid        

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid        
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid        
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid        
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid        
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid        
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fso.szuserid        

left join bos_ar_artrans as art on art.sztrnid = 'finv' and art.szdocid = bos_sd_fso.szfinvoiceid        

left join bos_ar_artrans as completed_art on completed_art.sztrnid = 'finv'        
and completed_art.szdocid = bos_sd_fso.szcompletedfinvoiceid        

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fso.szordertypeid        

where        
bos_sd_fso.szfsoid = p_szfsoid;


end;
$body$
language plpgsql volatile;
--============================
create or replace function bos_sd_fso_updatefso_014(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_decjourneyspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_adcid bos_dt_szid,
p_dtmexpiration timestamp)
returns void as
$body$
begin
update bos_sd_fso
set 
szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmorder = p_dtmorder,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
decdownpayment = p_decdownpayment,
szstatus = p_szstatus,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

bneedfinvoice = p_bneedfinvoice,

szpaymenttermid = p_szpaymenttermid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,
szfdoreffid =p_szfdoreffid,
dtmlastupdated = p_dtmlastupdated,
dtmstartvisit = p_dtmstartvisit,
dtmendvisit = p_dtmendvisit,
decvisitspendtime = p_decvisitspendtime,
decjourneyspendtime=p_decjourneyspendtime,
bscansuccess =  p_bscansuccess,
szscanfailreason = p_szscanfailreason,
szbarcodescanfailreason = p_szbarcodescanfailreason,
adcid = p_adcid,
dtmexpiration = p_dtmexpiration
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;
--================================
create or replace function bos_sm_boq_updateboq_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szselectclause bos_dt_szmessage,
p_szorderbyclause bos_dt_szmessage,
p_szwhereclause bos_dt_szmessage)
returns void as
$body$
begin
update bos_sm_boq
set 
szselectclause = p_szselectclause,
szorderbyclause = p_szorderbyclause,
szwhereclause = p_szwhereclause

where 
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname and
	szboqid = p_szboqid;

end;
$body$
language plpgsql volatile;
--=============================
create or replace function bos_tin_fakturpajak_getfakturpajakwherefinvoiceid_014(
p_szinvoiceid bos_dt_szid)
returns void as
$body$
begin
select szfakturpajakid

from 
bos_tin_fakturpajakiteminvoicesource 
where 
 szinvoiceid = p_szinvoiceid
 
limit 1 ; 
end;
$body$
language plpgsql volatile;

--=================================di atas tambahan baru
create or replace function bos_ap_ap_adjustaptransremain(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ap_aptrans
set 
decremain = decremain + p_decamount
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_adjustaptransremain_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ap_aptrans
set 
decremain = decremain + p_decamount
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_closeaptrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_bclosed bit,
p_dtmclosed timestamp)
returns void as
$body$
begin
update bos_ap_aptrans
set 
bclosed = p_bclosed,
dtmclosed = p_dtmclosed
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_closeaptrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_bclosed bit,
p_dtmclosed timestamp)
returns void as
$body$
begin
update bos_ap_aptrans
set 
bclosed = p_bclosed,
dtmclosed = p_dtmclosed
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_countpassdueapofsupp(
p_dtmtransaction timestamp,
p_szinvsuppid bos_dt_szid,
p_decminamounttreatedasap bos_dt_decdecimal)
returns void as
$body$
begin
select 
count(bat.szdocid) as cntpassdueap


from 
bos_ap_aptrans as bat

where 
bat.bclosed = 0 and bat.decremain > p_decminamounttreatedasap and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') and bat.dtmdue < p_dtmtransaction and bat.szsuppid like p_szinvsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_countpassdueapofsupp_014(
p_dtmtransaction timestamp,
p_szinvsuppid bos_dt_szid,
p_decminamounttreatedasap bos_dt_decdecimal)
returns void as
$body$
begin
select 
count(bat.szdocid) as cntpassdueap


from 
bos_ap_aptrans as bat

where 
bat.bclosed = 0 and bat.decremain > p_decminamounttreatedasap and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') and bat.dtmdue < p_dtmtransaction and bat.szsuppid like p_szinvsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_createapmaster(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ap_apmaster
(
szsuppid,
szccyid,
decamount,
bbad,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsuppid,
p_szccyid,
p_decamount,
p_bbad,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_createaptrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_dtmdate timestamp,
p_dtmperiode timestamp,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decremain bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bclosed bit,
p_dtmclosed timestamp,
p_szurl bos_dt_szurl,
p_szfinvoicestatus varchar,
p_szinvworkplaceid bos_dt_szid,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_bcash bit,
p_dtmdue timestamp,
p_dtmdue_printed timestamp,
p_szfinvoicetype bos_dt_szsmallid,
p_szfinvoiceusage varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ap_aptrans
(
sztrnid,
szdocid,
szsuppid,
shrevno,
dtmdate,
dtmperiode,
szccyid,
decamount,
decremain,
szdescription,
bclosed,
dtmclosed,
szurl,
szfinvoicestatus,
szinvworkplaceid,
szreftrnid,
szrefdocid,
bcash,
dtmdue,
dtmdue_printed,
szfinvoicetype,
szfinvoiceusage,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztrnid,
p_szdocid,
p_szsuppid,
p_shrevno,
p_dtmdate,
p_dtmperiode,
p_szccyid,
p_decamount,
p_decremain,
p_szdescription,
p_bclosed,
p_dtmclosed,
p_szurl,
p_szfinvoicestatus,
p_szinvworkplaceid,
p_szreftrnid,
p_szrefdocid,
p_bcash,
p_dtmdue,
p_dtmdue_printed,
p_szfinvoicetype,
p_szfinvoiceusage,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_createaptrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_dtmdate timestamp,
p_dtmperiode timestamp,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decremain bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bclosed bit,
p_dtmclosed timestamp,
p_szurl bos_dt_szurl,
p_szfinvoicestatus varchar,
p_szinvworkplaceid bos_dt_szid,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_bcash bit,
p_dtmdue timestamp,
p_dtmdue_printed timestamp,
p_szfinvoicetype bos_dt_szsmallid,
p_szfinvoiceusage varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ap_aptrans
(
sztrnid,
szdocid,
szsuppid,
shrevno,
dtmdate,
dtmperiode,
szccyid,
decamount,
decremain,
szdescription,
bclosed,
dtmclosed,
szurl,
szfinvoicestatus,
szinvworkplaceid,
szreftrnid,
szrefdocid,
bcash,
dtmdue,
dtmdue_printed,
szfinvoicetype,
szfinvoiceusage,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztrnid,
p_szdocid,
p_szsuppid,
p_shrevno,
p_dtmdate,
p_dtmperiode,
p_szccyid,
p_decamount,
p_decremain,
p_szdescription,
p_bclosed,
p_dtmclosed,
p_szurl,
p_szfinvoicestatus,
p_szinvworkplaceid,
p_szreftrnid,
p_szrefdocid,
p_bcash,
p_dtmdue,
p_dtmdue_printed,
p_szfinvoicetype,
p_szfinvoiceusage,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_createaptransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_shitemnumber smallint,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefsuppid bos_dt_szid,
p_shrefrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_aptransrefdoc
(
sztrnid,
szdocid,
szsuppid,
shrevno,
shitemnumber,
szreftrnid,
szrefdocid,
szrefsuppid,
shrefrevno,
decamount
)
values
(
p_sztrnid,
p_szdocid,
p_szsuppid,
p_shrevno,
p_shitemnumber,
p_szreftrnid,
p_szrefdocid,
p_szrefsuppid,
p_shrefrevno,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_createaptransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint,
p_shitemnumber smallint,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefsuppid bos_dt_szid,
p_shrefrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_aptransrefdoc
(
sztrnid,
szdocid,
szsuppid,
shrevno,
shitemnumber,
szreftrnid,
szrefdocid,
szrefsuppid,
shrefrevno,
decamount
)
values
(
p_sztrnid,
p_szdocid,
p_szsuppid,
p_shrevno,
p_shitemnumber,
p_szreftrnid,
p_szrefdocid,
p_szrefsuppid,
p_shrefrevno,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_debitap(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decdebitamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ap_apmaster
set 
decamount = decamount + p_decdebitamount
where 
szsuppid = p_szsuppid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_debitap_013(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decdebitamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ap_apmaster
set 
decamount = decamount + p_decdebitamount
where 
szsuppid = p_szsuppid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_deleteapmaster(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
delete 
from  bos_ap_apmaster
where
szsuppid = p_szsuppid and szccyid = p_szccyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_deleteaptrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ap_aptrans
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_deleteaptrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ap_aptrans
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_deleteaptransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ap_aptransrefdoc
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_deleteaptransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ap_aptransrefdoc
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_flagapbad(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_bbad bit)
returns void as
$body$
begin

if p_szccyid = ''
  then
begin
update
bos_ap_apmaster
set
bbad = p_bbad
where
szsuppid = p_szsuppid;
end; 
else
begin
update
bos_ap_apmaster
set
bbad = p_bbad
where
szsuppid = p_szsuppid and szccyid = p_szccyid;
end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaphistory(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_bunclosedonly bit)
returns void as
$body$
begin

if p_bunclosedonly = 1
  then

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode

from
bos_ap_aptrans as baa
where
baa.szsuppid = p_szsuppid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.bclosed = 0

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;

else

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode

from
bos_ap_aptrans as baa

where
baa.szsuppid = p_szsuppid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaphistory_014(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_bunclosedonly bit)
returns void as
$body$
begin

if p_bunclosedonly = 1
  then

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode

from
bos_ap_aptrans as baa
where
baa.szsuppid = p_szsuppid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.bclosed = 0

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;

else

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode

from
bos_ap_aptrans as baa

where
baa.szsuppid = p_szsuppid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaptrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select
bos_ap_aptrans.szsuppid,
coalesce(bos_ap_supplier.szname, '') as szsuppnm,
bos_ap_aptrans.dtmdate,
bos_ap_aptrans.dtmperiode,
bos_ap_aptrans.szccyid,
bos_cu_currency.szamountformat,
bos_ap_aptrans.decamount,
bos_ap_aptrans.decremain,
bos_ap_aptrans.szdescription,
bos_ap_aptrans.bclosed,
bos_ap_aptrans.dtmclosed,
bos_ap_aptrans.szurl,
bos_ap_aptrans.szfinvoicestatus,
bos_ap_aptrans.szinvworkplaceid,
bos_ap_aptrans.szreftrnid,
bos_ap_aptrans.szrefdocid,
bos_ap_aptrans.bcash,
bos_ap_aptrans.dtmdue,
bos_ap_aptrans.dtmdue_printed,
bos_ap_supplier.szpaymenttermid as szpaymenttermid_j,
bos_ap_aptrans.szfinvoicetype,
bos_ap_aptrans.szfinvoiceusage,

bos_ap_aptrans.dtmlastupdated,
bos_ap_aptrans.balreadytransferred

from
bos_ap_aptrans
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_ap_aptrans.szsuppid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_aptrans.szccyid

where
bos_ap_aptrans.sztrnid = p_sztrnid and bos_ap_aptrans.szdocid = p_szdocid and bos_ap_aptrans.szsuppid like p_szsuppid and bos_ap_aptrans.shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaptrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select
bos_ap_aptrans.szsuppid,
coalesce(bos_ap_supplier.szname, '') as szsuppnm,
bos_ap_aptrans.dtmdate,
bos_ap_aptrans.dtmperiode,
bos_ap_aptrans.szccyid,
bos_cu_currency.szamountformat,
bos_ap_aptrans.decamount,
bos_ap_aptrans.decremain,
bos_ap_aptrans.szdescription,
bos_ap_aptrans.bclosed,
bos_ap_aptrans.dtmclosed,
bos_ap_aptrans.szurl,
bos_ap_aptrans.szfinvoicestatus,
bos_ap_aptrans.szinvworkplaceid,
bos_ap_aptrans.szreftrnid,
bos_ap_aptrans.szrefdocid,
bos_ap_aptrans.bcash,
bos_ap_aptrans.dtmdue,
bos_ap_aptrans.dtmdue_printed,
bos_ap_supplier.szpaymenttermid as szpaymenttermid_j,
bos_ap_aptrans.szfinvoicetype,
bos_ap_aptrans.szfinvoiceusage,

bos_ap_aptrans.dtmlastupdated,
bos_ap_aptrans.balreadytransferred

from
bos_ap_aptrans
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_ap_aptrans.szsuppid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_aptrans.szccyid

where
bos_ap_aptrans.sztrnid = p_sztrnid and bos_ap_aptrans.szdocid = p_szdocid and bos_ap_aptrans.szsuppid like p_szsuppid and bos_ap_aptrans.shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaptransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
szreftrnid,
szrefdocid,
szrefsuppid,
shrefrevno,
decamount

from 
bos_ap_aptransrefdoc
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getaptransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
szreftrnid,
szrefdocid,
szrefsuppid,
shrefrevno,
decamount

from 
bos_ap_aptransrefdoc
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlastrevno(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
max(shrevno) as shlastrevno

from 
bos_ap_aptrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlastrevno_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
max(shrevno) as shlastrevno

from 
bos_ap_aptrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofapmaster(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szinvworkplaceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_apmaster.szsuppid,
bos_ap_apmaster.szccyid


from 
bos_ap_apmaster
left join bos_ap_supplier as supp on supp.szsuppid = bos_ap_apmaster.szsuppidleft join bos_ap_supplier as supp on supp.szsuppid = bos_ap_apmaster.szsuppid
where 
bos_ap_apmaster.szsuppid like p_szsuppid and bos_ap_apmaster.szccyid like p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofapmasterdata(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
bos_ap_apmaster.szsuppid,
bos_ap_apmaster.szccyid,

bos_ap_supplier.szname as szsuppnm,
bos_ap_supplier.szstatus as szsuppstatus_j,

bos_ap_apmaster.decamount,
amc.decamount as decapclassamount,

bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,
bos_ap_apmaster.bbad,

-- data status.
bos_ap_apmaster.dtmlastupdated,
bos_ap_apmaster.balreadytransferred,

bos_ap_supplier.szdefaultccyid as szsuppdefaultccyid_j,
bos_ap_supplier.deccreditlimit as decsuppcreditlimit_j,

bos_ap_supplier.deccreditlimit as decsuppapclasscreditlimit_j


from 
bos_ap_apmaster
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_ap_apmaster.szsuppid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_apmaster.szccyid
left join bos_ap_apmasterclass as amc on amc.szsuppid = bos_ap_apmaster.szsuppidleft join bos_ap_apmasterclass as amc on amc.szsuppid = bos_ap_apmaster.szsuppid
and amc.szccyid = bos_ap_apmaster.szccyid

where 
bos_ap_apmaster.szsuppid like p_szsuppid and bos_ap_apmaster.szccyid like p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofapmasterdata_014(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
bos_ap_apmaster.szsuppid,
bos_ap_apmaster.szccyid,

bos_ap_supplier.szname as szsuppnm,
bos_ap_supplier.szstatus as szsuppstatus_j,

bos_ap_apmaster.decamount,
amc.decamount as decapclassamount,

bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,
bos_ap_apmaster.bbad,

-- data status.
bos_ap_apmaster.dtmlastupdated,
bos_ap_apmaster.balreadytransferred,

bos_ap_supplier.szdefaultccyid as szsuppdefaultccyid_j,
bos_ap_supplier.deccreditlimit as decsuppcreditlimit_j,

bos_ap_supplier.deccreditlimit as decsuppapclasscreditlimit_j


from 
bos_ap_apmaster
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_ap_apmaster.szsuppid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_apmaster.szccyid
left join bos_ap_apmasterclass as amc on amc.szsuppid = bos_ap_apmaster.szsuppidleft join bos_ap_apmasterclass as amc on amc.szsuppid = bos_ap_apmaster.szsuppid
and amc.szccyid = bos_ap_apmaster.szccyid

where 
bos_ap_apmaster.szsuppid like p_szsuppid and bos_ap_apmaster.szccyid like p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofapmastersupp(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_ap_apmaster.szsuppid

from 
bos_ap_apmaster
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_ap_apmaster.szsuppid
where 
bos_ap_apmaster.szsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptrans()
returns void as
$body$
begin
select 
sztrnid,
szdocid,
szsuppid,
shrevno

from 
bos_ap_aptrans;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatispayedbyme(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_aptransrefdoc.szreftrnid,
bos_ap_aptransrefdoc.szrefdocid,
bos_ap_aptransrefdoc.szrefsuppid,
bos_ap_aptransrefdoc.shrefrevno


from 
bos_ap_aptransrefdoc

where 
bos_ap_aptransrefdoc.sztrnid = p_sztrnid and bos_ap_aptransrefdoc.szdocid = p_szdocid and bos_ap_aptransrefdoc.szsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatispayedbyme_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_aptransrefdoc.szreftrnid,
bos_ap_aptransrefdoc.szrefdocid,
bos_ap_aptransrefdoc.szrefsuppid,
bos_ap_aptransrefdoc.shrefrevno


from 
bos_ap_aptransrefdoc

where 
bos_ap_aptransrefdoc.sztrnid = p_sztrnid and bos_ap_aptransrefdoc.szdocid = p_szdocid and bos_ap_aptransrefdoc.szsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatpayme(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_aptransrefdoc.sztrnid,
bos_ap_aptransrefdoc.szdocid,
bos_ap_aptransrefdoc.szsuppid,
bos_ap_aptransrefdoc.shrevno


from 
bos_ap_aptransrefdoc
where 
bos_ap_aptransrefdoc.szreftrnid = p_sztrnid and bos_ap_aptransrefdoc.szrefdocid = p_szdocid and bos_ap_aptransrefdoc.szrefsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatpayme_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_aptransrefdoc.sztrnid,
bos_ap_aptransrefdoc.szdocid,
bos_ap_aptransrefdoc.szsuppid,
bos_ap_aptransrefdoc.shrevno


from 
bos_ap_aptransrefdoc
where 
bos_ap_aptransrefdoc.szreftrnid = p_sztrnid and bos_ap_aptransrefdoc.szrefdocid = p_szdocid and bos_ap_aptransrefdoc.szrefsuppid like p_szsuppid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatpaymeincludingmyself(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select distinct
art.sztrnid, art.szdocid, art.szsuppid, art.shrevno

from 
bos_ap_aptrans as art

left join bos_ap_aptransrefdoc as artrd on
artrd.sztrnid = art.sztrnid and artrd.szdocid = art.szdocid and artrd.szsuppid = art.szsuppid and artrd.shrevno = art.shrevno

where 
(art.sztrnid = p_sztrnid and art.szdocid = p_szdocid and art.szsuppid = p_szsuppid and art.shrevno = p_shrevno) or (artrd.szreftrnid = p_sztrnid and artrd.szrefdocid = p_szdocid and artrd.szrefsuppid = p_szsuppid and artrd.shrefrevno = p_shrevno) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getlistofaptransthatpaymeincludingmyself_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select distinct
art.sztrnid, art.szdocid, art.szsuppid, art.shrevno

from 
bos_ap_aptrans as art

left join bos_ap_aptransrefdoc as artrd on
artrd.sztrnid = art.sztrnid and artrd.szdocid = art.szdocid and artrd.szsuppid = art.szsuppid and artrd.shrevno = art.shrevno

where 
(art.sztrnid = p_sztrnid and art.szdocid = p_szdocid and art.szsuppid = p_szsuppid and art.shrevno = p_shrevno) or (artrd.szreftrnid = p_sztrnid and artrd.szrefdocid = p_szdocid and artrd.szrefsuppid = p_szsuppid and artrd.shrefrevno = p_shrevno) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getoldestagingapofsupp(
p_szinvsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bat.dtmperiode

from 
bos_ap_aptrans as bat
left join bos_ap_supplier as bac on bat.szsuppid = bac.szsuppid

where 
bat.bclosed = 0 and bat.szsuppid like p_szinvsuppid and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') 
order by 
bat.dtmperiode
limit 1;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_getoldestagingapofsupp_014(
p_szinvsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bat.dtmperiode

from 
bos_ap_aptrans as bat
left join bos_ap_supplier as bac on bat.szsuppid = bac.szsuppid

where 
bat.bclosed = 0 and bat.szsuppid like p_szinvsuppid and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') 
order by 
bat.dtmperiode

limit 1;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_isapmasterexist(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szsuppid,
szccyid

from 
bos_ap_apmaster
where 
szsuppid = p_szsuppid and szccyid = p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_isaptransclosed(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
bclosed

from 
bos_ap_aptrans
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_isaptransclosed_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
bclosed

from 
bos_ap_aptrans
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_isaptransexist(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
sztrnid

from 
bos_ap_aptrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_isaptransexist_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
sztrnid

from 
bos_ap_aptrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid like p_szsuppid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_lockapmaster(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_ap_apmaster
set 
decamount = decamount
where 
szsuppid = p_szsuppid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_lockaptrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
update bos_ap_aptrans
set 
szdescription = szdescription
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_lockaptrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
update bos_ap_aptrans
set 
szdescription = szdescription
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szsuppid = p_szsuppid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_updateapmaster(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit)
returns void as
$body$
begin
update bos_ap_apmaster
set 
decamount = p_decamount,
bbad = p_bbad
where 
szsuppid = p_szsuppid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_updateapmaster_014(
p_szsuppid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit)
returns void as
$body$
begin
update bos_ap_apmaster
set 
decamount = p_decamount,
bbad = p_bbad
where 
szsuppid = p_szsuppid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_updatefinvoicestatusonap(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_ap_aptrans
set 
 szfinvoicestatus = p_szfinvoicestatus
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_ap_updatefinvoicestatusonap_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_ap_aptrans
set 
 szfinvoicestatus = p_szfinvoicestatus
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_countunappliedfsupplierpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
select 
count(szfsupplierpayment_sid) as ipaymentcount

from 
bos_ap_fsupplierpayment_s
where 
bvoid = 0 and bapplied = 0 and dtmfsupplierpayment >= p_dtmfrom and dtmfsupplierpayment < interval '1 day' + p_dtmto and bos_ap_fsupplierpayment_s.szdeposanid like p_szopuserid and bos_ap_fsupplierpayment_s.szworkplaceid like p_szworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_createfsupplierpayment(
p_szfsupplierpayment_sid bos_dt_szid,
p_dtmfsupplierpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_szremark bos_dt_szdescription,
p_szcashaccountid bos_dt_szid,
p_szcashglsubaccountid bos_dt_szglaccount,
p_szapaccountid bos_dt_szid,
p_szapglsubaccountid bos_dt_szglaccount,
p_deccontrolamount bos_dt_decamount,
p_szchequeid bos_dt_szid,
p_szfcashtrnid bos_dt_szid,
p_szfcashdocid bos_dt_szid,
p_szvoucherid bos_dt_szid,
p_apinvoiceamountreturn numeric,
p_apinvoiceidreturn bos_dt_szid,
p_supplierdisbursementid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ap_fsupplierpayment_s
(
szfsupplierpayment_sid,
dtmfsupplierpayment,
szfcashreceiptid,
szdeposanid,
szaccountid1,
szsubaccountid1,
decamount1,
szaccountid2,
szsubaccountid2,
decamount2,
szaccountid3,
szsubaccountid3,
decamount3,
szaccountid4,
szsubaccountid4,
decamount4,
decamount,
szccyid,
szccyrateid,
szremark,
szcashaccountid,
szcashglsubaccountid,
szapaccountid,
szapglsubaccountid,
deccontrolamount,
szchequeid,
szfcashtrnid,
szfcashdocid,
szvoucherid,
apinvoiceamountreturn,
apinvoiceidreturn,
supplierdisbursementid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsupplierpayment_sid,
p_dtmfsupplierpayment,
p_szfcashreceiptid,
p_szdeposanid,
p_szaccountid1,
p_szsubaccountid1,
p_decamount1,
p_szaccountid2,
p_szsubaccountid2,
p_decamount2,
p_szaccountid3,
p_szsubaccountid3,
p_decamount3,
p_szaccountid4,
p_szsubaccountid4,
p_decamount4,
p_decamount,
p_szccyid,
p_szccyrateid,
p_szremark,
p_szcashaccountid,
p_szcashglsubaccountid,
p_szapaccountid,
p_szapglsubaccountid,
p_deccontrolamount,
p_szchequeid,
p_szfcashtrnid,
p_szfcashdocid,
p_szvoucherid,
p_apinvoiceamountreturn,
p_apinvoiceidreturn,
p_supplierdisbursementid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_createfsupplierpayment_013(
p_szfsupplierpayment_sid bos_dt_szid,
p_dtmfsupplierpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_szremark bos_dt_szdescription,
p_szcashaccountid bos_dt_szid,
p_szcashglsubaccountid bos_dt_szglaccount,
p_szapaccountid bos_dt_szid,
p_szapglsubaccountid bos_dt_szglaccount,
p_deccontrolamount bos_dt_decamount,
p_szchequeid bos_dt_szid,
p_szfcashtrnid bos_dt_szid,
p_szfcashdocid bos_dt_szid,
p_szvoucherid bos_dt_szid,
p_apinvoiceamountreturn numeric,
p_apinvoiceidreturn bos_dt_szid,
p_supplierdisbursementid bos_dt_szid,
p_purchasetypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ap_fsupplierpayment_s
(
szfsupplierpayment_sid,
dtmfsupplierpayment,
szfcashreceiptid,
szdeposanid,
szaccountid1,
szsubaccountid1,
decamount1,
szaccountid2,
szsubaccountid2,
decamount2,
szaccountid3,
szsubaccountid3,
decamount3,
szaccountid4,
szsubaccountid4,
decamount4,
decamount,
szccyid,
szccyrateid,
szremark,
szcashaccountid,
szcashglsubaccountid,
szapaccountid,
szapglsubaccountid,
deccontrolamount,
szchequeid,
szfcashtrnid,
szfcashdocid,
szvoucherid,
apinvoiceamountreturn,
apinvoiceidreturn,
supplierdisbursementid,
purchasetypeid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsupplierpayment_sid,
p_dtmfsupplierpayment,
p_szfcashreceiptid,
p_szdeposanid,
p_szaccountid1,
p_szsubaccountid1,
p_decamount1,
p_szaccountid2,
p_szsubaccountid2,
p_decamount2,
p_szaccountid3,
p_szsubaccountid3,
p_decamount3,
p_szaccountid4,
p_szsubaccountid4,
p_decamount4,
p_decamount,
p_szccyid,
p_szccyrateid,
p_szremark,
p_szcashaccountid,
p_szcashglsubaccountid,
p_szapaccountid,
p_szapglsubaccountid,
p_deccontrolamount,
p_szchequeid,
p_szfcashtrnid,
p_szfcashdocid,
p_szvoucherid,
p_apinvoiceamountreturn,
p_apinvoiceidreturn,
p_supplierdisbursementid,
p_purchasetypeid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_createfsupplierpaymentitem(
p_szfsupplierpayment_sid bos_dt_szid,
p_shitemnumber smallint,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_decamount bos_dt_decamount,
p_decpaidbycashreceipt bos_dt_decamount,
p_szfdoid bos_dt_szid,
p_remain_s bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_fsupplierpayment_s_item
(
szfsupplierpayment_sid,
shitemnumber,
sztrnid,
szdocid,
szsuppid,
decamount,
decpaidbycashreceipt,
szfdoid,
remain_s
)
values
(
p_szfsupplierpayment_sid,
p_shitemnumber,
p_sztrnid,
p_szdocid,
p_szsuppid,
p_decamount,
p_decpaidbycashreceipt,
p_szfdoid,
p_remain_s
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_createfsupplierpaymentitem_013(
p_szfsupplierpayment_sid bos_dt_szid,
p_shitemnumber smallint,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szsuppid bos_dt_szid,
p_decamount bos_dt_decamount,
p_decpaidbycashreceipt bos_dt_decamount,
p_szfdoid bos_dt_szid,
p_remain_s bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_fsupplierpayment_s_item
(
szfsupplierpayment_sid,
shitemnumber,
sztrnid,
szdocid,
szsuppid,
decamount,
decpaidbycashreceipt,
szfdoid,
remain_s
)
values
(
p_szfsupplierpayment_sid,
p_shitemnumber,
p_sztrnid,
p_szdocid,
p_szsuppid,
p_decamount,
p_decpaidbycashreceipt,
p_szfdoid,
p_remain_s
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_createfsupplierpaymentitemdetail(
p_szfsupplierpayment_sid bos_dt_szid,
p_shitemnumber smallint,
p_shdetailnumber smallint,
p_szbankid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_bvalue smallint,
p_decamount bos_dt_decamount,
p_bdeposit smallint)
returns void as
$body$
begin
insert into bos_ap_fsupplierpayment_s_itemdetail
(
szfsupplierpayment_sid,
shitemnumber,
shdetailnumber,
szbankid,
szrefdocid,
bvalue,
decamount,
bdeposit
)
values
(
p_szfsupplierpayment_sid,
p_shitemnumber,
p_shdetailnumber,
p_szbankid,
p_szrefdocid,
p_bvalue,
p_decamount,
p_bdeposit
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_deletefsupplierpayment(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ap_fsupplierpayment_s
where
 szfsupplierpayment_sid = p_szfsupplierpayment_sid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_deletefsupplierpaymentitem(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ap_fsupplierpayment_s_item
where
 szfsupplierpayment_sid = p_szfsupplierpayment_sid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_deletefsupplierpaymentitemdetail(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ap_fsupplierpayment_s_itemdetail
where
 szfsupplierpayment_sid = p_szfsupplierpayment_sid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getamountofunsettledpdr(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select 
sum(bos_ap_fsupplierpaymentitem_s_detail.decamount) as decamount

from 
bos_ap_fsupplierpayment_s
inner join bos_ap_fsupplierpayment_s_item on bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid
inner join bos_ap_fsupplierpaymentitem_s_detail on bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid = bos_ap_fsupplierpaymentitem_s_detail.szfsupplierpayment_sid and
bos_ap_fsupplierpayment_s_item.shitemnumber = bos_ap_fsupplierpaymentitem_s_detail.shitemnumber
left join bos_cas_pdr on
bos_cas_pdr.szbankid = bos_ap_fsupplierpaymentitem_s_detail.szbankid and
bos_cas_pdr.szrefid = bos_ap_fsupplierpaymentitem_s_detail.szrefdocid
where 
bos_ap_fsupplierpayment_s_item.sztrnid = p_sztrnid and bos_ap_fsupplierpayment_s_item.szdocid = p_szdocid and bos_ap_fsupplierpayment_s.bapplied = 1 and bos_ap_fsupplierpaymentitem_s_detail.bvalue = 0 and bos_cas_pdr.szstatus <> 'cle' and bos_cas_pdr.szstatus <> 'rej' and bos_ap_fsupplierpayment_s.szfsupplierpayment_sid <> p_szfsupplierpayment_sid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getamountofunsettledpdr_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select 
sum(bos_ap_fsupplierpaymentitem_s_detail.decamount) as decamount

from 
bos_ap_fsupplierpayment_s
inner join bos_ap_fsupplierpayment_s_item on bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid
inner join bos_ap_fsupplierpaymentitem_s_detail on bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid = bos_ap_fsupplierpaymentitem_s_detail.szfsupplierpayment_sid and
bos_ap_fsupplierpayment_s_item.shitemnumber = bos_ap_fsupplierpaymentitem_s_detail.shitemnumber
left join bos_cas_pdr on
bos_cas_pdr.szbankid = bos_ap_fsupplierpaymentitem_s_detail.szbankid and
bos_cas_pdr.szrefid = bos_ap_fsupplierpaymentitem_s_detail.szrefdocid
where 
bos_ap_fsupplierpayment_s_item.sztrnid = p_sztrnid and bos_ap_fsupplierpayment_s_item.szdocid = p_szdocid and bos_ap_fsupplierpayment_s.bapplied = 1 and bos_ap_fsupplierpaymentitem_s_detail.bvalue = 0 and bos_cas_pdr.szstatus <> 'cle' and bos_cas_pdr.szstatus <> 'rej' and bos_ap_fsupplierpayment_s.szfsupplierpayment_sid <> p_szfsupplierpayment_sid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getfsupplierpayment(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_fsupplierpayment_s.dtmfsupplierpayment,
bos_ap_fsupplierpayment_s.szfcashreceiptid,
bos_ap_fsupplierpayment_s.szdeposanid,
bos_pi_employee.szname as szdeposannm,

bos_ap_fsupplierpayment_s.szaccountid1,
bos_ap_fsupplierpayment_s.szsubaccountid1,
bos_ap_fsupplierpayment_s.decamount1,

bos_ap_fsupplierpayment_s.szaccountid2,
bos_ap_fsupplierpayment_s.szsubaccountid2,
bos_ap_fsupplierpayment_s.decamount2,

bos_ap_fsupplierpayment_s.szaccountid3,
bos_ap_fsupplierpayment_s.szsubaccountid3,
bos_ap_fsupplierpayment_s.decamount3,

bos_ap_fsupplierpayment_s.szaccountid4,
bos_ap_fsupplierpayment_s.szsubaccountid4,
bos_ap_fsupplierpayment_s.decamount4,
acc1.szname as szaccname1_j,
subacc1.szdescription as szsubaccname1_j,
acc2.szname as szaccname2_j,
subacc2.szdescription as szsubaccname2_j,
acc3.szname as szaccname3_j,
subacc3.szdescription as szsubaccname3_j,
acc4.szname as szaccname4_j,
subacc4.szdescription as szsubaccname4_j,

bos_ap_fsupplierpayment_s.apinvoiceamountreturn,
bos_ap_fsupplierpayment_s.apinvoiceidreturn,
bos_ap_fsupplierpayment_s.supplierdisbursementid,

bos_ap_fsupplierpayment_s.decamount,

bos_ap_fsupplierpayment_s.szccyid,
bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,

bos_ap_fsupplierpayment_s.szccyrateid,

bos_ap_fsupplierpayment_s.bresultfrtransfer,
bos_ap_fsupplierpayment_s.bvoid,
bos_gen_approved.bapproved,
bos_ap_fsupplierpayment_s.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ap_fsupplierpayment_s.btprintedcount,
bos_ap_fsupplierpayment_s.btransferred,
bos_ap_fsupplierpayment_s.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_ap_fsupplierpayment_s.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_ap_fsupplierpayment_s.sztaxentityid,
bos_ap_fsupplierpayment_s.bneedapproval,
bos_ap_fsupplierpayment_s.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ap_fsupplierpayment_s.dtmcreated,
bos_ap_fsupplierpayment_s.bsystemcreated,
bos_ap_fsupplierpayment_s.szuserid,
bos_sm_user.szname as szusernm_j,

bos_ap_fsupplierpayment_s.szremark,
bos_ap_fsupplierpayment_s.szcashaccountid,
bos_ap_fsupplierpayment_s.szcashglsubaccountid,
bos_ap_fsupplierpayment_s.szapaccountid,
bos_ap_fsupplierpayment_s.szapglsubaccountid,

bos_ap_fsupplierpayment_s.deccontrolamount,
bos_ap_fsupplierpayment_s.szchequeid,
bos_ap_fsupplierpayment_s.szfcashtrnid,
bos_ap_fsupplierpayment_s.szfcashdocid,
bos_ap_fsupplierpayment_s.szvoucherid,

bos_ap_fsupplierpayment_s.dtmlastupdated,
bos_ap_fsupplierpayment_s.balreadytransferred
from
bos_ap_fsupplierpayment_s
left join bos_gen_approved on bos_ap_fsupplierpayment_s.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_ap_fsupplierpayment_s.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ap_fsupplierpayment_s.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_fsupplierpayment_s.szccyid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_ap_fsupplierpayment_s.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ap_fsupplierpayment_s.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ap_fsupplierpayment_s.szuserid
left join bos_gl_account as acc1 on acc1.szaccountid = bos_ap_fsupplierpayment_s.szaccountid1
left join bos_gl_glsubacc as subacc1 on subacc1.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid1
left join bos_gl_account as acc2 on acc2.szaccountid = bos_ap_fsupplierpayment_s.szaccountid2
left join bos_gl_glsubacc as subacc2 on subacc2.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid2
left join bos_gl_account as acc3 on acc3.szaccountid = bos_ap_fsupplierpayment_s.szaccountid3
left join bos_gl_glsubacc as subacc3 on subacc3.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid3
left join bos_gl_account as acc4 on acc4.szaccountid = bos_ap_fsupplierpayment_s.szaccountid4
left join bos_gl_glsubacc as subacc4 on subacc4.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid4
where
bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getfsupplierpayment_013(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_fsupplierpayment_s.dtmfsupplierpayment,
bos_ap_fsupplierpayment_s.szfcashreceiptid,
bos_ap_fsupplierpayment_s.szdeposanid,
bos_pi_employee.szname as szdeposannm,

bos_ap_fsupplierpayment_s.szaccountid1,
bos_ap_fsupplierpayment_s.szsubaccountid1,
bos_ap_fsupplierpayment_s.decamount1,

bos_ap_fsupplierpayment_s.szaccountid2,
bos_ap_fsupplierpayment_s.szsubaccountid2,
bos_ap_fsupplierpayment_s.decamount2,

bos_ap_fsupplierpayment_s.szaccountid3,
bos_ap_fsupplierpayment_s.szsubaccountid3,
bos_ap_fsupplierpayment_s.decamount3,

bos_ap_fsupplierpayment_s.szaccountid4,
bos_ap_fsupplierpayment_s.szsubaccountid4,
bos_ap_fsupplierpayment_s.decamount4,
acc1.szname as szaccname1_j,
subacc1.szdescription as szsubaccname1_j,
acc2.szname as szaccname2_j,
subacc2.szdescription as szsubaccname2_j,
acc3.szname as szaccname3_j,
subacc3.szdescription as szsubaccname3_j,
acc4.szname as szaccname4_j,
subacc4.szdescription as szsubaccname4_j,

bos_ap_fsupplierpayment_s.apinvoiceamountreturn,
bos_ap_fsupplierpayment_s.apinvoiceidreturn,
bos_ap_fsupplierpayment_s.supplierdisbursementid,

bos_ap_fsupplierpayment_s.decamount,

bos_ap_fsupplierpayment_s.szccyid,
bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,

bos_ap_fsupplierpayment_s.szccyrateid,
bos_ap_fsupplierpayment_s.purchasetypeid, 

bos_ap_fsupplierpayment_s.bresultfrtransfer,
bos_ap_fsupplierpayment_s.bvoid,
bos_gen_approved.bapproved,
bos_ap_fsupplierpayment_s.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ap_fsupplierpayment_s.btprintedcount,
bos_ap_fsupplierpayment_s.btransferred,
bos_ap_fsupplierpayment_s.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_ap_fsupplierpayment_s.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_ap_fsupplierpayment_s.sztaxentityid,
bos_ap_fsupplierpayment_s.bneedapproval,
bos_ap_fsupplierpayment_s.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ap_fsupplierpayment_s.dtmcreated,
bos_ap_fsupplierpayment_s.bsystemcreated,
bos_ap_fsupplierpayment_s.szuserid,
bos_sm_user.szname as szusernm_j,

bos_ap_fsupplierpayment_s.szremark,
bos_ap_fsupplierpayment_s.szcashaccountid,
bos_ap_fsupplierpayment_s.szcashglsubaccountid,
bos_ap_fsupplierpayment_s.szapaccountid,
bos_ap_fsupplierpayment_s.szapglsubaccountid,

bos_ap_fsupplierpayment_s.deccontrolamount,
bos_ap_fsupplierpayment_s.szchequeid,
bos_ap_fsupplierpayment_s.szfcashtrnid,
bos_ap_fsupplierpayment_s.szfcashdocid,
bos_ap_fsupplierpayment_s.szvoucherid,

bos_ap_fsupplierpayment_s.dtmlastupdated,
bos_ap_fsupplierpayment_s.balreadytransferred
from
bos_ap_fsupplierpayment_s
left join bos_gen_approved on bos_ap_fsupplierpayment_s.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_ap_fsupplierpayment_s.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ap_fsupplierpayment_s.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ap_fsupplierpayment_s.szccyid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_ap_fsupplierpayment_s.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ap_fsupplierpayment_s.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ap_fsupplierpayment_s.szuserid
left join bos_gl_account as acc1 on acc1.szaccountid = bos_ap_fsupplierpayment_s.szaccountid1
left join bos_gl_glsubacc as subacc1 on subacc1.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid1
left join bos_gl_account as acc2 on acc2.szaccountid = bos_ap_fsupplierpayment_s.szaccountid2
left join bos_gl_glsubacc as subacc2 on subacc2.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid2
left join bos_gl_account as acc3 on acc3.szaccountid = bos_ap_fsupplierpayment_s.szaccountid3
left join bos_gl_glsubacc as subacc3 on subacc3.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid3
left join bos_gl_account as acc4 on acc4.szaccountid = bos_ap_fsupplierpayment_s.szaccountid4
left join bos_gl_glsubacc as subacc4 on subacc4.szglsubaccid = bos_ap_fsupplierpayment_s.szsubaccountid4
where
bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getfsupplierpaymentitem(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_fsupplierpayment_s_item.shitemnumber,
bos_ap_fsupplierpayment_s_item.sztrnid,
bos_ap_fsupplierpayment_s_item.szdocid,
bos_ap_fsupplierpayment_s_item.szsuppid,
bos_ap_supplier.szname as szsuppliernm,
bos_ap_fsupplierpayment_s_item.decamount,
bos_ap_fsupplierpayment_s_item.decpaidbycashreceipt,
bos_ap_fsupplierpayment_s_item.szfdoid,
bos_ap_aptrans.dtmdate as dtmdate_j,
bos_ap_aptrans.decremain as remain_s
from 
bos_ap_fsupplierpayment_s_item 
left join bos_ap_aptrans on bos_ap_fsupplierpayment_s_item.sztrnid = bos_ap_aptrans.sztrnid 
and bos_ap_fsupplierpayment_s_item.szdocid = bos_ap_aptrans.szdocid 
and bos_ap_fsupplierpayment_s_item.szsuppid = bos_ap_aptrans.szsuppid
left join bos_ap_supplier on bos_ap_fsupplierpayment_s_item.szsuppid = bos_ap_supplier.szsuppid
where 
bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getfsupplierpaymentitem_013(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_fsupplierpayment_s_item.shitemnumber,
bos_ap_fsupplierpayment_s_item.sztrnid,
bos_ap_fsupplierpayment_s_item.szdocid,
bos_ap_fsupplierpayment_s_item.szsuppid,
bos_ap_supplier.szname as szsuppliernm,
bos_ap_fsupplierpayment_s_item.decamount,
bos_ap_fsupplierpayment_s_item.decpaidbycashreceipt,
bos_ap_fsupplierpayment_s_item.szfdoid,
bos_ap_aptrans.dtmdate as dtmdate_j,
bos_ap_aptrans.decremain as remain_s
from 
bos_ap_fsupplierpayment_s_item 
left join bos_ap_aptrans on bos_ap_fsupplierpayment_s_item.sztrnid = bos_ap_aptrans.sztrnid 
and bos_ap_fsupplierpayment_s_item.szdocid = bos_ap_aptrans.szdocid 
and bos_ap_fsupplierpayment_s_item.szsuppid = bos_ap_aptrans.szsuppid
left join bos_ap_supplier on bos_ap_fsupplierpayment_s_item.szsuppid = bos_ap_supplier.szsuppid
where 
bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getfsupplierpaymentitemdetail(
p_szfsupplierpayment_sid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
bos_ap_fsupplierpayment_s_itemdetail.szfsupplierpayment_sid,
bos_ap_fsupplierpayment_s_itemdetail.shitemnumber,
bos_ap_fsupplierpayment_s_itemdetail.shdetailnumber,
bos_ap_fsupplierpayment_s_itemdetail.szbankid,
coalesce(bos_cas_bank.szname, '') as szbankname,
bos_ap_fsupplierpayment_s_itemdetail.szrefdocid,
bos_ap_fsupplierpayment_s_itemdetail.bvalue,
bos_ap_fsupplierpayment_s_itemdetail.decamount,
bos_ap_fsupplierpayment_s_itemdetail.bdeposit

from 
bos_ap_fsupplierpayment_s_itemdetail
left join bos_cas_bank on bos_ap_fsupplierpayment_s_itemdetail.szbankid = bos_cas_bank.szbankid
where 
bos_ap_fsupplierpayment_s_itemdetail.szfsupplierpayment_sid = p_szfsupplierpayment_sid and bos_ap_fsupplierpayment_s_itemdetail.shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getlistofaptranstobepaid(
p_szdeposanid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin

select  
bat.sztrnid,  
bat.szdocid,  
bat.szsuppid,  
bos_ap_supplier.szname as szsuppname,  
bat.decremain as decaramount --remaining of ar  

from  
bos_ap_aptrans as bat  
left join bos_ap_supplier on bat.szsuppid = bos_ap_supplier.szsuppid 
left join bos_sd_cjrtracking on bat.sztrnid = bos_sd_cjrtracking.sztrnid and bat.szdocid = bos_sd_cjrtracking.szdocid  
left join bos_sd_fcjritem on bos_sd_cjrtracking.szfcjrid = bos_sd_fcjritem.szfcjrid and   
bos_sd_cjrtracking.szcjrtrackingid = bos_sd_fcjritem.szcjrtrackingid  

where  
bat.decremain > 0 and  
bat.decamount > 0 and  
bat.bclosed = 0 and  
bat.szdocid in (select distinct bst.szdocid  
from bos_sd_fcjr as bsc inner join bos_sd_fcjritem as bsci on bsc.szfcjrid = bsci.szfcjrid  
inner join bos_sd_cjrtracking as bst on bsci.szcjrtrackingid = bst.szcjrtrackingid  
where bst.szcollectorid = p_szdeposanid and bsc.dtmfcjr >= p_dtmdate and  
bsc.dtmfcjr < interval '1 day' + p_dtmdate)  

order by  
bos_sd_cjrtracking.szfcjrid,  
bos_sd_fcjritem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getlistoffsupplierpayment()
returns void as
$body$
begin
select 
szfsupplierpayment_sid, dtmfsupplierpayment, szfcashreceiptid

from 
bos_ap_fsupplierpayment_s;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_getlistofunappliedfsupplierpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
select 
szfsupplierpaymentid

from 
bos_ap_fsupplierpayment
where 
szworkplaceid like p_szworkplaceid and bvoid = 0 and bapplied = 0 and dtmfsupplierpayment >= p_dtmfrom and dtmfsupplierpayment < interval '1 day' + p_dtmeto and bos_ap_fsupplierpayment._s.szdeposanid like p_szopuserid 
order by 
dtmfsupplierpayment;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_isfsupplierpaymentexist(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select 
szfsupplierpayment_sid

from 
bos_ap_fsupplierpayment_s
where 
 szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_isinvassignedtootherfsupplierpayment(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_fsupplierpayment_s.szfsupplierpayment_sid

from 
bos_ap_fsupplierpayment_s
inner join bos_ap_fsupplierpayment_s_item on bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid
where 
bos_ap_fsupplierpayment_s_item.sztrnid = p_sztrnid and bos_ap_fsupplierpayment_s_item.szdocid = p_szdocid and bos_ap_fsupplierpayment_s.szfsupplierpayment_sid <> p_szfsupplierpayment_sid and bos_ap_fsupplierpayment_s.bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_isinvassignedtootherfsupplierpayment_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_fsupplierpayment_s.szfsupplierpayment_sid

from 
bos_ap_fsupplierpayment_s
inner join bos_ap_fsupplierpayment_s_item on bos_ap_fsupplierpayment_s.szfsupplierpayment_sid = bos_ap_fsupplierpayment_s_item.szfsupplierpayment_sid
where 
bos_ap_fsupplierpayment_s_item.sztrnid = p_sztrnid and bos_ap_fsupplierpayment_s_item.szdocid = p_szdocid and bos_ap_fsupplierpayment_s.szfsupplierpayment_sid <> p_szfsupplierpayment_sid and bos_ap_fsupplierpayment_s.bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_lockfsupplierpayment(
p_szfsupplierpayment_sid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_fsupplierpayment_s
set 
szdeposanid = szdeposanid
where 
szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_updatefsupplierpayment(
p_szfsupplierpayment_sid bos_dt_szid,
p_dtmfsupplierpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szglaccount,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_szremark bos_dt_szdescription,
p_szcashaccountid bos_dt_szid,
p_szcashglsubaccountid bos_dt_szglaccount,
p_szapaccountid bos_dt_szid,
p_szapglsubaccountid bos_dt_szglaccount,
p_deccontrolamount bos_dt_decamount,
p_szchequeid bos_dt_szid,
p_apinvoiceamountreturn numeric,
p_apinvoiceidreturn bos_dt_szid,
p_supplierdisbursementid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_fsupplierpayment_s
set 
dtmfsupplierpayment = p_dtmfsupplierpayment,
szfcashreceiptid = p_szfcashreceiptid,
szdeposanid = p_szdeposanid,
szaccountid1 = p_szaccountid1,
szsubaccountid1 = p_szsubaccountid1,
decamount1 = p_decamount1,
szaccountid2 = p_szaccountid2,
szsubaccountid2 = p_szsubaccountid2,
decamount2 = p_decamount2,
szaccountid3 = p_szaccountid3,
szsubaccountid3 = p_szsubaccountid3,
decamount3 = p_decamount3,
szaccountid4 = p_szaccountid4,
szsubaccountid4 = p_szsubaccountid4,
decamount4 = p_decamount4,
decamount = p_decamount,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szremark = p_szremark,
szcashaccountid = p_szcashaccountid,
szcashglsubaccountid = p_szcashglsubaccountid,
szapaccountid = p_szapaccountid,
szapglsubaccountid = p_szapglsubaccountid,

deccontrolamount = p_deccontrolamount,
szchequeid = p_szchequeid,

apinvoiceamountreturn = p_apinvoiceamountreturn,
apinvoiceidreturn = p_apinvoiceidreturn,
supplierdisbursementid = p_supplierdisbursementid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_fsupplierpayment_s_updatefsupplierpayment_013(
p_szfsupplierpayment_sid bos_dt_szid,
p_dtmfsupplierpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szglaccount,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_szremark bos_dt_szdescription,
p_szcashaccountid bos_dt_szid,
p_szcashglsubaccountid bos_dt_szglaccount,
p_szapaccountid bos_dt_szid,
p_szapglsubaccountid bos_dt_szglaccount,
p_deccontrolamount bos_dt_decamount,
p_szchequeid bos_dt_szid,
p_apinvoiceamountreturn numeric,
p_apinvoiceidreturn bos_dt_szid,
p_supplierdisbursementid bos_dt_szid,
p_purchasetypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_fsupplierpayment_s
set 
dtmfsupplierpayment = p_dtmfsupplierpayment,
szfcashreceiptid = p_szfcashreceiptid,
szdeposanid = p_szdeposanid,
szaccountid1 = p_szaccountid1,
szsubaccountid1 = p_szsubaccountid1,
decamount1 = p_decamount1,
szaccountid2 = p_szaccountid2,
szsubaccountid2 = p_szsubaccountid2,
decamount2 = p_decamount2,
szaccountid3 = p_szaccountid3,
szsubaccountid3 = p_szsubaccountid3,
decamount3 = p_decamount3,
szaccountid4 = p_szaccountid4,
szsubaccountid4 = p_szsubaccountid4,
decamount4 = p_decamount4,
decamount = p_decamount,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szremark = p_szremark,
szcashaccountid = p_szcashaccountid,
szcashglsubaccountid = p_szcashglsubaccountid,
szapaccountid = p_szapaccountid,
szapglsubaccountid = p_szapglsubaccountid,

deccontrolamount = p_deccontrolamount,
szchequeid = p_szchequeid,

apinvoiceamountreturn = p_apinvoiceamountreturn,
apinvoiceidreturn = p_apinvoiceidreturn,
supplierdisbursementid = p_supplierdisbursementid,
purchasetypeid = p_purchasetypeid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfsupplierpayment_sid = p_szfsupplierpayment_sid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_createsupplier(
p_szsuppid bos_dt_szid,
p_szname bos_dt_szname,
p_suppszcontactperson bos_dt_szname,
p_suppszroomno bos_dt_szsmallname,
p_suppszfloor bos_dt_szsmallname,
p_suppszbuilding bos_dt_szname,
p_suppszaddress_1 bos_dt_szname,
p_suppszaddress_2 bos_dt_szname,
p_suppszdistrict bos_dt_szmediumname,
p_suppszcity bos_dt_szmediumname,
p_suppszzipcode bos_dt_szsmallname,
p_suppszstate bos_dt_szmediumname,
p_suppszcountry bos_dt_szmediumname,
p_suppszphoneno_1 bos_dt_szmediumname,
p_suppszphoneno_2 bos_dt_szmediumname,
p_suppszfaxno bos_dt_szmediumname,
p_suppszmobileno bos_dt_szmediumname,
p_suppszemail bos_dt_szmediumname,
p_suppszwebsite bos_dt_szmediumname,
p_szsuppcustid bos_dt_szid,
p_szourcustid bos_dt_szid,
p_szsuppuserid bos_dt_szid,
p_szsuppgroupid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szpaymenttermid bos_dt_szid,
p_deccreditlimit bos_dt_decamount,
p_szdefaultccyid bos_dt_szsmallid,
p_szaccid bos_dt_szid,
p_szglsubaccid bos_dt_szglaccount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_sznpwp bos_dt_sztaxid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ap_supplier
(
szsuppid,
szname,
suppszcontactperson,
suppszroomno,
suppszfloor,
suppszbuilding,
suppszaddress_1,
suppszaddress_2,
suppszdistrict,
suppszcity,
suppszzipcode,
suppszstate,
suppszcountry,
suppszphoneno_1,
suppszphoneno_2,
suppszfaxno,
suppszmobileno,
suppszemail,
suppszwebsite,
szsuppcustid,
szourcustid,
szsuppuserid,
szsuppgroupid,
szstatus,
szpaymenttermid,
deccreditlimit,
szdefaultccyid,
szaccid,
szglsubaccid,
dtmlastupdated,
balreadytransferred,
sznpwp,
szworkplaceid
)
values
(
p_szsuppid,
p_szname,
p_suppszcontactperson,
p_suppszroomno,
p_suppszfloor,
p_suppszbuilding,
p_suppszaddress_1,
p_suppszaddress_2,
p_suppszdistrict,
p_suppszcity,
p_suppszzipcode,
p_suppszstate,
p_suppszcountry,
p_suppszphoneno_1,
p_suppszphoneno_2,
p_suppszfaxno,
p_suppszmobileno,
p_suppszemail,
p_suppszwebsite,
p_szsuppcustid,
p_szourcustid,
p_szsuppuserid,
p_szsuppgroupid,
p_szstatus,
p_szpaymenttermid,
p_deccreditlimit,
p_szdefaultccyid,
p_szaccid,
p_szglsubaccid,
p_dtmlastupdated,
p_balreadytransferred,
p_sznpwp,
p_szworkplaceid
-- ==================================================================
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_createsupplier_014(
p_szsuppid bos_dt_szid,
p_szname bos_dt_szname,
p_suppszcontactperson bos_dt_szname,
p_suppszroomno bos_dt_szsmallname,
p_suppszfloor bos_dt_szsmallname,
p_suppszbuilding bos_dt_szname,
p_suppszaddress_1 bos_dt_szname,
p_suppszaddress_2 bos_dt_szname,
p_suppszdistrict bos_dt_szname,
p_suppszcity bos_dt_szmediumname,
p_suppszzipcode bos_dt_szsmallname,
p_suppszstate bos_dt_szmediumname,
p_suppszcountry bos_dt_szmediumname,
p_suppszphoneno_1 bos_dt_szmediumname,
p_suppszphoneno_2 bos_dt_szmediumname,
p_suppszfaxno bos_dt_szmediumname,
p_suppszmobileno bos_dt_szmediumname,
p_suppszemail bos_dt_szmediumname,
p_suppszwebsite bos_dt_szmediumname,
p_szsuppcustid bos_dt_szid,
p_szourcustid bos_dt_szid,
p_szsuppuserid bos_dt_szid,
p_szsuppgroupid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szpaymenttermid bos_dt_szid,
p_deccreditlimit bos_dt_decamount,
p_szdefaultccyid bos_dt_szsmallid,
p_szaccid bos_dt_szid,
p_szglsubaccid bos_dt_szglaccount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_sznpwp bos_dt_sztaxid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ap_supplier
(
szsuppid,
szname,
suppszcontactperson,
suppszroomno,
suppszfloor,
suppszbuilding,
suppszaddress_1,
suppszaddress_2,
suppszdistrict,
suppszcity,
suppszzipcode,
suppszstate,
suppszcountry,
suppszphoneno_1,
suppszphoneno_2,
suppszfaxno,
suppszmobileno,
suppszemail,
suppszwebsite,
szsuppcustid,
szourcustid,
szsuppuserid,
szsuppgroupid,
szstatus,
szpaymenttermid,
deccreditlimit,
szdefaultccyid,
szaccid,
szglsubaccid,
dtmlastupdated,
balreadytransferred,
sznpwp,
szworkplaceid
)
values
(
p_szsuppid,
p_szname,
p_suppszcontactperson,
p_suppszroomno,
p_suppszfloor,
p_suppszbuilding,
p_suppszaddress_1,
p_suppszaddress_2,
p_suppszdistrict,
p_suppszcity,
p_suppszzipcode,
p_suppszstate,
p_suppszcountry,
p_suppszphoneno_1,
p_suppszphoneno_2,
p_suppszfaxno,
p_suppszmobileno,
p_suppszemail,
p_suppszwebsite,
p_szsuppcustid,
p_szourcustid,
p_szsuppuserid,
p_szsuppgroupid,
p_szstatus,
p_szpaymenttermid,
p_deccreditlimit,
p_szdefaultccyid,
p_szaccid,
p_szglsubaccid,
p_dtmlastupdated,
p_balreadytransferred,
p_sznpwp,
p_szworkplaceid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_createsuppproduct(
p_szsuppid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szrefproductid bos_dt_szid,
p_szrefproductname bos_dt_szname,
p_decquality bos_dt_decamount,
p_decleadday bos_dt_decamount,
p_decminorderqty bos_dt_decamount,
p_decmaxorderqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_suppproduct
(
szsuppid,
szproductid,
szrefproductid,
szrefproductname,
decquality,
decleadday,
decminorderqty,
decmaxorderqty
)
values
(
p_szsuppid,
p_szproductid,
p_szrefproductid,
p_szrefproductname,
p_decquality,
p_decleadday,
p_decminorderqty,
p_decmaxorderqty
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_createsuppproduct_014(
p_szsuppid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szrefproductid bos_dt_szid,
p_szrefproductname bos_dt_szname,
p_decquality bos_dt_decamount,
p_decleadday bos_dt_decamount,
p_decminorderqty bos_dt_decamount,
p_decmaxorderqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ap_suppproduct
(
szsuppid,
szproductid,
szrefproductid,
szrefproductname,
decquality,
decleadday,
decminorderqty,
decmaxorderqty
)
values
(
p_szsuppid,
p_szproductid,
p_szrefproductid,
p_szrefproductname,
p_decquality,
p_decleadday,
p_decminorderqty,
p_decmaxorderqty
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_deletesupplier(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ap_supplier
where
 szsuppid = p_szsuppid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_deletesuppproduct(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ap_suppproduct
where
 szsuppid = p_szsuppid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getlistofsupplier()
returns void as
$body$
begin
select 
szsuppid, szname

from 
bos_ap_supplier;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getonesuppproduct(
p_szsuppid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm,
bos_inv_product.szuomid as szproductuomid,
bos_ap_suppproduct.szrefproductid,
bos_ap_suppproduct.szrefproductname,
bos_ap_suppproduct.decquality,
bos_ap_suppproduct.decleadday,
bos_ap_suppproduct.decminorderqty,
bos_ap_suppproduct.decmaxorderqty

from 
bos_ap_suppproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductidleft join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductid
where 
bos_ap_suppproduct.szsuppid = p_szsuppid and bos_ap_suppproduct.szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getonesuppproduct_014(
p_szsuppid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm,
bos_inv_product.szuomid as szproductuomid,
bos_ap_suppproduct.szrefproductid,
bos_ap_suppproduct.szrefproductname,
bos_ap_suppproduct.decquality,
bos_ap_suppproduct.decleadday,
bos_ap_suppproduct.decminorderqty,
bos_ap_suppproduct.decmaxorderqty

from 
bos_ap_suppproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductidleft join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductid
where 
bos_ap_suppproduct.szsuppid = p_szsuppid and bos_ap_suppproduct.szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getproductfromsuppproduct(
p_szsuppid bos_dt_szid,
p_szrefproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid 

from 
bos_ap_suppproduct 
where 
szsuppid = p_szsuppid  and szrefproductid = p_szrefproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getsupplier(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_supplier.szname,
bos_ap_supplier.suppszcontactperson,
bos_ap_supplier.suppszroomno,
bos_ap_supplier.suppszfloor,
bos_ap_supplier.suppszbuilding,
bos_ap_supplier.suppszaddress_1,
bos_ap_supplier.suppszaddress_2,
bos_ap_supplier.suppszdistrict,
bos_ap_supplier.suppszcity,
bos_ap_supplier.suppszzipcode,
bos_ap_supplier.suppszstate,
bos_ap_supplier.suppszcountry,
bos_ap_supplier.suppszphoneno_1,
bos_ap_supplier.suppszphoneno_2,
bos_ap_supplier.suppszfaxno,
bos_ap_supplier.suppszmobileno,
bos_ap_supplier.suppszemail,
bos_ap_supplier.suppszwebsite,
bos_ap_supplier.szsuppcustid,
bos_ap_supplier.szourcustid,
bos_ap_supplier.szsuppuserid,
bos_ap_supplier.szsuppgroupid,
bos_ap_supplier.szstatus,
bos_ap_supplier.szpaymenttermid,
bos_ap_supplier.deccreditlimit,

bos_ap_supplier.szdefaultccyid,
bcc.szamountformat as szdefaultccyamountformat_j,

bos_ap_supplier.szaccid,
bos_ap_supplier.szglsubaccid,
acc.szname as szaccnm_j,
subacc.szdescription as szglsubaccnm_j,

bos_ap_supplier.dtmlastupdated,
bos_ap_supplier.balreadytransferred,
bos_ap_supplier.sznpwp,
bos_ap_supplier.szworkplaceid 

from 
bos_ap_supplier
left join bos_cu_currency as bcc on bcc.szccyid = bos_ap_supplier.szdefaultccyid
left join bos_gl_account as acc on acc.szaccountid = bos_ap_supplier.szaccid
left join bos_gl_glsubacc as subacc on subacc.szglsubaccid = bos_ap_supplier.szglsubaccid

where 
szsuppid = p_szsuppid;

-- ==================================================================


end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getsupplier_014(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select
bos_ap_supplier.szname,
bos_ap_supplier.suppszcontactperson,
bos_ap_supplier.suppszroomno,
bos_ap_supplier.suppszfloor,
bos_ap_supplier.suppszbuilding,
bos_ap_supplier.suppszaddress_1,
bos_ap_supplier.suppszaddress_2,
bos_ap_supplier.suppszdistrict,
bos_ap_supplier.suppszcity,
bos_ap_supplier.suppszzipcode,
bos_ap_supplier.suppszstate,
bos_ap_supplier.suppszcountry,
bos_ap_supplier.suppszphoneno_1,
bos_ap_supplier.suppszphoneno_2,
bos_ap_supplier.suppszfaxno,
bos_ap_supplier.suppszmobileno,
bos_ap_supplier.suppszemail,
bos_ap_supplier.suppszwebsite,
bos_ap_supplier.szsuppcustid,
bos_ap_supplier.szourcustid,
bos_ap_supplier.szsuppuserid,
bos_ap_supplier.szsuppgroupid,
bos_ap_supplier.szstatus,
bos_ap_supplier.szpaymenttermid,
bos_ap_supplier.deccreditlimit,

bos_ap_supplier.szdefaultccyid,
bcc.szamountformat as szdefaultccyamountformat_j,

bos_ap_supplier.szaccid,
bos_ap_supplier.szglsubaccid,
acc.szname as szaccnm_j,
subacc.szdescription as szglsubaccnm_j,

bos_ap_supplier.dtmlastupdated,
bos_ap_supplier.balreadytransferred,
bos_ap_supplier.sznpwp,
bos_ap_supplier.szworkplaceid 

from 
bos_ap_supplier
left join bos_cu_currency as bcc on bcc.szccyid = bos_ap_supplier.szdefaultccyid
left join bos_gl_account as acc on acc.szaccountid = bos_ap_supplier.szaccid
left join bos_gl_glsubacc as subacc on subacc.szglsubaccid = bos_ap_supplier.szglsubaccid

where 
szsuppid = p_szsuppid;

-- ==================================================================



end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getsuppproduct(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_suppproduct.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szuomid as szproductuomid,
bos_ap_suppproduct.szrefproductid,
bos_ap_suppproduct.szrefproductname,
bos_ap_suppproduct.decquality,
bos_ap_suppproduct.decleadday,
bos_ap_suppproduct.decminorderqty,
bos_ap_suppproduct.decmaxorderqty

from 
bos_ap_suppproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductidleft join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductid
where 
bos_ap_suppproduct.szsuppid = p_szsuppid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_getsuppproduct_014(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ap_suppproduct.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szuomid as szproductuomid,
bos_ap_suppproduct.szrefproductid,
bos_ap_suppproduct.szrefproductname,
bos_ap_suppproduct.decquality,
bos_ap_suppproduct.decleadday,
bos_ap_suppproduct.decminorderqty,
bos_ap_suppproduct.decmaxorderqty

from 
bos_ap_suppproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductidleft join bos_inv_product on bos_inv_product.szproductid = bos_ap_suppproduct.szproductid
where 
bos_ap_suppproduct.szsuppid = p_szsuppid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_issupplierexist(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
select 
szsuppid

from 
bos_ap_supplier
where 
 szsuppid = p_szsuppid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_locksupplier(
p_szsuppid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_supplier
set 
 szname = szname
where 
 szsuppid = p_szsuppid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_updatesupplier(
p_szsuppid bos_dt_szid,
p_szname bos_dt_szname,
p_suppszcontactperson bos_dt_szname,
p_suppszroomno bos_dt_szsmallname,
p_suppszfloor bos_dt_szsmallname,
p_suppszbuilding bos_dt_szname,
p_suppszaddress_1 bos_dt_szname,
p_suppszaddress_2 bos_dt_szname,
p_suppszdistrict bos_dt_szmediumname,
p_suppszcity bos_dt_szmediumname,
p_suppszzipcode bos_dt_szsmallname,
p_suppszstate bos_dt_szmediumname,
p_suppszcountry bos_dt_szmediumname,
p_suppszphoneno_1 bos_dt_szmediumname,
p_suppszphoneno_2 bos_dt_szmediumname,
p_suppszfaxno bos_dt_szmediumname,
p_suppszmobileno bos_dt_szmediumname,
p_suppszemail bos_dt_szmediumname,
p_suppszwebsite bos_dt_szmediumname,
p_szsuppcustid bos_dt_szid,
p_szourcustid bos_dt_szid,
p_szsuppuserid bos_dt_szid,
p_szsuppgroupid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szpaymenttermid bos_dt_szid,
p_deccreditlimit bos_dt_decamount,
p_szdefaultccyid bos_dt_szsmallid,
p_szaccid bos_dt_szid,
p_szglsubaccid bos_dt_szglaccount,
p_sznpwp bos_dt_sztaxid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_supplier
set 
szname = p_szname,
suppszcontactperson = p_suppszcontactperson,
suppszroomno = p_suppszroomno,
suppszfloor = p_suppszfloor,
suppszbuilding = p_suppszbuilding,
suppszaddress_1 = p_suppszaddress_1,
suppszaddress_2 = p_suppszaddress_2,
suppszdistrict = p_suppszdistrict,
suppszcity = p_suppszcity,
suppszzipcode = p_suppszzipcode,
suppszstate = p_suppszstate,
suppszcountry = p_suppszcountry,
suppszphoneno_1 = p_suppszphoneno_1,
suppszphoneno_2 = p_suppszphoneno_2,
suppszfaxno = p_suppszfaxno,
suppszmobileno = p_suppszmobileno,
suppszemail = p_suppszemail,
suppszwebsite = p_suppszwebsite,
szsuppcustid = p_szsuppcustid,
szourcustid = p_szourcustid,
szsuppuserid = p_szsuppuserid,
szsuppgroupid = p_szsuppgroupid,
szstatus = p_szstatus,
szpaymenttermid = p_szpaymenttermid,
deccreditlimit = p_deccreditlimit,
szdefaultccyid = p_szdefaultccyid,
szaccid = p_szaccid,
szglsubaccid = p_szglsubaccid,
sznpwp = p_sznpwp,
szworkplaceid = p_szworkplaceid

where 
szsuppid = p_szsuppid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ap_supplier_updatesupplier_014(
p_szsuppid bos_dt_szid,
p_szname bos_dt_szname,
p_suppszcontactperson bos_dt_szname,
p_suppszroomno bos_dt_szsmallname,
p_suppszfloor bos_dt_szsmallname,
p_suppszbuilding bos_dt_szname,
p_suppszaddress_1 bos_dt_szname,
p_suppszaddress_2 bos_dt_szname,
p_suppszdistrict bos_dt_szname,
p_suppszcity bos_dt_szmediumname,
p_suppszzipcode bos_dt_szsmallname,
p_suppszstate bos_dt_szmediumname,
p_suppszcountry bos_dt_szmediumname,
p_suppszphoneno_1 bos_dt_szmediumname,
p_suppszphoneno_2 bos_dt_szmediumname,
p_suppszfaxno bos_dt_szmediumname,
p_suppszmobileno bos_dt_szmediumname,
p_suppszemail bos_dt_szmediumname,
p_suppszwebsite bos_dt_szmediumname,
p_szsuppcustid bos_dt_szid,
p_szourcustid bos_dt_szid,
p_szsuppuserid bos_dt_szid,
p_szsuppgroupid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szpaymenttermid bos_dt_szid,
p_deccreditlimit bos_dt_decamount,
p_szdefaultccyid bos_dt_szsmallid,
p_szaccid bos_dt_szid,
p_szglsubaccid bos_dt_szglaccount,
p_sznpwp bos_dt_sztaxid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
update bos_ap_supplier
set 
szname = p_szname,
suppszcontactperson = p_suppszcontactperson,
suppszroomno = p_suppszroomno,
suppszfloor = p_suppszfloor,
suppszbuilding = p_suppszbuilding,
suppszaddress_1 = p_suppszaddress_1,
suppszaddress_2 = p_suppszaddress_2,
suppszdistrict = p_suppszdistrict,
suppszcity = p_suppszcity,
suppszzipcode = p_suppszzipcode,
suppszstate = p_suppszstate,
suppszcountry = p_suppszcountry,
suppszphoneno_1 = p_suppszphoneno_1,
suppszphoneno_2 = p_suppszphoneno_2,
suppszfaxno = p_suppszfaxno,
suppszmobileno = p_suppszmobileno,
suppszemail = p_suppszemail,
suppszwebsite = p_suppszwebsite,
szsuppcustid = p_szsuppcustid,
szourcustid = p_szourcustid,
szsuppuserid = p_szsuppuserid,
szsuppgroupid = p_szsuppgroupid,
szstatus = p_szstatus,
szpaymenttermid = p_szpaymenttermid,
deccreditlimit = p_deccreditlimit,
szdefaultccyid = p_szdefaultccyid,
szaccid = p_szaccid,
szglsubaccid = p_szglsubaccid,
sznpwp = p_sznpwp,
szworkplaceid = p_szworkplaceid

where 
szsuppid = p_szsuppid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_adjustartransremain(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_artrans
set 
decremain = decremain + p_decamount
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_adjustartransremain_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_artrans
set 
decremain = decremain + p_decamount
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_armasterdecrementtotalopeninvoice(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_ar_armaster
set 
intnumberofopeninvoice = intnumberofopeninvoice - 1
where 
bos_ar_armaster.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_armasterincrementtotalopeninvoice(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_ar_armaster
set 
intnumberofopeninvoice = intnumberofopeninvoice + 1
where 
bos_ar_armaster.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_closeartrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_bclosed bit,
p_dtmclosed timestamp)
returns void as
$body$
begin
update bos_ar_artrans
set 
bclosed = p_bclosed,
dtmclosed = p_dtmclosed
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_closeartrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_bclosed bit,
p_dtmclosed timestamp)
returns void as
$body$
begin
update bos_ar_artrans
set 
bclosed = p_bclosed,
dtmclosed = p_dtmclosed
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_countpassduearofcustomer(
p_dtmtransaction timestamp,
p_szinvcustid bos_dt_szid,
p_decminamounttreatedasar bos_dt_decdecimal,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin
select 
count(bat.szdocid) as cntpassduear


from 
bos_ar_artrans as bat

where 
bat.bclosed = 0 and bat.decremain > p_decminamounttreatedasar and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') and bat.dtmdue < p_dtmtransaction and bat.szcustid like p_szinvcustid and bat.szarclassid like p_szarclassid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createarmaster(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit,
p_intnumberofopeninvoice smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ar_armaster
(
szcustid,
szccyid,
decamount,
bbad,
intnumberofopeninvoice,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szccyid,
p_decamount,
p_bbad,
p_intnumberofopeninvoice,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createarmaster_014(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit,
p_intnumberofopeninvoice smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ar_armaster
(
szcustid,
szccyid,
decamount,
bbad,
intnumberofopeninvoice,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szccyid,
p_decamount,
p_bbad,
p_intnumberofopeninvoice,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createartrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_szarclassid bos_dt_szid,
p_dtmdate timestamp,
p_dtmperiode timestamp,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decremain bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bclosed bit,
p_dtmclosed timestamp,
p_szurl bos_dt_szurl,
p_szfinvoicestatus varchar,
p_szinvworkplaceid bos_dt_szid,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szfinvoiceusage varchar,
p_bcash bit,
p_dtmdue timestamp,
p_dtmdue_printed timestamp,
p_szfinvoicetype bos_dt_szsmallid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_dtmcollectiondoc timestamp,
p_dtmtobecollected timestamp)
returns void as
$body$
begin
insert into bos_ar_artrans
(
sztrnid,
szdocid,
szcustid,
shrevno,
szarclassid,
dtmdate,
dtmperiode,
szccyid,
decamount,
decremain,
szdescription,
bclosed,
dtmclosed,
szurl,
szfinvoicestatus,
szinvworkplaceid,
szreftrnid,
szrefdocid,
szfinvoiceusage,
bcash,
dtmdue,
dtmdue_printed,
szfinvoicetype,
-- data status.,
dtmlastupdated,
balreadytransferred,
 dtmcollectiondoc,
 dtmtobecollected
)
values
(
p_sztrnid,
p_szdocid,
p_szcustid,
p_shrevno,
p_szarclassid,
p_dtmdate,
p_dtmperiode,
p_szccyid,
p_decamount,
p_decremain,
p_szdescription,
p_bclosed,
p_dtmclosed,
p_szurl,
p_szfinvoicestatus,
p_szinvworkplaceid,
p_szreftrnid,
p_szrefdocid,
p_szfinvoiceusage,
p_bcash,
p_dtmdue,
p_dtmdue_printed,
p_szfinvoicetype,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
 p_dtmcollectiondoc,
 p_dtmtobecollected
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createartrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_szarclassid bos_dt_szid,
p_dtmdate timestamp,
p_dtmperiode timestamp,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decremain bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bclosed bit,
p_dtmclosed timestamp,
p_szurl bos_dt_szurl,
p_szfinvoicestatus varchar,
p_szinvworkplaceid bos_dt_szid,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szfinvoiceusage varchar,
p_bcash bit,
p_dtmdue timestamp,
p_dtmdue_printed timestamp,
p_szfinvoicetype bos_dt_szsmallid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_dtmcollectiondoc timestamp,
p_dtmtobecollected timestamp)
returns void as
$body$
begin
insert into bos_ar_artrans
(
sztrnid,
szdocid,
szcustid,
shrevno,
szarclassid,
dtmdate,
dtmperiode,
szccyid,
decamount,
decremain,
szdescription,
bclosed,
dtmclosed,
szurl,
szfinvoicestatus,
szinvworkplaceid,
szreftrnid,
szrefdocid,
szfinvoiceusage,
bcash,
dtmdue,
dtmdue_printed,
szfinvoicetype,
-- data status.,
dtmlastupdated,
balreadytransferred,
 dtmcollectiondoc,
 dtmtobecollected
)
values
(
p_sztrnid,
p_szdocid,
p_szcustid,
p_shrevno,
p_szarclassid,
p_dtmdate,
p_dtmperiode,
p_szccyid,
p_decamount,
p_decremain,
p_szdescription,
p_bclosed,
p_dtmclosed,
p_szurl,
p_szfinvoicestatus,
p_szinvworkplaceid,
p_szreftrnid,
p_szrefdocid,
p_szfinvoiceusage,
p_bcash,
p_dtmdue,
p_dtmdue_printed,
p_szfinvoicetype,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
 p_dtmcollectiondoc,
 p_dtmtobecollected
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createartransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_shitemnumber smallint,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefcustid bos_dt_szid,
p_shrefrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ar_artransrefdoc
(
sztrnid,
szdocid,
szcustid,
shrevno,
shitemnumber,
szreftrnid,
szrefdocid,
szrefcustid,
shrefrevno,
decamount
)
values
(
p_sztrnid,
p_szdocid,
p_szcustid,
p_shrevno,
p_shitemnumber,
p_szreftrnid,
p_szrefdocid,
p_szrefcustid,
p_shrefrevno,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_createartransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint,
p_shitemnumber smallint,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefcustid bos_dt_szid,
p_shrefrevno smallint,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ar_artransrefdoc
(
sztrnid,
szdocid,
szcustid,
shrevno,
shitemnumber,
szreftrnid,
szrefdocid,
szrefcustid,
shrefrevno,
decamount
)
values
(
p_sztrnid,
p_szdocid,
p_szcustid,
p_shrevno,
p_shitemnumber,
p_szreftrnid,
p_szrefdocid,
p_szrefcustid,
p_shrefrevno,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_debitar(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decdebitamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_armaster
set 
decamount = decamount + p_decdebitamount
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_debitar_013(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decdebitamount bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_armaster
set 
decamount = decamount + p_decdebitamount
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_deletearmaster(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
delete 
from  bos_ar_armaster
where
szcustid = p_szcustid and szccyid = p_szccyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_deleteartrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ar_artrans
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_deleteartrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ar_artrans
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_deleteartransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ar_artransrefdoc
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_deleteartransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
delete 
from  bos_ar_artransrefdoc
where
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_flagarbad(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_bbad bit)
returns void as
$body$
begin

if p_szccyid = ''
then

	update
	bos_ar_armaster
	set
	bbad = p_bbad
	where
	szcustid = p_szcustid;

else
	begin
	update
	bos_ar_armaster
	set
	bbad = p_bbad
	where
	szcustid = p_szcustid and szccyid = p_szccyid;
	end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getarhistory(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szarclassid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_bunclosedonly bit)
returns void as
$body$
begin

if p_bunclosedonly = 1
  then

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.szarclassid,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.szfinvoiceusage,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode,
--change by freddy simamora approval
--bsc.szchangenote
'' as szchangenote
from
bos_ar_artrans as baa
--left join bos_sd_cjrtracking as bsc on bsc.sztrnid = baa.sztrnid and bsc.szdocid = baa.szdocid

where
baa.szcustid = p_szcustid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.bclosed = 0
and baa.szarclassid like p_szarclassid

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;

else

select
baa.sztrnid,
baa.szdocid,
baa.shrevno,
baa.szarclassid,
baa.dtmdate,
baa.decamount,
baa.decremain,
baa.szdescription,
baa.bclosed,
baa.dtmclosed,
baa.szurl,
baa.szfinvoicestatus,
baa.szinvworkplaceid,
baa.szreftrnid,
baa.szrefdocid,
baa.szfinvoiceusage,
baa.bcash,
baa.dtmdue,
baa.dtmdue_printed,
baa.dtmperiode,
--bsc.szchangenote=null,'',bsc.szchangenote)
'' as szchangenote
from
bos_ar_artrans as baa
--left join bos_sd_cjrtracking as bsc on bsc.sztrnid = baa.sztrnid and bsc.szdocid = baa.szdocid

where
baa.szcustid = p_szcustid and
baa.szccyid = p_szccyid and
baa.dtmdate >= p_dtmstart and baa.dtmdate < interval '1 day' + p_dtmend
and baa.szarclassid like p_szarclassid

order by
baa.dtmdate, 
baa.sztrnid,
baa.szdocid,
baa.shrevno;



end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getartrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select
bos_ar_artrans.szarclassid,
bos_ar_artrans.szcustid,
coalesce(inv_to.szname, '') as szcustnm,
bos_ar_artrans.dtmdate,
bos_ar_artrans.dtmperiode,
bos_ar_artrans.szccyid,
bos_cu_currency.szamountformat,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_ar_artrans.szdescription,
bos_ar_artrans.bclosed,
bos_ar_artrans.dtmclosed,
bos_ar_artrans.szurl,
bos_ar_artrans.szfinvoicestatus,
bos_ar_artrans.szinvworkplaceid,
bos_ar_artrans.szreftrnid,
bos_ar_artrans.szrefdocid,
bos_ar_artrans.szfinvoiceusage,
bos_ar_artrans.bcash,
bos_ar_artrans.dtmdue,
bos_ar_artrans.dtmdue_printed,
bsc.szchangenote,
bos_sd_finvoice.szpaymenttermid as szpaymenttermid_j,
coll_to.szcollworkplaceid as szcustcollwpid_j,
bos_ar_artrans.szfinvoicetype,
bos_ar_artrans.dtmlastupdated,
bos_ar_artrans.balreadytransferred
, bos_ar_artrans.dtmcollectiondoc
, bos_ar_artrans.dtmtobecollected

from
bos_ar_artrans

left join bos_sd_finvoice on bos_ar_artrans.sztrnid = 'finv' 
and bos_sd_finvoice.szfinvoiceid = bos_ar_artrans.szdocid

left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_artrans.szcustid
--customer in ar trans is already invoice customer, so just link to it directly.
left join bos_ar_custsales on bos_ar_custsales.szcustid = bos_ar_artrans.szcustid
left join bos_ar_customer as coll_to on coll_to.szcustid = inv_to.szcollecttocustid

left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_artrans.szccyid
left join bos_sd_cjrtracking as bsc on bsc.sztrnid = bos_ar_artrans.sztrnid and bsc.szdocid = bos_ar_artrans.szdocid

where
bos_ar_artrans.sztrnid = p_sztrnid and bos_ar_artrans.szdocid = p_szdocid and bos_ar_artrans.szcustid like p_szcustid and bos_ar_artrans.shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getartrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select
bos_ar_artrans.szarclassid,
bos_ar_artrans.szcustid,
coalesce(inv_to.szname, '') as szcustnm,
bos_ar_artrans.dtmdate,
bos_ar_artrans.dtmperiode,
bos_ar_artrans.szccyid,
bos_cu_currency.szamountformat,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_ar_artrans.szdescription,
bos_ar_artrans.bclosed,
bos_ar_artrans.dtmclosed,
bos_ar_artrans.szurl,
bos_ar_artrans.szfinvoicestatus,
bos_ar_artrans.szinvworkplaceid,
bos_ar_artrans.szreftrnid,
bos_ar_artrans.szrefdocid,
bos_ar_artrans.szfinvoiceusage,
bos_ar_artrans.bcash,
bos_ar_artrans.dtmdue,
bos_ar_artrans.dtmdue_printed,
bsc.szchangenote,
bos_sd_finvoice.szpaymenttermid as szpaymenttermid_j,
coll_to.szcollworkplaceid as szcustcollwpid_j,
bos_ar_artrans.szfinvoicetype,
bos_ar_artrans.dtmlastupdated,
bos_ar_artrans.balreadytransferred
, bos_ar_artrans.dtmcollectiondoc
, bos_ar_artrans.dtmtobecollected

from
bos_ar_artrans

left join bos_sd_finvoice on bos_ar_artrans.sztrnid = 'finv' 
and bos_sd_finvoice.szfinvoiceid = bos_ar_artrans.szdocid

left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_artrans.szcustid
--customer in ar trans is already invoice customer, so just link to it directly.
left join bos_ar_custsales on bos_ar_custsales.szcustid = bos_ar_artrans.szcustid
left join bos_ar_customer as coll_to on coll_to.szcustid = inv_to.szcollecttocustid

left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_artrans.szccyid
left join bos_sd_cjrtracking as bsc on bsc.sztrnid = bos_ar_artrans.sztrnid and bsc.szdocid = bos_ar_artrans.szdocid

where
bos_ar_artrans.sztrnid = p_sztrnid and bos_ar_artrans.szdocid = p_szdocid and bos_ar_artrans.szcustid like p_szcustid and bos_ar_artrans.shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getartransrefdoc(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
szreftrnid,
szrefdocid,
szrefcustid,
shrefrevno,
decamount

from 
bos_ar_artransrefdoc
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getartransrefdoc_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
szreftrnid,
szrefdocid,
szrefcustid,
shrefrevno,
decamount

from 
bos_ar_artransrefdoc
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlastrevno(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
max(shrevno) as shlastrevno

from 
bos_ar_artrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlastrevno_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
max(shrevno) as shlastrevno

from 
bos_ar_artrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofarmaster(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szinvworkplaceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_armaster.szcustid,
bos_ar_armaster.szccyid


from 
bos_ar_armaster
left join bos_ar_customer as cust on cust.szcustid = bos_ar_armaster.szcustidleft join bos_ar_customer as cust on cust.szcustid = bos_ar_armaster.szcustid
where 
bos_ar_armaster.szcustid like p_szcustid and bos_ar_armaster.szccyid like p_szccyid and cust.szinvworkplaceid like p_szinvworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofarmastercust(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_ar_armaster.szcustid

from 
bos_ar_armaster
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_armaster.szcustid
where 
bos_ar_armaster.szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofarmasterdata(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_armaster.szcustid,
bos_ar_armaster.szccyid,

bos_ar_customer.szname as szcustnm,
bos_ar_customer.szstatus as szcuststatus_j,

bos_ar_armaster.decamount,
amc.decamount as decarclassamount,

bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,
bos_ar_armaster.bbad,
bos_ar_armaster.intnumberofopeninvoice,

-- data status.
bos_ar_armaster.dtmlastupdated,
bos_ar_armaster.balreadytransferred,

bsr.szopuserid,
bpe.szname as szopusernm,

bos_ar_customer.szdefaultccyid as szcustdefaultccyid_j,
bos_ar_custsales.deccreditlimit as deccustcreditlimit_j,

csac.deccreditlimit as deccustarclasscreditlimit_j

from
bos_ar_armaster
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_armaster.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_armaster.szccyid
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bos_ar_customer.szcustid
left join bos_sd_route as bsr on bsr.szrouteid = bsc.szdefaultrouteid
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid
left join bos_ar_custsales on bos_ar_custsales.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custsalesarclass as csac on csac.szcustid = bos_ar_customer.szinvoicetocustid
and csac.szarclassid = p_szarclassid
left join bos_ar_armasterclass as amc on amc.szcustid = bos_ar_armaster.szcustid
and amc.szccyid = bos_ar_armaster.szccyid
and amc.szarclassid = p_szarclassid

where
bos_ar_armaster.szcustid like p_szcustid and bos_ar_armaster.szccyid like p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofarmasterdata_014(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_armaster.szcustid,
bos_ar_armaster.szccyid,

bos_ar_customer.szname as szcustnm,
bos_ar_customer.szstatus as szcuststatus_j,

bos_ar_armaster.decamount,
amc.decamount as decarclassamount,

bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,
bos_ar_armaster.bbad,
bos_ar_armaster.intnumberofopeninvoice,

-- data status.
bos_ar_armaster.dtmlastupdated,
bos_ar_armaster.balreadytransferred,

bsr.szopuserid,
bpe.szname as szopusernm,

bos_ar_customer.szdefaultccyid as szcustdefaultccyid_j,
bos_ar_custsales.deccreditlimit as deccustcreditlimit_j,

csac.deccreditlimit as deccustarclasscreditlimit_j

from
bos_ar_armaster
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_armaster.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_armaster.szccyid
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bos_ar_customer.szcustid
left join bos_sd_route as bsr on bsr.szrouteid = bsc.szdefaultrouteid
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid
left join bos_ar_custsales on bos_ar_custsales.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custsalesarclass as csac on csac.szcustid = bos_ar_customer.szinvoicetocustid
and csac.szarclassid = p_szarclassid
left join bos_ar_armasterclass as amc on amc.szcustid = bos_ar_armaster.szcustid
and amc.szccyid = bos_ar_armaster.szccyid
and amc.szarclassid = p_szarclassid

where
bos_ar_armaster.szcustid like p_szcustid and bos_ar_armaster.szccyid like p_szccyid;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofarmasterdata_015(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_armaster.szcustid,
bos_ar_armaster.szccyid,

bos_ar_customer.szname as szcustnm,
bos_ar_customer.szstatus as szcuststatus_j,

bos_ar_armaster.decamount,
amc.decamount as decarclassamount,

bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,
bos_ar_armaster.bbad,
bos_ar_armaster.intnumberofopeninvoice,

-- data status.
bos_ar_armaster.dtmlastupdated,
bos_ar_armaster.balreadytransferred,

bsr.szopuserid,
bpe.szname as szopusernm,

bos_ar_customer.szdefaultccyid as szcustdefaultccyid_j,
bos_ar_custsales.deccreditlimit as deccustcreditlimit_j,

csac.deccreditlimit as deccustarclasscreditlimit_j,
coalesce(amc.intnumberofopeninvoice,0) as intnumberofarclassopeninvoice
from
bos_ar_armaster
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_armaster.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_armaster.szccyid
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bos_ar_customer.szcustid
left join bos_sd_route as bsr on bsr.szrouteid = bsc.szdefaultrouteid
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid
left join bos_ar_custsales on bos_ar_custsales.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custsalesarclass as csac on csac.szcustid = bos_ar_customer.szinvoicetocustid
and csac.szarclassid = p_szarclassid
left join bos_ar_armasterclass as amc on amc.szcustid = bos_ar_armaster.szcustid
and amc.szccyid = bos_ar_armaster.szccyid
and amc.szarclassid = p_szarclassid

where
bos_ar_armaster.szcustid like p_szcustid and bos_ar_armaster.szccyid like p_szccyid;



end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartrans()
returns void as
$body$
begin
select 
sztrnid,
szdocid,
szcustid,
shrevno

from 
bos_ar_artrans;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatispayedbyme(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_artransrefdoc.szreftrnid,
bos_ar_artransrefdoc.szrefdocid,
bos_ar_artransrefdoc.szrefcustid,
bos_ar_artransrefdoc.shrefrevno


from 
bos_ar_artransrefdoc

where 
bos_ar_artransrefdoc.sztrnid = p_sztrnid and bos_ar_artransrefdoc.szdocid = p_szdocid and bos_ar_artransrefdoc.szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatispayedbyme_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_artransrefdoc.szreftrnid,
bos_ar_artransrefdoc.szrefdocid,
bos_ar_artransrefdoc.szrefcustid,
bos_ar_artransrefdoc.shrefrevno


from 
bos_ar_artransrefdoc

where 
bos_ar_artransrefdoc.sztrnid = p_sztrnid and bos_ar_artransrefdoc.szdocid = p_szdocid and bos_ar_artransrefdoc.szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatpayme(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_artransrefdoc.sztrnid,
bos_ar_artransrefdoc.szdocid,
bos_ar_artransrefdoc.szcustid,
bos_ar_artransrefdoc.shrevno


from 
bos_ar_artransrefdoc
where 
bos_ar_artransrefdoc.szreftrnid = p_sztrnid and bos_ar_artransrefdoc.szrefdocid = p_szdocid and bos_ar_artransrefdoc.szrefcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatpayme_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_artransrefdoc.sztrnid,
bos_ar_artransrefdoc.szdocid,
bos_ar_artransrefdoc.szcustid,
bos_ar_artransrefdoc.shrevno


from 
bos_ar_artransrefdoc
where 
bos_ar_artransrefdoc.szreftrnid = p_sztrnid and bos_ar_artransrefdoc.szrefdocid = p_szdocid and bos_ar_artransrefdoc.szrefcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatpaymeincludingmyself(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select distinct
art.sztrnid, art.szdocid, art.szcustid, art.shrevno

from 
bos_ar_artrans as art

left join bos_ar_artransrefdoc as artrd on
artrd.sztrnid = art.sztrnid and artrd.szdocid = art.szdocid and artrd.szcustid = art.szcustid and artrd.shrevno = art.shrevno

where 
(art.sztrnid = p_sztrnid and art.szdocid = p_szdocid and art.szcustid = p_szcustid and art.shrevno = p_shrevno) or (artrd.szreftrnid = p_sztrnid and artrd.szrefdocid = p_szdocid and artrd.szrefcustid = p_szcustid and artrd.shrefrevno = p_shrevno) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofartransthatpaymeincludingmyself_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select distinct
art.sztrnid, art.szdocid, art.szcustid, art.shrevno

from 
bos_ar_artrans as art

left join bos_ar_artransrefdoc as artrd on
artrd.sztrnid = art.sztrnid and artrd.szdocid = art.szdocid and artrd.szcustid = art.szcustid and artrd.shrevno = art.shrevno

where 
(art.sztrnid = p_sztrnid and art.szdocid = p_szdocid and art.szcustid = p_szcustid and art.shrevno = p_shrevno) or (artrd.szreftrnid = p_sztrnid and artrd.szrefdocid = p_szdocid and artrd.szrefcustid = p_szcustid and artrd.shrefrevno = p_shrevno) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofopensoamount(
p_szinvtocustid bos_dt_szid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

if p_szarclassid = ''
  then

select
bss.szfsoid,
(bss.decamount - bss.decdownpayment) as decremainingamount,
bss.szccyid,
bss.szccyrateid

from
bos_ar_customer as bac
left join bos_sd_fso as bss on bss.szcustid = bac.szcustid

where
bac.szinvoicetocustid = p_szinvtocustid
and bss.szcompletedfinvoiceid = '' and bss.bapplied = 1 and bss.szstatus = 'ope';

else

select
bss.szfsoid,

--this differs with case of empty ar class.
--so remaining ar class amount = down payment / amount * ar class amount.
bss.decamount,
bss.decdownpayment,

(
select coalesce(sum(item.decamount - item.decdiscount), 0) 
from bos_sd_fsoitem as item
left join bos_inv_product as p on p.szproductid = item.szproductid
where item.szfsoid = bss.szfsoid
and p.szarclassid = p_szarclassid
) as decarclassamount,

bss.szccyid,
bss.szccyrateid

from
bos_ar_customer as bac
left join bos_sd_fso as bss on bss.szcustid = bac.szcustid

where
bac.szinvoicetocustid = p_szinvtocustid
and bss.szcompletedfinvoiceid = '' and bss.bapplied = 1 and bss.szstatus = 'ope';

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofopensoamount_013(
p_szinvtocustid bos_dt_szid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

if p_szarclassid = ''    
  then

select    
bss.szfsoid,    
(bss.decamount - bss.decdownpayment - coalesce(fdo.decamount, 0)) as decremainingamount, 
bss.szccyid,    
bss.szccyrateid    

from    
bos_ar_customer as bac    
left join bos_sd_fso as bss on bss.szcustid = bac.szcustid    
left join (select szfsoid, bapplied, sum(decamount) as decamount from bos_sd_fdo group by szfsoid, bapplied) fdo 
on fdo.szfsoid = bss.szfsoid and fdo.bapplied = 1   
where    
bac.szinvoicetocustid = p_szinvtocustid    
and bss.szcompletedfinvoiceid = '' and bss.bapplied = 1 and bss.szstatus = 'ope';    

else    

select    
bss.szfsoid,    

--this differs with case of empty ar class.    
--so remaining ar class amount = down payment / amount * ar class amount.    
bss.decamount,    
bss.decdownpayment,    

(    
select coalesce(sum(item.decamount - item.decdiscount), 0) - coalesce(sum(fdo.decamount), 0)   
from bos_sd_fsoitem as item    
left join bos_inv_product as p on p.szproductid = item.szproductid   
left join 
(
select a.szfsoid, a.bapplied, c.szarclassid, sum(b.decamount - b.decdiscount) as decamount
from bos_sd_fdo a 
left join bos_sd_fdoitem b on b.szdoid = a.szdoid
left join bos_inv_product c on c.szproductid = b.szproductid 
group by a.szfsoid, a.bapplied, c.szarclassid
) fdo on fdo.szfsoid = bss.szfsoid and fdo.szarclassid = p_szarclassid and fdo.bapplied = 1
where item.szfsoid = bss.szfsoid and p.szarclassid = p_szarclassid   
) as decarclassamount,    

bss.szccyid,    
bss.szccyrateid    

from    
bos_ar_customer as bac    
left join bos_sd_fso as bss on bss.szcustid = bac.szcustid    

where    
bac.szinvoicetocustid = p_szinvtocustid    
and bss.szcompletedfinvoiceid = '' and bss.bapplied = 1 and bss.szstatus = 'ope';    


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getlistofoutstandingdoamount(
p_szinvtocustid bos_dt_szid,
p_do_not_check_szfdoid bos_dt_szid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin

if p_szarclassid = ''
  then

select
bsd.szccyid,
bsd.szccyrateid,
sum(bsd.decamount) as decoutstandingdoamount

from
bos_ar_customer as bac
left join bos_sd_fdo as bsd on bsd.szcustid = bac.szcustid

where
bac.szinvoicetocustid = p_szinvtocustid
and bsd.szfinvoiceid = '' 
and bsd.szdoid <> p_do_not_check_szfdoid 
and bsd.bapplied = 1 and bsd.szfsoid = ''

group by
bsd.szccyid,
bsd.szccyrateid;

else

select
bsd.szccyid,
bsd.szccyrateid,

--this differs with case of empty ar class id.
(
select coalesce(sum(item.decamount - item.decdiscount), 0)
from bos_sd_fdoitem as item
left join bos_inv_product as p on p.szproductid = item.szproductid
where item.szdoid = bsd.szdoid
and p.szarclassid = p_szarclassid
) as decoutstandingdoamount

from
bos_ar_customer as bac
left join bos_sd_fdo as bsd on bsd.szcustid = bac.szcustid

where
bac.szinvoicetocustid = p_szinvtocustid
and bsd.szfinvoiceid = '' 
and bsd.szdoid <> p_do_not_check_szfdoid 
and bsd.bapplied = 1 and bsd.szfsoid = '';

--cannot group-by as the case of empty ar class id.
--group by
--bsd.szccyid,
--bsd.szccyrateid

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_getoldestagingarofcustomer(
p_szinvcustid bos_dt_szid,
p_szarclassid bos_dt_szid)
returns void as
$body$
begin
select 
bat.dtmperiode

from 
bos_ar_artrans as bat
left join bos_ar_customer as bac on bat.szcustid = bac.szcustid

where 
bat.bclosed = 0 and bat.szcustid like p_szinvcustid and (bat.sztrnid = 'finv' or bat.sztrnid = 'pdrec') and bat.szarclassid like p_szarclassid 
order by 
bat.dtmperiode
limit 1;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_isarmasterexist(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szcustid,
szccyid

from 
bos_ar_armaster
where 
szcustid = p_szcustid and szccyid = p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_isartransclosed(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
bclosed

from 
bos_ar_artrans
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_isartransclosed_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
bclosed

from 
bos_ar_artrans
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_isartransexist(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
sztrnid

from 
bos_ar_artrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_isartransexist_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
select 
sztrnid

from 
bos_ar_artrans
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid like p_szcustid and shrevno = p_shrevno ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_lockarmaster(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_ar_armaster
set 
decamount = decamount
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_lockartrans(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
update bos_ar_artrans
set 
szdescription = szdescription
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_lockartrans_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_shrevno smallint)
returns void as
$body$
begin
update bos_ar_artrans
set 
szdescription = szdescription
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and szcustid = p_szcustid and shrevno = p_shrevno;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_transitemreason(
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp,
p_szreasonid bos_dt_szid,
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_artransitemreason
(
sztrnid,
szdocid,
dtmdate,
szreasonid,
szemployeeid
)
values
(
p_sztrnid,
p_szdocid,
p_dtmdate,
p_szreasonid,
p_szemployeeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_transitemreason_013(
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp,
p_szreasonid bos_dt_szid,
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_artransitemreason
(
sztrnid,
szdocid,
dtmdate,
szreasonid,
szemployeeid
)
values
(
p_sztrnid,
p_szdocid,
p_dtmdate,
p_szreasonid,
p_szemployeeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_updatearmaster(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit)
returns void as
$body$
begin
update bos_ar_armaster
set 
decamount = p_decamount,
bbad = p_bbad
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_updatearmaster_014(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_bbad bit)
returns void as
$body$
begin
update bos_ar_armaster
set 
decamount = p_decamount,
bbad = p_bbad
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_updatearmasterwithamountinartrans()
returns void as
$body$
begin
insert into bos_ar_armaster
(
szcustid,
szccyid,
decamount,
bbad,
-- data status.
dtmlastupdated
)
(select distinct bos_ar_artrans.szcustid, bos_ar_artrans.szccyid, 0, 0, '1971-02-16', 0
from bos_ar_artrans
left join bos_ar_armaster as m on m.szcustid = bos_ar_artrans.szcustid and m.szccyid = bos_ar_artrans.szccyid
where
	bos_ar_artrans.bclosed = 0 
	and bos_ar_artrans.decremain <> 0
	and bos_ar_artrans.sztrnid = 'finv'
	and m.szcustid is null
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_updatefinvoicestatusonar(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_ar_artrans
set 
 szfinvoicestatus = p_szfinvoicestatus
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_ar_updatefinvoicestatusonar_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_ar_artrans
set 
 szfinvoicestatus = p_szfinvoicestatus
where 
 sztrnid = p_sztrnid and szdocid = p_szdocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_createcategory(
p_szcategoryid bos_dt_szid,
p_szcategorytype varchar,
p_szdescription varchar,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_category
(
szcategoryid ,
szcategorytype,
szdescription,
szpriceid,
szpromopriceid,
szpriceorderid,
szpromopriceorderid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcategoryid,
p_szcategorytype,
p_szdescription,
p_szpriceid,
p_szpromopriceid,
p_szpriceorderid,
p_szpromopriceorderid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_createcategory_013(
p_szcategoryid bos_dt_szid,
p_szcategorytype varchar,
p_szdescription varchar,
p_szparentcategory varchar,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_category
(
szcategoryid ,
szcategorytype,
szdescription,
szparentcategory,
szpriceid,
szpromopriceid,
szpriceorderid,
szpromopriceorderid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcategoryid,
p_szcategorytype,
p_szdescription,
p_szparentcategory,
p_szpriceid,
p_szpromopriceid,
p_szpriceorderid,
p_szpromopriceorderid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_deletecategory(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM bos_ar_category
WHERE 
	szcategoryid = p_szcategoryid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_getcategory(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
szcategorytype

from 
bos_ar_category
where 
szcategoryid = p_szcategoryid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_getcategory_014(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
szcategorytype

from 
bos_ar_category
where 
szcategoryid = p_szcategoryid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_getlistofcategory()
returns void as
$body$
begin
select 
szcategoryid

from 
bos_ar_category;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_iscategoryexist(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
szcategorytype 

from 
bos_ar_category 
where 
szcategoryid = p_szcategoryid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_lockcategory(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_category
set 
szcategorytype = szcategorytype,
szparentcategory = szparentcategory
where 
szcategoryid = p_szcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_lockcategory_014(
p_szcategoryid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_category
set 
szcategorytype = szcategorytype,
szparentcategory = szparentcategory
where 
szcategoryid = p_szcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_updatecategory(
p_szcategoryid bos_dt_szid,
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_category
set 
szcategoryid = p_szcategoryid ,
szcategorytype = p_szcategorytype,
szdescription = p_szdescription,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceorderid = p_szpromopriceorderid

where 
szcategoryid   = p_szcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_category_updatecategory_013(
p_szcategoryid bos_dt_szid,
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szparentcategory varchar,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_category
set 
szcategoryid = p_szcategoryid ,
szcategorytype = p_szcategorytype,
szdescription = p_szdescription,
szparentcategory = p_szparentcategory,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceorderid = p_szpromopriceorderid

where 
szcategoryid   = p_szcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_createcategorytype(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szparentcategorytype varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_categorytype
(
szcategorytype,
szdescription,
szparentcategorytype,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcategorytype,
p_szdescription,
p_szparentcategorytype,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_createcategorytype_014(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szparentcategorytype varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_categorytype
(
szcategorytype,
szdescription,
szparentcategorytype,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcategorytype,
p_szdescription,
p_szparentcategorytype,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_deletecategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
delete 
  from bos_ar_categorytype
where
szcategorytype = p_szcategorytype;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_getcategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred,
szparentcategorytype

from 
bos_ar_categorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_getcategorytype_014(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred,
szparentcategorytype

from 
bos_ar_categorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_getlistofcategorytype()
returns void as
$body$
begin
select 
szcategorytype, szdescription, szparentcategorytype

from 
bos_ar_categorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_getlistofcategorytype_014()
returns void as
$body$
begin
select 
szcategorytype, szdescription, szparentcategorytype

from 
bos_ar_categorytype;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_iscategorytypeexist(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription, szparentcategorytype

from 
bos_ar_categorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_iscategorytypeexist_014(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription, szparentcategorytype

from 
bos_ar_categorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_lockcategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
update bos_ar_categorytype
set 
szdescription = szdescription,
szparentcategorytype = szparentcategorytype
where 
szcategorytype = p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_lockcategorytype_014(
p_szcategorytype varchar)
returns void as
$body$
begin
update bos_ar_categorytype
set 
szdescription = szdescription,
szparentcategorytype = szparentcategorytype
where 
szcategorytype = p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_updatecategorytype(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szparentcategorytype varchar)
returns void as
$body$
begin
update bos_ar_categorytype
set 
szdescription = p_szdescription,
szparentcategorytype = p_szparentcategorytype
where 
szcategorytype = p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_categorytype_updatecategorytype_014(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_szparentcategorytype varchar)
returns void as
$body$
begin
update bos_ar_categorytype
set 
szdescription = p_szdescription,
szparentcategorytype = p_szparentcategorytype
where 
szcategorytype = p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_createcustinvoice(
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szmediumname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szmediumname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szmediumname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_block bit,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custinvoice
(
szcustid,
szcustinvoicenm ,
szcusttaxnm ,
szcustcollectnm ,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
block,
dtmlastupdated
)
values
(
p_szcustid,
p_szcustinvoicenm ,
p_szcusttaxnm ,
p_szcustcollectnm ,
p_invoiceszcontactperson,
p_invoiceszroomno,
p_invoiceszfloor,
p_invoiceszbuilding,
p_invoiceszaddress_1,
p_invoiceszaddress_2,
p_invoiceszdistrict,
p_invoiceszcity,
p_invoiceszzipcode,
p_invoiceszstate,
p_invoiceszcountry,
p_invoiceszphoneno_1,
p_invoiceszphoneno_2,
p_invoiceszfaxno,
p_invoiceszmobileno,
p_invoiceszemail,
p_invoiceszwebsite,
p_bisdifftaxaddress,
p_taxszcontactperson,
p_taxszroomno,
p_taxszfloor,
p_taxszbuilding,
p_taxszaddress_1,
p_taxszaddress_2,
p_taxszdistrict,
p_taxszcity,
p_taxszzipcode,
p_taxszstate,
p_taxszcountry,
p_taxszphoneno_1,
p_taxszphoneno_2,
p_taxszfaxno,
p_taxszmobileno,
p_taxszemail,
p_taxszwebsite,
p_bisdiffcollectaddress,
p_collectszcontactperson,
p_collectszroomno,
p_collectszfloor,
p_collectszbuilding,
p_collectszaddress_1,
p_collectszaddress_2,
p_collectszdistrict,
p_collectszcity,
p_collectszzipcode,
p_collectszstate,
p_collectszcountry,
p_collectszphoneno_1,
p_collectszphoneno_2,
p_collectszfaxno,
p_collectszmobileno,
p_collectszemail,
p_collectszwebsite,
p_block,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_createcustinvoice_013(
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_block bit,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custinvoice
(
szcustid,
szcustinvoicenm ,
szcusttaxnm ,
szcustcollectnm ,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
block,
dtmlastupdated
)
values
(
p_szcustid,
p_szcustinvoicenm ,
p_szcusttaxnm ,
p_szcustcollectnm ,
p_invoiceszcontactperson,
p_invoiceszroomno,
p_invoiceszfloor,
p_invoiceszbuilding,
p_invoiceszaddress_1,
p_invoiceszaddress_2,
p_invoiceszdistrict,
p_invoiceszcity,
p_invoiceszzipcode,
p_invoiceszstate,
p_invoiceszcountry,
p_invoiceszphoneno_1,
p_invoiceszphoneno_2,
p_invoiceszfaxno,
p_invoiceszmobileno,
p_invoiceszemail,
p_invoiceszwebsite,
p_bisdifftaxaddress,
p_taxszcontactperson,
p_taxszroomno,
p_taxszfloor,
p_taxszbuilding,
p_taxszaddress_1,
p_taxszaddress_2,
p_taxszdistrict,
p_taxszcity,
p_taxszzipcode,
p_taxszstate,
p_taxszcountry,
p_taxszphoneno_1,
p_taxszphoneno_2,
p_taxszfaxno,
p_taxszmobileno,
p_taxszemail,
p_taxszwebsite,
p_bisdiffcollectaddress,
p_collectszcontactperson,
p_collectszroomno,
p_collectszfloor,
p_collectszbuilding,
p_collectszaddress_1,
p_collectszaddress_2,
p_collectszdistrict,
p_collectszcity,
p_collectszzipcode,
p_collectszstate,
p_collectszcountry,
p_collectszphoneno_1,
p_collectszphoneno_2,
p_collectszfaxno,
p_collectszmobileno,
p_collectszemail,
p_collectszwebsite,
p_block,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_deletecustinvoice(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_custinvoice
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_getcustinvoice(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid,
szcustinvoicenm,
szcusttaxnm,
szcustcollectnm,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,

dtmlastupdated


from 
bos_ar_custinvoice
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_getcustinvoice_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid,
szcustinvoicenm,
szcusttaxnm,
szcustcollectnm,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,

dtmlastupdated


from 
bos_ar_custinvoice
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_getlistofcustinvoice()
returns void as
$body$
begin
select 
szcustid,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
block

from 
bos_ar_custinvoice;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_iscustinvoiceexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_ar_custinvoice
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_isexistcustinvoice(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid 

from 
bos_ar_custinvoice 
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_lockcustinvoice(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_custinvoice
set 
block = block
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_updatecustinvoice(
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szmediumname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szmediumname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szmediumname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_ar_custinvoice
set 
szcustinvoicenm = p_szcustinvoicenm,
szcusttaxnm = p_szcusttaxnm,
szcustcollectnm = p_szcustcollectnm,
invoiceszcontactperson = p_invoiceszcontactperson,
invoiceszroomno = p_invoiceszroomno,
invoiceszfloor = p_invoiceszfloor,
invoiceszbuilding = p_invoiceszbuilding,
invoiceszaddress_1 = p_invoiceszaddress_1,
invoiceszaddress_2 = p_invoiceszaddress_2,
invoiceszdistrict = p_invoiceszdistrict,
invoiceszcity = p_invoiceszcity,
invoiceszzipcode = p_invoiceszzipcode,
invoiceszstate = p_invoiceszstate,
invoiceszcountry = p_invoiceszcountry,
invoiceszphoneno_1 = p_invoiceszphoneno_1,
invoiceszphoneno_2 = p_invoiceszphoneno_2,
invoiceszfaxno = p_invoiceszfaxno,
invoiceszmobileno = p_invoiceszmobileno,
invoiceszemail = p_invoiceszemail,
invoiceszwebsite = p_invoiceszwebsite,
bisdifftaxaddress = p_bisdifftaxaddress,
taxszcontactperson = p_taxszcontactperson,
taxszroomno = p_taxszroomno,
taxszfloor = p_taxszfloor,
taxszbuilding = p_taxszbuilding,
taxszaddress_1 = p_taxszaddress_1,
taxszaddress_2 = p_taxszaddress_2,
taxszdistrict = p_taxszdistrict,
taxszcity = p_taxszcity,
taxszzipcode = p_taxszzipcode,
taxszstate = p_taxszstate,
taxszcountry = p_taxszcountry,
taxszphoneno_1 = p_taxszphoneno_1,
taxszphoneno_2 = p_taxszphoneno_2,
taxszfaxno = p_taxszfaxno,
taxszmobileno = p_taxszmobileno,
taxszemail = p_taxszemail,
taxszwebsite = p_taxszwebsite,
bisdiffcollectaddress = p_bisdiffcollectaddress,
collectszcontactperson = p_collectszcontactperson,
collectszroomno = p_collectszroomno,
collectszfloor = p_collectszfloor,
collectszbuilding = p_collectszbuilding,
collectszaddress_1 = p_collectszaddress_1,
collectszaddress_2 = p_collectszaddress_2,
collectszdistrict = p_collectszdistrict,
collectszcity = p_collectszcity,
collectszzipcode = p_collectszzipcode,
collectszstate = p_collectszstate,
collectszcountry = p_collectszcountry,
collectszphoneno_1 = p_collectszphoneno_1,
collectszphoneno_2 = p_collectszphoneno_2,
collectszfaxno = p_collectszfaxno,
collectszmobileno = p_collectszmobileno,

collectszemail = p_collectszemail,
collectszwebsite = p_collectszwebsite
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custinvoice_updatecustinvoice_013(
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szbigdescription,
p_invoiceszaddress_2 bos_dt_szbigdescription,
p_invoiceszdistrict bos_dt_szname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szbigdescription,
p_taxszaddress_2 bos_dt_szbigdescription,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szbigdescription,
p_collectszaddress_2 bos_dt_szbigdescription,
p_collectszdistrict bos_dt_szname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_ar_custinvoice
set 
szcustinvoicenm = p_szcustinvoicenm,
szcusttaxnm = p_szcusttaxnm,
szcustcollectnm = p_szcustcollectnm,
invoiceszcontactperson = p_invoiceszcontactperson,
invoiceszroomno = p_invoiceszroomno,
invoiceszfloor = p_invoiceszfloor,
invoiceszbuilding = p_invoiceszbuilding,
invoiceszaddress_1 = p_invoiceszaddress_1,
invoiceszaddress_2 = p_invoiceszaddress_2,
invoiceszdistrict = p_invoiceszdistrict,
invoiceszcity = p_invoiceszcity,
invoiceszzipcode = p_invoiceszzipcode,
invoiceszstate = p_invoiceszstate,
invoiceszcountry = p_invoiceszcountry,
invoiceszphoneno_1 = p_invoiceszphoneno_1,
invoiceszphoneno_2 = p_invoiceszphoneno_2,
invoiceszfaxno = p_invoiceszfaxno,
invoiceszmobileno = p_invoiceszmobileno,
invoiceszemail = p_invoiceszemail,
invoiceszwebsite = p_invoiceszwebsite,
bisdifftaxaddress = p_bisdifftaxaddress,
taxszcontactperson = p_taxszcontactperson,
taxszroomno = p_taxszroomno,
taxszfloor = p_taxszfloor,
taxszbuilding = p_taxszbuilding,
taxszaddress_1 = p_taxszaddress_1,
taxszaddress_2 = p_taxszaddress_2,
taxszdistrict = p_taxszdistrict,
taxszcity = p_taxszcity,
taxszzipcode = p_taxszzipcode,
taxszstate = p_taxszstate,
taxszcountry = p_taxszcountry,
taxszphoneno_1 = p_taxszphoneno_1,
taxszphoneno_2 = p_taxszphoneno_2,
taxszfaxno = p_taxszfaxno,
taxszmobileno = p_taxszmobileno,
taxszemail = p_taxszemail,
taxszwebsite = p_taxszwebsite,
bisdiffcollectaddress = p_bisdiffcollectaddress,
collectszcontactperson = p_collectszcontactperson,
collectszroomno = p_collectszroomno,
collectszfloor = p_collectszfloor,
collectszbuilding = p_collectszbuilding,
collectszaddress_1 = p_collectszaddress_1,
collectszaddress_2 = p_collectszaddress_2,
collectszdistrict = p_collectszdistrict,
collectszcity = p_collectszcity,
collectszzipcode = p_collectszzipcode,
collectszstate = p_collectszstate,
collectszcountry = p_collectszcountry,
collectszphoneno_1 = p_collectszphoneno_1,
collectszphoneno_2 = p_collectszphoneno_2,
collectszfaxno = p_collectszfaxno,
collectszmobileno = p_collectszmobileno,

collectszemail = p_collectszemail,
collectszwebsite = p_collectszwebsite
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_createcustlocation(
p_szcustid bos_dt_szid,
p_btlocid smallint,
p_szcustdeliverynm bos_dt_szname,
p_locationszcontactperson bos_dt_szname,
p_locationszroomno bos_dt_szsmallname,
p_locationszfloor bos_dt_szsmallname,
p_locationszbuilding bos_dt_szname,
p_locationszaddress_1 bos_dt_szname,
p_locationszaddress_2 bos_dt_szname,
p_locationszdistrict bos_dt_szmediumname,
p_locationszcity bos_dt_szmediumname,
p_locationszzipcode bos_dt_szsmallname,
p_locationszstate bos_dt_szmediumname,
p_locationszcountry bos_dt_szmediumname,
p_locationszphoneno_1 bos_dt_szmediumname,
p_locationszphoneno_2 bos_dt_szmediumname,
p_locationszfaxno bos_dt_szmediumname,
p_locationszmobileno bos_dt_szmediumname,
p_locationszemail bos_dt_szmediumname,
p_locationszwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custlocation
(
szcustid,
btlocid,
szcustdeliverynm,
locationszcontactperson,
locationszroomno,
locationszfloor,
locationszbuilding,
locationszaddress_1,
locationszaddress_2,
locationszdistrict,
locationszcity,
locationszzipcode,
locationszstate,
locationszcountry,
locationszphoneno_1,
locationszphoneno_2,
locationszfaxno,
locationszmobileno,
locationszemail,
locationszwebsite,
dtmlastupdated
)
values
(
p_szcustid,
p_btlocid,
p_szcustdeliverynm,
p_locationszcontactperson,
p_locationszroomno,
p_locationszfloor,
p_locationszbuilding,
p_locationszaddress_1,
p_locationszaddress_2,
p_locationszdistrict,
p_locationszcity,
p_locationszzipcode,
p_locationszstate,
p_locationszcountry,
p_locationszphoneno_1,
p_locationszphoneno_2,
p_locationszfaxno,
p_locationszmobileno,
p_locationszemail,
p_locationszwebsite,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_createcustlocation_013(
p_szcustid bos_dt_szid,
p_btlocid smallint,
p_szcustdeliverynm bos_dt_szname,
p_locationszcontactperson bos_dt_szname,
p_locationszroomno bos_dt_szsmallname,
p_locationszfloor bos_dt_szsmallname,
p_locationszbuilding bos_dt_szname,
p_locationszaddress_1 bos_dt_szname,
p_locationszaddress_2 bos_dt_szname,
p_locationszdistrict bos_dt_szname,
p_locationszcity bos_dt_szmediumname,
p_locationszzipcode bos_dt_szsmallname,
p_locationszstate bos_dt_szmediumname,
p_locationszcountry bos_dt_szmediumname,
p_locationszphoneno_1 bos_dt_szmediumname,
p_locationszphoneno_2 bos_dt_szmediumname,
p_locationszfaxno bos_dt_szmediumname,
p_locationszmobileno bos_dt_szmediumname,
p_locationszemail bos_dt_szmediumname,
p_locationszwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custlocation
(
szcustid,
btlocid,
szcustdeliverynm,
locationszcontactperson,
locationszroomno,
locationszfloor,
locationszbuilding,
locationszaddress_1,
locationszaddress_2,
locationszdistrict,
locationszcity,
locationszzipcode,
locationszstate,
locationszcountry,
locationszphoneno_1,
locationszphoneno_2,
locationszfaxno,
locationszmobileno,
locationszemail,
locationszwebsite,
dtmlastupdated
)
values
(
p_szcustid,
p_btlocid,
p_szcustdeliverynm,
p_locationszcontactperson,
p_locationszroomno,
p_locationszfloor,
p_locationszbuilding,
p_locationszaddress_1,
p_locationszaddress_2,
p_locationszdistrict,
p_locationszcity,
p_locationszzipcode,
p_locationszstate,
p_locationszcountry,
p_locationszphoneno_1,
p_locationszphoneno_2,
p_locationszfaxno,
p_locationszmobileno,
p_locationszemail,
p_locationszwebsite,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_deletecustlocation(
p_szcustid bos_dt_szid,
p_btlocid smallint)
returns void as
$body$
begin
delete 
 from bos_ar_custlocation
where
szcustid=p_szcustid and btlocid=p_btlocid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_deletecustmultilocation(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from bos_ar_custlocation
where
	szcustid=p_szcustid and
	btlocid > 0;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_deletelistofcustlocation(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from bos_ar_custlocation
where
	szcustid=p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_getcustlocation(
p_szcustid bos_dt_szid,
p_btlocid smallint)
returns void as
$body$
begin
select 
szcustid

from 
bos_ar_custlocation
where 
szcustid=p_szcustid and btlocid=p_btlocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_getcustlocation_014(
p_szcustid bos_dt_szid,
p_btlocid smallint)
returns void as
$body$
begin
select 
szcustid

from 
bos_ar_custlocation
where 
szcustid=p_szcustid and btlocid=p_btlocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_getlistofcustlocation()
returns void as
$body$
begin
select 
szcustid,
btlocid

from 
bos_ar_custlocation;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_getlistofcustlocationbycust(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
btlocid

from 
bos_ar_custlocation
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_iscustlocationexist(
p_szcustid bos_dt_szid,
p_btlocid smallint)
returns void as
$body$
begin
select 
szcustid 

from 
bos_ar_custlocation 
where 
szcustid=p_szcustid and btlocid=p_btlocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_lockcustlocation(
p_szcustid bos_dt_szid,
p_btlocid smallint)
returns void as
$body$
begin
update bos_ar_custlocation
set 
locationszfloor=locationszfloor
where 
szcustid=p_szcustid and btlocid=p_btlocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custlocation_updatecustlocation(
p_szcustid bos_dt_szid,
p_btlocid smallint,
p_szcustdeliverynm bos_dt_szname,
p_locationszcontactperson bos_dt_szname,
p_locationszroomno bos_dt_szsmallname,
p_locationszfloor bos_dt_szsmallname,
p_locationszbuilding bos_dt_szname,
p_locationszaddress_1 bos_dt_szname,
p_locationszaddress_2 bos_dt_szname,
p_locationszdistrict bos_dt_szname,
p_locationszcity bos_dt_szmediumname,
p_locationszzipcode bos_dt_szsmallname,
p_locationszstate bos_dt_szmediumname,
p_locationszcountry bos_dt_szmediumname,
p_locationszphoneno_1 bos_dt_szmediumname,
p_locationszphoneno_2 bos_dt_szmediumname,
p_locationszfaxno bos_dt_szmediumname,
p_locationszmobileno bos_dt_szmediumname,
p_locationszemail bos_dt_szmediumname,
p_locationszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_ar_custlocation
set 
szcustdeliverynm = p_szcustdeliverynm,
locationszcontactperson=p_locationszcontactperson,
locationszroomno=p_locationszroomno,
locationszfloor=p_locationszfloor,
locationszbuilding=p_locationszbuilding,
locationszaddress_1=p_locationszaddress_1,
locationszaddress_2=p_locationszaddress_2,
locationszdistrict=p_locationszdistrict,
locationszcity=p_locationszcity,
locationszzipcode=p_locationszzipcode,
locationszstate=p_locationszstate,
locationszcountry=p_locationszcountry,
locationszphoneno_1=p_locationszphoneno_1,
locationszphoneno_2=p_locationszphoneno_2,
locationszfaxno=p_locationszfaxno,
locationszmobileno=p_locationszmobileno,
locationszemail=p_locationszemail,
locationszwebsite=p_locationszwebsite
where 
szcustid=p_szcustid and btlocid=p_btlocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_createcustomer(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szfcallid bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_bisdiffdeliveryaddress bit,
p_bisdiffinvoiceaddress bit,
p_bismultilocation bit,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_bjoininvoice bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szdlvworkplaceid bos_dt_szid,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_szlastfcustbiid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_customer
(
szcustid,
szname,
szfcallid,
--- basic address.,
custszcontactperson,
custszroomno,
custszfloor,
custszbuilding,
custszaddress_1,
custszaddress_2,
custszdistrict,
custszcity,
custszzipcode,
custszstate,
custszcountry,
custszphoneno_1,
custszphoneno_2,
custszfaxno,
custszmobileno,
custszemail,
custszwebsite,
szlatitude,
szlongitude,
bsoldtocust,
bdelivertocust,
binvoicetocust,
bcollecttocust,
szsoldtocustid,
szdelivertocustid,
szinvoicetocustid,
szcollecttocustid,
bisdiffdeliveryaddress,
bisdiffinvoiceaddress,
bismultilocation,
--- customer category.,
szcategory_1,
szcategory_2,
szcategory_3,
szcategory_4,
szcategory_5,
szcategory_6,
szcategory_7,
szcategory_8,
szcategory_9,
szcategory_10,
bjoininvoice,
szstatus,
szreasonid,
szdlvworkplaceid,
szinvworkplaceid,
szcollworkplaceid,
szsalworkplaceid,
szdistrchannelid,
szdefaultccyid,
--- closing info.,
szstartdoc,
dtmstart,
szcontractdoc,
dtmcontract,
szrenewaldoc,
dtmrenewal,
szstopdoc,
dtmstop,
szsalesid,
bicp,
szlastfcustbiid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- customer validation,
bneedinvoicechange,
binvoicechangewithreceipt,
bhasspecialcollectionday,
bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday,
bpaymenttype_cash,
bpaymenttype_currentaccount,
bpaymenttype_transfer,
brequireddocuments_po,
brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice,
brequireddocuments_materai,
brequireddocuments_receiptnote,
brequireddocuments_other,
szrequireddocuments_other,
szguarantee,
szdeliverygroupid,
szbarcodeid
)
values
(
p_szcustid,
p_szname,
p_szfcallid,
p_custszcontactperson,
p_custszroomno,
p_custszfloor,
p_custszbuilding,
p_custszaddress_1,
p_custszaddress_2,
p_custszdistrict,
p_custszcity,
p_custszzipcode,
p_custszstate,
p_custszcountry,
p_custszphoneno_1,
p_custszphoneno_2,
p_custszfaxno,
p_custszmobileno,
p_custszemail,
p_custszwebsite,
p_szlatitude,
p_szlongitude,
p_bsoldtocust,
p_bdelivertocust,
p_binvoicetocust,
p_bcollecttocust,
p_szsoldtocustid,
p_szdelivertocustid,
p_szinvoicetocustid,
p_szcollecttocustid,
p_bisdiffdeliveryaddress,
p_bisdiffinvoiceaddress,
p_bismultilocation,
p_szcategory_1,
p_szcategory_2,
p_szcategory_3,
p_szcategory_4,
p_szcategory_5,
p_szcategory_6,
p_szcategory_7,
p_szcategory_8,
p_szcategory_9,
p_szcategory_10,
p_bjoininvoice,
p_szstatus,
p_szreasonid,
p_szdlvworkplaceid,
p_szinvworkplaceid,
p_szcollworkplaceid,
p_szsalworkplaceid,
p_szdistrchannelid,
p_szdefaultccyid,
p_szstartdoc,
p_dtmstart ,
p_szcontractdoc,
p_dtmcontract ,
p_szrenewaldoc,
p_dtmrenewal ,
p_szstopdoc,
p_dtmstop ,
p_szsalesid ,
p_bicp,
p_szlastfcustbiid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- customer validation,
p_bneedinvoicechange,
p_binvoicechangewithreceipt,
p_bhasspecialcollectionday,
p_bhasspecialcollectionday_sunday,
p_bhasspecialcollectionday_monday,
p_bhasspecialcollectionday_tuesday,
p_bhasspecialcollectionday_wednesday,
p_bhasspecialcollectionday_thursday,
p_bhasspecialcollectionday_friday,
p_bhasspecialcollectionday_saturday,
p_bpaymenttype_cash,
p_bpaymenttype_currentaccount,
p_bpaymenttype_transfer,
p_brequireddocuments_po,
p_brequireddocuments_receipt,
p_brequireddocuments_standardtaxinvoice,
p_brequireddocuments_materai,
p_brequireddocuments_receiptnote,
p_brequireddocuments_other,
p_szrequireddocuments_other,
p_szguarantee,
p_szdeliverygroupid,
p_szbarcodeid

);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_createcustomer_013(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szfcallid bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_bisdiffdeliveryaddress bit,
p_bisdiffinvoiceaddress bit,
p_bismultilocation bit,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_bjoininvoice bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szdlvworkplaceid bos_dt_szid,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_szlastfcustbiid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid,
p_szactivitystatus bos_dt_szid,
p_dtmlastchangeactivitystatus timestamp)
returns void as
$body$
begin
insert into bos_ar_customer
(
szcustid,
szname,
szfcallid,
--- basic address.,
custszcontactperson,
custszroomno,
custszfloor,
custszbuilding,
custszaddress_1,
custszaddress_2,
custszdistrict,
custszcity,
custszzipcode,
custszstate,
custszcountry,
custszphoneno_1,
custszphoneno_2,
custszfaxno,
custszmobileno,
custszemail,
custszwebsite,
szlatitude,
szlongitude,
bsoldtocust,
bdelivertocust,
binvoicetocust,
bcollecttocust,
szsoldtocustid,
szdelivertocustid,
szinvoicetocustid,
szcollecttocustid,
bisdiffdeliveryaddress,
bisdiffinvoiceaddress,
bismultilocation,
--- customer category.,
szcategory_1,
szcategory_2,
szcategory_3,
szcategory_4,
szcategory_5,
szcategory_6,
szcategory_7,
szcategory_8,
szcategory_9,
szcategory_10,
bjoininvoice,
szstatus,
szreasonid,
szdlvworkplaceid,
szinvworkplaceid,
szcollworkplaceid,
szsalworkplaceid,
szdistrchannelid,
szdefaultccyid,
--- closing info.,
szstartdoc,
dtmstart,
szcontractdoc,
dtmcontract,
szrenewaldoc,
dtmrenewal,
szstopdoc,
dtmstop,
szsalesid,
bicp,
szlastfcustbiid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- customer validation,
bneedinvoicechange,
binvoicechangewithreceipt,
bhasspecialcollectionday,
bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday,
bpaymenttype_cash,
bpaymenttype_currentaccount,
bpaymenttype_transfer,
brequireddocuments_po,
brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice,
brequireddocuments_materai,
brequireddocuments_receiptnote,
brequireddocuments_other,
szrequireddocuments_other,
szguarantee,
szdeliverygroupid,
szbarcodeid,
szactivitystatus,
dtmlastchangeactivitystatus
)
values
(
p_szcustid,
p_szname,
p_szfcallid,
p_custszcontactperson,
p_custszroomno,
p_custszfloor,
p_custszbuilding,
p_custszaddress_1,
p_custszaddress_2,
p_custszdistrict,
p_custszcity,
p_custszzipcode,
p_custszstate,
p_custszcountry,
p_custszphoneno_1,
p_custszphoneno_2,
p_custszfaxno,
p_custszmobileno,
p_custszemail,
p_custszwebsite,
p_szlatitude,
p_szlongitude,
p_bsoldtocust,
p_bdelivertocust,
p_binvoicetocust,
p_bcollecttocust,
p_szsoldtocustid,
p_szdelivertocustid,
p_szinvoicetocustid,
p_szcollecttocustid,
p_bisdiffdeliveryaddress,
p_bisdiffinvoiceaddress,
p_bismultilocation,
p_szcategory_1,
p_szcategory_2,
p_szcategory_3,
p_szcategory_4,
p_szcategory_5,
p_szcategory_6,
p_szcategory_7,
p_szcategory_8,
p_szcategory_9,
p_szcategory_10,
p_bjoininvoice,
p_szstatus,
p_szreasonid,
p_szdlvworkplaceid,
p_szinvworkplaceid,
p_szcollworkplaceid,
p_szsalworkplaceid,
p_szdistrchannelid,
p_szdefaultccyid,
p_szstartdoc,
p_dtmstart ,
p_szcontractdoc,
p_dtmcontract ,
p_szrenewaldoc,
p_dtmrenewal ,
p_szstopdoc,
p_dtmstop ,
p_szsalesid ,
p_bicp,
p_szlastfcustbiid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- customer validation,
p_bneedinvoicechange,
p_binvoicechangewithreceipt,
p_bhasspecialcollectionday,
p_bhasspecialcollectionday_sunday,
p_bhasspecialcollectionday_monday,
p_bhasspecialcollectionday_tuesday,
p_bhasspecialcollectionday_wednesday,
p_bhasspecialcollectionday_thursday,
p_bhasspecialcollectionday_friday,
p_bhasspecialcollectionday_saturday,
p_bpaymenttype_cash,
p_bpaymenttype_currentaccount,
p_bpaymenttype_transfer,
p_brequireddocuments_po,
p_brequireddocuments_receipt,
p_brequireddocuments_standardtaxinvoice,
p_brequireddocuments_materai,
p_brequireddocuments_receiptnote,
p_brequireddocuments_other,
p_szrequireddocuments_other,
p_szguarantee,
p_szdeliverygroupid,
p_szbarcodeid  ,
p_szactivitystatus,
p_dtmlastchangeactivitystatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_createcustomerproductitem(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szrefproductid bos_dt_szid,
p_szrefproductname bos_dt_szname)
returns void as
$body$
begin
insert into bos_ar_customerproductitem
(
szcustid,
szproductid,
szrefproductid,
szrefproductname
)
values
(
p_szcustid,
p_szproductid,
p_szrefproductid,
p_szrefproductname
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_deletecustomer(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_ar_customer
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_deletecustomerproductitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_customerproductitem
where
 szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_flagdiffdeliveryaddress(
p_szcustid bos_dt_szid,
p_bisdiffdeliveryaddress bit,
p_bismultilocation bit,
p_szdlvworkplaceid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_customer
set 
bisdiffdeliveryaddress=p_bisdiffdeliveryaddress,
bismultilocation = p_bismultilocation,
szdlvworkplaceid = p_szdlvworkplaceid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_flagdiffinvoiceaddress(
p_szcustid bos_dt_szid,
p_bdiffinvoiceaddress bit,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_customer
set 
bisdiffinvoiceaddress = p_bdiffinvoiceaddress,
szinvworkplaceid = p_szinvworkplaceid,
szcollworkplaceid = p_szcollworkplaceid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustnm(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_customer.szname


from 
bos_ar_customer

where 
bos_ar_customer.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomer(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select  
bos_ar_customer.szname,  
bos_ar_customer.custszcontactperson,  
bos_ar_customer.custszroomno,  
bos_ar_customer.custszfloor,  
bos_ar_customer.custszbuilding,  
bos_ar_customer.custszaddress_1,  
bos_ar_customer.custszaddress_2,  
bos_ar_customer.custszdistrict,  
bos_ar_customer.custszcity,  
bos_ar_customer.custszzipcode,  
bos_ar_customer.custszstate,  
bos_ar_customer.custszcountry,  
bos_ar_customer.custszphoneno_1,  
bos_ar_customer.custszphoneno_2,  
bos_ar_customer.custszfaxno,  
bos_ar_customer.custszmobileno,  
bos_ar_customer.custszemail,  
bos_ar_customer.custszwebsite,  

bos_ar_customer.szlatitude,  
bos_ar_customer.szlongitude,  

bos_ar_customer.szfcallid,  
bos_ar_customer.bsoldtocust,  
bos_ar_customer.bdelivertocust,  
bos_ar_customer.binvoicetocust,  
bos_ar_customer.bcollecttocust,  
bos_ar_customer.szsoldtocustid,  
sold_to.szname as szsoldtocustnm,  
bos_ar_customer.szdelivertocustid,  
dlv_to.szname as szdelivertocustnm,  
bos_ar_customer.szinvoicetocustid,  
inv_to.szname as szinvoicetocustnm,  
bos_ar_customer.szcollecttocustid,  
coll_to.szname as szcollecttocustnm,  
bos_ar_customer.bisdiffdeliveryaddress,  
bos_ar_customer.bisdiffinvoiceaddress,  
bos_ar_customer.bismultilocation,  
bos_ar_customer.szcategory_1,  
cat_1.szdescription as szcategory_1desc,  
cat_1.szpriceid as szcategory_1priceid,  
cat_1.szpromopriceid as szcategory_1promopriceid,  
bos_ar_customer.szcategory_2,  
cat_2.szdescription as szcategory_2desc,  
cat_2.szpriceid as szcategory_2priceid,  
cat_2.szpromopriceid as szcategory_2promopriceid,  
bos_ar_customer.szcategory_3,  
cat_3.szdescription as szcategory_3desc,  
cat_3.szpriceid as szcategory_3priceid,  
cat_3.szpromopriceid as szcategory_3promopriceid,  
bos_ar_customer.szcategory_4,  
cat_4.szdescription as szcategory_4desc,  
cat_4.szpriceid as szcategory_4priceid,  
cat_4.szpromopriceid as szcategory_4promopriceid,  
bos_ar_customer.szcategory_5,  
cat_5.szdescription as szcategory_5desc,  
cat_5.szpriceid as szcategory_5priceid,  
cat_5.szpromopriceid as szcategory_5promopriceid,  
bos_ar_customer.szcategory_6,  
cat_6.szdescription as szcategory_6desc,  
cat_6.szpriceid as szcategory_6priceid,  
cat_6.szpromopriceid as szcategory_6promopriceid,  
bos_ar_customer.szcategory_7,  
cat_7.szdescription as szcategory_7desc,  
cat_7.szpriceid as szcategory_7priceid,  
cat_7.szpromopriceid as szcategory_7promopriceid,  
bos_ar_customer.szcategory_8,  
cat_8.szdescription as szcategory_8desc,  
cat_8.szpriceid as szcategory_8priceid,  
cat_8.szpromopriceid as szcategory_8promopriceid,  
bos_ar_customer.szcategory_9,  
cat_9.szdescription as szcategory_9desc,  
cat_9.szpriceid as szcategory_9priceid,  
cat_9.szpromopriceid as szcategory_9promopriceid,  
bos_ar_customer.szcategory_10,  
cat_10.szdescription as szcategory_10desc,  
cat_10.szpriceid as szcategory_10priceid,  
cat_10.szpromopriceid as szcategory_10promopriceid,  
bos_ar_customer.bjoininvoice,  
bos_ar_customer.szstatus,  
bos_ar_customer.szreasonid,  


dlv_to.szdlvworkplaceid,  
inv_to.szinvworkplaceid,  
coll_to.szcollworkplaceid,  
sold_to.szsalworkplaceid,  

bos_ar_customer.szdistrchannelid,  
bos_sd_distrchannel.szname as szdistrchannelnm,  
bos_ar_customer.szdefaultccyid,  

bos_ar_customer.szstartdoc,  
bos_ar_customer.dtmstart,  
bos_ar_customer.szcontractdoc,  
bos_ar_customer.dtmcontract,  
bos_ar_customer.szrenewaldoc,  
bos_ar_customer.dtmrenewal,  
bos_ar_customer.szstopdoc,  
bos_ar_customer.dtmstop,  
bos_ar_customer.szsalesid,  
coalesce(bos_pi_employee.szname,'') as szsalesnm,  
bos_ar_customer.bicp,  
bos_ar_customer.szlastfcustbiid,  

--customer's collection info  
bsr.szrouteid as szcollrouteid,  
bsr.szdescription as szcollroutedescription,  
bsr.szopuserid as szcollectorid,  
collector.szname as szcollectornm,  

-- data status.  
bos_ar_customer.dtmlastupdated,  
bos_ar_customer.balreadytransferred,  
-- customer validation  
bos_ar_customer.bneedinvoicechange,  
bos_ar_customer.binvoicechangewithreceipt,  
bos_ar_customer.bhasspecialcollectionday,  
bos_ar_customer.bhasspecialcollectionday_sunday,  
bos_ar_customer.bhasspecialcollectionday_monday,  
bos_ar_customer.bhasspecialcollectionday_tuesday,  
bos_ar_customer.bhasspecialcollectionday_wednesday,  
bos_ar_customer.bhasspecialcollectionday_thursday,  
bos_ar_customer.bhasspecialcollectionday_friday,  
bos_ar_customer.bhasspecialcollectionday_saturday,   
bos_ar_customer.bpaymenttype_cash,  
bos_ar_customer.bpaymenttype_currentaccount,  
bos_ar_customer.bpaymenttype_transfer,  
bos_ar_customer.brequireddocuments_po,  
bos_ar_customer.brequireddocuments_receipt,  
bos_ar_customer.brequireddocuments_standardtaxinvoice,  
bos_ar_customer.brequireddocuments_materai,  
bos_ar_customer.brequireddocuments_receiptnote,  
bos_ar_customer.brequireddocuments_other,  
bos_ar_customer.szrequireddocuments_other,  
bos_ar_customer.szguarantee,
bos_ar_customer.szdeliverygroupid,
coalesce(deliverygroup.szdesc, '') as szdeliverygroupdesc_j,
bos_ar_customer.szbarcodeid    
from  
bos_ar_customer  
left join bos_pi_employee on bos_ar_customer.szsalesid = bos_pi_employee.szemployeeid  
left join bos_ar_customer as sold_to on sold_to.szcustid = bos_ar_customer.szsoldtocustid  
left join bos_ar_customer as dlv_to on dlv_to.szcustid = bos_ar_customer.szdelivertocustid  
left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_customer.szinvoicetocustid  
left join bos_ar_customer as coll_to on coll_to.szcustid = inv_to.szcollecttocustid  
left join bos_ar_category as cat_1 on cat_1.szcategoryid = bos_ar_customer.szcategory_1  
left join bos_ar_category as cat_2 on cat_2.szcategoryid = bos_ar_customer.szcategory_2  
left join bos_ar_category as cat_3 on cat_3.szcategoryid = bos_ar_customer.szcategory_3  
left join bos_ar_category as cat_4 on cat_4.szcategoryid = bos_ar_customer.szcategory_4  
left join bos_ar_category as cat_5 on cat_5.szcategoryid = bos_ar_customer.szcategory_5  
left join bos_ar_category as cat_6 on cat_6.szcategoryid = bos_ar_customer.szcategory_6  
left join bos_ar_category as cat_7 on cat_7.szcategoryid = bos_ar_customer.szcategory_7  
left join bos_ar_category as cat_8 on cat_8.szcategoryid = bos_ar_customer.szcategory_8  
left join bos_ar_category as cat_9 on cat_9.szcategoryid = bos_ar_customer.szcategory_9  
left join bos_ar_category as cat_10 on cat_10.szcategoryid = bos_ar_customer.szcategory_10  
left join bos_sd_distrchannel on bos_sd_distrchannel.szdistrchannelid = bos_ar_customer.szdistrchannelid  
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = coll_to.szcustid  
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid  
left join bos_pi_employee as collector on collector.szemployeeid = bsr.szopuserid  
left join bos_sd_deliverygroup as deliverygroup on deliverygroup.szworkplaceid = bos_ar_customer.szdlvworkplaceid and deliverygroup.szdeliverygroupid = bos_ar_customer.szdeliverygroupid
where  
bos_ar_customer.szcustid = p_szcustid;

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomer_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select  
bos_ar_customer.szname,  
bos_ar_customer.custszcontactperson,  
bos_ar_customer.custszroomno,  
bos_ar_customer.custszfloor,  
bos_ar_customer.custszbuilding,  
bos_ar_customer.custszaddress_1,  
bos_ar_customer.custszaddress_2,  
bos_ar_customer.custszdistrict,  
bos_ar_customer.custszcity,  
bos_ar_customer.custszzipcode,  
bos_ar_customer.custszstate,  
bos_ar_customer.custszcountry,  
bos_ar_customer.custszphoneno_1,  
bos_ar_customer.custszphoneno_2,  
bos_ar_customer.custszfaxno,  
bos_ar_customer.custszmobileno,  
bos_ar_customer.custszemail,  
bos_ar_customer.custszwebsite,  

bos_ar_customer.szlatitude,  
bos_ar_customer.szlongitude,  

bos_ar_customer.szfcallid,  
bos_ar_customer.bsoldtocust,  
bos_ar_customer.bdelivertocust,  
bos_ar_customer.binvoicetocust,  
bos_ar_customer.bcollecttocust,  
bos_ar_customer.szsoldtocustid,  
sold_to.szname as szsoldtocustnm,  
bos_ar_customer.szdelivertocustid,  
dlv_to.szname as szdelivertocustnm,  
bos_ar_customer.szinvoicetocustid,  
inv_to.szname as szinvoicetocustnm,  
bos_ar_customer.szcollecttocustid,  
coll_to.szname as szcollecttocustnm,  
bos_ar_customer.bisdiffdeliveryaddress,  
bos_ar_customer.bisdiffinvoiceaddress,  
bos_ar_customer.bismultilocation,  
bos_ar_customer.szcategory_1,  
cat_1.szdescription as szcategory_1desc,  
cat_1.szpriceid as szcategory_1priceid,  
cat_1.szpromopriceid as szcategory_1promopriceid,  
bos_ar_customer.szcategory_2,  
cat_2.szdescription as szcategory_2desc,  
cat_2.szpriceid as szcategory_2priceid,  
cat_2.szpromopriceid as szcategory_2promopriceid,  
bos_ar_customer.szcategory_3,  
cat_3.szdescription as szcategory_3desc,  
cat_3.szpriceid as szcategory_3priceid,  
cat_3.szpromopriceid as szcategory_3promopriceid,  
bos_ar_customer.szcategory_4,  
cat_4.szdescription as szcategory_4desc,  
cat_4.szpriceid as szcategory_4priceid,  
cat_4.szpromopriceid as szcategory_4promopriceid,  
bos_ar_customer.szcategory_5,  
cat_5.szdescription as szcategory_5desc,  
cat_5.szpriceid as szcategory_5priceid,  
cat_5.szpromopriceid as szcategory_5promopriceid,  
bos_ar_customer.szcategory_6,  
cat_6.szdescription as szcategory_6desc,  
cat_6.szpriceid as szcategory_6priceid,  
cat_6.szpromopriceid as szcategory_6promopriceid,  
bos_ar_customer.szcategory_7,  
cat_7.szdescription as szcategory_7desc,  
cat_7.szpriceid as szcategory_7priceid,  
cat_7.szpromopriceid as szcategory_7promopriceid,  
bos_ar_customer.szcategory_8,  
cat_8.szdescription as szcategory_8desc,  
cat_8.szpriceid as szcategory_8priceid,  
cat_8.szpromopriceid as szcategory_8promopriceid,  
bos_ar_customer.szcategory_9,  
cat_9.szdescription as szcategory_9desc,  
cat_9.szpriceid as szcategory_9priceid,  
cat_9.szpromopriceid as szcategory_9promopriceid,  
bos_ar_customer.szcategory_10,  
cat_10.szdescription as szcategory_10desc,  
cat_10.szpriceid as szcategory_10priceid,  
cat_10.szpromopriceid as szcategory_10promopriceid,  
bos_ar_customer.bjoininvoice,  
bos_ar_customer.szstatus,  
bos_ar_customer.szreasonid, 

dlv_to.szdlvworkplaceid,  
inv_to.szinvworkplaceid,  
coll_to.szcollworkplaceid,  
sold_to.szsalworkplaceid,  

bos_ar_customer.szdistrchannelid,  
bos_sd_distrchannel.szname as szdistrchannelnm,  
bos_ar_customer.szdefaultccyid,  

bos_ar_customer.szstartdoc,  
bos_ar_customer.dtmstart,  
bos_ar_customer.szcontractdoc,  
bos_ar_customer.dtmcontract,  
bos_ar_customer.szrenewaldoc,  
bos_ar_customer.dtmrenewal,  
bos_ar_customer.szstopdoc,  
bos_ar_customer.dtmstop,  
bos_ar_customer.szsalesid,  
coalesce(bos_pi_employee.szname,'') as szsalesnm,  
bos_ar_customer.bicp,  
bos_ar_customer.szlastfcustbiid,  

--customer's collection info  
bsr.szrouteid as szcollrouteid,  
bsr.szdescription as szcollroutedescription,  
bsr.szopuserid as szcollectorid,  
collector.szname as szcollectornm,  

-- data status.  
bos_ar_customer.dtmlastupdated,  
bos_ar_customer.balreadytransferred,  
-- customer validation  
bos_ar_customer.bneedinvoicechange,  
bos_ar_customer.binvoicechangewithreceipt,  
bos_ar_customer.bhasspecialcollectionday,  
bos_ar_customer.bhasspecialcollectionday_sunday,  
bos_ar_customer.bhasspecialcollectionday_monday,  
bos_ar_customer.bhasspecialcollectionday_tuesday,  
bos_ar_customer.bhasspecialcollectionday_wednesday,  
bos_ar_customer.bhasspecialcollectionday_thursday,  
bos_ar_customer.bhasspecialcollectionday_friday,  
bos_ar_customer.bhasspecialcollectionday_saturday,   
bos_ar_customer.bpaymenttype_cash,  
bos_ar_customer.bpaymenttype_currentaccount,  
bos_ar_customer.bpaymenttype_transfer,  
bos_ar_customer.brequireddocuments_po,  
bos_ar_customer.brequireddocuments_receipt,  
bos_ar_customer.brequireddocuments_standardtaxinvoice,  
bos_ar_customer.brequireddocuments_materai,  
bos_ar_customer.brequireddocuments_receiptnote,  
bos_ar_customer.brequireddocuments_other,  
bos_ar_customer.szrequireddocuments_other,  
bos_ar_customer.szguarantee,
bos_ar_customer.szdeliverygroupid,
coalesce(deliverygroup.szdesc, '') as szdeliverygroupdesc_j,
bos_ar_customer.szbarcodeid,
bos_ar_customer.szactivitystatus,
bos_ar_customer.dtmlastchangeactivitystatus    
from  
bos_ar_customer  
left join bos_pi_employee on bos_ar_customer.szsalesid = bos_pi_employee.szemployeeid  
left join bos_ar_customer as sold_to on sold_to.szcustid = bos_ar_customer.szsoldtocustid  
left join bos_ar_customer as dlv_to on dlv_to.szcustid = bos_ar_customer.szdelivertocustid  
left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_customer.szinvoicetocustid  
left join bos_ar_customer as coll_to on coll_to.szcustid = inv_to.szcollecttocustid  
left join bos_ar_category as cat_1 on cat_1.szcategoryid = bos_ar_customer.szcategory_1  
left join bos_ar_category as cat_2 on cat_2.szcategoryid = bos_ar_customer.szcategory_2  
left join bos_ar_category as cat_3 on cat_3.szcategoryid = bos_ar_customer.szcategory_3  
left join bos_ar_category as cat_4 on cat_4.szcategoryid = bos_ar_customer.szcategory_4  
left join bos_ar_category as cat_5 on cat_5.szcategoryid = bos_ar_customer.szcategory_5  
left join bos_ar_category as cat_6 on cat_6.szcategoryid = bos_ar_customer.szcategory_6  
left join bos_ar_category as cat_7 on cat_7.szcategoryid = bos_ar_customer.szcategory_7  
left join bos_ar_category as cat_8 on cat_8.szcategoryid = bos_ar_customer.szcategory_8  
left join bos_ar_category as cat_9 on cat_9.szcategoryid = bos_ar_customer.szcategory_9  
left join bos_ar_category as cat_10 on cat_10.szcategoryid = bos_ar_customer.szcategory_10  
left join bos_sd_distrchannel on bos_sd_distrchannel.szdistrchannelid = bos_ar_customer.szdistrchannelid  
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = coll_to.szcustid  
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid  
left join bos_pi_employee as collector on collector.szemployeeid = bsr.szopuserid  
left join bos_sd_deliverygroup as deliverygroup on deliverygroup.szworkplaceid = bos_ar_customer.szdlvworkplaceid and deliverygroup.szdeliverygroupid = bos_ar_customer.szdeliverygroupid
where  
bos_ar_customer.szcustid = p_szcustid;

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomerdlvinfo(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_customer.szname,
bos_ar_customer.bdelivertocust,
bos_ar_customer.szdelivertocustid,
bos_ar_customer.szstatus,
bos_ar_customer.bisdiffdeliveryaddress,
bos_ar_customer.bismultilocation,
bos_ar_customer.szdlvworkplaceid,

bos_ar_customer.szinvoicetocustid,

dlvaddr.szcustdeliverynm as dlv_szname,

dlvcustomer.bisdiffdeliveryaddress as dlv_bisdiffdeliveryaddress,
dlvcustomer.bismultilocation as dlv_bismultilocation,
dlvcustomer.szdlvworkplaceid as dlv_szdlvworkplaceid,

dlvaddr.locationszaddress_1 as szcustdeliveryaddress_1_j,
dlvcustomer.szdistrchannelid as szcustdeliverydistrchannelid_j,
dc.szname as szcustdeliverydistrchannelnm_j,

bacs.szpaymenttermid,

bacs.deccreditlimit as deccreditlimit_j,
invcustomer.szdefaultccyid as szdefaultccyid_j,

bacs.intmaxcountopeninv as intmaxcountopeninv_j

from
bos_ar_customer 
left join bos_ar_customer as dlvcustomer on bos_ar_customer.szdelivertocustid = dlvcustomer.szcustid
left join bos_ar_custlocation as dlvaddr on (dlvaddr.szcustid = dlvcustomer.szcustid and dlvaddr.btlocid = 0)
left join bos_ar_customer as invcustomer on invcustomer.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custsales as bacs on bacs.szcustid = invcustomer.szcustid
left join bos_sd_distrchannel as dc on dc.szdistrchannelid = dlvcustomer.szdistrchannelid

where
bos_ar_customer.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomerdlvinfo_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_customer.szname,
bos_ar_customer.bdelivertocust,
bos_ar_customer.szdelivertocustid,
bos_ar_customer.szstatus,
bos_ar_customer.bisdiffdeliveryaddress,
bos_ar_customer.bismultilocation,
bos_ar_customer.szdlvworkplaceid,

bos_ar_customer.szinvoicetocustid,

dlvaddr.szcustdeliverynm as dlv_szname,

dlvcustomer.bisdiffdeliveryaddress as dlv_bisdiffdeliveryaddress,
dlvcustomer.bismultilocation as dlv_bismultilocation,
dlvcustomer.szdlvworkplaceid as dlv_szdlvworkplaceid,

dlvaddr.locationszaddress_1 as szcustdeliveryaddress_1_j,
dlvcustomer.szdistrchannelid as szcustdeliverydistrchannelid_j,
dc.szname as szcustdeliverydistrchannelnm_j,

bacs.szpaymenttermid,

bacs.deccreditlimit as deccreditlimit_j,
invcustomer.szdefaultccyid as szdefaultccyid_j,

bacs.intmaxcountopeninv as intmaxcountopeninv_j

from
bos_ar_customer 
left join bos_ar_customer as dlvcustomer on bos_ar_customer.szdelivertocustid = dlvcustomer.szcustid
left join bos_ar_custlocation as dlvaddr on (dlvaddr.szcustid = dlvcustomer.szcustid and dlvaddr.btlocid = 0)
left join bos_ar_customer as invcustomer on invcustomer.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custsales as bacs on bacs.szcustid = invcustomer.szcustid
left join bos_sd_distrchannel as dc on dc.szdistrchannelid = dlvcustomer.szdistrchannelid

where
bos_ar_customer.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomerinvinfo(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
invaddr.szcustinvoicenm as szcustinvname_j,

bos_ar_customer.binvoicetocust,
bos_ar_customer.szinvoicetocustid,

invcust.bjoininvoice as bjoininvoice_j,
invcust.szinvworkplaceid as szinvworkplaceid_j,

invcustsales.deccreditlimit as deccreditlimit_j,
invcust.szdefaultccyid as szdefaultccyid_j,

invcustsales.szpaymenttermid as szcustinvcustsalespaymenttermid_j,

collcust.szcollworkplaceid as szcollworkplaceid_j,
collwp.szname as szcollworkplacenm_j,

bos_sd_route.szopuserid as szdefaultroutecollid_j,

invcustsales.szinvoiceprocessingid,
bos_sd_invoiceprocessing.szpriceorderid as szinvprocpriceorderid_j,
bos_sd_invoiceprocessing.szpromopriceorderid as szinvprocpromopriceorderid_j,
bos_sd_invoiceprocessing.szpriceid as szinvprocpriceid_j,
bos_sd_invoiceprocessing.szpromopriceid as szinvprocpromopriceid_j

from
bos_ar_customer
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_ar_custinvoice as invaddr on invaddr.szcustid = invcust.szcustid
left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid
left join bos_sd_custcollroutine on bos_sd_custcollroutine.szcustid = collcust.szcustid
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custcollroutine.szdefaultrouteid
left join bos_gl_workplace as collwp on collwp.szworkplaceid = collcust.szcollworkplaceid
left join bos_ar_custsales as invcustsales on invcustsales.szcustid = invcust.szcustid
left join bos_sd_invoiceprocessing on bos_sd_invoiceprocessing.szinvoiceprocessingid = invcustsales.szinvoiceprocessingid

where
bos_ar_customer.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomerproductitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_customerproductitem.szproductid

from 
bos_ar_customerproductitem
where 
bos_ar_customerproductitem.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomersalinfo(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_customer.szname,
bos_ar_customer.bsoldtocust,
bos_ar_customer.szsoldtocustid,
bos_ar_customer.szsalworkplaceid,
salcustomer.szname as sal_szname,
salcustomer.szsalworkplaceid as sal_szsalworkplaceid

from 
bos_ar_customer left join bos_ar_customer as salcustomer on bos_ar_customer.szsoldtocustid = salcustomer.szcustidbos_ar_customer left join bos_ar_customer as salcustomer on bos_ar_customer.szsoldtocustid = salcustomer.szcustid
where 
bos_ar_customer.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getcustomerstatus(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szstatus

from 
bos_ar_customer
where 
 szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_getlistofcustomer()
returns void as
$body$
begin
select 
szcustid, szname

from 
bos_ar_customer;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_iscustomerexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_ar_customer
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_lockcustomer(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_customer
set 
bsoldtocust=bsoldtocust
where 
szcustid=p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_updatecustomer(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szfcallid bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_bisdiffdeliveryaddress bit,
p_bisdiffinvoiceaddress bit,
p_bismultilocation bit,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_bjoininvoice bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szdlvworkplaceid bos_dt_szid,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_szlastfcustbiid bos_dt_szid,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_customer
set 
szname=p_szname,
szfcallid = p_szfcallid,
custszcontactperson=p_custszcontactperson,
custszroomno=p_custszroomno,
custszfloor=p_custszfloor,
custszbuilding=p_custszbuilding,
custszaddress_1=p_custszaddress_1,
custszaddress_2=p_custszaddress_2,
custszdistrict=p_custszdistrict,
custszcity=p_custszcity,
custszzipcode=p_custszzipcode,
custszstate=p_custszstate,
custszcountry=p_custszcountry,
custszphoneno_1=p_custszphoneno_1,
custszphoneno_2=p_custszphoneno_2,
custszfaxno=p_custszfaxno,
custszmobileno=p_custszmobileno,
custszemail=p_custszemail,
custszwebsite=p_custszwebsite,
szlatitude=p_szlatitude,
szlongitude=p_szlongitude,
bsoldtocust=p_bsoldtocust,
bdelivertocust=p_bdelivertocust,
binvoicetocust=p_binvoicetocust,
bcollecttocust=p_bcollecttocust,
szsoldtocustid=p_szsoldtocustid,
szdelivertocustid=p_szdelivertocustid,
szinvoicetocustid=p_szinvoicetocustid,
szcollecttocustid = p_szcollecttocustid,
bisdiffdeliveryaddress=p_bisdiffdeliveryaddress,
bisdiffinvoiceaddress=p_bisdiffinvoiceaddress,
bismultilocation=p_bismultilocation,
szcategory_1=p_szcategory_1,
szcategory_2=p_szcategory_2,
szcategory_3=p_szcategory_3,
szcategory_4=p_szcategory_4,
szcategory_5=p_szcategory_5,
szcategory_6=p_szcategory_6,
szcategory_7=p_szcategory_7,
szcategory_8=p_szcategory_8,
szcategory_9=p_szcategory_9,
szcategory_10=p_szcategory_10,
bjoininvoice=p_bjoininvoice,
szstatus = p_szstatus,
szreasonid = p_szreasonid,

szdlvworkplaceid = p_szdlvworkplaceid,
szinvworkplaceid =  p_szinvworkplaceid,
szcollworkplaceid = p_szcollworkplaceid,
szsalworkplaceid = p_szsalworkplaceid,
szdistrchannelid = p_szdistrchannelid,
szdefaultccyid = p_szdefaultccyid,
szstartdoc = p_szstartdoc ,
dtmstart = p_dtmstart ,
szcontractdoc = p_szcontractdoc ,
dtmcontract = p_dtmcontract ,
szrenewaldoc = p_szrenewaldoc ,
dtmrenewal = p_dtmrenewal ,
szstopdoc = p_szstopdoc ,
dtmstop = p_dtmstop ,
szsalesid = p_szsalesid ,
bicp = p_bicp,
szlastfcustbiid = p_szlastfcustbiid,
-- customer validation
bneedinvoicechange = p_bneedinvoicechange,
binvoicechangewithreceipt = p_binvoicechangewithreceipt,
bhasspecialcollectionday = p_bhasspecialcollectionday,
bhasspecialcollectionday_sunday = p_bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday = p_bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday = p_bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday = p_bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday = p_bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday = p_bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday = p_bhasspecialcollectionday_saturday,
bpaymenttype_cash = p_bpaymenttype_cash,
bpaymenttype_currentaccount = p_bpaymenttype_currentaccount,
bpaymenttype_transfer = p_bpaymenttype_transfer,
brequireddocuments_po = p_brequireddocuments_po,
brequireddocuments_receipt = p_brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice = p_brequireddocuments_standardtaxinvoice,
brequireddocuments_materai = p_brequireddocuments_materai,
brequireddocuments_receiptnote = p_brequireddocuments_receiptnote,
brequireddocuments_other = p_brequireddocuments_other,
szrequireddocuments_other = p_szrequireddocuments_other,
szguarantee = p_szguarantee,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid
where 
szcustid=p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_updatecustomer_013(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szfcallid bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_bisdiffdeliveryaddress bit,
p_bisdiffinvoiceaddress bit,
p_bismultilocation bit,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_bjoininvoice bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szdlvworkplaceid bos_dt_szid,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_szlastfcustbiid bos_dt_szid,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid,
p_szactivitystatus bos_dt_szid,
p_dtmlastchangeactivitystatus timestamp)
returns void as
$body$
begin
update bos_ar_customer
set 
szname=p_szname,
szfcallid = p_szfcallid,
custszcontactperson=p_custszcontactperson,
custszroomno=p_custszroomno,
custszfloor=p_custszfloor,
custszbuilding=p_custszbuilding,
custszaddress_1=p_custszaddress_1,
custszaddress_2=p_custszaddress_2,
custszdistrict=p_custszdistrict,
custszcity=p_custszcity,
custszzipcode=p_custszzipcode,
custszstate=p_custszstate,
custszcountry=p_custszcountry,
custszphoneno_1=p_custszphoneno_1,
custszphoneno_2=p_custszphoneno_2,
custszfaxno=p_custszfaxno,
custszmobileno=p_custszmobileno,
custszemail=p_custszemail,
custszwebsite=p_custszwebsite,
szlatitude=p_szlatitude,
szlongitude=p_szlongitude,
bsoldtocust=p_bsoldtocust,
bdelivertocust=p_bdelivertocust,
binvoicetocust=p_binvoicetocust,
bcollecttocust=p_bcollecttocust,
szsoldtocustid=p_szsoldtocustid,
szdelivertocustid=p_szdelivertocustid,
szinvoicetocustid=p_szinvoicetocustid,
szcollecttocustid = p_szcollecttocustid,
bisdiffdeliveryaddress=p_bisdiffdeliveryaddress,
bisdiffinvoiceaddress=p_bisdiffinvoiceaddress,
bismultilocation=p_bismultilocation,
szcategory_1=p_szcategory_1,
szcategory_2=p_szcategory_2,
szcategory_3=p_szcategory_3,
szcategory_4=p_szcategory_4,
szcategory_5=p_szcategory_5,
szcategory_6=p_szcategory_6,
szcategory_7=p_szcategory_7,
szcategory_8=p_szcategory_8,
szcategory_9=p_szcategory_9,
szcategory_10=p_szcategory_10,
bjoininvoice=p_bjoininvoice,
szstatus = p_szstatus,
szreasonid = p_szreasonid,

szdlvworkplaceid = p_szdlvworkplaceid,
szinvworkplaceid =  p_szinvworkplaceid,
szcollworkplaceid = p_szcollworkplaceid,
szsalworkplaceid = p_szsalworkplaceid,
szdistrchannelid = p_szdistrchannelid,
szdefaultccyid = p_szdefaultccyid,
szstartdoc = p_szstartdoc ,
dtmstart = p_dtmstart ,
szcontractdoc = p_szcontractdoc ,
dtmcontract = p_dtmcontract ,
szrenewaldoc = p_szrenewaldoc ,
dtmrenewal = p_dtmrenewal ,
szstopdoc = p_szstopdoc ,
dtmstop = p_dtmstop ,
szsalesid = p_szsalesid ,
bicp = p_bicp,
szlastfcustbiid = p_szlastfcustbiid,
-- customer validation
bneedinvoicechange = p_bneedinvoicechange,
binvoicechangewithreceipt = p_binvoicechangewithreceipt,
bhasspecialcollectionday = p_bhasspecialcollectionday,
bhasspecialcollectionday_sunday = p_bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday = p_bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday = p_bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday = p_bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday = p_bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday = p_bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday = p_bhasspecialcollectionday_saturday,
bpaymenttype_cash = p_bpaymenttype_cash,
bpaymenttype_currentaccount = p_bpaymenttype_currentaccount,
bpaymenttype_transfer = p_bpaymenttype_transfer,
brequireddocuments_po = p_brequireddocuments_po,
brequireddocuments_receipt = p_brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice = p_brequireddocuments_standardtaxinvoice,
brequireddocuments_materai = p_brequireddocuments_materai,
brequireddocuments_receiptnote = p_brequireddocuments_receiptnote,
brequireddocuments_other = p_brequireddocuments_other,
szrequireddocuments_other = p_szrequireddocuments_other,
szguarantee = p_szguarantee,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid,
szactivitystatus = p_szactivitystatus,
dtmlastchangeactivitystatus = p_dtmlastchangeactivitystatus
where 
szcustid=p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_updatecustomerstatus(
p_szcustid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_customer
set 
szstatus = p_szstatus,
szreasonid = p_szreasonid
where 
szcustid=p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_customer_updateonlycustomeraddress(
p_szcustid bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szname,
p_custszaddress_2 bos_dt_szname,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_ar_customer
set 
custszcontactperson=p_custszcontactperson,
custszroomno=p_custszroomno,
custszfloor=p_custszfloor,
custszbuilding=p_custszbuilding,
custszaddress_1=p_custszaddress_1,
custszaddress_2=p_custszaddress_2,
custszdistrict=p_custszdistrict,
custszcity=p_custszcity,
custszzipcode=p_custszzipcode,
custszstate=p_custszstate,
custszcountry=p_custszcountry,
custszphoneno_1=p_custszphoneno_1,
custszphoneno_2=p_custszphoneno_2,
custszfaxno=p_custszfaxno,
custszmobileno=p_custszmobileno,
custszemail=p_custszemail,
custszwebsite=p_custszwebsite


where 
szcustid=p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_createcustprepayment(
p_szcustid bos_dt_szid,
p_decpayment bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custprepayment
(
szcustid,
decpayment,
szccyid,
dtmlastupdated
)
values
(
p_szcustid,
p_decpayment,
p_szccyid,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_createcustprepayment_014(
p_szcustid bos_dt_szid,
p_decpayment bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custprepayment
(
szcustid,
decpayment,
szccyid,
dtmlastupdated
)
values
(
p_szcustid,
p_decpayment,
p_szccyid,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_createcustprepaymenthistory(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decprepayment bos_dt_decamount,
p_dtmpayment timestamp,
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_ar_custprepaymenthistory
(
szcustid,
szccyid,
decprepayment,
dtmpayment,
sztrnid,
szdocid,
szurl,
szdescription
)
values
(
p_szcustid,
p_szccyid,
p_decprepayment,
p_dtmpayment,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_createcustprepaymenthistory_013(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decprepayment bos_dt_decamount,
p_dtmpayment timestamp,
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_ar_custprepaymenthistory
(
szcustid,
szccyid,
decprepayment,
dtmpayment,
sztrnid,
szdocid,
szurl,
szdescription
)
values
(
p_szcustid,
p_szccyid,
p_decprepayment,
p_dtmpayment,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_deletecustprepayment(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
delete from
bos_ar_custprepayment
where
szcustid = p_szcustid and szccyid = p_szccyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_getcustprepayment(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin

select
bos_ar_custprepayment.szcustid,
bos_ar_customer.szname as szcustnm_j,

bos_ar_custprepayment.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_cu_currency.szsymbol as szccysymbol_j,

decpayment,
bos_ar_custprepayment.dtmlastupdated

from
bos_ar_custprepayment
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_custprepayment.szccyid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custprepayment.szcustid

where
bos_ar_custprepayment.szcustid = p_szcustid and bos_ar_custprepayment.szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_getcustprepayment_014(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin

select
bos_ar_custprepayment.szcustid,
bos_ar_customer.szname as szcustnm_j,

bos_ar_custprepayment.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_cu_currency.szsymbol as szccysymbol_j,

decpayment,
bos_ar_custprepayment.dtmlastupdated

from
bos_ar_custprepayment
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_custprepayment.szccyid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custprepayment.szcustid

where
bos_ar_custprepayment.szcustid = p_szcustid and bos_ar_custprepayment.szccyid = p_szccyid;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_getlistofcustprepayment()
returns void as
$body$
begin
select 
szcustid,
szccyid

from 
bos_ar_custprepayment;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_getlistofcustprepaymentdata(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_custprepayment.szcustid,
bos_ar_customer.szname as szcustnm_j,

bos_ar_custprepayment.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_cu_currency.szsymbol as szccysymbol_j,

decpayment

from
bos_ar_custprepayment
left join bos_cu_currency on bos_ar_custprepayment.szccyid = bos_cu_currency.szccyid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custprepayment.szcustid

where
bos_ar_custprepayment.szcustid like p_szcustid

order by
bos_ar_custprepayment.szcustid, bos_ar_custprepayment.szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_getlistofcustprepaymenthistory(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_dtmstartperiod timestamp,
p_dtmendperiod timestamp)
returns void as
$body$
begin

select	
bos_ar_custprepaymenthistory.szcustid,
bos_ar_customer.szname,
bos_ar_custprepaymenthistory.dtmpayment,
bos_ar_custprepaymenthistory.decprepayment,
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_ar_custprepaymenthistory.sztrnid,
bos_ar_custprepaymenthistory.szdocid,
bos_ar_custprepaymenthistory.szurl,
bos_ar_custprepaymenthistory.szdescription

from
bos_ar_custprepaymenthistory
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custprepaymenthistory.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_custprepaymenthistory.szccyid

where
bos_ar_custprepaymenthistory.szcustid like p_szcustid and
bos_ar_custprepaymenthistory.szccyid = p_szccyid and
bos_ar_custprepaymenthistory.dtmpayment >= p_dtmstartperiod and	
bos_ar_custprepaymenthistory.dtmpayment < interval '1 day' + p_dtmendperiod
order by
bos_ar_custprepaymenthistory.dtmpayment;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_incrcustprepayment(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decpayment bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_custprepayment
set 
decpayment = decpayment + p_decpayment

where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_iscustprepaymentexist(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szcustid

from 
bos_ar_custprepayment
where 
szcustid = p_szcustid and szccyid = p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_lockcustprepayment(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_ar_custprepayment
set 
decpayment = decpayment
where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custprepayment_updatecustprepayment(
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decpayment bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_custprepayment
set 
decpayment = p_decpayment

where 
szcustid = p_szcustid and szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_createcustproductdeposit(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custproductdeposit
(
szcustid,
szproductid,
decqty,
dtmlastupdated
)
values
(
p_szcustid,
p_szproductid,
p_decqty,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_createcustproductdeposit_014(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custproductdeposit
(
szcustid,
szproductid,
decqty,
dtmlastupdated
)
values
(
p_szcustid,
p_szproductid,
p_decqty,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_createcustproductdeposithistory(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmtransaction timestamp,
p_decqty bos_dt_decamount,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_ar_custproductdeposithistory
(
	szcustid,
	szproductid,
	dtmtransaction,
	decqty,
	sztrnid,
	szdocid,
	szurl,
	szdescription
)
values
(
p_szcustid,
p_szproductid,
p_dtmtransaction,
p_decqty,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_createcustproductdeposithistory_013(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmtransaction timestamp,
p_decqty bos_dt_decamount,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_ar_custproductdeposithistory
(
	szcustid,
	szproductid,
	dtmtransaction,
	decqty,
	sztrnid,
	szdocid,
	szurl,
	szdescription
)
values
(
p_szcustid,
p_szproductid,
p_dtmtransaction,
p_decqty,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_deletecustproductdeposit(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_ar_custproductdeposit
where
szcustid = p_szcustid and szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_getcustproductdeposit(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select
bos_ar_custproductdeposit.szcustid,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_ar_custproductdeposit.szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
bos_ar_custproductdeposit.decqty,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_ar_custproductdeposit.dtmlastupdated

from  bos_ar_custproductdeposit

left join bos_inv_product on 
bos_ar_custproductdeposit.szproductid = bos_inv_product.szproductid
left join bos_ar_customer on 
bos_ar_custproductdeposit.szcustid = bos_ar_customer.szcustid


where
bos_ar_custproductdeposit.szcustid = p_szcustid and
bos_ar_custproductdeposit.szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_getcustproductdeposit_014(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select
bos_ar_custproductdeposit.szcustid,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_ar_custproductdeposit.szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
bos_ar_custproductdeposit.decqty,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_ar_custproductdeposit.dtmlastupdated

from  bos_ar_custproductdeposit

left join bos_inv_product on 
bos_ar_custproductdeposit.szproductid = bos_inv_product.szproductid
left join bos_ar_customer on 
bos_ar_custproductdeposit.szcustid = bos_ar_customer.szcustid


where
bos_ar_custproductdeposit.szcustid = p_szcustid and
bos_ar_custproductdeposit.szproductid = p_szproductid;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_getlistofcustproductdeposit()
returns void as
$body$
begin
select 
szcustid,
szproductid

from 
bos_ar_custproductdeposit;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_getlistofcustproductdepositdata(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select
bos_ar_custproductdeposit.szcustid,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_ar_custproductdeposit.szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
bos_ar_custproductdeposit.decqty,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szqtyformat as szproductqtyformat

from
bos_ar_custproductdeposit
left join bos_inv_product on bos_ar_custproductdeposit.szproductid = bos_inv_product.szproductid
left join bos_ar_customer on bos_ar_custproductdeposit.szcustid = bos_ar_customer.szcustid


where
bos_ar_custproductdeposit.szcustid like p_szcustid
and bos_ar_custproductdeposit.szproductid like p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_getlistofcustproductdeposithistorydata(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmstartdate timestamp,
p_dtmenddate timestamp)
returns void as
$body$
begin

select 
bos_ar_custproductdeposithistory.szcustid,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_ar_custproductdeposithistory.szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
bos_ar_custproductdeposithistory.dtmtransaction,
bos_inv_product.szqtyformat as szproductqtyformat,

bos_ar_custproductdeposithistory.decqty,
bos_inv_product.szuomid as szproductuomid_j,

bos_ar_custproductdeposithistory.sztrnid,
bos_ar_custproductdeposithistory.szdocid,
bos_ar_custproductdeposithistory.szurl,
bos_ar_custproductdeposithistory.szdescription


from
bos_ar_custproductdeposithistory
left join bos_inv_product on bos_ar_custproductdeposithistory.szproductid = bos_inv_product.szproductid
left join bos_ar_customer on bos_ar_custproductdeposithistory.szcustid = bos_ar_customer.szcustid
left join bos_ar_custproductdeposit on bos_ar_custproductdeposit.szcustid = bos_ar_custproductdeposithistory.szcustid
and bos_ar_custproductdeposit.szproductid = bos_ar_custproductdeposithistory.szproductid

where
bos_ar_custproductdeposithistory.szcustid like p_szcustid and
--we don't want to return mix products as they will have mix uoms.
bos_ar_custproductdeposithistory.szproductid = p_szproductid and
(bos_ar_custproductdeposithistory.dtmtransaction >= p_dtmstartdate and
bos_ar_custproductdeposithistory.dtmtransaction < interval '1 day' + p_dtmenddate )

order by
bos_ar_custproductdeposithistory.dtmtransaction;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_iscustproductdepositexist(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_custproductdeposit.szcustid


from 
bos_ar_custproductdeposit

where 
szcustid like p_szcustid and szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_lockcustproductdeposit(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_custproductdeposit
set 
decqty = decqty

where 
szcustid = p_szcustid and szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custproductdeposit_updatecustproductdeposit(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_ar_custproductdeposit
set 
decqty = p_decqty

where 
szcustid = p_szcustid and
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_createcustsales(
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprocessingid bos_dt_szid,
p_binvoicenote bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bnovatapplied bos_dt_bboolean,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custsales
(
szcustid ,
ballowtocredit,
deccreditlimit,
szpaymenttermid,
szpriceid,
szpriceorderid,
szinvoiceprocessingid,
binvoicenote,
szpromopriceid,
szpromopriceorderid,
bnovatapplied,
bcheckmaxdropsize,
intmaxcountopeninv,
bcheckmindropsize,
dtmlastupdated
)
values
(
p_szcustid,
p_ballowtocredit,
p_deccreditlimit,
p_szpaymenttermid,
p_szpriceid,
p_szpriceorderid,
p_szinvoiceprocessingid,
p_binvoicenote,
p_szpromopriceid,
p_szpromopriceorderid,
p_bnovatapplied,
p_bcheckmaxdropsize,
p_intmaxcountopeninv,
p_bcheckmindropsize,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_createcustsales_013(
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprocessingid bos_dt_szid,
p_binvoicenote bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bnovatapplied bos_dt_bboolean,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_ar_custsales
(
szcustid ,
ballowtocredit,
deccreditlimit,
szpaymenttermid,
szpriceid,
szpriceorderid,
szinvoiceprocessingid,
binvoicenote,
szpromopriceid,
szpromopriceorderid,
bnovatapplied,
bcheckmaxdropsize,
intmaxcountopeninv,
bcheckmindropsize,
dtmlastupdated
)
values
(
p_szcustid,
p_ballowtocredit,
p_deccreditlimit,
p_szpaymenttermid,
p_szpriceid,
p_szpriceorderid,
p_szinvoiceprocessingid,
p_binvoicenote,
p_szpromopriceid,
p_szpromopriceorderid,
p_bnovatapplied,
p_bcheckmaxdropsize,
p_intmaxcountopeninv,
p_bcheckmindropsize,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_deletecustsales(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from bos_ar_custsales
where 
	szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_getcustsales(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_customer.szname as szcustnm_j,
bos_ar_customer.szdlvworkplaceid as szcustdlvworkplaceid_j,

bos_ar_custsales.ballowtocredit,
bos_ar_custsales.deccreditlimit,
bos_ar_customer.szdefaultccyid as szdefaultccyid_j,
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,
bos_ar_custsales.szpaymenttermid, 

bos_ar_custsales.szpriceid,
bos_ar_custsales.szpriceorderid,

bos_ar_custsales.szinvoiceprocessingid,
bos_sd_invoiceprocessing.szdescription as szinvoiceprocessingdescr_j,
bos_sd_invoiceprocessing.bimmediateinvoice as binvoiceprocessingimmediateinvoice_j,

bos_ar_custsales.binvoicenote,

bos_ar_custsales.szpromopriceid,
bos_ar_custsales.szpromopriceorderid,

bos_ar_custsales.bnovatapplied,

tbl_cat1.szcategoryid  as szcustcategoryid_1_j,
tbl_cat1.szpriceid  as szcustcategorypriceid_1_j,	
tbl_cat1.szpromopriceid  as szcustcategorypromopriceid_1_j,	
tbl_cat1.szpriceorderid  as szcustcategorypriceorderid_1_j,	
tbl_cat1.szpromopriceorderid  as szcustcategorypromopriceorderid_1_j,	

tbl_cat2.szcategoryid  as szcustcategoryid_2_j,
tbl_cat2.szpriceid  as szcustcategorypriceid_2_j,	
tbl_cat2.szpromopriceid  as szcustcategorypromopriceid_2_j,	
tbl_cat2.szpriceorderid  as szcustcategorypriceorderid_2_j,	
tbl_cat2.szpromopriceorderid  as szcustcategorypromopriceorderid_2_j,	

tbl_cat3.szcategoryid  as szcustcategoryid_3_j,
tbl_cat3.szpriceid  as szcustcategorypriceid_3_j,	
tbl_cat3.szpromopriceid  as szcustcategorypromopriceid_3_j,	
tbl_cat3.szpriceorderid  as szcustcategorypriceorderid_3_j,	
tbl_cat3.szpromopriceorderid  as szcustcategorypromopriceorderid_3_j,	

tbl_cat4.szcategoryid  as szcustcategoryid_4_j,
tbl_cat4.szpriceid  as szcustcategorypriceid_4_j,	
tbl_cat4.szpromopriceid  as szcustcategorypromopriceid_4_j,	
tbl_cat4.szpriceorderid  as szcustcategorypriceorderid_4_j,	
tbl_cat4.szpromopriceorderid  as szcustcategorypromopriceorderid_4_j,	

tbl_cat5.szcategoryid  as szcustcategoryid_5_j,
tbl_cat5.szpriceid  as szcustcategorypriceid_5_j,	
tbl_cat5.szpromopriceid  as szcustcategorypromopriceid_5_j,
tbl_cat5.szpriceorderid  as szcustcategorypriceorderid_5_j,	
tbl_cat5.szpromopriceorderid  as szcustcategorypromopriceorderid_5_j,

tbl_cat6.szcategoryid  as szcustcategoryid_6_j,
tbl_cat6.szpriceid  as szcustcategorypriceid_6_j,	
tbl_cat6.szpromopriceid  as szcustcategorypromopriceid_6_j,
tbl_cat6.szpriceorderid  as szcustcategorypriceorderid_6_j,	
tbl_cat6.szpromopriceorderid  as szcustcategorypromopriceorderid_6_j,

tbl_cat7.szcategoryid  as szcustcategoryid_7_j,
tbl_cat7.szpriceid  as szcustcategorypriceid_7_j,	
tbl_cat7.szpromopriceid  as szcustcategorypromopriceid_7_j,
tbl_cat7.szpriceorderid  as szcustcategorypriceorderid_7_j,	
tbl_cat7.szpromopriceorderid  as szcustcategorypromopriceorderid_7_j,

tbl_cat8.szcategoryid  as szcustcategoryid_8_j,
tbl_cat8.szpriceid  as szcustcategorypriceid_8_j,	
tbl_cat8.szpromopriceid  as szcustcategorypromopriceid_8_j,
tbl_cat8.szpriceorderid  as szcustcategorypriceorderid_8_j,	
tbl_cat8.szpromopriceorderid  as szcustcategorypromopriceorderid_8_j,

tbl_cat9.szcategoryid  as szcustcategoryid_9_j,
tbl_cat9.szpriceid  as szcustcategorypriceid_9_j,	
tbl_cat9.szpromopriceid  as szcustcategorypromopriceid_9_j,
tbl_cat9.szpriceorderid  as szcustcategorypriceorderid_9_j,	
tbl_cat9.szpromopriceorderid  as szcustcategorypromopriceorderid_9_j,

tbl_cat10.szcategoryid  as szcustcategoryid_10_j,
tbl_cat10.szpriceid  as szcustcategorypriceid_10_j,	
tbl_cat10.szpromopriceid  as szcustcategorypromopriceid_10_j,
tbl_cat10.szpriceorderid  as szcustcategorypriceorderid_10_j,	
tbl_cat10.szpromopriceorderid  as szcustcategorypromopriceorderid_10_j,

cs_inv.szcustid as szcustsalesofinvcustid_j,

bos_ar_customer.szdistrchannelid as szcustdistrchannelid_j,

bos_ar_custsales.bcheckmaxdropsize,
bos_ar_custsales.intmaxcountopeninv,
bos_ar_custsales.bcheckmindropsize,
bos_ar_custsales.dtmlastupdated

from
bos_ar_custsales
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custsales.szcustid
left join bos_sd_invoiceprocessing on bos_sd_invoiceprocessing.szinvoiceprocessingid = bos_ar_custsales.szinvoiceprocessingid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_customer.szdefaultccyid
left join bos_ar_category as tbl_cat1 on tbl_cat1.szcategoryid = bos_ar_customer.szcategory_1
left join bos_ar_category as tbl_cat2 on tbl_cat2.szcategoryid = bos_ar_customer.szcategory_2
left join bos_ar_category as tbl_cat3 on tbl_cat3.szcategoryid = bos_ar_customer.szcategory_3
left join bos_ar_category as tbl_cat4 on tbl_cat4.szcategoryid = bos_ar_customer.szcategory_4
left join bos_ar_category as tbl_cat5 on tbl_cat5.szcategoryid = bos_ar_customer.szcategory_5
left join bos_ar_category as tbl_cat6 on tbl_cat6.szcategoryid = bos_ar_customer.szcategory_6
left join bos_ar_category as tbl_cat7 on tbl_cat7.szcategoryid = bos_ar_customer.szcategory_7
left join bos_ar_category as tbl_cat8 on tbl_cat8.szcategoryid = bos_ar_customer.szcategory_8
left join bos_ar_category as tbl_cat9 on tbl_cat9.szcategoryid = bos_ar_customer.szcategory_9
left join bos_ar_category as tbl_cat10 on tbl_cat10.szcategoryid = bos_ar_customer.szcategory_10
left join bos_ar_custsales cs_inv on cs_inv.szcustid = bos_ar_customer.szinvoicetocustid

where 
bos_ar_custsales.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_getcustsales_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_customer.szname as szcustnm_j,
bos_ar_customer.szdlvworkplaceid as szcustdlvworkplaceid_j,

bos_ar_custsales.ballowtocredit,
bos_ar_custsales.deccreditlimit,
bos_ar_customer.szdefaultccyid as szdefaultccyid_j,
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,
bos_ar_custsales.szpaymenttermid, 

bos_ar_custsales.szpriceid,
bos_ar_custsales.szpriceorderid,

bos_ar_custsales.szinvoiceprocessingid,
bos_sd_invoiceprocessing.szdescription as szinvoiceprocessingdescr_j,
bos_sd_invoiceprocessing.bimmediateinvoice as binvoiceprocessingimmediateinvoice_j,

bos_ar_custsales.binvoicenote,

bos_ar_custsales.szpromopriceid,
bos_ar_custsales.szpromopriceorderid,

bos_ar_custsales.bnovatapplied,

tbl_cat1.szcategoryid  as szcustcategoryid_1_j,
tbl_cat1.szpriceid  as szcustcategorypriceid_1_j,    
tbl_cat1.szpromopriceid  as szcustcategorypromopriceid_1_j,    
tbl_cat1.szpriceorderid  as szcustcategorypriceorderid_1_j,    
tbl_cat1.szpromopriceorderid  as szcustcategorypromopriceorderid_1_j,    

tbl_cat2.szcategoryid  as szcustcategoryid_2_j,
tbl_cat2.szpriceid  as szcustcategorypriceid_2_j,    
tbl_cat2.szpromopriceid  as szcustcategorypromopriceid_2_j,    
tbl_cat2.szpriceorderid  as szcustcategorypriceorderid_2_j,    
tbl_cat2.szpromopriceorderid  as szcustcategorypromopriceorderid_2_j,    

tbl_cat3.szcategoryid  as szcustcategoryid_3_j,
tbl_cat3.szpriceid  as szcustcategorypriceid_3_j,    
tbl_cat3.szpromopriceid  as szcustcategorypromopriceid_3_j,    
tbl_cat3.szpriceorderid  as szcustcategorypriceorderid_3_j,    
tbl_cat3.szpromopriceorderid  as szcustcategorypromopriceorderid_3_j,    

tbl_cat4.szcategoryid  as szcustcategoryid_4_j,
tbl_cat4.szpriceid  as szcustcategorypriceid_4_j,    
tbl_cat4.szpromopriceid  as szcustcategorypromopriceid_4_j,    
tbl_cat4.szpriceorderid  as szcustcategorypriceorderid_4_j,    
tbl_cat4.szpromopriceorderid  as szcustcategorypromopriceorderid_4_j,    

tbl_cat5.szcategoryid  as szcustcategoryid_5_j,
tbl_cat5.szpriceid  as szcustcategorypriceid_5_j,    
tbl_cat5.szpromopriceid  as szcustcategorypromopriceid_5_j,
tbl_cat5.szpriceorderid  as szcustcategorypriceorderid_5_j,    
tbl_cat5.szpromopriceorderid  as szcustcategorypromopriceorderid_5_j,

tbl_cat6.szcategoryid  as szcustcategoryid_6_j,
tbl_cat6.szpriceid  as szcustcategorypriceid_6_j,    
tbl_cat6.szpromopriceid  as szcustcategorypromopriceid_6_j,
tbl_cat6.szpriceorderid  as szcustcategorypriceorderid_6_j,    
tbl_cat6.szpromopriceorderid  as szcustcategorypromopriceorderid_6_j,

tbl_cat7.szcategoryid  as szcustcategoryid_7_j,
tbl_cat7.szpriceid  as szcustcategorypriceid_7_j,    
tbl_cat7.szpromopriceid  as szcustcategorypromopriceid_7_j,
tbl_cat7.szpriceorderid  as szcustcategorypriceorderid_7_j,    
tbl_cat7.szpromopriceorderid  as szcustcategorypromopriceorderid_7_j,

tbl_cat8.szcategoryid  as szcustcategoryid_8_j,
tbl_cat8.szpriceid  as szcustcategorypriceid_8_j,    
tbl_cat8.szpromopriceid  as szcustcategorypromopriceid_8_j,
tbl_cat8.szpriceorderid  as szcustcategorypriceorderid_8_j,    
tbl_cat8.szpromopriceorderid  as szcustcategorypromopriceorderid_8_j,

tbl_cat9.szcategoryid  as szcustcategoryid_9_j,
tbl_cat9.szpriceid  as szcustcategorypriceid_9_j,    
tbl_cat9.szpromopriceid  as szcustcategorypromopriceid_9_j,
tbl_cat9.szpriceorderid  as szcustcategorypriceorderid_9_j,    
tbl_cat9.szpromopriceorderid  as szcustcategorypromopriceorderid_9_j,

tbl_cat10.szcategoryid  as szcustcategoryid_10_j,
tbl_cat10.szpriceid  as szcustcategorypriceid_10_j,    
tbl_cat10.szpromopriceid  as szcustcategorypromopriceid_10_j,
tbl_cat10.szpriceorderid  as szcustcategorypriceorderid_10_j,    
tbl_cat10.szpromopriceorderid  as szcustcategorypromopriceorderid_10_j,

cs_inv.szcustid as szcustsalesofinvcustid_j,

bos_ar_customer.szdistrchannelid as szcustdistrchannelid_j,

bos_ar_custsales.bcheckmaxdropsize,
bos_ar_custsales.intmaxcountopeninv,
bos_ar_custsales.bcheckmindropsize,
bos_ar_custsales.dtmlastupdated

from
bos_ar_custsales
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_custsales.szcustid
left join bos_sd_invoiceprocessing on bos_sd_invoiceprocessing.szinvoiceprocessingid = bos_ar_custsales.szinvoiceprocessingid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_customer.szdefaultccyid
left join bos_ar_category as tbl_cat1 on tbl_cat1.szcategoryid = bos_ar_customer.szcategory_1
left join bos_ar_category as tbl_cat2 on tbl_cat2.szcategoryid = bos_ar_customer.szcategory_2
left join bos_ar_category as tbl_cat3 on tbl_cat3.szcategoryid = bos_ar_customer.szcategory_3
left join bos_ar_category as tbl_cat4 on tbl_cat4.szcategoryid = bos_ar_customer.szcategory_4
left join bos_ar_category as tbl_cat5 on tbl_cat5.szcategoryid = bos_ar_customer.szcategory_5
left join bos_ar_category as tbl_cat6 on tbl_cat6.szcategoryid = bos_ar_customer.szcategory_6
left join bos_ar_category as tbl_cat7 on tbl_cat7.szcategoryid = bos_ar_customer.szcategory_7
left join bos_ar_category as tbl_cat8 on tbl_cat8.szcategoryid = bos_ar_customer.szcategory_8
left join bos_ar_category as tbl_cat9 on tbl_cat9.szcategoryid = bos_ar_customer.szcategory_9
left join bos_ar_category as tbl_cat10 on tbl_cat10.szcategoryid = bos_ar_customer.szcategory_10
left join bos_ar_custsales cs_inv on cs_inv.szcustid = bos_ar_customer.szinvoicetocustid

where 
bos_ar_custsales.szcustid = p_szcustid;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_getlistofcustsales()
returns void as
$body$
begin
select 
szcustid ,
szpaymenttermid

from 
bos_ar_custsales;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_iscustsalesexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
ballowtocredit 

from 
bos_ar_custsales 
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_lockcustsales(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_custsales
set 
binvoicenote = binvoicenote
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_updatecustsales(
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprocessingid bos_dt_szid,
p_binvoicenote bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bnovatapplied bos_dt_bboolean,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
update bos_ar_custsales
set 
szcustid = p_szcustid ,
ballowtocredit = p_ballowtocredit,
deccreditlimit = p_deccreditlimit,
szpaymenttermid = p_szpaymenttermid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szinvoiceprocessingid = p_szinvoiceprocessingid,
binvoicenote = p_binvoicenote,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
bnovatapplied = p_bnovatapplied,

bcheckmaxdropsize = p_bcheckmaxdropsize,
intmaxcountopeninv = p_intmaxcountopeninv,
bcheckmindropsize = p_bcheckmindropsize
where 
szcustid   = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_custsales_updatecustsales_013(
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprocessingid bos_dt_szid,
p_binvoicenote bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bnovatapplied bos_dt_bboolean,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
update bos_ar_custsales
set 
szcustid = p_szcustid ,
ballowtocredit = p_ballowtocredit,
deccreditlimit = p_deccreditlimit,
szpaymenttermid = p_szpaymenttermid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szinvoiceprocessingid = p_szinvoiceprocessingid,
binvoicenote = p_binvoicenote,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
bnovatapplied = p_bnovatapplied,

bcheckmaxdropsize = p_bcheckmaxdropsize,
intmaxcountopeninv = p_intmaxcountopeninv,
bcheckmindropsize = p_bcheckmindropsize
where 
szcustid   = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformation(
p_szfcustbiid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_bnewcustomer bit,
p_szcustnm bos_dt_szname,
p_szdistrchannelid bos_dt_szid,
p_szcategoryid1 bos_dt_szid,
p_szcategoryid2 bos_dt_szid,
p_szcategoryid3 bos_dt_szid,
p_szcategoryid4 bos_dt_szid,
p_szcategoryid5 bos_dt_szid,
p_szcategoryid6 bos_dt_szid,
p_szcategoryid7 bos_dt_szid,
p_szcategoryid8 bos_dt_szid,
p_szcategoryid9 bos_dt_szid,
p_szcategoryid10 bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_bjoininvoice bit,
p_bdelcust bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szfcustchgsalescfgid bos_dt_szid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_bcheckmaxdropsize bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_bcheckmindropsize bos_dt_bboolean,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformation
(
szfcustbiid,
szfcallid,
szcustid,
szsalesorgid,
dtmdoc,
bnewcustomer,
szcustnm,
szdistrchannelid,
---- customer category.,
szcategory_1,
szcategory_2,
szcategory_3,
szcategory_4,
szcategory_5,
szcategory_6,
szcategory_7,
szcategory_8,
szcategory_9,
szcategory_10,
--- basic addresss.,
custszcontactperson,
custszroomno,
custszfloor,
custszbuilding,
custszaddress_1,
custszaddress_2,
custszdistrict,
custszcity,
custszzipcode,
custszstate,
custszcountry,
custszphoneno_1,
custszphoneno_2,
custszfaxno,
custszmobileno,
custszemail,
custszwebsite,
szlatitude,
szlongitude,
bsoldtocust,
bdelivertocust,
binvoicetocust,
bcollecttocust,
szsoldtocustid,
szdelivertocustid,
szinvoicetocustid,
szcollecttocustid,
szremark,
bjoininvoice,
bdelcust,
szstatus,
szreasonid,
szsalworkplaceid,
szdefaultccyid,
szfcustchgsalescfgid,
---- closing info.,
szstartdoc ,
dtmstart ,
szcontractdoc ,
dtmcontract ,
szrenewaldoc ,
dtmrenewal ,
szstopdoc ,
dtmstop ,
szsalesid ,
bicp ,
bcheckmaxdropsize,
--- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
-- data status.,
dtmlastupdated ,
balreadytransferred,
szuserid,
-- customer validation,
bneedinvoicechange,
binvoicechangewithreceipt,
bhasspecialcollectionday,
bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday,
bpaymenttype_cash,
bpaymenttype_currentaccount,
bpaymenttype_transfer,
brequireddocuments_po,
brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice,
brequireddocuments_materai,
brequireddocuments_receiptnote,
brequireddocuments_other,
szrequireddocuments_other,
szguarantee,
bcheckmindropsize,
szdeliverygroupid,
szbarcodeid
)
values
(
p_szfcustbiid,
p_szfcallid,
p_szcustid,
p_szsalesorgid,
p_dtmdoc,
p_bnewcustomer,
p_szcustnm,
p_szdistrchannelid,
---- customer category.,
p_szcategoryid1,
p_szcategoryid2,
p_szcategoryid3,
p_szcategoryid4,
p_szcategoryid5,
p_szcategoryid6,
p_szcategoryid7,
p_szcategoryid8,
p_szcategoryid9,
p_szcategoryid10,
--- basic address.,
p_custszcontactperson,
p_custszroomno,
p_custszfloor,
p_custszbuilding,
p_custszaddress_1,
p_custszaddress_2,
p_custszdistrict,
p_custszcity,
p_custszzipcode,
p_custszstate,
p_custszcountry,
p_custszphoneno_1,
p_custszphoneno_2,
p_custszfaxno,
p_custszmobileno,
p_custszemail,
p_custszwebsite,
p_szlatitude,
p_szlongitude,
p_bsoldtocust,
p_bdelivertocust,
p_binvoicetocust,
p_bcollecttocust,
p_szsoldtocustid,
p_szdelivertocustid,
p_szinvoicetocustid,
p_szcollecttocustid,
p_szremark,
p_bjoininvoice,
p_bdelcust,
p_szstatus,
p_szreasonid,
p_szsalworkplaceid,
p_szdefaultccyid,
p_szfcustchgsalescfgid,
---- closing info.,
p_szstartdoc ,
p_dtmstart ,
p_szcontractdoc ,
p_dtmcontract ,
p_szrenewaldoc ,
p_dtmrenewal ,
p_szstopdoc ,
p_dtmstop ,
p_szsalesid ,
p_bicp ,
p_bcheckmaxdropsize,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szuserid,
-- customer validation,
p_bneedinvoicechange,
p_binvoicechangewithreceipt,
p_bhasspecialcollectionday,
p_bhasspecialcollectionday_sunday,
p_bhasspecialcollectionday_monday,
p_bhasspecialcollectionday_tuesday,
p_bhasspecialcollectionday_wednesday,
p_bhasspecialcollectionday_thursday,
p_bhasspecialcollectionday_friday,
p_bhasspecialcollectionday_saturday,
p_bpaymenttype_cash,
p_bpaymenttype_currentaccount,
p_bpaymenttype_transfer,
p_brequireddocuments_po,
p_brequireddocuments_receipt,
p_brequireddocuments_standardtaxinvoice,
p_brequireddocuments_materai,
p_brequireddocuments_receiptnote,
p_brequireddocuments_other,
p_szrequireddocuments_other,
p_szguarantee,
p_bcheckmindropsize,
p_szdeliverygroupid,
p_szbarcodeid
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformation_013(
p_szfcustbiid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_bnewcustomer bit,
p_szcustnm bos_dt_szname,
p_szdistrchannelid bos_dt_szid,
p_szcategoryid1 bos_dt_szid,
p_szcategoryid2 bos_dt_szid,
p_szcategoryid3 bos_dt_szid,
p_szcategoryid4 bos_dt_szid,
p_szcategoryid5 bos_dt_szid,
p_szcategoryid6 bos_dt_szid,
p_szcategoryid7 bos_dt_szid,
p_szcategoryid8 bos_dt_szid,
p_szcategoryid9 bos_dt_szid,
p_szcategoryid10 bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_bjoininvoice bit,
p_bdelcust bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szfcustchgsalescfgid bos_dt_szid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_bcheckmaxdropsize bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_bcheckmindropsize bos_dt_bboolean,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid,
p_szactivitystatus bos_dt_szid,
p_dtmlastchangeactivitystatus timestamp)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformation
(
szfcustbiid,
szfcallid,
szcustid,
szsalesorgid,
dtmdoc,
bnewcustomer,
szcustnm,
szdistrchannelid,
---- customer category.,
szcategory_1,
szcategory_2,
szcategory_3,
szcategory_4,
szcategory_5,
szcategory_6,
szcategory_7,
szcategory_8,
szcategory_9,
szcategory_10,
--- basic addresss.,
custszcontactperson,
custszroomno,
custszfloor,
custszbuilding,
custszaddress_1,
custszaddress_2,
custszdistrict,
custszcity,
custszzipcode,
custszstate,
custszcountry,
custszphoneno_1,
custszphoneno_2,
custszfaxno,
custszmobileno,
custszemail,
custszwebsite,
szlatitude,
szlongitude,
bsoldtocust,
bdelivertocust,
binvoicetocust,
bcollecttocust,
szsoldtocustid,
szdelivertocustid,
szinvoicetocustid,
szcollecttocustid,
szremark,
bjoininvoice,
bdelcust,
szstatus,
szreasonid,
szactivitystatus,
dtmlastchangeactivitystatus,
szsalworkplaceid,
szdefaultccyid,
szfcustchgsalescfgid,
---- closing info.,
szstartdoc ,
dtmstart ,
szcontractdoc ,
dtmcontract ,
szrenewaldoc ,
dtmrenewal ,
szstopdoc ,
dtmstop ,
szsalesid ,
bicp ,
bcheckmaxdropsize,
--- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
-- data status.,
dtmlastupdated ,
balreadytransferred,
szuserid,
-- customer validation,
bneedinvoicechange,
binvoicechangewithreceipt,
bhasspecialcollectionday,
bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday,
bpaymenttype_cash,
bpaymenttype_currentaccount,
bpaymenttype_transfer,
brequireddocuments_po,
brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice,
brequireddocuments_materai,
brequireddocuments_receiptnote,
brequireddocuments_other,
szrequireddocuments_other,
szguarantee,
bcheckmindropsize,
szdeliverygroupid,
szbarcodeid
)
values
(
p_szfcustbiid,
p_szfcallid,
p_szcustid,
p_szsalesorgid,
p_dtmdoc,
p_bnewcustomer,
p_szcustnm,
p_szdistrchannelid,
---- customer category.,
p_szcategoryid1,
p_szcategoryid2,
p_szcategoryid3,
p_szcategoryid4,
p_szcategoryid5,
p_szcategoryid6,
p_szcategoryid7,
p_szcategoryid8,
p_szcategoryid9,
p_szcategoryid10,
--- basic address.,
p_custszcontactperson,
p_custszroomno,
p_custszfloor,
p_custszbuilding,
p_custszaddress_1,
p_custszaddress_2,
p_custszdistrict,
p_custszcity,
p_custszzipcode,
p_custszstate,
p_custszcountry,
p_custszphoneno_1,
p_custszphoneno_2,
p_custszfaxno,
p_custszmobileno,
p_custszemail,
p_custszwebsite,
p_szlatitude,
p_szlongitude,
p_bsoldtocust,
p_bdelivertocust,
p_binvoicetocust,
p_bcollecttocust,
p_szsoldtocustid,
p_szdelivertocustid,
p_szinvoicetocustid,
p_szcollecttocustid,
p_szremark,
p_bjoininvoice,
p_bdelcust,
p_szstatus,
p_szreasonid,
p_szactivitystatus,
p_dtmlastchangeactivitystatus,
p_szsalworkplaceid,
p_szdefaultccyid,
p_szfcustchgsalescfgid,
---- closing info.,
p_szstartdoc ,
p_dtmstart ,
p_szcontractdoc ,
p_dtmcontract ,
p_szrenewaldoc ,
p_dtmrenewal ,
p_szstopdoc ,
p_dtmstop ,
p_szsalesid ,
p_bicp ,
p_bcheckmaxdropsize,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szuserid,
-- customer validation,
p_bneedinvoicechange,
p_binvoicechangewithreceipt,
p_bhasspecialcollectionday,
p_bhasspecialcollectionday_sunday,
p_bhasspecialcollectionday_monday,
p_bhasspecialcollectionday_tuesday,
p_bhasspecialcollectionday_wednesday,
p_bhasspecialcollectionday_thursday,
p_bhasspecialcollectionday_friday,
p_bhasspecialcollectionday_saturday,
p_bpaymenttype_cash,
p_bpaymenttype_currentaccount,
p_bpaymenttype_transfer,
p_brequireddocuments_po,
p_brequireddocuments_receipt,
p_brequireddocuments_standardtaxinvoice,
p_brequireddocuments_materai,
p_brequireddocuments_receiptnote,
p_brequireddocuments_other,
p_szrequireddocuments_other,
p_szguarantee,
p_bcheckmindropsize,
p_szdeliverygroupid,
p_szbarcodeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationaritem(
p_szfcustbiid bos_dt_szid,
p_shitemnumber smallint,
p_szccyid bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationaritem
(
	szfcustbiid,
	shitemnumber,
	szccyid,
	decvalue
)
values
(
p_szfcustbiid,
p_shitemnumber,
p_szccyid,
p_decvalue
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationdjritem(
p_szfcustbiid bos_dt_szid,
p_shitemnumber smallint,
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationdjrtrackingitem
(
	szfcustbiid,
	shitemnumber,
	szdjrtrackingid
)
values
(
p_szfcustbiid,
p_shitemnumber,
p_szdjrtrackingid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationdoitem(
p_szfcustbiid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationdoitem
(
	szfcustbiid,
	shitemnumber,
	szfdoid
)
values
(
p_szfcustbiid,
p_shitemnumber,
p_szfdoid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationdoitem_013(
p_szfcustbiid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationdoitem
(
	szfcustbiid,
	shitemnumber,
	szfdoid
)
values
(
p_szfcustbiid,
p_shitemnumber,
p_szfdoid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationproductitem(
p_szfcustbiid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szrefproductid bos_dt_szid,
p_szrefproductname bos_dt_szname)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationproductitem
(
szfcustbiid,
szproductid,
szrefproductid,
szrefproductname
)
values
(
p_szfcustbiid,
p_szproductid,
p_szrefproductid,
p_szrefproductname
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_createfcustbasicinformationstockitem(
p_szfcustbiid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustbasicinformationstockitem
(
	szfcustbiid,
	shitemnumber,
	szproductid,
	decqty,
	szstocktypeid
)
values
(
p_szfcustbiid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szstocktypeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_deletefcustbasicinformation(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_ar_fcustbasicinformation
where
szfcustbiid = p_szfcustbiid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_deletefcustbasicinformationproductitem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustbasicinformationproductitem
where
 szfcustbiid = p_szfcustbiid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformation(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin

select  
bos_ar_fcustbasicinformation.szfcallid,  
bos_ar_fcustbasicinformation.szsalesorgid,  
bos_ar_fcustbasicinformation.szcustid,  
bos_ar_fcustbasicinformation.dtmdoc,  
bos_ar_fcustbasicinformation.bnewcustomer,  
bos_ar_fcustbasicinformation.szcustnm,  
bos_ar_fcustbasicinformation.szdistrchannelid,  
---- customer category.  
bos_ar_fcustbasicinformation.szcategory_1,  
bos_ar_fcustbasicinformation.szcategory_2,  
bos_ar_fcustbasicinformation.szcategory_3,  
bos_ar_fcustbasicinformation.szcategory_4,  
bos_ar_fcustbasicinformation.szcategory_5,  
bos_ar_fcustbasicinformation.szcategory_6,  
bos_ar_fcustbasicinformation.szcategory_7,  
bos_ar_fcustbasicinformation.szcategory_8,  
bos_ar_fcustbasicinformation.szcategory_9,  
bos_ar_fcustbasicinformation.szcategory_10,  
---- basic address.  
bos_ar_fcustbasicinformation.custszcontactperson,  
bos_ar_fcustbasicinformation.custszroomno,  
bos_ar_fcustbasicinformation.custszfloor,  
bos_ar_fcustbasicinformation.custszbuilding,  
bos_ar_fcustbasicinformation.custszaddress_1,  
bos_ar_fcustbasicinformation.custszaddress_2,  
bos_ar_fcustbasicinformation.custszdistrict,  
bos_ar_fcustbasicinformation.custszcity,  
bos_ar_fcustbasicinformation.custszzipcode,  
bos_ar_fcustbasicinformation.custszstate,  
bos_ar_fcustbasicinformation.custszcountry,  
bos_ar_fcustbasicinformation.custszphoneno_1,  
bos_ar_fcustbasicinformation.custszphoneno_2,  
bos_ar_fcustbasicinformation.custszfaxno,  
bos_ar_fcustbasicinformation.custszmobileno,  
bos_ar_fcustbasicinformation.custszemail,  
bos_ar_fcustbasicinformation.custszwebsite,  

--gps address.  
bos_ar_fcustbasicinformation.szlatitude,  
bos_ar_fcustbasicinformation.szlongitude,  

bos_ar_fcustbasicinformation.bsoldtocust,  
bos_ar_fcustbasicinformation.bdelivertocust,  
bos_ar_fcustbasicinformation.binvoicetocust,  
bos_ar_fcustbasicinformation.bcollecttocust,  
bos_ar_fcustbasicinformation.szsoldtocustid,  
sold_to.szname as szsoldtocustnm,  
bos_ar_fcustbasicinformation.szdelivertocustid,  
dlv_to.szname as szdelivertocustnm,  
bos_ar_fcustbasicinformation.szinvoicetocustid,  
inv_to.szname as szinvoicetocustnm,  
bos_ar_fcustbasicinformation.szcollecttocustid,  
coll_to.szname as szcollecttocustnm,  
bos_ar_fcustbasicinformation.szremark,  
bos_ar_fcustbasicinformation.bjoininvoice,   
bos_ar_fcustbasicinformation.bdelcust,  
bos_ar_fcustbasicinformation.szstatus,  
bos_ar_fcustbasicinformation.szreasonid,  

bos_ar_fcustbasicinformation.szsalworkplaceid,  
bos_ar_fcustbasicinformation.szdefaultccyid,  
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,  
bos_ar_fcustbasicinformation.szfcustchgsalescfgid,  
---- closing info.  
bos_ar_fcustbasicinformation.szstartdoc ,  
bos_ar_fcustbasicinformation.dtmstart ,  
bos_ar_fcustbasicinformation.szcontractdoc ,  
bos_ar_fcustbasicinformation.dtmcontract ,  
bos_ar_fcustbasicinformation.szrenewaldoc ,  
bos_ar_fcustbasicinformation.dtmrenewal ,  
bos_ar_fcustbasicinformation.szstopdoc ,  
bos_ar_fcustbasicinformation.dtmstop ,  
bos_ar_fcustbasicinformation.szsalesid ,  
bos_pi_employee.szname as szsalesnm,  
bos_ar_fcustbasicinformation.bicp ,  

bos_ar_fcustbasicinformation.bcheckmaxdropsize,  

----  document status.  
bos_ar_fcustbasicinformation.bresultfrtransfer,  
bos_ar_fcustbasicinformation.bvoid,  
bos_gen_approved.bapproved,  
bos_ar_fcustbasicinformation.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_ar_fcustbasicinformation.btprintedcount,  
bos_ar_fcustbasicinformation.btransferred,  
bos_ar_fcustbasicinformation.szcompanyid,  
bos_ar_fcustbasicinformation.szworkplaceid,  
bos_ar_fcustbasicinformation.sztaxentityid,  

bos_ar_fcustbasicinformation.bneedapproval,   
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  
bos_ar_fcustbasicinformation.dtmcreated,   
bos_ar_fcustbasicinformation.bsystemcreated,  

bos_gl_company.szname as szcompanynm ,  
bos_gl_workplace.szname as szworkplacenm,  

bos_ar_fcustbasicinformation.dtmlastupdated,  
bos_ar_fcustbasicinformation.balreadytransferred,  
bos_ar_fcustbasicinformation.szuserid,  
bos_sm_user.szname as szusernm_j,  
-- customer validation  
bos_ar_fcustbasicinformation.bneedinvoicechange,  
bos_ar_fcustbasicinformation.binvoicechangewithreceipt,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_sunday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_monday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_tuesday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_wednesday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_thursday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_friday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_saturday,   
bos_ar_fcustbasicinformation.bpaymenttype_cash,  
bos_ar_fcustbasicinformation.bpaymenttype_currentaccount,  
bos_ar_fcustbasicinformation.bpaymenttype_transfer,  
bos_ar_fcustbasicinformation.brequireddocuments_po,  
bos_ar_fcustbasicinformation.brequireddocuments_receipt,  
bos_ar_fcustbasicinformation.brequireddocuments_standardtaxinvoice,  
bos_ar_fcustbasicinformation.brequireddocuments_materai,  
bos_ar_fcustbasicinformation.brequireddocuments_receiptnote,  
bos_ar_fcustbasicinformation.brequireddocuments_other,  
bos_ar_fcustbasicinformation.szrequireddocuments_other,  
bos_ar_fcustbasicinformation.szguarantee,  
bos_ar_fcustbasicinformation.bcheckmindropsize,
bos_ar_fcustbasicinformation.szdeliverygroupid,
coalesce(deliverygroup.szdesc, '') as szdeliverygroupdesc_j,
bos_ar_fcustbasicinformation.szbarcodeid  
from  
bos_ar_fcustbasicinformation  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustbasicinformation.szdefaultccyid  
left join bos_gen_approved on bos_ar_fcustbasicinformation.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_ar_fcustbasicinformation.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustbasicinformation.szsalesid  
left join bos_ar_customer as sold_to on sold_to.szcustid = bos_ar_fcustbasicinformation.szsoldtocustid  
left join bos_ar_customer as dlv_to on dlv_to.szcustid = bos_ar_fcustbasicinformation.szdelivertocustid  
left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_fcustbasicinformation.szinvoicetocustid  
left join bos_ar_customer as coll_to on coll_to.szcustid = bos_ar_fcustbasicinformation.szcollecttocustid  

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustbasicinformation.szworkplaceid  
left join bos_gl_company on bos_gl_company.szcompanyid= bos_ar_fcustbasicinformation.szcompanyid  
left join bos_sd_deliverygroup as deliverygroup on deliverygroup.szworkplaceid = dlv_to.szdlvworkplaceid and deliverygroup.szdeliverygroupid = bos_ar_fcustbasicinformation.szdeliverygroupid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustbasicinformation.szuserid 

where  
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformation_013(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin

select  
bos_ar_fcustbasicinformation.szfcallid,  
bos_ar_fcustbasicinformation.szsalesorgid,  
bos_ar_fcustbasicinformation.szcustid,  
bos_ar_fcustbasicinformation.dtmdoc,  
bos_ar_fcustbasicinformation.bnewcustomer,  
bos_ar_fcustbasicinformation.szcustnm,  
bos_ar_fcustbasicinformation.szdistrchannelid,  
---- customer category.  
bos_ar_fcustbasicinformation.szcategory_1,  
bos_ar_fcustbasicinformation.szcategory_2,  
bos_ar_fcustbasicinformation.szcategory_3,  
bos_ar_fcustbasicinformation.szcategory_4,  
bos_ar_fcustbasicinformation.szcategory_5,  
bos_ar_fcustbasicinformation.szcategory_6,  
bos_ar_fcustbasicinformation.szcategory_7,  
bos_ar_fcustbasicinformation.szcategory_8,  
bos_ar_fcustbasicinformation.szcategory_9,  
bos_ar_fcustbasicinformation.szcategory_10,  

---- basic address.  
bos_ar_fcustbasicinformation.custszcontactperson,  
bos_ar_fcustbasicinformation.custszroomno,  
bos_ar_fcustbasicinformation.custszfloor,  
bos_ar_fcustbasicinformation.custszbuilding,  
bos_ar_fcustbasicinformation.custszaddress_1,  
bos_ar_fcustbasicinformation.custszaddress_2,  
bos_ar_fcustbasicinformation.custszdistrict,  
bos_ar_fcustbasicinformation.custszcity,  
bos_ar_fcustbasicinformation.custszzipcode,  
bos_ar_fcustbasicinformation.custszstate,  
bos_ar_fcustbasicinformation.custszcountry,  
bos_ar_fcustbasicinformation.custszphoneno_1,  
bos_ar_fcustbasicinformation.custszphoneno_2,  
bos_ar_fcustbasicinformation.custszfaxno,  
bos_ar_fcustbasicinformation.custszmobileno,  
bos_ar_fcustbasicinformation.custszemail,  
bos_ar_fcustbasicinformation.custszwebsite,  

--gps address.  
bos_ar_fcustbasicinformation.szlatitude,  
bos_ar_fcustbasicinformation.szlongitude,  

bos_ar_fcustbasicinformation.bsoldtocust,  
bos_ar_fcustbasicinformation.bdelivertocust,  
bos_ar_fcustbasicinformation.binvoicetocust,  
bos_ar_fcustbasicinformation.bcollecttocust,  
bos_ar_fcustbasicinformation.szsoldtocustid,  
sold_to.szname as szsoldtocustnm,  
bos_ar_fcustbasicinformation.szdelivertocustid,  
dlv_to.szname as szdelivertocustnm,  
bos_ar_fcustbasicinformation.szinvoicetocustid,  
inv_to.szname as szinvoicetocustnm,  
bos_ar_fcustbasicinformation.szcollecttocustid,  
coll_to.szname as szcollecttocustnm,  
bos_ar_fcustbasicinformation.szremark,  
bos_ar_fcustbasicinformation.bjoininvoice,   
bos_ar_fcustbasicinformation.bdelcust,  
bos_ar_fcustbasicinformation.szstatus,  
bos_ar_fcustbasicinformation.szreasonid,  

bos_ar_fcustbasicinformation.szsalworkplaceid,  
bos_ar_fcustbasicinformation.szdefaultccyid,  
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,  
bos_ar_fcustbasicinformation.szfcustchgsalescfgid,  
---- closing info.  
bos_ar_fcustbasicinformation.szstartdoc ,  
bos_ar_fcustbasicinformation.dtmstart ,  
bos_ar_fcustbasicinformation.szcontractdoc ,  
bos_ar_fcustbasicinformation.dtmcontract ,  
bos_ar_fcustbasicinformation.szrenewaldoc ,  
bos_ar_fcustbasicinformation.dtmrenewal ,  
bos_ar_fcustbasicinformation.szstopdoc ,  
bos_ar_fcustbasicinformation.dtmstop ,  
bos_ar_fcustbasicinformation.szsalesid ,  
bos_pi_employee.szname as szsalesnm,  
bos_ar_fcustbasicinformation.bicp ,  

bos_ar_fcustbasicinformation.bcheckmaxdropsize,  

----  document status.  
bos_ar_fcustbasicinformation.bresultfrtransfer,  
bos_ar_fcustbasicinformation.bvoid,  
bos_gen_approved.bapproved,  
bos_ar_fcustbasicinformation.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_ar_fcustbasicinformation.btprintedcount,  
bos_ar_fcustbasicinformation.btransferred,  
bos_ar_fcustbasicinformation.szcompanyid,  
bos_ar_fcustbasicinformation.szworkplaceid,  
bos_ar_fcustbasicinformation.sztaxentityid,  

bos_ar_fcustbasicinformation.bneedapproval,   
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  
bos_ar_fcustbasicinformation.dtmcreated,   
bos_ar_fcustbasicinformation.bsystemcreated,  

bos_gl_company.szname as szcompanynm ,  
bos_gl_workplace.szname as szworkplacenm,  

bos_ar_fcustbasicinformation.dtmlastupdated,  
bos_ar_fcustbasicinformation.balreadytransferred,  
bos_ar_fcustbasicinformation.szuserid,  
bos_sm_user.szname as szusernm_j,  
-- customer validation  
bos_ar_fcustbasicinformation.bneedinvoicechange,  
bos_ar_fcustbasicinformation.binvoicechangewithreceipt,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_sunday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_monday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_tuesday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_wednesday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_thursday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_friday,  
bos_ar_fcustbasicinformation.bhasspecialcollectionday_saturday,   
bos_ar_fcustbasicinformation.bpaymenttype_cash,  
bos_ar_fcustbasicinformation.bpaymenttype_currentaccount,  
bos_ar_fcustbasicinformation.bpaymenttype_transfer,  
bos_ar_fcustbasicinformation.brequireddocuments_po,  
bos_ar_fcustbasicinformation.brequireddocuments_receipt,  
bos_ar_fcustbasicinformation.brequireddocuments_standardtaxinvoice,  
bos_ar_fcustbasicinformation.brequireddocuments_materai,  
bos_ar_fcustbasicinformation.brequireddocuments_receiptnote,  
bos_ar_fcustbasicinformation.brequireddocuments_other,  
bos_ar_fcustbasicinformation.szrequireddocuments_other,  
bos_ar_fcustbasicinformation.szguarantee,  
bos_ar_fcustbasicinformation.bcheckmindropsize,
bos_ar_fcustbasicinformation.szdeliverygroupid,
coalesce(deliverygroup.szdesc, '') as szdeliverygroupdesc_j,
bos_ar_fcustbasicinformation.szbarcodeid  ,
bos_ar_fcustbasicinformation.szactivitystatus,
bos_ar_fcustbasicinformation.dtmlastchangeactivitystatus
from  
bos_ar_fcustbasicinformation  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustbasicinformation.szdefaultccyid  
left join bos_gen_approved on bos_ar_fcustbasicinformation.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_ar_fcustbasicinformation.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustbasicinformation.szsalesid  
left join bos_ar_customer as sold_to on sold_to.szcustid = bos_ar_fcustbasicinformation.szsoldtocustid  
left join bos_ar_customer as dlv_to on dlv_to.szcustid = bos_ar_fcustbasicinformation.szdelivertocustid  
left join bos_ar_customer as inv_to on inv_to.szcustid = bos_ar_fcustbasicinformation.szinvoicetocustid  
left join bos_ar_customer as coll_to on coll_to.szcustid = bos_ar_fcustbasicinformation.szcollecttocustid  

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustbasicinformation.szworkplaceid  
left join bos_gl_company on bos_gl_company.szcompanyid= bos_ar_fcustbasicinformation.szcompanyid  
left join bos_sd_deliverygroup as deliverygroup on deliverygroup.szworkplaceid = dlv_to.szdlvworkplaceid and deliverygroup.szdeliverygroupid = bos_ar_fcustbasicinformation.szdeliverygroupid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustbasicinformation.szuserid 

where  
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationaritem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustbasicinformationaritem.szccyid,
bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat as szccyamountformat,
bos_ar_fcustbasicinformationaritem.decvalue

from 
bos_ar_fcustbasicinformationaritem
left join bos_cu_currency on bos_ar_fcustbasicinformationaritem.szccyid = bos_cu_currency.szccyidleft join bos_cu_currency on bos_ar_fcustbasicinformationaritem.szccyid = bos_cu_currency.szccyid
where 
szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationdjritem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_fcustbasicinformationdjrtrackingitem.szdjrtrackingid,
bos_sd_djrtracking.szfdoid as szdjrtrackingfdoid,
bos_sd_djrtracking.dtmnext as dtmdjrtrackingnext,
bos_sd_djrtracking.szdriverid as szdjrtrackingdriverid,
bos_pi_employee.szname as szdjrtrackingdrivernm,
bos_sd_djrtracking.szcustid as szdjrtrackingcustid,
bos_ar_customer.szname as szdjrtrackingcustnm
from
bos_ar_fcustbasicinformationdjrtrackingitem
left join bos_sd_djrtracking on bos_sd_djrtracking.szdjrtrackingid = bos_ar_fcustbasicinformationdjrtrackingitem.szdjrtrackingid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_djrtracking.szdriverid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_djrtracking.szcustid
where
bos_ar_fcustbasicinformationdjrtrackingitem.szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationdoitem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustbasicinformationdoitem.szfdoid,
bos_sd_fdo.dtmdelivery as dtmfdodelivery_j


from 
bos_ar_fcustbasicinformationdoitem
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_ar_fcustbasicinformationdoitem.szfdoidleft join bos_sd_fdo on bos_sd_fdo.szdoid = bos_ar_fcustbasicinformationdoitem.szfdoid
where 
bos_ar_fcustbasicinformationdoitem.szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationdoitem_014(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustbasicinformationdoitem.szfdoid,
bos_sd_fdo.dtmdelivery as dtmfdodelivery_j


from 
bos_ar_fcustbasicinformationdoitem
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_ar_fcustbasicinformationdoitem.szfdoidleft join bos_sd_fdo on bos_sd_fdo.szdoid = bos_ar_fcustbasicinformationdoitem.szfdoid
where 
bos_ar_fcustbasicinformationdoitem.szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationproductitem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustbasicinformationproductitem.szproductid,
bos_inv_product.szname, bos_inv_product.szuomid,
	bos_ar_fcustbasicinformationproductitem.szrefproductid,
    bos_ar_fcustbasicinformationproductitem.szrefproductname

from 
bos_ar_fcustbasicinformationproductitem
inner join
 bos_inv_product on bos_ar_fcustbasicinformationproductitem.szproductid = bos_inv_product.szproductid
where 
bos_ar_fcustbasicinformationproductitem.szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getfcustbasicinformationstockitem(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustbasicinformationstockitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_ar_fcustbasicinformationstockitem.decqty,
bos_inv_product.szuomid as szproductuomid,
bos_ar_fcustbasicinformationstockitem.szstocktypeid

from 
bos_ar_fcustbasicinformationstockitem
left join bos_inv_product on bos_inv_product.szproductid = bos_ar_fcustbasicinformationstockitem.szproductidleft join bos_inv_product on bos_inv_product.szproductid = bos_ar_fcustbasicinformationstockitem.szproductid
where 
szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getlistoffcustbasicinformation()
returns void as
$body$
begin
select 
szfcustbiid

from 
bos_ar_fcustbasicinformation;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_getlistofstockoncustomer(
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szreportedastype varchar,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
coalesce(bos_inv_product.szname,'') as szproductnm,
coalesce(bos_inv_product.szqtyformat,'') as qtyformat,
coalesce(bos_inv_product.szuomid,'') as szuomid,
bos_inv_stock.szlocationtype,
bos_inv_stock.szlocationid,
bos_inv_stock.szreportedastype,
bos_inv_stock.szreportedasid,
sum(bos_inv_stock.decqtyonhand) decqty,
coalesce(bos_inv_stock.szstocktypeid,'')  as szstocktypeid

from
bos_inv_stock 
left join bos_inv_product on bos_inv_stock.szproductid = bos_inv_product.szproductid


where 
 bos_inv_stock.szlocationtype= p_szlocationtype and
bos_inv_stock.szlocationid = p_szlocationid and
bos_inv_stock.szreportedastype = p_szreportedastype and
bos_inv_stock.szreportedasid = p_szreportedasid

group by 
bos_inv_stock.szproductid,
bos_inv_stock.szlocationtype,
bos_inv_stock.szlocationid,
bos_inv_stock.szreportedastype,
bos_inv_stock.szreportedasid,
bos_inv_stock.szstocktypeid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_isfcustbasicinformationexist(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustbiid

from 
bos_ar_fcustbasicinformation
where 
szfcustbiid = p_szfcustbiid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_lockfcustbasicinformation(
p_szfcustbiid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
bneedapproval =  bneedapproval
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_markfcustbasicinformationapplied(
p_szfcustbiid bos_dt_szid,
p_dtmdoc timestamp)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
dtmdoc = p_dtmdoc,
bapplied = 1
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_markfcustbasicinformationvoid(
p_szfcustbiid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_updatecustomerfcustbasicinformation(
p_szfcustbiid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
szcustid = p_szcustid,

szsoldtocustid 	= p_szsoldtocustid,
szdelivertocustid = p_szdelivertocustid,
szinvoicetocustid = p_szinvoicetocustid,
szcollecttocustid = p_szcollecttocustid,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_updatecustomerfcustbasicinformation_013(
p_szfcustbiid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
szcustid = p_szcustid,

szsoldtocustid 	= p_szsoldtocustid,
szdelivertocustid = p_szdelivertocustid,
szinvoicetocustid = p_szinvoicetocustid,
szcollecttocustid = p_szcollecttocustid,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_updatefcustbasicinformation(
p_szfcustbiid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_bnewcustomer bit,
p_szcustnm bos_dt_szname,
p_szdistrchannelid bos_dt_szid,
p_szcategoryid1 bos_dt_szid,
p_szcategoryid2 bos_dt_szid,
p_szcategoryid3 bos_dt_szid,
p_szcategoryid4 bos_dt_szid,
p_szcategoryid5 bos_dt_szid,
p_szcategoryid6 bos_dt_szid,
p_szcategoryid7 bos_dt_szid,
p_szcategoryid8 bos_dt_szid,
p_szcategoryid9 bos_dt_szid,
p_szcategoryid10 bos_dt_szid,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szmediumname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_bjoininvoice bit,
p_bdelcust bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szfcustchgsalescfgid bos_dt_szid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_bcheckmaxdropsize bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_bcheckmindropsize bos_dt_bboolean,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
szfcallid   = p_szfcallid,
szsalesorgid   = p_szsalesorgid,
szcustid   = p_szcustid,
dtmdoc   = p_dtmdoc,
bnewcustomer   = p_bnewcustomer,
szcustnm   = p_szcustnm,
szdistrchannelid = p_szdistrchannelid,
--- customer category.
szcategory_1 = p_szcategoryid1,
szcategory_2 = p_szcategoryid2,
szcategory_3 = p_szcategoryid3,
szcategory_4 = p_szcategoryid4,
szcategory_5 = p_szcategoryid5,
szcategory_6 = p_szcategoryid6,
szcategory_7 = p_szcategoryid7,
szcategory_8 = p_szcategoryid8,
szcategory_9 = p_szcategoryid9,
szcategory_10 = p_szcategoryid10,
--- basic address.
custszcontactperson  = p_custszcontactperson,
custszroomno   = p_custszroomno,
custszfloor   = p_custszfloor,
custszbuilding  = p_custszbuilding,
custszaddress_1  = p_custszaddress_1,
custszaddress_2  = p_custszaddress_2,
custszdistrict  = p_custszdistrict,
custszcity   = p_custszcity,
custszzipcode   = p_custszzipcode,
custszstate   = p_custszstate,
custszcountry   = p_custszcountry,
custszphoneno_1  = p_custszphoneno_1,
custszphoneno_2  = p_custszphoneno_2,
custszfaxno   = p_custszfaxno,
custszmobileno  = p_custszmobileno,
custszemail   = p_custszemail,
custszwebsite   = p_custszwebsite,

szlatitude  = p_szlatitude,
szlongitude  = p_szlongitude,

bsoldtocust   = p_bsoldtocust,
bdelivertocust  = p_bdelivertocust,
binvoicetocust  = p_binvoicetocust,
bcollecttocust  = p_bcollecttocust,
szsoldtocustid  = p_szsoldtocustid,
szdelivertocustid  = p_szdelivertocustid,
szinvoicetocustid  = p_szinvoicetocustid,
szcollecttocustid  = p_szcollecttocustid,

szremark  = p_szremark,
bjoininvoice  = p_bjoininvoice,
bdelcust  = p_bdelcust,
szstatus   = p_szstatus,
szreasonid             = p_szreasonid,

szsalworkplaceid = p_szsalworkplaceid,
szdefaultccyid  = p_szdefaultccyid,
szfcustchgsalescfgid   = p_szfcustchgsalescfgid,

szstartdoc  = p_szstartdoc ,
dtmstart  = p_dtmstart ,
szcontractdoc  = p_szcontractdoc ,
dtmcontract  = p_dtmcontract ,
szrenewaldoc  = p_szrenewaldoc ,
dtmrenewal  = p_dtmrenewal ,
szstopdoc  = p_szstopdoc ,
dtmstop   = p_dtmstop ,
szsalesid  = p_szsalesid ,
bicp   = p_bicp ,

bcheckmaxdropsize = p_bcheckmaxdropsize,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated,
bsystemcreated = bsystemcreated,
szuserid = p_szuserid,
-- customer validation
bneedinvoicechange = p_bneedinvoicechange,
binvoicechangewithreceipt = p_binvoicechangewithreceipt,
bhasspecialcollectionday = p_bhasspecialcollectionday,
bhasspecialcollectionday_sunday = p_bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday = p_bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday = p_bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday = p_bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday = p_bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday = p_bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday = p_bhasspecialcollectionday_saturday,
bpaymenttype_cash = p_bpaymenttype_cash,
bpaymenttype_currentaccount = p_bpaymenttype_currentaccount,
bpaymenttype_transfer = p_bpaymenttype_transfer,
brequireddocuments_po = p_brequireddocuments_po,
brequireddocuments_receipt = p_brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice = p_brequireddocuments_standardtaxinvoice,
brequireddocuments_materai = p_brequireddocuments_materai,
brequireddocuments_receiptnote = p_brequireddocuments_receiptnote,
brequireddocuments_other = p_brequireddocuments_other,
szrequireddocuments_other = p_szrequireddocuments_other,
szguarantee = p_szguarantee,
bcheckmindropsize = p_bcheckmindropsize,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustbasicinformation_updatefcustbasicinformation_013(
p_szfcustbiid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_bnewcustomer bit,
p_szcustnm bos_dt_szname,
p_szdistrchannelid bos_dt_szid,
p_szcategoryid1 bos_dt_szid,
p_szcategoryid2 bos_dt_szid,
p_szcategoryid3 bos_dt_szid,
p_szcategoryid4 bos_dt_szid,
p_szcategoryid5 bos_dt_szid,
p_szcategoryid6 bos_dt_szid,
p_szcategoryid7 bos_dt_szid,
p_szcategoryid8 bos_dt_szid,
p_szcategoryid9 bos_dt_szid,
p_szcategoryid10 bos_dt_szid,
p_szactivitystatus bos_dt_szid,
p_dtmlastchangeactivitystatus timestamp,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szbigdescription,
p_custszaddress_2 bos_dt_szbigdescription,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bsoldtocust bit,
p_bdelivertocust bit,
p_binvoicetocust bit,
p_bcollecttocust bit,
p_szsoldtocustid bos_dt_szid,
p_szdelivertocustid bos_dt_szid,
p_szinvoicetocustid bos_dt_szid,
p_szcollecttocustid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_bjoininvoice bit,
p_bdelcust bit,
p_szstatus varchar,
p_szreasonid bos_dt_szid,
p_szsalworkplaceid bos_dt_szid,
p_szdefaultccyid bos_dt_szsmallid,
p_szfcustchgsalescfgid bos_dt_szid,
p_szstartdoc varchar,
p_dtmstart timestamp,
p_szcontractdoc varchar,
p_dtmcontract timestamp,
p_szrenewaldoc varchar,
p_dtmrenewal timestamp,
p_szstopdoc varchar,
p_dtmstop timestamp,
p_szsalesid bos_dt_szid,
p_bicp bit,
p_bcheckmaxdropsize bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_bneedinvoicechange bos_dt_bboolean,
p_binvoicechangewithreceipt bos_dt_bboolean,
p_bhasspecialcollectionday bos_dt_bboolean,
p_bhasspecialcollectionday_sunday bos_dt_bboolean,
p_bhasspecialcollectionday_monday bos_dt_bboolean,
p_bhasspecialcollectionday_tuesday bos_dt_bboolean,
p_bhasspecialcollectionday_wednesday bos_dt_bboolean,
p_bhasspecialcollectionday_thursday bos_dt_bboolean,
p_bhasspecialcollectionday_friday bos_dt_bboolean,
p_bhasspecialcollectionday_saturday bos_dt_bboolean,
p_bpaymenttype_cash bos_dt_bboolean,
p_bpaymenttype_currentaccount bos_dt_bboolean,
p_bpaymenttype_transfer bos_dt_bboolean,
p_brequireddocuments_po bos_dt_bboolean,
p_brequireddocuments_receipt bos_dt_bboolean,
p_brequireddocuments_standardtaxinvoice bos_dt_bboolean,
p_brequireddocuments_materai bos_dt_bboolean,
p_brequireddocuments_receiptnote bos_dt_bboolean,
p_brequireddocuments_other bos_dt_bboolean,
p_szrequireddocuments_other bos_dt_szbigdescription,
p_szguarantee bos_dt_szbigdescription,
p_bcheckmindropsize bos_dt_bboolean,
p_szdeliverygroupid bos_dt_szid,
p_szbarcodeid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustbasicinformation
set 
szfcallid   = p_szfcallid,
szsalesorgid   = p_szsalesorgid,
szcustid   = p_szcustid,
dtmdoc   = p_dtmdoc,
bnewcustomer   = p_bnewcustomer,
szcustnm   = p_szcustnm,
szdistrchannelid = p_szdistrchannelid,
--- customer category.
szcategory_1 = p_szcategoryid1,
szcategory_2 = p_szcategoryid2,
szcategory_3 = p_szcategoryid3,
szcategory_4 = p_szcategoryid4,
szcategory_5 = p_szcategoryid5,
szcategory_6 = p_szcategoryid6,
szcategory_7 = p_szcategoryid7,
szcategory_8 = p_szcategoryid8,
szcategory_9 = p_szcategoryid9,
szcategory_10 = p_szcategoryid10,

szactivitystatus = p_szactivitystatus,
dtmlastchangeactivitystatus = p_dtmlastchangeactivitystatus,

--- basic address.
custszcontactperson  = p_custszcontactperson,
custszroomno   = p_custszroomno,
custszfloor   = p_custszfloor,
custszbuilding  = p_custszbuilding,
custszaddress_1  = p_custszaddress_1,
custszaddress_2  = p_custszaddress_2,
custszdistrict  = p_custszdistrict,
custszcity   = p_custszcity,
custszzipcode   = p_custszzipcode,
custszstate   = p_custszstate,
custszcountry   = p_custszcountry,
custszphoneno_1  = p_custszphoneno_1,
custszphoneno_2  = p_custszphoneno_2,
custszfaxno   = p_custszfaxno,
custszmobileno  = p_custszmobileno,
custszemail   = p_custszemail,
custszwebsite   = p_custszwebsite,

szlatitude  = p_szlatitude,
szlongitude  = p_szlongitude,

bsoldtocust   = p_bsoldtocust,
bdelivertocust  = p_bdelivertocust,
binvoicetocust  = p_binvoicetocust,
bcollecttocust  = p_bcollecttocust,
szsoldtocustid  = p_szsoldtocustid,
szdelivertocustid  = p_szdelivertocustid,
szinvoicetocustid  = p_szinvoicetocustid,
szcollecttocustid  = p_szcollecttocustid,

szremark  = p_szremark,
bjoininvoice  = p_bjoininvoice,
bdelcust  = p_bdelcust,
szstatus   = p_szstatus,
szreasonid             = p_szreasonid,

szsalworkplaceid = p_szsalworkplaceid,
szdefaultccyid  = p_szdefaultccyid,
szfcustchgsalescfgid   = p_szfcustchgsalescfgid,

szstartdoc  = p_szstartdoc ,
dtmstart  = p_dtmstart ,
szcontractdoc  = p_szcontractdoc ,
dtmcontract  = p_dtmcontract ,
szrenewaldoc  = p_szrenewaldoc ,
dtmrenewal  = p_dtmrenewal ,
szstopdoc  = p_szstopdoc ,
dtmstop   = p_dtmstop ,
szsalesid  = p_szsalesid ,
bicp   = p_bicp ,

bcheckmaxdropsize = p_bcheckmaxdropsize,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated,
bsystemcreated = bsystemcreated,
szuserid = p_szuserid,
-- customer validation
bneedinvoicechange = p_bneedinvoicechange,
binvoicechangewithreceipt = p_binvoicechangewithreceipt,
bhasspecialcollectionday = p_bhasspecialcollectionday,
bhasspecialcollectionday_sunday = p_bhasspecialcollectionday_sunday,
bhasspecialcollectionday_monday = p_bhasspecialcollectionday_monday,
bhasspecialcollectionday_tuesday = p_bhasspecialcollectionday_tuesday,
bhasspecialcollectionday_wednesday = p_bhasspecialcollectionday_wednesday,
bhasspecialcollectionday_thursday = p_bhasspecialcollectionday_thursday,
bhasspecialcollectionday_friday = p_bhasspecialcollectionday_friday,
bhasspecialcollectionday_saturday = p_bhasspecialcollectionday_saturday,
bpaymenttype_cash = p_bpaymenttype_cash,
bpaymenttype_currentaccount = p_bpaymenttype_currentaccount,
bpaymenttype_transfer = p_bpaymenttype_transfer,
brequireddocuments_po = p_brequireddocuments_po,
brequireddocuments_receipt = p_brequireddocuments_receipt,
brequireddocuments_standardtaxinvoice = p_brequireddocuments_standardtaxinvoice,
brequireddocuments_materai = p_brequireddocuments_materai,
brequireddocuments_receiptnote = p_brequireddocuments_receiptnote,
brequireddocuments_other = p_brequireddocuments_other,
szrequireddocuments_other = p_szrequireddocuments_other,
szguarantee = p_szguarantee,
bcheckmindropsize = p_bcheckmindropsize,
szdeliverygroupid = p_szdeliverygroupid,
szbarcodeid = p_szbarcodeid
where 
szfcustbiid = p_szfcustbiid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_createfcustchgdlvaddress(
p_szfcustcdaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustdeliverynm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szname,
p_custszaddress_2 bos_dt_szname,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffdeliveryaddress bit,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szname,
p_deliveryszaddress_2 bos_dt_szname,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szdlvworkplaceid bos_dt_szid,
p_bismultilocation bit,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustchgdlvaddress
(
szfcustcdaid,
szfcallid,
szsalesorgid,
dtmdoc,
szcustid,
szcustdeliverynm,
custszcontactperson ,
custszroomno ,
custszfloor ,
custszbuilding ,
custszaddress_1 ,
custszaddress_2 ,
custszdistrict ,
custszcity ,
custszzipcode ,
custszstate ,
custszcountry ,
custszphoneno_1 ,
custszphoneno_2 ,
custszfaxno ,
custszmobileno ,
custszemail ,
custszwebsite ,
bisdiffdeliveryaddress,
deliveryszcontactperson,
deliveryszroomno,
deliveryszfloor,
deliveryszbuilding,
deliveryszaddress_1,
deliveryszaddress_2,
deliveryszdistrict,
deliveryszcity,
deliveryszzipcode,
deliveryszstate,
deliveryszcountry,
deliveryszphoneno_1,
deliveryszphoneno_2,
deliveryszfaxno,
deliveryszmobileno,
deliveryszemail,
deliveryszwebsite,
szremark,
szdlvworkplaceid,
bismultilocation,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustcdaid,
p_szfcallid,
p_szsalesorgid,
p_dtmdoc,
p_szcustid,
p_szcustdeliverynm,
p_custszcontactperson ,
p_custszroomno ,
p_custszfloor ,
p_custszbuilding ,
p_custszaddress_1 ,
p_custszaddress_2 ,
p_custszdistrict ,
p_custszcity ,
p_custszzipcode ,
p_custszstate ,
p_custszcountry ,
p_custszphoneno_1 ,
p_custszphoneno_2 ,
p_custszfaxno ,
p_custszmobileno ,
p_custszemail ,
p_custszwebsite,
p_bisdiffdeliveryaddress,
p_deliveryszcontactperson,
p_deliveryszroomno,
p_deliveryszfloor,
p_deliveryszbuilding,
p_deliveryszaddress_1,
p_deliveryszaddress_2,
p_deliveryszdistrict,
p_deliveryszcity,
p_deliveryszzipcode,
p_deliveryszstate,
p_deliveryszcountry,
p_deliveryszphoneno_1,
p_deliveryszphoneno_2,
p_deliveryszfaxno,
p_deliveryszmobileno,
p_deliveryszemail,
p_deliveryszwebsite,
p_szremark,
p_szdlvworkplaceid,
p_bismultilocation,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_createfcustchgdlvaddressitem(
p_szfcustcdaid bos_dt_szid,
p_btitemnumber smallint,
p_locationszcontactperson bos_dt_szname,
p_locationszroomno bos_dt_szsmallname,
p_locationszfloor bos_dt_szsmallname,
p_locationszbuilding bos_dt_szname,
p_locationszaddress_1 bos_dt_szname,
p_locationszaddress_2 bos_dt_szname,
p_locationszdistrict bos_dt_szname,
p_locationszcity bos_dt_szmediumname,
p_locationszzipcode bos_dt_szsmallname,
p_locationszstate bos_dt_szmediumname,
p_locationszcountry bos_dt_szmediumname,
p_locationszphoneno_1 bos_dt_szmediumname,
p_locationszphoneno_2 bos_dt_szmediumname,
p_locationszfaxno bos_dt_szmediumname,
p_locationszmobileno bos_dt_szmediumname,
p_locationszemail bos_dt_szmediumname,
p_locationszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
insert into bos_ar_fcustchgdlvaddressitem
(
szfcustcdaid,
btitemnumber,
locationszcontactperson,
locationszroomno,
locationszfloor,
locationszbuilding,
locationszaddress_1,
locationszaddress_2,
locationszdistrict,
locationszcity,
locationszzipcode,
locationszstate,
locationszcountry,
locationszphoneno_1,
locationszphoneno_2,
locationszfaxno,
locationszmobileno,
locationszemail,
locationszwebsite
)
values
(
p_szfcustcdaid,
p_btitemnumber,
p_locationszcontactperson,
p_locationszroomno,
p_locationszfloor,
p_locationszbuilding,
p_locationszaddress_1,
p_locationszaddress_2,
p_locationszdistrict,
p_locationszcity,
p_locationszzipcode,
p_locationszstate,
p_locationszcountry,
p_locationszphoneno_1,
p_locationszphoneno_2,
p_locationszfaxno,
p_locationszmobileno,
p_locationszemail,
p_locationszwebsite
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_deletefcustchgdlvaddress(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustchgdlvaddress
where
szfcustcdaid = p_szfcustcdaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_deletefcustchgdlvaddressitem(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustchgdlvaddressitem
where
szfcustcdaid = p_szfcustcdaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_getfcustchgdlvaddress(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_fcustchgdlvaddress.szfcustcdaid,
bos_ar_fcustchgdlvaddress.szfcallid,
bos_ar_fcustchgdlvaddress.szsalesorgid,
bos_ar_fcustchgdlvaddress.dtmdoc,
bos_ar_fcustchgdlvaddress.szcustid,
bos_ar_customer.szname as szcustnm_j,
bos_ar_fcustchgdlvaddress.szcustdeliverynm,

bos_ar_fcustchgdlvaddress.custszcontactperson ,
bos_ar_fcustchgdlvaddress.custszroomno ,
bos_ar_fcustchgdlvaddress.custszfloor ,
bos_ar_fcustchgdlvaddress.custszbuilding ,
bos_ar_fcustchgdlvaddress.custszaddress_1 ,
bos_ar_fcustchgdlvaddress.custszaddress_2 ,
bos_ar_fcustchgdlvaddress.custszdistrict ,
bos_ar_fcustchgdlvaddress.custszcity ,
bos_ar_fcustchgdlvaddress.custszzipcode ,
bos_ar_fcustchgdlvaddress.custszstate ,
bos_ar_fcustchgdlvaddress.custszcountry ,
bos_ar_fcustchgdlvaddress.custszphoneno_1 ,
bos_ar_fcustchgdlvaddress.custszphoneno_2 ,
bos_ar_fcustchgdlvaddress.custszfaxno ,
bos_ar_fcustchgdlvaddress.custszmobileno ,
bos_ar_fcustchgdlvaddress.custszemail ,
bos_ar_fcustchgdlvaddress.custszwebsite ,

bos_ar_fcustchgdlvaddress.bisdiffdeliveryaddress,

bos_ar_fcustchgdlvaddress.deliveryszcontactperson,
bos_ar_fcustchgdlvaddress.deliveryszroomno,
bos_ar_fcustchgdlvaddress.deliveryszfloor,
bos_ar_fcustchgdlvaddress.deliveryszbuilding,
bos_ar_fcustchgdlvaddress.deliveryszaddress_1,
bos_ar_fcustchgdlvaddress.deliveryszaddress_2,
bos_ar_fcustchgdlvaddress.deliveryszdistrict,
bos_ar_fcustchgdlvaddress.deliveryszcity,
bos_ar_fcustchgdlvaddress.deliveryszzipcode,
bos_ar_fcustchgdlvaddress.deliveryszstate,
bos_ar_fcustchgdlvaddress.deliveryszcountry,
bos_ar_fcustchgdlvaddress.deliveryszphoneno_1,
bos_ar_fcustchgdlvaddress.deliveryszphoneno_2,
bos_ar_fcustchgdlvaddress.deliveryszfaxno,
bos_ar_fcustchgdlvaddress.deliveryszmobileno,
bos_ar_fcustchgdlvaddress.deliveryszemail,
bos_ar_fcustchgdlvaddress.deliveryszwebsite,
bos_ar_fcustchgdlvaddress.szremark,
bos_ar_fcustchgdlvaddress.szdlvworkplaceid,
bos_ar_fcustchgdlvaddress.bismultilocation,
bos_ar_fcustchgdlvaddress.bresultfrtransfer,
bos_ar_fcustchgdlvaddress.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustchgdlvaddress.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustchgdlvaddress.btprintedcount,
bos_ar_fcustchgdlvaddress.btransferred,
bos_ar_fcustchgdlvaddress.szcompanyid,
bos_ar_fcustchgdlvaddress.szworkplaceid,
bos_ar_fcustchgdlvaddress.sztaxentityid,
bos_ar_fcustchgdlvaddress.bneedapproval, 
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ar_fcustchgdlvaddress.dtmcreated, 
bos_ar_fcustchgdlvaddress.bsystemcreated,
bos_gl_company.szname as szcompanynm ,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustchgdlvaddress.dtmlastupdated,
bos_ar_fcustchgdlvaddress.balreadytransferred,
bos_ar_fcustchgdlvaddress.szuserid,
bos_sm_user.szname as szusernm_j


from
(bos_ar_fcustchgdlvaddress left join bos_gen_approved on bos_ar_fcustchgdlvaddress.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_ar_fcustchgdlvaddress.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_fcustchgdlvaddress.szcustid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustchgdlvaddress.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid= bos_ar_fcustchgdlvaddress.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustchgdlvaddress.szuserid

where
szfcustcdaid = p_szfcustcdaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_getfcustchgdlvaddressitem(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustcdaid,
btitemnumber,
locationszcontactperson,
locationszroomno,
locationszfloor,
locationszbuilding,
locationszaddress_1,
locationszaddress_2,
locationszdistrict,
locationszcity,
locationszzipcode,
locationszstate,
locationszcountry,
locationszphoneno_1,
locationszphoneno_2,
locationszfaxno,
locationszmobileno,
locationszemail,
locationszwebsite

from 
bos_ar_fcustchgdlvaddressitem
where 
szfcustcdaid = p_szfcustcdaid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_getlistoffcustchgdlvaddress()
returns void as
$body$
begin
select 
szfcustcdaid,
dtmdoc

from 
bos_ar_fcustchgdlvaddress;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_isfcustchgdlvaddressexist(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustcdaid

from 
bos_ar_fcustchgdlvaddress
where 
szfcustcdaid = p_szfcustcdaid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_lockfcustchgdlvaddress(
p_szfcustcdaid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgdlvaddress
set 
btransferred = btransferred
where 
szfcustcdaid = p_szfcustcdaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_markfcustchgdlvaddressapplied(
p_szfcustcdaid bos_dt_szid,
p_dtmdoc timestamp)
returns void as
$body$
begin
update bos_ar_fcustchgdlvaddress
set 
dtmdoc=p_dtmdoc,
bapplied=1
where 
szfcustcdaid = p_szfcustcdaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_markfcustchgdlvaddressvoid(
p_szfcustcdaid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_ar_fcustchgdlvaddress
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcustcdaid = p_szfcustcdaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgdlvaddress_updatefcustchgdlvaddress(
p_szfcustcdaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustdeliverynm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szname,
p_custszaddress_2 bos_dt_szname,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffdeliveryaddress bit,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szname,
p_deliveryszaddress_2 bos_dt_szname,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szdlvworkplaceid bos_dt_szid,
p_bismultilocation bit,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgdlvaddress
set 
szsalesorgid = p_szsalesorgid,
szfcallid = p_szfcallid,
dtmdoc = p_dtmdoc,
szcustid = p_szcustid,
szcustdeliverynm = p_szcustdeliverynm,
bisdiffdeliveryaddress = p_bisdiffdeliveryaddress,

custszcontactperson = p_custszcontactperson,
custszroomno = p_custszroomno,
custszfloor = p_custszfloor,
custszbuilding = p_custszbuilding,
custszaddress_1 = p_custszaddress_1,
custszaddress_2 = p_custszaddress_2,
custszdistrict = p_custszdistrict,
custszcity = p_custszcity,
custszzipcode = p_custszzipcode,
custszstate = p_custszstate,
custszcountry = p_custszcountry,
custszphoneno_1 = p_custszphoneno_1,
custszphoneno_2 = p_custszphoneno_2,
custszfaxno = p_custszfaxno,
custszmobileno = p_custszmobileno,
custszemail = p_custszemail,
custszwebsite = p_custszwebsite,

deliveryszcontactperson = p_deliveryszcontactperson,
deliveryszroomno = p_deliveryszroomno,
deliveryszfloor = p_deliveryszfloor,
deliveryszbuilding = p_deliveryszbuilding,
deliveryszaddress_1 = p_deliveryszaddress_1,
deliveryszaddress_2 = p_deliveryszaddress_2,
deliveryszdistrict = p_deliveryszdistrict,
deliveryszcity = p_deliveryszcity,
deliveryszzipcode = p_deliveryszzipcode,
deliveryszstate = p_deliveryszstate,
deliveryszcountry = p_deliveryszcountry,
deliveryszphoneno_1 = p_deliveryszphoneno_1,
deliveryszphoneno_2 = p_deliveryszphoneno_2,
deliveryszfaxno = p_deliveryszfaxno,
deliveryszmobileno = p_deliveryszmobileno,
deliveryszemail = p_deliveryszemail,
deliveryszwebsite = p_deliveryszwebsite,
szdlvworkplaceid = p_szdlvworkplaceid,

szremark = p_szremark,
bismultilocation = p_bismultilocation,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid

where 
szfcustcdaid = p_szfcustcdaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_createfcustchginvaddress(
p_szfcustciaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szname,
p_custszaddress_2 bos_dt_szname,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffinvoiceaddress bit,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szname,
p_invoiceszaddress_2 bos_dt_szname,
p_invoiceszdistrict bos_dt_szname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szname,
p_taxszaddress_2 bos_dt_szname,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szname,
p_collectszaddress_2 bos_dt_szname,
p_collectszdistrict bos_dt_szname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustchginvaddress
(
szfcustciaid,
szfcallid,
szsalesorgid,
dtmdoc,
szcustid,
szcustinvoicenm,
szcusttaxnm,
szcustcollectnm,
custszcontactperson ,
custszroomno ,
custszfloor ,
custszbuilding ,
custszaddress_1 ,
custszaddress_2 ,
custszdistrict ,
custszcity ,
custszzipcode ,
custszstate ,
custszcountry ,
custszphoneno_1 ,
custszphoneno_2 ,
custszfaxno ,
custszmobileno ,
custszemail ,
custszwebsite ,
bisdiffinvoiceaddress,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
szremark,
szinvworkplaceid,
szcollworkplaceid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustciaid,
p_szfcallid,
p_szsalesorgid,
p_dtmdoc,
p_szcustid,
p_szcustinvoicenm,
p_szcusttaxnm,
p_szcustcollectnm,
p_custszcontactperson ,
p_custszroomno ,
p_custszfloor ,
p_custszbuilding ,
p_custszaddress_1 ,
p_custszaddress_2 ,
p_custszdistrict ,
p_custszcity ,
p_custszzipcode ,
p_custszstate ,
p_custszcountry ,
p_custszphoneno_1 ,
p_custszphoneno_2 ,
p_custszfaxno ,
p_custszmobileno ,
p_custszemail ,
p_custszwebsite ,
p_bisdiffinvoiceaddress,
p_invoiceszcontactperson,
p_invoiceszroomno,
p_invoiceszfloor,
p_invoiceszbuilding,
p_invoiceszaddress_1,
p_invoiceszaddress_2,
p_invoiceszdistrict,
p_invoiceszcity,
p_invoiceszzipcode,
p_invoiceszstate,
p_invoiceszcountry,
p_invoiceszphoneno_1,
p_invoiceszphoneno_2,
p_invoiceszfaxno,
p_invoiceszmobileno,
p_invoiceszemail,
p_invoiceszwebsite,
p_bisdifftaxaddress,
p_taxszcontactperson,
p_taxszroomno,
p_taxszfloor,
p_taxszbuilding,
p_taxszaddress_1,
p_taxszaddress_2,
p_taxszdistrict,
p_taxszcity,
p_taxszzipcode,
p_taxszstate,
p_taxszcountry,
p_taxszphoneno_1,
p_taxszphoneno_2,
p_taxszfaxno,
p_taxszmobileno,
p_taxszemail,
p_taxszwebsite,
p_bisdiffcollectaddress,
p_collectszcontactperson,
p_collectszroomno,
p_collectszfloor,
p_collectszbuilding,
p_collectszaddress_1,
p_collectszaddress_2,
p_collectszdistrict,
p_collectszcity,
p_collectszzipcode,
p_collectszstate,
p_collectszcountry,
p_collectszphoneno_1,
p_collectszphoneno_2,
p_collectszfaxno,
p_collectszmobileno,
p_collectszemail,
p_collectszwebsite,
p_szremark,
p_szinvworkplaceid ,
p_szcollworkplaceid ,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_deletefcustchginvaddress(
p_szfcustciaid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustchginvaddress
where
szfcustciaid = p_szfcustciaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_getfcustchginvaddress(
p_szfcustciaid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_fcustchginvaddress.szfcustciaid,
bos_ar_fcustchginvaddress.szfcallid,
bos_ar_fcustchginvaddress.szsalesorgid,
bos_ar_fcustchginvaddress.dtmdoc,
bos_ar_fcustchginvaddress.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_fcustchginvaddress.szcustinvoicenm,
bos_ar_fcustchginvaddress.szcusttaxnm,
bos_ar_fcustchginvaddress.szcustcollectnm,

bos_ar_fcustchginvaddress.bisdiffinvoiceaddress,

bos_ar_fcustchginvaddress.invoiceszcontactperson,
bos_ar_fcustchginvaddress.invoiceszroomno,
bos_ar_fcustchginvaddress.invoiceszfloor,
bos_ar_fcustchginvaddress.invoiceszbuilding,
bos_ar_fcustchginvaddress.invoiceszaddress_1,
bos_ar_fcustchginvaddress.invoiceszaddress_2,
bos_ar_fcustchginvaddress.invoiceszdistrict,
bos_ar_fcustchginvaddress.invoiceszcity,
bos_ar_fcustchginvaddress.invoiceszzipcode,
bos_ar_fcustchginvaddress.invoiceszstate,
bos_ar_fcustchginvaddress.invoiceszcountry,
bos_ar_fcustchginvaddress.invoiceszphoneno_1,
bos_ar_fcustchginvaddress.invoiceszphoneno_2,
bos_ar_fcustchginvaddress.invoiceszfaxno,
bos_ar_fcustchginvaddress.invoiceszmobileno,
bos_ar_fcustchginvaddress.invoiceszemail,
bos_ar_fcustchginvaddress.invoiceszwebsite,

bos_ar_fcustchginvaddress.custszcontactperson ,
bos_ar_fcustchginvaddress.custszroomno ,
bos_ar_fcustchginvaddress.custszfloor ,
bos_ar_fcustchginvaddress.custszbuilding ,
bos_ar_fcustchginvaddress.custszaddress_1 ,
bos_ar_fcustchginvaddress.custszaddress_2 ,
bos_ar_fcustchginvaddress.custszdistrict ,
bos_ar_fcustchginvaddress.custszcity ,
bos_ar_fcustchginvaddress.custszzipcode ,
bos_ar_fcustchginvaddress.custszstate ,
bos_ar_fcustchginvaddress.custszcountry ,
bos_ar_fcustchginvaddress.custszphoneno_1 ,
bos_ar_fcustchginvaddress.custszphoneno_2 ,
bos_ar_fcustchginvaddress.custszfaxno ,
bos_ar_fcustchginvaddress.custszmobileno ,
bos_ar_fcustchginvaddress.custszemail ,
bos_ar_fcustchginvaddress.custszwebsite ,

bos_ar_fcustchginvaddress.bisdifftaxaddress,

bos_ar_fcustchginvaddress.taxszcontactperson,
bos_ar_fcustchginvaddress.taxszroomno,
bos_ar_fcustchginvaddress.taxszfloor,
bos_ar_fcustchginvaddress.taxszbuilding,
bos_ar_fcustchginvaddress.taxszaddress_1,
bos_ar_fcustchginvaddress.taxszaddress_2,
bos_ar_fcustchginvaddress.taxszdistrict,
bos_ar_fcustchginvaddress.taxszcity,
bos_ar_fcustchginvaddress.taxszzipcode,
bos_ar_fcustchginvaddress.taxszstate,
bos_ar_fcustchginvaddress.taxszcountry,
bos_ar_fcustchginvaddress.taxszphoneno_1,
bos_ar_fcustchginvaddress.taxszphoneno_2,
bos_ar_fcustchginvaddress.taxszfaxno,
bos_ar_fcustchginvaddress.taxszmobileno,
bos_ar_fcustchginvaddress.taxszemail,
bos_ar_fcustchginvaddress.taxszwebsite,

bos_ar_fcustchginvaddress.bisdiffcollectaddress,

bos_ar_fcustchginvaddress.collectszcontactperson,
bos_ar_fcustchginvaddress.collectszroomno,
bos_ar_fcustchginvaddress.collectszfloor,
bos_ar_fcustchginvaddress.collectszbuilding,
bos_ar_fcustchginvaddress.collectszaddress_1,
bos_ar_fcustchginvaddress.collectszaddress_2,
bos_ar_fcustchginvaddress.collectszdistrict,
bos_ar_fcustchginvaddress.collectszcity,
bos_ar_fcustchginvaddress.collectszzipcode,
bos_ar_fcustchginvaddress.collectszstate,
bos_ar_fcustchginvaddress.collectszcountry,
bos_ar_fcustchginvaddress.collectszphoneno_1,
bos_ar_fcustchginvaddress.collectszphoneno_2,
bos_ar_fcustchginvaddress.collectszfaxno,
bos_ar_fcustchginvaddress.collectszmobileno,
bos_ar_fcustchginvaddress.collectszemail,
bos_ar_fcustchginvaddress.collectszwebsite,

bos_ar_fcustchginvaddress.szremark,
bos_ar_fcustchginvaddress.szinvworkplaceid ,
bos_ar_fcustchginvaddress.szcollworkplaceid ,
bos_ar_fcustchginvaddress.bresultfrtransfer,
bos_ar_fcustchginvaddress.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustchginvaddress.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustchginvaddress.btprintedcount,
bos_ar_fcustchginvaddress.btransferred,
bos_ar_fcustchginvaddress.szcompanyid,
bos_ar_fcustchginvaddress.szworkplaceid,
bos_ar_fcustchginvaddress.sztaxentityid,
bos_ar_fcustchginvaddress.bneedapproval, 
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ar_fcustchginvaddress.dtmcreated, 
bos_ar_fcustchginvaddress.bsystemcreated,
bos_gl_company.szname as szcompanynm ,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustchginvaddress.dtmlastupdated,
bos_ar_fcustchginvaddress.balreadytransferred,
bos_ar_fcustchginvaddress.szuserid,
bos_sm_user.szname as szusernm_j	

from
(bos_ar_fcustchginvaddress left join bos_gen_approved on bos_ar_fcustchginvaddress.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_ar_fcustchginvaddress.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_fcustchginvaddress.szcustid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustchginvaddress.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid= bos_ar_fcustchginvaddress.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustchginvaddress.szuserid

where
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_getlistoffcustchginvaddress()
returns void as
$body$
begin
select 
szfcustciaid,
dtmdoc

from 
bos_ar_fcustchginvaddress;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_isfcustchginvaddressexist(
p_szfcustciaid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustciaid

from 
bos_ar_fcustchginvaddress
where 
szfcustciaid = p_szfcustciaid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_lockfcustchginvaddress(
p_szfcustciaid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchginvaddress
set 
btransferred = btransferred
where 
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_markfcustchginvaddressapplied(
p_szfcustciaid bos_dt_szid,
p_dtmdoc timestamp)
returns void as
$body$
begin
update bos_ar_fcustchginvaddress
set 
bapplied=1,
dtmdoc =p_dtmdoc
where 
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_markfcustchginvaddressvoid(
p_szfcustciaid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_ar_fcustchginvaddress
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchginvaddress_updatefcustchginvaddress(
p_szfcustciaid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szcustinvoicenm bos_dt_szname,
p_szcusttaxnm bos_dt_szname,
p_szcustcollectnm bos_dt_szname,
p_custszcontactperson bos_dt_szname,
p_custszroomno bos_dt_szsmallname,
p_custszfloor bos_dt_szsmallname,
p_custszbuilding bos_dt_szname,
p_custszaddress_1 bos_dt_szname,
p_custszaddress_2 bos_dt_szname,
p_custszdistrict bos_dt_szname,
p_custszcity bos_dt_szmediumname,
p_custszzipcode bos_dt_szsmallname,
p_custszstate bos_dt_szmediumname,
p_custszcountry bos_dt_szmediumname,
p_custszphoneno_1 bos_dt_szmediumname,
p_custszphoneno_2 bos_dt_szmediumname,
p_custszfaxno bos_dt_szmediumname,
p_custszmobileno bos_dt_szmediumname,
p_custszemail bos_dt_szmediumname,
p_custszwebsite bos_dt_szmediumname,
p_bisdiffinvoiceaddress bit,
p_invoiceszcontactperson bos_dt_szname,
p_invoiceszroomno bos_dt_szsmallname,
p_invoiceszfloor bos_dt_szsmallname,
p_invoiceszbuilding bos_dt_szname,
p_invoiceszaddress_1 bos_dt_szname,
p_invoiceszaddress_2 bos_dt_szname,
p_invoiceszdistrict bos_dt_szname,
p_invoiceszcity bos_dt_szmediumname,
p_invoiceszzipcode bos_dt_szsmallname,
p_invoiceszstate bos_dt_szmediumname,
p_invoiceszcountry bos_dt_szmediumname,
p_invoiceszphoneno_1 bos_dt_szmediumname,
p_invoiceszphoneno_2 bos_dt_szmediumname,
p_invoiceszfaxno bos_dt_szmediumname,
p_invoiceszmobileno bos_dt_szmediumname,
p_invoiceszemail bos_dt_szmediumname,
p_invoiceszwebsite bos_dt_szmediumname,
p_bisdifftaxaddress bit,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szname,
p_taxszaddress_2 bos_dt_szname,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_bisdiffcollectaddress bit,
p_collectszcontactperson bos_dt_szname,
p_collectszroomno bos_dt_szsmallname,
p_collectszfloor bos_dt_szsmallname,
p_collectszbuilding bos_dt_szname,
p_collectszaddress_1 bos_dt_szname,
p_collectszaddress_2 bos_dt_szname,
p_collectszdistrict bos_dt_szname,
p_collectszcity bos_dt_szmediumname,
p_collectszzipcode bos_dt_szsmallname,
p_collectszstate bos_dt_szmediumname,
p_collectszcountry bos_dt_szmediumname,
p_collectszphoneno_1 bos_dt_szmediumname,
p_collectszphoneno_2 bos_dt_szmediumname,
p_collectszfaxno bos_dt_szmediumname,
p_collectszmobileno bos_dt_szmediumname,
p_collectszemail bos_dt_szmediumname,
p_collectszwebsite bos_dt_szmediumname,
p_szremark bos_dt_szdescription,
p_szinvworkplaceid bos_dt_szid,
p_szcollworkplaceid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchginvaddress
set 
szsalesorgid = p_szsalesorgid,
szfcallid = p_szfcallid,
dtmdoc = p_dtmdoc,
szcustid = p_szcustid,
szcustinvoicenm = p_szcustinvoicenm,
szcusttaxnm = p_szcusttaxnm,
szcustcollectnm = p_szcustcollectnm,

custszcontactperson = p_custszcontactperson,
custszroomno = p_custszroomno,
custszfloor = p_custszfloor,
custszbuilding = p_custszbuilding,
custszaddress_1 = p_custszaddress_1,
custszaddress_2 = p_custszaddress_2,
custszdistrict = p_custszdistrict,
custszcity = p_custszcity,
custszzipcode = p_custszzipcode,
custszstate = p_custszstate,
custszcountry = p_custszcountry,
custszphoneno_1 = p_custszphoneno_1,
custszphoneno_2 = p_custszphoneno_2,
custszfaxno = p_custszfaxno,
custszmobileno = p_custszmobileno,
custszemail = p_custszemail,
custszwebsite = p_custszwebsite,

bisdiffinvoiceaddress = p_bisdiffinvoiceaddress,

invoiceszcontactperson = p_invoiceszcontactperson,
invoiceszroomno = p_invoiceszroomno,
invoiceszfloor = p_invoiceszfloor,
invoiceszbuilding = p_invoiceszbuilding,
invoiceszaddress_1 = p_invoiceszaddress_1,
invoiceszaddress_2 = p_invoiceszaddress_2,
invoiceszdistrict = p_invoiceszdistrict,
invoiceszcity = p_invoiceszcity,
invoiceszzipcode = p_invoiceszzipcode,
invoiceszstate = p_invoiceszstate,
invoiceszcountry = p_invoiceszcountry,
invoiceszphoneno_1 = p_invoiceszphoneno_1,
invoiceszphoneno_2 = p_invoiceszphoneno_2,
invoiceszfaxno = p_invoiceszfaxno,
invoiceszmobileno = p_invoiceszmobileno,
invoiceszemail = p_invoiceszemail,
invoiceszwebsite = p_invoiceszwebsite,

bisdifftaxaddress = p_bisdifftaxaddress,

taxszcontactperson = p_taxszcontactperson,
taxszroomno = p_taxszroomno,
taxszfloor = p_taxszfloor,
taxszbuilding = p_taxszbuilding,
taxszaddress_1 = p_taxszaddress_1,
taxszaddress_2 = p_taxszaddress_2,
taxszdistrict = p_taxszdistrict,
taxszcity = p_taxszcity,
taxszzipcode = p_taxszzipcode,
taxszstate = p_taxszstate,
taxszcountry = p_taxszcountry,
taxszphoneno_1 = p_taxszphoneno_1,
taxszphoneno_2 = p_taxszphoneno_2,
taxszfaxno = p_taxszfaxno,
taxszmobileno = p_taxszmobileno,
taxszemail = p_taxszemail,
taxszwebsite = p_taxszwebsite,

bisdiffcollectaddress = p_bisdiffcollectaddress,

collectszcontactperson = p_collectszcontactperson,
collectszroomno = p_collectszroomno,
collectszfloor = p_collectszfloor,
collectszbuilding = p_collectszbuilding,
collectszaddress_1 = p_collectszaddress_1,
collectszaddress_2 = p_collectszaddress_2,
collectszdistrict = p_collectszdistrict,
collectszcity = p_collectszcity,
collectszzipcode = p_collectszzipcode,
collectszstate = p_collectszstate,
collectszcountry = p_collectszcountry,
collectszphoneno_1 = p_collectszphoneno_1,
collectszphoneno_2 = p_collectszphoneno_2,
collectszfaxno = p_collectszfaxno,
collectszmobileno = p_collectszmobileno,
collectszemail = p_collectszemail,
collectszwebsite = p_collectszwebsite,

szremark = p_szremark,
szinvworkplaceid = p_szinvworkplaceid,
szcollworkplaceid = p_szcollworkplaceid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated ,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid

where 
szfcustciaid = p_szfcustciaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_createfcustchgsalescfg(
p_szfcustcscid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szinvoicingprocessid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_binvoicenote bit,
p_bnovatapplied bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_ar_fcustchgsalescfg
(
szfcustcscid,
szfcallid,
szsalesorgid,
dtmdoc,
szcustid,
ballowtocredit,
deccreditlimit,
szpaymenttermid,
szinvoicingprocessid,
szpriceid,
szpriceorderid,
szremark,
binvoicenote,
bnovatapplied,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szpromopriceid,
szpromopriceorderid,
bcheckmaxdropsize,
intmaxcountopeninv,
bcheckmindropsize
)
values
(
p_szfcustcscid,
p_szfcallid,
p_szsalesorgid,
p_dtmdoc,
p_szcustid,
p_ballowtocredit,
p_deccreditlimit,
p_szpaymenttermid,
p_szinvoicingprocessid,
p_szpriceid,
p_szpriceorderid,
p_szremark,
p_binvoicenote,
p_bnovatapplied,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szpromopriceid,
p_szpromopriceorderid,
p_bcheckmaxdropsize,
p_intmaxcountopeninv,
p_bcheckmindropsize
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_createfcustchgsalescfg_013(
p_szfcustcscid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szinvoicingprocessid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_binvoicenote bit,
p_bnovatapplied bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_ar_fcustchgsalescfg
(
szfcustcscid,
szfcallid,
szsalesorgid,
dtmdoc,
szcustid,
ballowtocredit,
deccreditlimit,
szpaymenttermid,
szinvoicingprocessid,
szpriceid,
szpriceorderid,
szremark,
binvoicenote,
bnovatapplied,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated ,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szpromopriceid,
szpromopriceorderid,
bcheckmaxdropsize,
intmaxcountopeninv,
bcheckmindropsize
)
values
(
p_szfcustcscid,
p_szfcallid,
p_szsalesorgid,
p_dtmdoc,
p_szcustid,
p_ballowtocredit,
p_deccreditlimit,
p_szpaymenttermid,
p_szinvoicingprocessid,
p_szpriceid,
p_szpriceorderid,
p_szremark,
p_binvoicenote,
p_bnovatapplied,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated ,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szpromopriceid,
p_szpromopriceorderid,
p_bcheckmaxdropsize,
p_intmaxcountopeninv,
p_bcheckmindropsize
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_deletefcustchgsalescfg(
p_szfcustcscid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  BOS_AR_FCustChgSalesCfg
WHERE
	szFCustCSCId = p_szFCustCSCId;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_getfcustchgsalescfg(
p_szfcustcscid bos_dt_szid)
returns void as
$body$
begin
select
bos_ar_fcustchgsalescfg.szfcustcscid,
bos_ar_fcustchgsalescfg.szfcallid,
bos_ar_fcustchgsalescfg.szsalesorgid,
bos_ar_fcustchgsalescfg.dtmdoc,
bos_ar_fcustchgsalescfg.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_fcustchgsalescfg.ballowtocredit,
bos_ar_fcustchgsalescfg.deccreditlimit,
bos_ar_customer.szdefaultccyid as szdefaultccyid_j,
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,
bos_ar_fcustchgsalescfg.szpaymenttermid,
bos_ar_fcustchgsalescfg.szinvoicingprocessid,
bos_ar_fcustchgsalescfg.szpriceid,
bos_ar_fcustchgsalescfg.szpriceorderid,
bos_ar_fcustchgsalescfg.szremark,
bos_ar_fcustchgsalescfg.binvoicenote,
bos_ar_fcustchgsalescfg.bnovatapplied,
bos_ar_fcustchgsalescfg.bresultfrtransfer,
bos_ar_fcustchgsalescfg.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustchgsalescfg.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustchgsalescfg.btprintedcount,
bos_ar_fcustchgsalescfg.btransferred,
bos_ar_fcustchgsalescfg.szcompanyid,
bos_ar_fcustchgsalescfg.szworkplaceid,
bos_ar_fcustchgsalescfg.sztaxentityid,
bos_ar_fcustchgsalescfg.bneedapproval, 
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ar_fcustchgsalescfg.dtmcreated,
bos_ar_fcustchgsalescfg.bsystemcreated,
null as szcompanynm ,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustchgsalescfg.dtmlastupdated,
bos_ar_fcustchgsalescfg.balreadytransferred,
bos_ar_fcustchgsalescfg.szuserid,
bos_sm_user.szname as szusernm_j,

bos_ar_fcustchgsalescfg.szpromopriceid,
bos_ar_fcustchgsalescfg.szpromopriceorderid,

bos_ar_fcustchgsalescfg.bcheckmaxdropsize,
bos_ar_fcustchgsalescfg.intmaxcountopeninv,
bos_ar_fcustchgsalescfg.bcheckmindropsize

from
(bos_ar_fcustchgsalescfg
left join bos_gen_approved on bos_ar_fcustchgsalescfg.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_ar_fcustchgsalescfg.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_fcustchgsalescfg.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_customer.szdefaultccyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustchgsalescfg.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustchgsalescfg.szuserid

where
szfcustcscid=p_szfcustcscid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_getfcustchgsalescfg_014(
p_szfcustcscid bos_dt_szid)
returns void as
$body$
begin
select
bos_ar_fcustchgsalescfg.szfcustcscid,
bos_ar_fcustchgsalescfg.szfcallid,
bos_ar_fcustchgsalescfg.szsalesorgid,
bos_ar_fcustchgsalescfg.dtmdoc,
bos_ar_fcustchgsalescfg.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_fcustchgsalescfg.ballowtocredit,
bos_ar_fcustchgsalescfg.deccreditlimit,
bos_ar_customer.szdefaultccyid as szdefaultccyid_j,
bos_cu_currency.szamountformat as szdefaultccyamountformat_j,
bos_ar_fcustchgsalescfg.szpaymenttermid,
bos_ar_fcustchgsalescfg.szinvoicingprocessid,
bos_ar_fcustchgsalescfg.szpriceid,
bos_ar_fcustchgsalescfg.szpriceorderid,
bos_ar_fcustchgsalescfg.szremark,
bos_ar_fcustchgsalescfg.binvoicenote,
bos_ar_fcustchgsalescfg.bnovatapplied,
bos_ar_fcustchgsalescfg.bresultfrtransfer,
bos_ar_fcustchgsalescfg.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustchgsalescfg.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustchgsalescfg.btprintedcount,
bos_ar_fcustchgsalescfg.btransferred,
bos_ar_fcustchgsalescfg.szcompanyid,
bos_ar_fcustchgsalescfg.szworkplaceid,
bos_ar_fcustchgsalescfg.sztaxentityid,
bos_ar_fcustchgsalescfg.bneedapproval, 
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_ar_fcustchgsalescfg.dtmcreated,
bos_ar_fcustchgsalescfg.bsystemcreated,
null as szcompanynm ,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustchgsalescfg.dtmlastupdated,
bos_ar_fcustchgsalescfg.balreadytransferred,
bos_ar_fcustchgsalescfg.szuserid,
bos_sm_user.szname as szusernm_j,

bos_ar_fcustchgsalescfg.szpromopriceid,
bos_ar_fcustchgsalescfg.szpromopriceorderid,

bos_ar_fcustchgsalescfg.bcheckmaxdropsize,
bos_ar_fcustchgsalescfg.intmaxcountopeninv,
bos_ar_fcustchgsalescfg.bcheckmindropsize

from
(bos_ar_fcustchgsalescfg
left join bos_gen_approved on bos_ar_fcustchgsalescfg.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_ar_fcustchgsalescfg.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_ar_fcustchgsalescfg.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_customer.szdefaultccyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustchgsalescfg.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustchgsalescfg.szuserid

where
szfcustcscid=p_szfcustcscid;


end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_getlistoffcustchgsalescfg()
returns void as
$body$
begin
select 
szfcustcscid,
dtmdoc,
szcustid

from 
bos_ar_fcustchgsalescfg;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_isfcustchgsalescfgexist(
p_szfcustcscid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustcscid

from 
bos_ar_fcustchgsalescfg
where 
szfcustcscid = p_szfcustcscid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_lockfcustchgsalescfg(
p_szfcustcscid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgsalescfg
set 
binvoicenote=binvoicenote
where 
szfcustcscid = p_szfcustcscid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_markfcustchgsalescfgvoid(
p_szfcustcscid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_ar_fcustchgsalescfg
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcustcscid = p_szfcustcscid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_updatefcustchgsalescfg(
p_szfcustcscid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szinvoicingprocessid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_binvoicenote bit,
p_bnovatapplied bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
update bos_ar_fcustchgsalescfg
set 
szsalesorgid=p_szsalesorgid,
szfcallid=p_szfcallid,
dtmdoc=p_dtmdoc,
szcustid=p_szcustid,
ballowtocredit=p_ballowtocredit,
deccreditlimit = p_deccreditlimit,
szpaymenttermid=p_szpaymenttermid,
szinvoicingprocessid=p_szinvoicingprocessid,
szpriceid=p_szpriceid,
szpriceorderid=p_szpriceorderid,
szremark=p_szremark,
binvoicenote=p_binvoicenote,
bnovatapplied = p_bnovatapplied,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated ,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid,

szpromopriceid= p_szpromopriceid,
szpromopriceorderid= p_szpromopriceorderid,

bcheckmaxdropsize= p_bcheckmaxdropsize,
intmaxcountopeninv = p_intmaxcountopeninv,
bcheckmindropsize = p_bcheckmindropsize

where 
szfcustcscid = p_szfcustcscid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgsalescfg_updatefcustchgsalescfg_013(
p_szfcustcscid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_ballowtocredit bit,
p_deccreditlimit bos_dt_decamount,
p_szpaymenttermid bos_dt_szid,
p_szinvoicingprocessid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_binvoicenote bit,
p_bnovatapplied bos_dt_bboolean,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_bcheckmaxdropsize bos_dt_bboolean,
p_intmaxcountopeninv smallint,
p_bcheckmindropsize bos_dt_bboolean)
returns void as
$body$
begin
update bos_ar_fcustchgsalescfg
set 
szsalesorgid=p_szsalesorgid,
szfcallid=p_szfcallid,
dtmdoc=p_dtmdoc,
szcustid=p_szcustid,
ballowtocredit=p_ballowtocredit,
deccreditlimit = p_deccreditlimit,
szpaymenttermid=p_szpaymenttermid,
szinvoicingprocessid=p_szinvoicingprocessid,
szpriceid=p_szpriceid,
szpriceorderid=p_szpriceorderid,
szremark=p_szremark,
binvoicenote=p_binvoicenote,
bnovatapplied = p_bnovatapplied,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated ,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid,

szpromopriceid= p_szpromopriceid,
szpromopriceorderid= p_szpromopriceorderid,

bcheckmaxdropsize= p_bcheckmaxdropsize,
intmaxcountopeninv = p_intmaxcountopeninv,
bcheckmindropsize = p_bcheckmindropsize

where 
szfcustcscid = p_szfcustcscid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_createfcustchgstatus(
p_szfcustchgstatusid bos_dt_szid,
p_dtmfcustchgstatus timestamp,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustchgstatus
(
szfcustchgstatusid,
dtmfcustchgstatus,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustchgstatusid,
p_dtmfcustchgstatus,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_createfcustchgstatusitem(
p_szfcustchgstatusid bos_dt_szid,
p_shitemnumber smallint,
p_szcustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_decduear bos_dt_decamount,
p_deccurrentar bos_dt_decamount,
p_szstatus varchar)
returns void as
$body$
begin
insert into bos_ar_fcustchgstatusitem
(
szfcustchgstatusid,
shitemnumber,
szcustid,
szccyid,
decduear,
deccurrentar,
szstatus
)
values
(
p_szfcustchgstatusid,
p_shitemnumber,
p_szcustid,
p_szccyid,
p_decduear,
p_deccurrentar,
p_szstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_deletefcustchgstatus(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustchgstatus
where
szfcustchgstatusid = p_szfcustchgstatusid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_deletefcustchgstatusitem(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_ar_fcustchgstatusitem
where
szfcustchgstatusid = p_szfcustchgstatusid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_getfcustchgstatus(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin

select
dtmfcustchgstatus,

bos_ar_fcustchgstatus.bresultfrtransfer,
bos_ar_fcustchgstatus.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustchgstatus.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustchgstatus.btprintedcount,
bos_ar_fcustchgstatus.btransferred,
bos_ar_fcustchgstatus.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_ar_fcustchgstatus.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustchgstatus.sztaxentityid,
bos_ar_fcustchgstatus.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_ar_fcustchgstatus.dtmcreated,
bos_ar_fcustchgstatus.bsystemcreated,

bos_ar_fcustchgstatus.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_ar_fcustchgstatus.dtmlastupdated,
bos_ar_fcustchgstatus.balreadytransferred

from 
bos_ar_fcustchgstatus
left join bos_gen_approved on bos_gen_approved.gdapprovedid = bos_ar_fcustchgstatus.gdapprovedid
left join bos_gl_fjournaltrans on bos_gl_fjournaltrans.szfjournalid = bos_ar_fcustchgstatus.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_ar_fcustchgstatus.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustchgstatus.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustchgstatus.szuserid

where 
szfcustchgstatusid = p_szfcustchgstatusid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_getfcustchgstatusitem(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustchgstatusitem.szcustid,
bos_ar_customer.szname as szcustname_j,
bos_ar_customer.szstatus as szcurrstatus_j,

bos_ar_fcustchgstatusitem.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,

bos_ar_fcustchgstatusitem.decduear,
bos_ar_fcustchgstatusitem.deccurrentar,

bos_ar_fcustchgstatusitem.szstatus as sznewstatus


from 
bos_ar_fcustchgstatusitem
left join bos_ar_customer on bos_ar_fcustchgstatusitem.szcustid = bos_ar_customer.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustchgstatusitem.szccyidleft join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustchgstatusitem.szccyid

where 
bos_ar_fcustchgstatusitem.szfcustchgstatusid = p_szfcustchgstatusid 
order by 
bos_ar_fcustchgstatusitem.szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_getlistoffcustchgstatus()
returns void as
$body$
begin
select 
szfcustchgstatusid,
dtmfcustchgstatus

from 
bos_ar_fcustchgstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_isfcustchgstatusexist(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustchgstatusid

from 
bos_ar_fcustchgstatus
where 
szfcustchgstatusid = p_szfcustchgstatusid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_lockfcustchgstatus(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgstatus
set 
dtmfcustchgstatus = dtmfcustchgstatus
where 
szfcustchgstatusid = p_szfcustchgstatusid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_markfcustchgstatusapplied(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgstatus
set 
bapplied = 1
where 
szfcustchgstatusid = p_szfcustchgstatusid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_markfcustchgstatusvoid(
p_szfcustchgstatusid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgstatus
set 
bvoid = 1
where 
szfcustchgstatusid = p_szfcustchgstatusid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustchgstatus_updatefcustchgstatus(
p_szfcustchgstatusid bos_dt_szid,
p_dtmfcustchgstatus timestamp,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustchgstatus
set 
dtmfcustchgstatus = p_dtmfcustchgstatus,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfcustchgstatusid = p_szfcustchgstatusid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_countunappliedfcustpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(szfcustpaymentid) as ipaymentcount
from
bos_ar_fcustpayment
where
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
--and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid;
else
select
count(szfcustpaymentid) as ipaymentcount
from
bos_ar_fcustpayment
where
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_countunappliedfcustpayment_014(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(szfcustpaymentid) as ipaymentcount
from
bos_ar_fcustpayment
where
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
--and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid;
else
select
count(szfcustpaymentid) as ipaymentcount
from
bos_ar_fcustpayment
where
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpayment(
p_szfcustpaymentid bos_dt_szid,
p_dtmfcustpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustpayment
(
szfcustpaymentid,
dtmfcustpayment,
szfcashreceiptid,
szdeposanid,
szaccountid1,
szsubaccountid1,
decamount1,
szaccountid2,
szsubaccountid2,
decamount2,
szaccountid3,
szsubaccountid3,
decamount3,
szaccountid4,
szsubaccountid4,
decamount4,
decamount,
szccyid,
szccyrateid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustpaymentid,
p_dtmfcustpayment,
p_szfcashreceiptid,
p_szdeposanid,
p_szaccountid1,
p_szsubaccountid1,
p_decamount1,
p_szaccountid2,
p_szsubaccountid2,
p_decamount2,
p_szaccountid3,
p_szsubaccountid3,
p_decamount3,
p_szaccountid4,
p_szsubaccountid4,
p_decamount4,
p_decamount,
p_szccyid,
p_szccyrateid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpayment_013(
p_szfcustpaymentid bos_dt_szid,
p_dtmfcustpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_ar_fcustpayment
(
szfcustpaymentid,
dtmfcustpayment,
szfcashreceiptid,
szdeposanid,
szaccountid1,
szsubaccountid1,
decamount1,
szaccountid2,
szsubaccountid2,
decamount2,
szaccountid3,
szsubaccountid3,
decamount3,
szaccountid4,
szsubaccountid4,
decamount4,
decamount,
szccyid,
szccyrateid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcustpaymentid,
p_dtmfcustpayment,
p_szfcashreceiptid,
p_szdeposanid,
p_szaccountid1,
p_szsubaccountid1,
p_decamount1,
p_szaccountid2,
p_szsubaccountid2,
p_decamount2,
p_szaccountid3,
p_szsubaccountid3,
p_decamount3,
p_szaccountid4,
p_szsubaccountid4,
p_decamount4,
p_decamount,
p_szccyid,
p_szccyrateid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpaymentitem(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_decpaidbycashreceipt bos_dt_decamount,
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustpaymentitem
(
szfcustpaymentid,
shitemnumber,
sztrnid,
szdocid,
szcustid,
decamount,
decpaidbycashreceipt,
szfdoid
)
values
(
p_szfcustpaymentid,
p_shitemnumber,
p_sztrnid,
p_szdocid,
p_szcustid,
p_decamount,
p_decpaidbycashreceipt,
p_szfdoid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpaymentitem_013(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_decpaidbycashreceipt bos_dt_decamount,
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustpaymentitem
(
szfcustpaymentid,
shitemnumber,
sztrnid,
szdocid,
szcustid,
decamount,
decpaidbycashreceipt,
szfdoid
)
values
(
p_szfcustpaymentid,
p_shitemnumber,
p_sztrnid,
p_szdocid,
p_szcustid,
p_decamount,
p_decpaidbycashreceipt,
p_szfdoid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpaymentitemdetail(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint,
p_shdetailnumber smallint,
p_szbankid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_bvalue smallint,
p_decamount bos_dt_decamount,
p_bdeposit smallint,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustpaymentitemdetail
(
szfcustpaymentid,
shitemnumber,
shdetailnumber,
szbankid,
szrefdocid,
bvalue,
decamount,
bdeposit,
szreasonid
)
values
(
p_szfcustpaymentid,
p_shitemnumber,
p_shdetailnumber,
p_szbankid,
p_szrefdocid,
p_bvalue,
p_decamount,
p_bdeposit,
p_szreasonid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_createfcustpaymentitemdetail_013(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint,
p_shdetailnumber smallint,
p_szbankid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_bvalue smallint,
p_decamount bos_dt_decamount,
p_bdeposit smallint,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_fcustpaymentitemdetail
(
szfcustpaymentid,
shitemnumber,
shdetailnumber,
szbankid,
szrefdocid,
bvalue,
decamount,
bdeposit,
szreasonid
)
values
(
p_szfcustpaymentid,
p_shitemnumber,
p_shdetailnumber,
p_szbankid,
p_szrefdocid,
p_bvalue,
p_decamount,
p_bdeposit,
p_szreasonid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_deletefcustpayment(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ar_fcustpayment
where
 szfcustpaymentid = p_szfcustpaymentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_deletefcustpaymentitem(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ar_fcustpaymentitem
where
 szfcustpaymentid = p_szfcustpaymentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_deletefcustpaymentitemdetail(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ar_fcustpaymentitemdetail
where
 szfcustpaymentid = p_szfcustpaymentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getamountofunsettledpdr(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
select 
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount

from 
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitem on bos_ar_fcustpayment.szfcustpaymentid = bos_ar_fcustpaymentitem.szfcustpaymentid
inner join bos_ar_fcustpaymentitemdetail on bos_ar_fcustpaymentitem.szfcustpaymentid = bos_ar_fcustpaymentitemdetail.szfcustpaymentid and
bos_ar_fcustpaymentitem.shitemnumber = bos_ar_fcustpaymentitemdetail.shitemnumber
left join bos_cas_pdr on
bos_cas_pdr.szbankid = bos_ar_fcustpaymentitemdetail.szbankid and
bos_cas_pdr.szrefid = bos_ar_fcustpaymentitemdetail.szrefdocid
where 
bos_ar_fcustpaymentitem.sztrnid = p_sztrnid and bos_ar_fcustpaymentitem.szdocid = p_szdocid and bos_ar_fcustpayment.bapplied = 1 and bos_ar_fcustpaymentitemdetail.bvalue = 0 and bos_cas_pdr.szstatus <> 'cle' and bos_cas_pdr.szstatus <> 'rej' and bos_cas_pdr.szstatus <> 'can' and bos_ar_fcustpayment.szfcustpaymentid <> p_szfcustpaymentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getamountofunsettledpdr_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
select 
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount

from 
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitem on bos_ar_fcustpayment.szfcustpaymentid = bos_ar_fcustpaymentitem.szfcustpaymentid
inner join bos_ar_fcustpaymentitemdetail on bos_ar_fcustpaymentitem.szfcustpaymentid = bos_ar_fcustpaymentitemdetail.szfcustpaymentid and
bos_ar_fcustpaymentitem.shitemnumber = bos_ar_fcustpaymentitemdetail.shitemnumber
left join bos_cas_pdr on
bos_cas_pdr.szbankid = bos_ar_fcustpaymentitemdetail.szbankid and
bos_cas_pdr.szrefid = bos_ar_fcustpaymentitemdetail.szrefdocid
where 
bos_ar_fcustpaymentitem.sztrnid = p_sztrnid and bos_ar_fcustpaymentitem.szdocid = p_szdocid and bos_ar_fcustpayment.bapplied = 1 and bos_ar_fcustpaymentitemdetail.bvalue = 0 and bos_cas_pdr.szstatus <> 'cle' and bos_cas_pdr.szstatus <> 'rej' and bos_cas_pdr.szstatus <> 'can' and bos_ar_fcustpayment.szfcustpaymentid <> p_szfcustpaymentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getfcustpayment(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_fcustpayment.dtmfcustpayment,
bos_ar_fcustpayment.szfcashreceiptid,
bos_ar_fcustpayment.szdeposanid,
bos_pi_employee.szname as szdeposannm,

bos_ar_fcustpayment.szaccountid1,
bos_ar_fcustpayment.szsubaccountid1,
bos_ar_fcustpayment.decamount1,

bos_ar_fcustpayment.szaccountid2,
bos_ar_fcustpayment.szsubaccountid2,
bos_ar_fcustpayment.decamount2,

bos_ar_fcustpayment.szaccountid3,
bos_ar_fcustpayment.szsubaccountid3,
bos_ar_fcustpayment.decamount3,

bos_ar_fcustpayment.szaccountid4,
bos_ar_fcustpayment.szsubaccountid4,
bos_ar_fcustpayment.decamount4,

acc1.szname as szaccname1_j,
subacc1.szdescription as szsubaccname1_j,

acc2.szname as szaccname2_j,
subacc2.szdescription as szsubaccname2_j,

acc3.szname as szaccname3_j,
subacc3.szdescription as szsubaccname3_j,

acc4.szname as szaccname4_j,
subacc4.szdescription as szsubaccname4_j,

bos_ar_fcustpayment.decamount,

bos_ar_fcustpayment.szccyid,
bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,

bos_ar_fcustpayment.szccyrateid,

bos_ar_fcustpayment.bresultfrtransfer,
bos_ar_fcustpayment.bvoid,
bos_gen_approved.bapproved,
bos_ar_fcustpayment.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_ar_fcustpayment.btprintedcount,
bos_ar_fcustpayment.btransferred,
bos_ar_fcustpayment.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_ar_fcustpayment.sztaxentityid,
bos_ar_fcustpayment.bneedapproval,
bos_ar_fcustpayment.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_ar_fcustpayment.dtmcreated,
bos_ar_fcustpayment.bsystemcreated,
bos_ar_fcustpayment.szuserid,
bos_sm_user.szname as szusernm_j,

bos_ar_fcustpayment.dtmlastupdated,
bos_ar_fcustpayment.balreadytransferred

from
bos_ar_fcustpayment
left join bos_gen_approved on bos_ar_fcustpayment.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_ar_fcustpayment.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_ar_fcustpayment.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_ar_fcustpayment.szuserid

left join bos_gl_account as acc1 on acc1.szaccountid = bos_ar_fcustpayment.szaccountid1
left join bos_gl_glsubacc as subacc1 on subacc1.szglsubaccid = bos_ar_fcustpayment.szsubaccountid1

left join bos_gl_account as acc2 on acc2.szaccountid = bos_ar_fcustpayment.szaccountid2
left join bos_gl_glsubacc as subacc2 on subacc2.szglsubaccid = bos_ar_fcustpayment.szsubaccountid2

left join bos_gl_account as acc3 on acc3.szaccountid = bos_ar_fcustpayment.szaccountid3
left join bos_gl_glsubacc as subacc3 on subacc3.szglsubaccid = bos_ar_fcustpayment.szsubaccountid3

left join bos_gl_account as acc4 on acc4.szaccountid = bos_ar_fcustpayment.szaccountid4
left join bos_gl_glsubacc as subacc4 on subacc4.szglsubaccid = bos_ar_fcustpayment.szsubaccountid4

where
bos_ar_fcustpayment.szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getfcustpaymentitem(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin

select
bos_ar_fcustpaymentitem.shitemnumber,
bos_ar_fcustpaymentitem.sztrnid,
bos_ar_fcustpaymentitem.szdocid,
bos_ar_fcustpaymentitem.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_fcustpaymentitem.decamount,
bos_ar_fcustpaymentitem.decpaidbycashreceipt,
bos_ar_fcustpaymentitem.szfdoid

from 
bos_ar_fcustpaymentitem 
left join bos_ar_artrans on bos_ar_fcustpaymentitem.sztrnid = bos_ar_artrans.sztrnid 
and bos_ar_fcustpaymentitem.szdocid = bos_ar_artrans.szdocid 
and bos_ar_fcustpaymentitem.szcustid = bos_ar_artrans.szcustid
left join bos_ar_customer on bos_ar_fcustpaymentitem.szcustid = bos_ar_customer.szcustid

where 
bos_ar_fcustpaymentitem.szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getfcustpaymentitemdetail(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
bos_ar_fcustpaymentitemdetail.szfcustpaymentid,
bos_ar_fcustpaymentitemdetail.shitemnumber,
bos_ar_fcustpaymentitemdetail.shdetailnumber,
bos_ar_fcustpaymentitemdetail.szbankid,
coalesce(bos_cas_bank.szname, '') as szbankname,
bos_ar_fcustpaymentitemdetail.szrefdocid,
bos_ar_fcustpaymentitemdetail.bvalue,
bos_ar_fcustpaymentitemdetail.decamount,
bos_ar_fcustpaymentitemdetail.bdeposit,
bos_ar_fcustpaymentitemdetail.szreasonid


from 
bos_ar_fcustpaymentitemdetail
left join bos_cas_bank on bos_ar_fcustpaymentitemdetail.szbankid = bos_cas_bank.szbankid
where 
bos_ar_fcustpaymentitemdetail.szfcustpaymentid = p_szfcustpaymentid and bos_ar_fcustpaymentitemdetail.shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getfcustpaymentitemdetail_014(
p_szfcustpaymentid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
bos_ar_fcustpaymentitemdetail.szfcustpaymentid,
bos_ar_fcustpaymentitemdetail.shitemnumber,
bos_ar_fcustpaymentitemdetail.shdetailnumber,
bos_ar_fcustpaymentitemdetail.szbankid,
coalesce(bos_cas_bank.szname, '') as szbankname,
bos_ar_fcustpaymentitemdetail.szrefdocid,
bos_ar_fcustpaymentitemdetail.bvalue,
bos_ar_fcustpaymentitemdetail.decamount,
bos_ar_fcustpaymentitemdetail.bdeposit,
bos_ar_fcustpaymentitemdetail.szreasonid


from 
bos_ar_fcustpaymentitemdetail
left join bos_cas_bank on bos_ar_fcustpaymentitemdetail.szbankid = bos_cas_bank.szbankid
where 
bos_ar_fcustpaymentitemdetail.szfcustpaymentid = p_szfcustpaymentid and bos_ar_fcustpaymentitemdetail.shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistofartranstobepaid(
p_szdeposanid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin

select
bat.sztrnid,
bat.szdocid,
bat.szcustid,
bos_ar_customer.szname as szcustname,
bat.decremain as decaramount --remaining of ar

from
bos_ar_artrans as bat
left join bos_ar_customer on bat.szcustid = bos_ar_customer.szcustid
left join bos_sd_cjrtracking on bat.sztrnid = bos_sd_cjrtracking.sztrnid and bat.szdocid = bos_sd_cjrtracking.szdocid
left join bos_sd_fcjritem on bos_sd_cjrtracking.szfcjrid = bos_sd_fcjritem.szfcjrid and 
bos_sd_cjrtracking.szcjrtrackingid = bos_sd_fcjritem.szcjrtrackingid

where
bat.decremain > 0 and
bat.decamount > 0 and
bat.bclosed = 0 and
bat.szdocid in (select distinct bst.szdocid
from bos_sd_fcjr as bsc inner join bos_sd_fcjritem as bsci on bsc.szfcjrid = bsci.szfcjrid
inner join bos_sd_cjrtracking as bst on bsci.szcjrtrackingid = bst.szcjrtrackingid
where bst.szcollectorid = p_szdeposanid and bsc.dtmfcjr >= p_dtmdate and
bsc.dtmfcjr < interval '1 day' + p_dtmdate)

order by
bos_sd_cjrtracking.szfcjrid,
bos_sd_fcjritem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistofartranstobepaidfdjr(
p_szdeposanid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin

select
bat.sztrnid,
bat.szdocid,
bat.szcustid,
bos_ar_customer.szname as szcustname,
bat.decremain as decaramount
from
bos_ar_artrans as bat
left join bos_ar_customer on bat.szcustid = bos_ar_customer.szcustid
where
bat.decremain > 0 and
bat.decamount > 0 and
bat.bclosed = 0 and
bat.szcustid in 
(
select distinct bst.szcustid
from bos_sd_fdjr as bsd inner join bos_sd_fdjritem as bsdi on bsd.szfdjrid = bsdi.szfdjrid
inner join bos_sd_djrtracking as bst on bsdi.szdjrtrackingid = bst.szdjrtrackingid
where bst.szdriverid = p_szdeposanid and bsd.dtmfdjr >= p_dtmdate and
bsd.dtmfdjr < interval '1 day' + p_dtmdate
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistoffcustpayment()
returns void as
$body$
begin
select 
szfcustpaymentid, dtmfcustpayment, szfcashreceiptid

from 
bos_ar_fcustpayment;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistoffcustpaymentitemdetailforpdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select 
bapi.sztrnid,
bapi.szdocid,
bapi.szcustid,
bcp.szunclearpdraccid as szaccountid,
bcp.szunclearpdrsubaccid as szsubaccountid,
bcp.szclearingaccid,
bcp.szclearingsubaccid,
bat.decremain as decamount,
sum(bapid.decamount) as decamountpaid

from 
bos_ar_fcustpaymentitemdetail as bapid
inner join bos_ar_fcustpaymentitem as bapi on bapid.szfcustpaymentid = bapi.szfcustpaymentid and bapid.shitemnumber = bapi.shitemnumber
inner join bos_ar_fcustpayment as bap on bapid.szfcustpaymentid = bap.szfcustpaymentid
inner join bos_ar_artrans as bat on bapi.sztrnid = bat.sztrnid and bapi.szdocid = bat.szdocid and bapi.szcustid = bapi.szcustid and bap.szccyid = bat.szccyid
inner join bos_cas_pdr as bcp on bapid.szbankid = bcp.szbankid and bapid.szrefdocid = bcp.szrefid
where 
bap.bapplied = 1 and bapid.szbankid = p_szbankid and bapid.szrefdocid = p_szrefid and bapid.bvalue = 0 group by bapi.sztrnid, bapi.szdocid, bapi.szcustid, bcp.szunclearpdraccid, bcp.szunclearpdrsubaccid, bcp.szclearingaccid, bcp.szclearingsubaccid, bat.decremain ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistoffcustpaymentitemdetailforpdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select 
bapi.sztrnid,
bapi.szdocid,
bapi.szcustid,
bcp.szunclearpdraccid as szaccountid,
bcp.szunclearpdrsubaccid as szsubaccountid,
bcp.szclearingaccid,
bcp.szclearingsubaccid,
bat.decremain as decamount,
sum(bapid.decamount) as decamountpaid

from 
bos_ar_fcustpaymentitemdetail as bapid
inner join bos_ar_fcustpaymentitem as bapi on bapid.szfcustpaymentid = bapi.szfcustpaymentid and bapid.shitemnumber = bapi.shitemnumber
inner join bos_ar_fcustpayment as bap on bapid.szfcustpaymentid = bap.szfcustpaymentid
inner join bos_ar_artrans as bat on bapi.sztrnid = bat.sztrnid and bapi.szdocid = bat.szdocid and bapi.szcustid = bapi.szcustid and bap.szccyid = bat.szccyid
inner join bos_cas_pdr as bcp on bapid.szbankid = bcp.szbankid and bapid.szrefdocid = bcp.szrefid
where 
bap.bapplied = 1 and bapid.szbankid = p_szbankid and bapid.szrefdocid = p_szrefid and bapid.bvalue = 0 group by bapi.sztrnid, bapi.szdocid, bapi.szcustid, bcp.szunclearpdraccid, bcp.szunclearpdrsubaccid, bcp.szclearingaccid, bcp.szclearingsubaccid, bat.decremain ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistofunappliedfcustpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
szfcustpaymentid
from
bos_ar_fcustpayment
where
szworkplaceid = p_szworkplaceid and
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
--and bos_ar_fcustpayment.szdeposanid = p_szopuserid

order by dtmfcustpayment;
else
select
szfcustpaymentid
from
bos_ar_fcustpayment
where
szworkplaceid = p_szworkplaceid and
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
and bos_ar_fcustpayment.szdeposanid = p_szopuserid

order by dtmfcustpayment;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_getlistofunappliedfcustpayment_014(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
szfcustpaymentid
from
bos_ar_fcustpayment
where
szworkplaceid = p_szworkplaceid and
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
--and bos_ar_fcustpayment.szdeposanid = p_szopuserid

order by dtmfcustpayment;
else
select
szfcustpaymentid
from
bos_ar_fcustpayment
where
szworkplaceid = p_szworkplaceid and
bvoid = 0 and bapplied = 0 and
dtmfcustpayment >= p_dtmfrom and dtmfcustpayment < interval '1 day' + p_dtmto
and bos_ar_fcustpayment.szdeposanid = p_szopuserid

order by dtmfcustpayment;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_isfcustpaymentexist(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustpaymentid

from 
bos_ar_fcustpayment
where 
 szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_isinvassignedtootherfcustpayment(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustpayment.szfcustpaymentid


from 
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitem on bos_ar_fcustpayment.szfcustpaymentid = bos_ar_fcustpaymentitem.szfcustpaymentid

where 
bos_ar_fcustpaymentitem.sztrnid = p_sztrnid and bos_ar_fcustpaymentitem.szdocid = p_szdocid and bos_ar_fcustpayment.szfcustpaymentid <> p_szfcustpaymentid and bos_ar_fcustpayment.bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_isinvassignedtootherfcustpayment_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
select 
bos_ar_fcustpayment.szfcustpaymentid


from 
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitem on bos_ar_fcustpayment.szfcustpaymentid = bos_ar_fcustpaymentitem.szfcustpaymentid

where 
bos_ar_fcustpaymentitem.sztrnid = p_sztrnid and bos_ar_fcustpaymentitem.szdocid = p_szdocid and bos_ar_fcustpayment.szfcustpaymentid <> p_szfcustpaymentid and bos_ar_fcustpayment.bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_lockfcustpayment(
p_szfcustpaymentid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustpayment
set 
szdeposanid = szdeposanid
where 
szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_markfcustpaymentapplied(
p_szfcustpaymentid bos_dt_szid,
p_bapplied bit)
returns void as
$body$
begin
update bos_ar_fcustpayment
set 
 bapplied = p_bapplied
where 
 szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_updatefcustpayment(
p_szfcustpaymentid bos_dt_szid,
p_dtmfcustpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustpayment
set 
dtmfcustpayment = p_dtmfcustpayment,
szfcashreceiptid = p_szfcashreceiptid,
szdeposanid = p_szdeposanid,
szaccountid1 = p_szaccountid1,
szsubaccountid1 = p_szsubaccountid1,
decamount1 = p_decamount1,
szaccountid2 = p_szaccountid2,
szsubaccountid2 = p_szsubaccountid2,
decamount2 = p_decamount2,
szaccountid3 = p_szaccountid3,
szsubaccountid3 = p_szsubaccountid3,
decamount3 = p_decamount3,
szaccountid4 = p_szaccountid4,
szsubaccountid4 = p_szsubaccountid4,
decamount4 = p_decamount4,
decamount = p_decamount,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

, szfjournalid = p_szfjournalid

where 
szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_fcustpayment_updatefcustpayment_013(
p_szfcustpaymentid bos_dt_szid,
p_dtmfcustpayment timestamp,
p_szfcashreceiptid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szaccountid1 bos_dt_szid,
p_szsubaccountid1 bos_dt_szglaccount,
p_decamount1 bos_dt_decamount,
p_szaccountid2 bos_dt_szid,
p_szsubaccountid2 bos_dt_szglaccount,
p_decamount2 bos_dt_decamount,
p_szaccountid3 bos_dt_szid,
p_szsubaccountid3 bos_dt_szglaccount,
p_decamount3 bos_dt_decamount,
p_szaccountid4 bos_dt_szid,
p_szsubaccountid4 bos_dt_szglaccount,
p_decamount4 bos_dt_decamount,
p_decamount bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_fcustpayment
set 
dtmfcustpayment = p_dtmfcustpayment,
szfcashreceiptid = p_szfcashreceiptid,
szdeposanid = p_szdeposanid,
szaccountid1 = p_szaccountid1,
szsubaccountid1 = p_szsubaccountid1,
decamount1 = p_decamount1,
szaccountid2 = p_szaccountid2,
szsubaccountid2 = p_szsubaccountid2,
decamount2 = p_decamount2,
szaccountid3 = p_szaccountid3,
szsubaccountid3 = p_szsubaccountid3,
decamount3 = p_decamount3,
szaccountid4 = p_szaccountid4,
szsubaccountid4 = p_szsubaccountid4,
decamount4 = p_decamount4,
decamount = p_decamount,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

, szfjournalid = p_szfjournalid

where 
szfcustpaymentid = p_szfcustpaymentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcust_getnonvatcust(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select distinct
a.szproductid,
b.szname,
b.sznickname

from 
bos_ar_nonvatcustitem a
inner join bos_inv_product b on a.szproductid = b.szproductid
where 
a.szproductid = p_szproductid; --/** cjr tracking **/ set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcust_isnonvatcustexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select distinct
szproductid

from 
bos_ar_nonvatcustitem
where 
szproductid = p_szproductid; -- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcust_isnonvatprodexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select distinct
szcustid

from 
bos_ar_nonvatcustitem
where 
szcustid = p_szcustid; -- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcustitem_createnonvatcustitem(
p_szproductid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_ar_nonvatcustitem
(
szproductid,
szcustid
)
values
(
p_szproductid,
p_szcustid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcustitem_deletenonvatcustitem(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_ar_nonvatcustitem
where
szproductid = p_szproductid;
-- ==================================================================
--set ansi_nulls on;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcustitem_getnonvatcustitem(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
a.szcustid,
b.szname,
a.szproductid

from 
bos_ar_nonvatcustitem a
inner join bos_ar_customer b on a.szcustid = b.szcustid
where 
a.szproductid = p_szproductid;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_nonvatcustitem_isnonvatcustexist(
p_szproductid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid, szcustid

from 
bos_ar_nonvatcustitem
where 
szproductid = p_szproductid and szcustid = p_szcustid;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_createpaymentterm(
p_szpaymenttermid bos_dt_szid,
p_szfailcheckactiontype bos_dt_szsmallid,
p_szopenblockapprovalid bos_dt_szid,
p_decoverlimitamount_2 bos_dt_decamount,
p_szfailcheckactiontype_2 bos_dt_szsmallid,
p_szopenblockapprovalid_2 bos_dt_szid,
p_decoverlimitamount_3 bos_dt_decamount,
p_szfailcheckactiontype_3 bos_dt_szsmallid,
p_szopenblockapprovalid_3 bos_dt_szid,
p_decoverlimitamount_4 bos_dt_decamount,
p_szfailcheckactiontype_4 bos_dt_szsmallid,
p_szopenblockapprovalid_4 bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_intmaxpaymentday integer,
p_intprintedmaxpaymentday integer,
p_intdaybeforeduedatetosendinvoice integer,
p_szpaymentdelaypenalty varchar,
p_decpenalty bos_dt_decamount,
p_decfixpenalty bos_dt_decamount,
p_szpenaltyorderitemtypeid bos_dt_szid,
p_szadvancepaymentincentive varchar,
p_decincentive bos_dt_decamount,
p_decfixincentive bos_dt_decamount,
p_szincentiveorderitemtypeid bos_dt_szid,
p_decmultiplefactor numeric,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ar_paymentterm
(
szpaymenttermid,
szfailcheckactiontype,
szopenblockapprovalid,
decoverlimitamount_2,
szfailcheckactiontype_2,
szopenblockapprovalid_2,
decoverlimitamount_3,
szfailcheckactiontype_3,
szopenblockapprovalid_3,
decoverlimitamount_4,
szfailcheckactiontype_4,
szopenblockapprovalid_4,
szccyid,
intmaxpaymentday,
intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty,
decpenalty,
decfixpenalty,
szpenaltyorderitemtypeid,
szadvancepaymentincentive,
decincentive,
decfixincentive,
szincentiveorderitemtypeid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- multiple factor,
decmultiplefactor
)
values
(
p_szpaymenttermid,
p_szfailcheckactiontype,
p_szopenblockapprovalid,
p_decoverlimitamount_2,
p_szfailcheckactiontype_2,
p_szopenblockapprovalid_2,
p_decoverlimitamount_3,
p_szfailcheckactiontype_3,
p_szopenblockapprovalid_3,
p_decoverlimitamount_4,
p_szfailcheckactiontype_4,
p_szopenblockapprovalid_4,
p_szccyid,
p_intmaxpaymentday,
p_intprintedmaxpaymentday,
p_intdaybeforeduedatetosendinvoice,
p_szpaymentdelaypenalty,
p_decpenalty,
p_decfixpenalty,
p_szpenaltyorderitemtypeid,
p_szadvancepaymentincentive,
p_decincentive,
p_decfixincentive,
p_szincentiveorderitemtypeid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- multiple factor,
p_decmultiplefactor
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_createpaymentterm_013(
p_szpaymenttermid bos_dt_szid,
p_szfailcheckactiontype bos_dt_szsmallid,
p_szopenblockapprovalid bos_dt_szid,
p_decoverlimitamount_2 bos_dt_decamount,
p_szfailcheckactiontype_2 bos_dt_szsmallid,
p_szopenblockapprovalid_2 bos_dt_szid,
p_decoverlimitamount_3 bos_dt_decamount,
p_szfailcheckactiontype_3 bos_dt_szsmallid,
p_szopenblockapprovalid_3 bos_dt_szid,
p_decoverlimitamount_4 bos_dt_decamount,
p_szfailcheckactiontype_4 bos_dt_szsmallid,
p_szopenblockapprovalid_4 bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_intmaxpaymentday integer,
p_intprintedmaxpaymentday integer,
p_intdaybeforeduedatetosendinvoice integer,
p_szpaymentdelaypenalty varchar,
p_decpenalty bos_dt_decamount,
p_decfixpenalty bos_dt_decamount,
p_szpenaltyorderitemtypeid bos_dt_szid,
p_szadvancepaymentincentive varchar,
p_decincentive bos_dt_decamount,
p_decfixincentive bos_dt_decamount,
p_szincentiveorderitemtypeid bos_dt_szid,
p_decmultiplefactor numeric,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_ar_paymentterm
(
szpaymenttermid,
szfailcheckactiontype,
szopenblockapprovalid,
decoverlimitamount_2,
szfailcheckactiontype_2,
szopenblockapprovalid_2,
decoverlimitamount_3,
szfailcheckactiontype_3,
szopenblockapprovalid_3,
decoverlimitamount_4,
szfailcheckactiontype_4,
szopenblockapprovalid_4,
szccyid,
intmaxpaymentday,
intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty,
decpenalty,
decfixpenalty,
szpenaltyorderitemtypeid,
szadvancepaymentincentive,
decincentive,
decfixincentive,
szincentiveorderitemtypeid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- multiple factor,
decmultiplefactor
)
values
(
p_szpaymenttermid,
p_szfailcheckactiontype,
p_szopenblockapprovalid,
p_decoverlimitamount_2,
p_szfailcheckactiontype_2,
p_szopenblockapprovalid_2,
p_decoverlimitamount_3,
p_szfailcheckactiontype_3,
p_szopenblockapprovalid_3,
p_decoverlimitamount_4,
p_szfailcheckactiontype_4,
p_szopenblockapprovalid_4,
p_szccyid,
p_intmaxpaymentday,
p_intprintedmaxpaymentday,
p_intdaybeforeduedatetosendinvoice,
p_szpaymentdelaypenalty,
p_decpenalty,
p_decfixpenalty,
p_szpenaltyorderitemtypeid,
p_szadvancepaymentincentive,
p_decincentive,
p_decfixincentive,
p_szincentiveorderitemtypeid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- multiple factor,
p_decmultiplefactor
);

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_deletepaymentterm(
p_szpaymenttermid bos_dt_szid)
returns void as
$body$
begin
delete from bos_ar_paymentterm
where 
	szpaymenttermid = p_szpaymenttermid;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_getlistofpaymentterm()
returns void as
$body$
begin
select 
szpaymenttermid,
szfailcheckactiontype,
szccyid


from 
bos_ar_paymentterm;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_getpaymentterm(
p_szpaymenttermid bos_dt_szid)
returns void as
$body$
begin
select 
szfailcheckactiontype,
szopenblockapprovalid,

decoverlimitamount_2,
szfailcheckactiontype_2,
szopenblockapprovalid_2,

decoverlimitamount_3,
szfailcheckactiontype_3,
szopenblockapprovalid_3,

decoverlimitamount_4,
szfailcheckactiontype_4,
szopenblockapprovalid_4,

pt.szccyid,
cu.szamountformat as szccyamountformat_j,

intmaxpaymentday,
intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty,
decpenalty,
decfixpenalty,
szpenaltyorderitemtypeid,
szadvancepaymentincentive,
decincentive,
decfixincentive,
szincentiveorderitemtypeid,

-- data status.
pt.dtmlastupdated,
pt.balreadytransferred,

decmultiplefactor


from 
bos_ar_paymentterm as pt
left join bos_cu_currency as cu on cu.szccyid = pt.szccyidleft join bos_cu_currency as cu on cu.szccyid = pt.szccyid
where 
szpaymenttermid = p_szpaymenttermid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_getpaymentterm_013(
p_szpaymenttermid bos_dt_szid)
returns void as
$body$
begin
select 
szfailcheckactiontype,
szopenblockapprovalid,

decoverlimitamount_2,
szfailcheckactiontype_2,
szopenblockapprovalid_2,

decoverlimitamount_3,
szfailcheckactiontype_3,
szopenblockapprovalid_3,

decoverlimitamount_4,
szfailcheckactiontype_4,
szopenblockapprovalid_4,

pt.szccyid,
cu.szamountformat as szccyamountformat_j,

intmaxpaymentday,
intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty,
decpenalty,
decfixpenalty,
szpenaltyorderitemtypeid,
szadvancepaymentincentive,
decincentive,
decfixincentive,
szincentiveorderitemtypeid,

-- data status.
pt.dtmlastupdated,
pt.balreadytransferred,

decmultiplefactor


from 
bos_ar_paymentterm as pt
left join bos_cu_currency as cu on cu.szccyid = pt.szccyidleft join bos_cu_currency as cu on cu.szccyid = pt.szccyid
where 
szpaymenttermid = p_szpaymenttermid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_ispaymenttermexist(
p_szpaymenttermid bos_dt_szid)
returns void as
$body$
begin
select 
szpaymenttermid


from 
bos_ar_paymentterm
where 
szpaymenttermid = p_szpaymenttermid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_lockpaymentterm(
p_szpaymenttermid bos_dt_szid)
returns void as
$body$
begin
update bos_ar_paymentterm
set 
decpenalty = decpenalty
where 
szpaymenttermid = p_szpaymenttermid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_updatepaymentterm(
p_szpaymenttermid bos_dt_szid,
p_szfailcheckactiontype bos_dt_szsmallid,
p_szopenblockapprovalid bos_dt_szid,
p_decoverlimitamount_2 bos_dt_decamount,
p_szfailcheckactiontype_2 bos_dt_szsmallid,
p_szopenblockapprovalid_2 bos_dt_szid,
p_decoverlimitamount_3 bos_dt_decamount,
p_szfailcheckactiontype_3 bos_dt_szsmallid,
p_szopenblockapprovalid_3 bos_dt_szid,
p_decoverlimitamount_4 bos_dt_decamount,
p_szfailcheckactiontype_4 bos_dt_szsmallid,
p_szopenblockapprovalid_4 bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_intmaxpaymentday integer,
p_intprintedmaxpaymentday integer,
p_intdaybeforeduedatetosendinvoice integer,
p_szpaymentdelaypenalty varchar,
p_decpenalty bos_dt_decamount,
p_decfixpenalty bos_dt_decamount,
p_szpenaltyorderitemtypeid bos_dt_szid,
p_szadvancepaymentincentive varchar,
p_decincentive bos_dt_decamount,
p_decfixincentive bos_dt_decamount,
p_szincentiveorderitemtypeid bos_dt_szid,
p_decmultiplefactor numeric)
returns void as
$body$
begin
update bos_ar_paymentterm
set 
szfailcheckactiontype = p_szfailcheckactiontype,
szopenblockapprovalid = p_szopenblockapprovalid,

decoverlimitamount_2 = p_decoverlimitamount_2,
szfailcheckactiontype_2 = p_szfailcheckactiontype_2,
szopenblockapprovalid_2 = p_szopenblockapprovalid_2,

decoverlimitamount_3 = p_decoverlimitamount_3,
szfailcheckactiontype_3 = p_szfailcheckactiontype_3,
szopenblockapprovalid_3 = p_szopenblockapprovalid_3,

decoverlimitamount_4 = p_decoverlimitamount_4,
szfailcheckactiontype_4 = p_szfailcheckactiontype_4,
szopenblockapprovalid_4 = p_szopenblockapprovalid_4,

szccyid = p_szccyid,
intmaxpaymentday = p_intmaxpaymentday,
intprintedmaxpaymentday = p_intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice = p_intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty = p_szpaymentdelaypenalty,
decpenalty = p_decpenalty,
decfixpenalty = p_decfixpenalty,
szpenaltyorderitemtypeid = p_szpenaltyorderitemtypeid,
szadvancepaymentincentive= p_szadvancepaymentincentive,
decincentive = p_decincentive,
decfixincentive = p_decfixincentive,
szincentiveorderitemtypeid = p_szincentiveorderitemtypeid,
decmultiplefactor = p_decmultiplefactor

where 
szpaymenttermid = p_szpaymenttermid;

end;
$body$
language plpgsql volatile;


create or replace function bos_ar_paymentterm_updatepaymentterm_013(
p_szpaymenttermid bos_dt_szid,
p_szfailcheckactiontype bos_dt_szsmallid,
p_szopenblockapprovalid bos_dt_szid,
p_decoverlimitamount_2 bos_dt_decamount,
p_szfailcheckactiontype_2 bos_dt_szsmallid,
p_szopenblockapprovalid_2 bos_dt_szid,
p_decoverlimitamount_3 bos_dt_decamount,
p_szfailcheckactiontype_3 bos_dt_szsmallid,
p_szopenblockapprovalid_3 bos_dt_szid,
p_decoverlimitamount_4 bos_dt_decamount,
p_szfailcheckactiontype_4 bos_dt_szsmallid,
p_szopenblockapprovalid_4 bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_intmaxpaymentday integer,
p_intprintedmaxpaymentday integer,
p_intdaybeforeduedatetosendinvoice integer,
p_szpaymentdelaypenalty varchar,
p_decpenalty bos_dt_decamount,
p_decfixpenalty bos_dt_decamount,
p_szpenaltyorderitemtypeid bos_dt_szid,
p_szadvancepaymentincentive varchar,
p_decincentive bos_dt_decamount,
p_decfixincentive bos_dt_decamount,
p_szincentiveorderitemtypeid bos_dt_szid,
p_decmultiplefactor numeric)
returns void as
$body$
begin
update bos_ar_paymentterm
set 
szfailcheckactiontype = p_szfailcheckactiontype,
szopenblockapprovalid = p_szopenblockapprovalid,

decoverlimitamount_2 = p_decoverlimitamount_2,
szfailcheckactiontype_2 = p_szfailcheckactiontype_2,
szopenblockapprovalid_2 = p_szopenblockapprovalid_2,

decoverlimitamount_3 = p_decoverlimitamount_3,
szfailcheckactiontype_3 = p_szfailcheckactiontype_3,
szopenblockapprovalid_3 = p_szopenblockapprovalid_3,

decoverlimitamount_4 = p_decoverlimitamount_4,
szfailcheckactiontype_4 = p_szfailcheckactiontype_4,
szopenblockapprovalid_4 = p_szopenblockapprovalid_4,

szccyid = p_szccyid,
intmaxpaymentday = p_intmaxpaymentday,
intprintedmaxpaymentday = p_intprintedmaxpaymentday,
intdaybeforeduedatetosendinvoice = p_intdaybeforeduedatetosendinvoice,
szpaymentdelaypenalty = p_szpaymentdelaypenalty,
decpenalty = p_decpenalty,
decfixpenalty = p_decfixpenalty,
szpenaltyorderitemtypeid = p_szpenaltyorderitemtypeid,
szadvancepaymentincentive= p_szadvancepaymentincentive,
decincentive = p_decincentive,
decfixincentive = p_decfixincentive,
szincentiveorderitemtypeid = p_szincentiveorderitemtypeid,
decmultiplefactor = p_decmultiplefactor

where 
szpaymenttermid = p_szpaymenttermid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_createqualification(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualification
(
szqualificationclassid,
szqualificationid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szqualificationid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_createqualification_014(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualification
(
szqualificationclassid,
szqualificationid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szqualificationid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_deletequalification(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_biz_qualification
where
szqualificationclassid = p_szqualificationclassid and 
szqualificationid = p_szqualificationid;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_getlistofqualification(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szqualificationid, szdescription

from 
bos_biz_qualification
where 
szqualificationclassid = p_szqualificationclassid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_getqualification(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_biz_qualification
where 
szqualificationclassid = p_szqualificationclassid and szqualificationid = p_szqualificationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_getqualification_014(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_biz_qualification
where 
szqualificationclassid = p_szqualificationclassid and szqualificationid = p_szqualificationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_isqualificationexist(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription

from 
bos_biz_qualification
where 
szqualificationclassid = p_szqualificationclassid and szqualificationid = p_szqualificationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_lockqualification(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid)
returns void as
$body$
begin
update bos_biz_qualification
set 
szdescription = szdescription
where 
szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualification_updatequalification(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualificationid bos_dt_szbigid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_biz_qualification
set 
szdescription = p_szdescription
where 
szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_createqualificationclass(
p_szqualificationclassid bos_dt_szmediumid,
p_szdescription bos_dt_szbigdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualificationclass
(
szqualificationclassid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_createqualificationclass_014(
p_szqualificationclassid bos_dt_szmediumid,
p_szdescription bos_dt_szbigdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualificationclass
(
szqualificationclassid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_deletequalificationclass(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
delete from
bos_biz_qualificationclass
where
 szqualificationclassid = p_szqualificationclassid;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_getlistofqualificationclass()
returns void as
$body$
begin
select 
szqualificationclassid, szdescription 

from 
bos_biz_qualificationclass; 

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_getqualificationclass(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred
from 
bos_biz_qualificationclass
where 
 szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_getqualificationclass_014(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
balreadytransferred
from 
bos_biz_qualificationclass
where 
 szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_isqualificationclassexist(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szdescription 

from 
bos_biz_qualificationclass 
where 
 szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_lockqualificationclass(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_biz_qualificationclass
set 
 szdescription = szdescription
where 
 szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualificationclass_updatequalificationclass(
p_szqualificationclassid bos_dt_szmediumid,
p_szdescription bos_dt_szbigdescription)
returns void as
$body$
begin
update bos_biz_qualificationclass
set 
 szdescription = p_szdescription
where 
 szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_createqualifier(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szqualifierformula bos_dt_szbigmessage,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualifier
(
szqualificationclassid,
szqualifierid,
szdescription,
szqualifierformula,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szqualifierid,
p_szdescription,
p_szqualifierformula,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_createqualifier_014(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szqualifierformula bos_dt_szbigmessage,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_biz_qualifier
(
szqualificationclassid,
szqualifierid,
szdescription,
szqualifierformula,
dtmlastupdated,
balreadytransferred
)
values
(
p_szqualificationclassid,
p_szqualifierid,
p_szdescription,
p_szqualifierformula,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_deletequalifier(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_biz_qualifier
where
szqualificationclassid = p_szqualificationclassid and 
szqualifierid = p_szqualifierid;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_getlistofqualifier(
p_szqualificationclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szqualifierid, szdescription

from 
bos_biz_qualifier
where 
szqualificationclassid = p_szqualificationclassid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_getqualifier(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription,
szqualifierformula,
dtmlastupdated,
balreadytransferred

from 
bos_biz_qualifier
where 
szqualificationclassid = p_szqualificationclassid and 
szqualifierid = p_szqualifierid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_getqualifier_014(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription,
szqualifierformula,
dtmlastupdated,
balreadytransferred

from 
bos_biz_qualifier
where 
szqualificationclassid = p_szqualificationclassid and szqualifierid = p_szqualifierid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_isqualifierexist(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription

from 
bos_biz_qualifier
where 
szqualificationclassid = p_szqualificationclassid and szqualifierid = p_szqualifierid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_lockqualifier(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid)
returns void as
$body$
begin
update bos_biz_qualifier
set 
szdescription = szdescription
where 
szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_biz_qualifier_updatequalifier(
p_szqualificationclassid bos_dt_szmediumid,
p_szqualifierid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szqualifierformula bos_dt_szbigmessage)
returns void as
$body$
begin
update bos_biz_qualifier
set 
szdescription = p_szdescription,
szqualifierformula = p_szqualifierformula
where 
szqualificationclassid = p_szqualificationclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_createbank(
p_szbankid bos_dt_szid,
p_szname bos_dt_szname,
p_szaccount varchar,
p_bankszcontactperson bos_dt_szname,
p_bankszroomno bos_dt_szsmallname,
p_bankszfloor bos_dt_szsmallname,
p_bankszbuilding bos_dt_szname,
p_bankszaddress_1 bos_dt_szname,
p_bankszaddress_2 bos_dt_szname,
p_bankszdistrict bos_dt_szname,
p_bankszcity bos_dt_szmediumname,
p_bankszzipcode bos_dt_szsmallname,
p_bankszstate bos_dt_szmediumname,
p_bankszcountry bos_dt_szmediumname,
p_bankszphoneno_1 bos_dt_szmediumname,
p_bankszphoneno_2 bos_dt_szmediumname,
p_bankszfaxno bos_dt_szmediumname,
p_bankszmobileno bos_dt_szmediumname,
p_bankszemail bos_dt_szmediumname,
p_bankszwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_bank
(
szbankid,
szname,
szaccount,
bankszcontactperson,
bankszroomno,
bankszfloor,
bankszbuilding,
bankszaddress_1,
bankszaddress_2,
bankszdistrict,
bankszcity,
bankszzipcode,
bankszstate,
bankszcountry,
bankszphoneno_1,
bankszphoneno_2,
bankszfaxno,
bankszmobileno,
bankszemail,
bankszwebsite,
dtmlastupdated,
balreadytransferred
)
values
(
p_szbankid,
p_szname,
p_szaccount,
p_bankszcontactperson,
p_bankszroomno,
p_bankszfloor,
p_bankszbuilding,
p_bankszaddress_1,
p_bankszaddress_2,
p_bankszdistrict,
p_bankszcity,
p_bankszzipcode,
p_bankszstate,
p_bankszcountry,
p_bankszphoneno_1,
p_bankszphoneno_2,
p_bankszfaxno,
p_bankszmobileno,
p_bankszemail,
p_bankszwebsite,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_deletebank(
p_szbankid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_cas_bank
WHERE
	szbankid = p_szbankid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_getbank(
p_szbankid bos_dt_szid)
returns void as
$body$
begin
select 
szbankid,
szname,
szaccount,
bankszcontactperson,
bankszroomno,
bankszfloor,
bankszbuilding,
bankszaddress_1,
bankszaddress_2,
bankszdistrict,
bankszcity,
bankszzipcode,
bankszstate,
bankszcountry,
bankszphoneno_1,
bankszphoneno_2,
bankszfaxno,
bankszmobileno,
bankszemail,
bankszwebsite,


dtmlastupdated,
balreadytransferred

from 
bos_cas_bank
where 
szbankid = p_szbankid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_getlistofbank()
returns void as
$body$
begin
select 
szbankid, szname 

from 
bos_cas_bank; 

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_isbankexist(
p_szbankid bos_dt_szid)
returns void as
$body$
begin
select 
szbankid

from 
bos_cas_bank
where 
szbankid = p_szbankid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_lockbank(
p_szbankid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_bank
set 
szaccount = szaccount
where 
szbankid=p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_bank_updatebank(
p_szbankid bos_dt_szid,
p_szname bos_dt_szname,
p_szaccount varchar,
p_bankszcontactperson bos_dt_szname,
p_bankszroomno bos_dt_szsmallname,
p_bankszfloor bos_dt_szsmallname,
p_bankszbuilding bos_dt_szname,
p_bankszaddress_1 bos_dt_szname,
p_bankszaddress_2 bos_dt_szname,
p_bankszdistrict bos_dt_szname,
p_bankszcity bos_dt_szmediumname,
p_bankszzipcode bos_dt_szsmallname,
p_bankszstate bos_dt_szmediumname,
p_bankszcountry bos_dt_szmediumname,
p_bankszphoneno_1 bos_dt_szmediumname,
p_bankszphoneno_2 bos_dt_szmediumname,
p_bankszfaxno bos_dt_szmediumname,
p_bankszmobileno bos_dt_szmediumname,
p_bankszemail bos_dt_szmediumname,
p_bankszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_cas_bank
set 
szname = p_szname,
szaccount = p_szaccount,
bankszcontactperson = p_bankszcontactperson,
bankszroomno = p_bankszroomno,
bankszfloor = p_bankszfloor,
bankszbuilding = p_bankszbuilding,
bankszaddress_1 = p_bankszaddress_1,
bankszaddress_2 = p_bankszaddress_2,
bankszdistrict = p_bankszdistrict,
bankszcity = p_bankszcity,
bankszzipcode = p_bankszzipcode,
bankszstate = p_bankszstate,
bankszcountry = p_bankszcountry,
bankszphoneno_1 = p_bankszphoneno_1,
bankszphoneno_2 = p_bankszphoneno_2,
bankszfaxno = p_bankszfaxno,
bankszmobileno = p_bankszmobileno,
bankszemail = p_bankszemail,
bankszwebsite = p_bankszwebsite
where 
szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_cash_dev_deleteall()
returns void as
$body$
begin
delete from bos_cas_cashreceiptitem;
delete from bos_cas_cashreceipt;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_createfcashout(
p_szcreateid bos_dt_szid,
p_szofficerid bos_dt_szid,
p_szfcashoutid bos_dt_szid,
p_dtmreleased timestamp,
p_szaccountid bos_dt_szglaccount,
p_szsubaccountid bos_dt_szglaccount,
p_szchequeno bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szrecuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fcashout
(
szcreateid,
szofficerid,
szfcashoutid,
dtmreleased,
szaccountid,
szsubaccountid,
szchequeno,
szccyrateid,
szccyid,
szdescription,
deccontrolamount,
szrecuserid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcreateid,
p_szofficerid,
p_szfcashoutid,
p_dtmreleased,
p_szaccountid,
p_szsubaccountid,
p_szchequeno,
p_szccyrateid,
p_szccyid,
p_szdescription,
p_deccontrolamount,
p_szrecuserid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_createfcashout_013(
p_szcreateid bos_dt_szid,
p_szofficerid bos_dt_szid,
p_szfcashoutid bos_dt_szid,
p_dtmreleased timestamp,
p_szaccountid bos_dt_szglaccount,
p_szsubaccountid bos_dt_szglaccount,
p_szchequeno bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szrecuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fcashout
(
szcreateid,
szofficerid,
szfcashoutid,
dtmreleased,
szaccountid,
szsubaccountid,
szchequeno,
szccyrateid,
szccyid,
szdescription,
deccontrolamount,
szrecuserid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcreateid,
p_szofficerid,
p_szfcashoutid,
p_dtmreleased,
p_szaccountid,
p_szsubaccountid,
p_szchequeno,
p_szccyrateid,
p_szccyid,
p_szdescription,
p_deccontrolamount,
p_szrecuserid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_createfcashoutitem(
p_szcreateid bos_dt_szid,
p_btitemnumber integer,
p_szaccountid bos_dt_szglaccount,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashoutitem
(
szcreateid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szcreateid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_createfcashoutitem_013(
p_szcreateid bos_dt_szid,
p_btitemnumber integer,
p_szaccountid bos_dt_szglaccount,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashoutitem
(
szcreateid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szcreateid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_deletefcashout(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fcashout
where
szcreateid=p_szcreateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_deletefcashoutitem(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin
DELETE from
	bos_cas_fcashoutitem
where
	szcreateid=p_szcreateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_getfcashout(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashout.szofficerid,
bos_sm_user.szname as szofficernm,
bos_cas_fcashout.szfcashoutid,
bos_cas_fcashout.dtmreleased,

bos_cas_fcashout.szaccountid,
bos_gl_account.szname as szaccountnm,

bos_cas_fcashout.szsubaccountid,
bos_gl_glsubacc.szdescription as szsubaccountnm,

bos_cas_fcashout.szchequeno,
bos_cas_fcashout.szccyrateid,
bos_cas_fcashout.szccyid,
bos_cu_currency.szamountformat,
bos_cas_fcashout.szdescription,
bos_cas_fcashout.deccontrolamount,
bos_cas_fcashout.bresultfrtransfer,
bos_cas_fcashout.szrecuserid,
bos_pi_employee.szname as szrecusernm,
bos_cas_fcashout.bvoid,
bos_gen_approved.bapproved,
bos_cas_fcashout.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_cas_fcashout.btprintedcount,
bos_cas_fcashout.btransferred,
bos_cas_fcashout.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_cas_fcashout.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_cas_fcashout.sztaxentityid,
bos_cas_fcashout.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_cas_fcashout.dtmcreated,
bos_cas_fcashout.bsystemcreated,

bos_cas_fcashout.dtmlastupdated,
bos_cas_fcashout.balreadytransferred

--,bos_cas_fcashout.szfjournalid as szfcashoutfjournalid
from
bos_cas_fcashout left join bos_gen_approved on bos_gen_approved.gdapprovedid = bos_cas_fcashout.gdapprovedid
left join bos_gl_fjournaltrans on bos_cas_fcashout.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_sm_user on bos_sm_user.szuserid = bos_cas_fcashout.szofficerid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashout.szrecuserid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashout.szccyid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fcashout.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashout.szworkplaceid

left join bos_gl_account on bos_gl_account.szaccountid = bos_cas_fcashout.szaccountid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid 
and bos_gl_glsubacc.szglsubaccid = bos_cas_fcashout.szsubaccountid

where
bos_cas_fcashout.szcreateid=p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_getfcashoutitem(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashoutitem.btitemnumber,

bos_cas_fcashoutitem.szaccountid,
bos_gl_account.szname as szaccountnm,

bos_cas_fcashoutitem.szsubaccountid,
bos_gl_glsubacc.szdescription as szsubaccountnm,

bos_cas_fcashoutitem.szdescription,
bos_cas_fcashoutitem.decamount
from
bos_cas_fcashoutitem
left join bos_cas_fcashout on bos_cas_fcashout.szcreateid = bos_cas_fcashoutitem.szcreateid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fcashout.szcompanyid
left join bos_gl_account on bos_cas_fcashoutitem.szaccountid = bos_gl_account.szaccountid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid
and bos_gl_glsubacc.szglsubaccid = bos_cas_fcashoutitem.szsubaccountid

where
bos_cas_fcashoutitem.szcreateid=p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_getfcashoutwherefcashoutid(
p_szfcashoutid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashout.szcreateid,
bos_cas_fcashout.dtmreleased,
bos_cas_fcashout.szaccountid,
bos_cas_fcashout.szsubaccountid,
bos_cas_fcashout.szchequeno,
bos_cas_fcashout.szccyrateid,
bos_cas_fcashout.szccyid,
bos_cas_fcashout.szdescription,
bos_cas_fcashout.deccontrolamount,
bos_cas_fcashout.bresultfrtransfer,
bos_cas_fcashout.bvoid,
bos_gen_approved.bapproved,
bos_cas_fcashout.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_cas_fcashout.btprintedcount,
bos_cas_fcashout.btransferred,
bos_cas_fcashout.szcompanyid,
bos_cas_fcashout.szworkplaceid,
bos_cas_fcashout.sztaxentityid,
bos_cas_fcashout.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_cas_fcashout.dtmcreated,
bos_cas_fcashout.bsystemcreated
from
bos_cas_fcashout 
left join bos_gen_approved on bos_cas_fcashout.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_cas_fcashout.szfjournalid = bos_gl_fjournaltrans.szfjournalid
where
bos_cas_fcashout.szfcashoutid = p_szfcashoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_getlistoffcashout()
returns void as
$body$
begin
select 
szcreateid,
dtmcreated,
szfcashoutid,
dtmreleased

from 
bos_cas_fcashout;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_getlistoffcashoutitemwheredate(
p_dtmbegin timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select
	bos_cas_fcashout.szrecuserid,
	bos_pi_employee.szname,
	bos_cas_fcashout.szccyid,
	sum(bos_cas_fcashoutitem.decamount) as total
from
	(bos_cas_fcashout left join bos_cas_fcashoutitem on bos_cas_fcashout.szcreateid = bos_cas_fcashoutitem.szcreateid)
	left join bos_pi_employee on bos_cas_fcashout.szrecuserid= bos_pi_employee.szemployeeid
where
bos_cas_fcashout.dtmreleased >= p_dtmbegin and 
bos_cas_fcashout.dtmreleased < interval '1 day' + p_dtmend and bos_cas_fcashout.bvoid = 0
group by
bos_cas_fcashout.szccyid, 
bos_cas_fcashout.szrecuserid, 
bos_pi_employee.szname
order by
bos_cas_fcashout.szrecuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_isfcashoutexist(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin
select 
szcreateid

from 
bos_cas_fcashout
where 
szcreateid=p_szcreateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_lockfcashout(
p_szcreateid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashout
set 
dtmcreated = dtmcreated
where 
szcreateid=p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_lockfcashoutwherefcashoutid(
p_szfcashoutid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashout
set 
dtmcreated = dtmcreated
where 
szfcashoutid = p_szfcashoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_markfcashoutapplied(
p_szcreateid bos_dt_szid,
p_szfcashoutid bos_dt_szid,
p_dtmreleased timestamp,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashout
set 
szfcashoutid = p_szfcashoutid,
dtmreleased = p_dtmreleased,
bapplied=1,
szfjournalid = p_szfjournalid
where 
szcreateid = p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_markfcashoutvoid(
p_szfcashoutid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_cas_fcashout
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcashoutid=p_szfcashoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_updatefcashout(
p_szcreateid bos_dt_szid,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szchequeno bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szrecuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_cas_fcashout
set 
szofficerid = p_szofficerid,
szaccountid = p_szaccountid,
szsubaccountid = p_szsubaccountid,
szchequeno = p_szchequeno,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdescription = p_szdescription ,
deccontrolamount = p_deccontrolamount ,
szrecuserid = p_szrecuserid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid
where 
szcreateid=p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashout_updatefcashout_013(
p_szcreateid bos_dt_szid,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szchequeno bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szrecuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_cas_fcashout
set 
szofficerid = p_szofficerid,
szaccountid = p_szaccountid,
szsubaccountid = p_szsubaccountid,
szchequeno = p_szchequeno,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdescription = p_szdescription ,
deccontrolamount = p_deccontrolamount ,
szrecuserid = p_szrecuserid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid
where 
szcreateid=p_szcreateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_createfcashreceipt(
p_szfcashreceiptid bos_dt_szid,
p_dtmreceipt timestamp,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szdeposanid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fcashreceipt
(
szfcashreceiptid,
dtmreceipt,
szofficerid,
szaccountid,
szsubaccountid,
szccyrateid,
szccyid,
szdescription,
deccontrolamount,
szdeposanid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcashreceiptid ,
p_dtmreceipt ,
p_szofficerid,
p_szaccountid,
p_szsubaccountid,
p_szccyrateid,
p_szccyid,
p_szdescription,
p_deccontrolamount,
p_szdeposanid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_createfcashreceipt_013(
p_szfcashreceiptid bos_dt_szid,
p_dtmreceipt timestamp,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szdeposanid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fcashreceipt
(
szfcashreceiptid,
dtmreceipt,
szofficerid,
szaccountid,
szsubaccountid,
szccyrateid,
szccyid,
szdescription,
deccontrolamount,
szdeposanid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcashreceiptid ,
p_dtmreceipt ,
p_szofficerid,
p_szaccountid,
p_szsubaccountid,
p_szccyrateid,
p_szccyid,
p_szdescription,
p_deccontrolamount,
p_szdeposanid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_createfcashreceiptitem(
p_szfcashreceiptid bos_dt_szid,
p_btitemnumber integer,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashreceiptitem
(
szfcashreceiptid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szfcashreceiptid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_createfcashreceiptitem_013(
p_szfcashreceiptid bos_dt_szid,
p_btitemnumber integer,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashreceiptitem
(
szfcashreceiptid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szfcashreceiptid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_deletefcashreceipt(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fcashreceipt
where
szfcashreceiptid=p_szfcashreceiptid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_deletefcashreceiptitem(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fcashreceiptitem
where
szfcashreceiptid=p_szfcashreceiptid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_getfcashreceipt(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashreceipt.dtmreceipt,
bos_cas_fcashreceipt.szofficerid,
bos_sm_user.szname as szofficernm,

bos_cas_fcashreceipt.szaccountid,
bos_gl_account.szname as szaccountnm,

bos_cas_fcashreceipt.szsubaccountid,
bos_gl_glsubacc.szdescription as szsubaccountnm,

bos_cas_fcashreceipt.szccyrateid,
bos_cas_fcashreceipt.szccyid,
bos_cu_currency.szamountformat,
bos_cas_fcashreceipt.szdescription,
bos_cas_fcashreceipt.deccontrolamount,
bos_cas_fcashreceipt.szdeposanid,
bos_pi_employee.szname as szdeposannm,

bos_cas_fcashreceipt.bresultfrtransfer,
bos_cas_fcashreceipt.bvoid,
bos_gen_approved.bapproved,
bos_cas_fcashreceipt.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_cas_fcashreceipt.btprintedcount,
bos_cas_fcashreceipt.btransferred,

bos_cas_fcashreceipt.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_cas_fcashreceipt.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_cas_fcashreceipt.sztaxentityid,
bos_cas_fcashreceipt.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_cas_fcashreceipt.dtmcreated,
bos_cas_fcashreceipt.bsystemcreated,

bos_cas_fcashreceipt.szuserid,
dsuser.szname as szusernm_j,

bos_cas_fcashreceipt.dtmlastupdated,
bos_cas_fcashreceipt.balreadytransferred

from
bos_cas_fcashreceipt left join bos_gen_approved on bos_cas_fcashreceipt.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_cas_fcashreceipt.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_sm_user on bos_sm_user.szuserid = bos_cas_fcashreceipt.szofficerid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashreceipt.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashreceipt.szccyid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fcashreceipt.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashreceipt.szworkplaceid

left join bos_gl_account on bos_gl_account.szaccountid = bos_cas_fcashreceipt.szaccountid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid
and bos_gl_glsubacc.szglsubaccid = bos_cas_fcashreceipt.szsubaccountid

left join bos_sm_user as dsuser on dsuser.szuserid = bos_cas_fcashreceipt.szuserid

where
bos_cas_fcashreceipt.szfcashreceiptid=p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_getfcashreceiptitem(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashreceiptitem.btitemnumber,

bos_cas_fcashreceiptitem.szaccountid,
bos_gl_account.szname as szaccountnm,

bos_cas_fcashreceiptitem.szsubaccountid,
bos_gl_glsubacc.szdescription as szsubaccountnm,

bos_cas_fcashreceiptitem.szdescription,
bos_cas_fcashreceiptitem.decamount
from
bos_cas_fcashreceiptitem 
left join bos_cas_fcashreceipt as bcr on bcr.szfcashreceiptid = bos_cas_fcashreceiptitem.szfcashreceiptid
left join bos_gl_company on bos_gl_company.szcompanyid = bcr.szcompanyid

left join bos_gl_account on bos_cas_fcashreceiptitem.szaccountid = bos_gl_account.szaccountid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid
and bos_gl_glsubacc.szglsubaccid = bos_cas_fcashreceiptitem.szsubaccountid
where
bos_cas_fcashreceiptitem.szfcashreceiptid = p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_getlistoffcashreceipt()
returns void as
$body$
begin
select 
szfcashreceiptid,
dtmreceipt

from 
bos_cas_fcashreceipt;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_isfcashreceiptexist(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin
select 
szfcashreceiptid

from 
bos_cas_fcashreceipt
where 
szfcashreceiptid=p_szfcashreceiptid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_lockfcashreceipt(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashreceipt
set 
dtmreceipt = dtmreceipt
where 
szfcashreceiptid=p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_markfcashreceiptapplied(
p_szfcashreceiptid bos_dt_szid,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashreceipt
set 
bapplied = 1,
szfjournalid = p_szfjournalid
where 
szfcashreceiptid = p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_markfcashreceiptvoid(
p_szfcashreceiptid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashreceipt
set 
bvoid = 1
where 
szfcashreceiptid = p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_updatefcashreceipt(
p_szfcashreceiptid bos_dt_szid,
p_dtmreceipt timestamp,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szdeposanid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashreceipt
set 
dtmreceipt = p_dtmreceipt,
szofficerid = p_szofficerid,
szaccountid = p_szaccountid,
szsubaccountid = p_szsubaccountid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdescription = p_szdescription,
deccontrolamount = p_deccontrolamount,
szdeposanid = p_szdeposanid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

--better use created date as last updated date.
dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfcashreceiptid = p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashreceipt_updatefcashreceipt_013(
p_szfcashreceiptid bos_dt_szid,
p_dtmreceipt timestamp,
p_szofficerid bos_dt_szid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_szdeposanid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashreceipt
set 
dtmreceipt = p_dtmreceipt,
szofficerid = p_szofficerid,
szaccountid = p_szaccountid,
szsubaccountid = p_szsubaccountid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdescription = p_szdescription,
deccontrolamount = p_deccontrolamount,
szdeposanid = p_szdeposanid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

--better use created date as last updated date.
dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfcashreceiptid = p_szfcashreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_createfcashtemp(
p_szfcashtempid bos_dt_szid,
p_dtmtransaction timestamp,
p_szofficerid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szemployeeid bos_dt_szid,
p_szcashdirection varchar,
p_szfcashtrnid bos_dt_szmediumid,
p_szfcashid bos_dt_szid,
p_szfcashurl varchar,
p_szchequeno bos_dt_szid,
p_szsrctrnid bos_dt_szmediumid,
p_szsrcdocid bos_dt_szid,
p_szsrcurl varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmmobiletransaction timestamp,
p_szjobroutine bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fcashtemp
(
szfcashtempid,
dtmtransaction,
szofficerid,
szccyrateid,
szccyid,
szemployeeid,
szcashdirection,
szfcashtrnid,
szfcashid,
szfcashurl,
szchequeno,
szsrctrnid,
szsrcdocid,
szsrcurl,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred,
dtmmobiletransaction,
szjobroutine
)
values
(
p_szfcashtempid ,
p_dtmtransaction,
p_szofficerid,
p_szccyrateid,
p_szccyid,
p_szemployeeid,
p_szcashdirection,
p_szfcashtrnid,
p_szfcashid,
p_szfcashurl,
p_szchequeno,
p_szsrctrnid,
p_szsrcdocid,
p_szsrcurl,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmmobiletransaction,
p_szjobroutine
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_createfcashtemp_013(
p_szfcashtempid bos_dt_szid,
p_dtmtransaction timestamp,
p_szofficerid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szemployeeid bos_dt_szid,
p_szcashdirection varchar,
p_szfcashtrnid bos_dt_szmediumid,
p_szfcashid bos_dt_szid,
p_szfcashurl varchar,
p_szchequeno bos_dt_szid,
p_szsrctrnid bos_dt_szmediumid,
p_szsrcdocid bos_dt_szid,
p_szsrcurl varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmmobiletransaction timestamp,
p_szjobroutine bos_dt_szid,
p_szcashadvancerequestid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fcashtemp
(
szfcashtempid,
dtmtransaction,
szofficerid,
szccyrateid,
szccyid,
szemployeeid,
szcashdirection,
szfcashtrnid,
szfcashid,
szfcashurl,
szchequeno,
szsrctrnid,
szsrcdocid,
szsrcurl,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred,
dtmmobiletransaction,
szjobroutine,
szcashadvancerequestid
)
values
(
p_szfcashtempid ,
p_dtmtransaction,
p_szofficerid,
p_szccyrateid,
p_szccyid,
p_szemployeeid,
p_szcashdirection,
p_szfcashtrnid,
p_szfcashid,
p_szfcashurl,
p_szchequeno,
p_szsrctrnid,
p_szsrcdocid,
p_szsrcurl,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmmobiletransaction,
p_szjobroutine,
p_szcashadvancerequestid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_createfcashtempitem(
p_szfcashtempid bos_dt_szid,
p_btitemnumber smallint,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashtempitem
(
szfcashtempid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szfcashtempid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_createfcashtempitem_013(
p_szfcashtempid bos_dt_szid,
p_btitemnumber smallint,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdescription bos_dt_szdescription,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_cas_fcashtempitem
(
szfcashtempid,
btitemnumber,
szaccountid,
szsubaccountid,
szdescription,
decamount
)
values
(
p_szfcashtempid,
p_btitemnumber,
p_szaccountid,
p_szsubaccountid,
p_szdescription,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_deletefcashtemp(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fcashtemp
where
szfcashtempid=p_szfcashtempid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_deletefcashtempitem(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fcashtempitem
where
szfcashtempid=p_szfcashtempid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getfcashtemp(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szofficerid,
bos_sm_user.szname as szofficernm,
bos_cas_fcashtemp.szccyrateid,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szchequeno,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,

bos_cas_fcashtemp.bresultfrtransfer,
bos_cas_fcashtemp.bvoid,
bos_gen_approved.bapproved,
bos_cas_fcashtemp.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_cas_fcashtemp.btprintedcount,
bos_cas_fcashtemp.btransferred,
bos_cas_fcashtemp.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_cas_fcashtemp.sztaxentityid,
bos_cas_fcashtemp.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_cas_fcashtemp.dtmcreated,
bos_cas_fcashtemp.bsystemcreated,

bos_cas_fcashtemp.dtmlastupdated,
bos_cas_fcashtemp.balreadytransferred,
bos_cas_fcashtemp.dtmmobiletransaction,
bos_cas_fcashtemp.szjobroutine,
bos_cas_fcashtemp.szcashadvancerequestid

from
bos_cas_fcashtemp left join bos_gen_approved on bos_cas_fcashtemp.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_cas_fcashtemp.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_sm_user on bos_sm_user.szuserid = bos_cas_fcashtemp.szofficerid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fcashtemp.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
where
bos_cas_fcashtemp.szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getfcashtemp_014(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szofficerid,
bos_sm_user.szname as szofficernm,
bos_cas_fcashtemp.szccyrateid,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szchequeno,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,

bos_cas_fcashtemp.bresultfrtransfer,
bos_cas_fcashtemp.bvoid,
bos_gen_approved.bapproved,
bos_cas_fcashtemp.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_cas_fcashtemp.btprintedcount,
bos_cas_fcashtemp.btransferred,
bos_cas_fcashtemp.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_cas_fcashtemp.sztaxentityid,
bos_cas_fcashtemp.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_cas_fcashtemp.dtmcreated,
bos_cas_fcashtemp.bsystemcreated,

bos_cas_fcashtemp.dtmlastupdated,
bos_cas_fcashtemp.balreadytransferred,
bos_cas_fcashtemp.dtmmobiletransaction,
bos_cas_fcashtemp.szjobroutine,
bos_cas_fcashtemp.szcashadvancerequestid

from
bos_cas_fcashtemp left join bos_gen_approved on bos_cas_fcashtemp.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_cas_fcashtemp.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_sm_user on bos_sm_user.szuserid = bos_cas_fcashtemp.szofficerid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fcashtemp.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
where
bos_cas_fcashtemp.szfcashtempid = p_szfcashtempid;


end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getfcashtempitem(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fcashtempitem.btitemnumber,

bos_cas_fcashtempitem.szaccountid,
bos_gl_account.szname as szaccountnm,

bos_cas_fcashtempitem.szsubaccountid,
bos_gl_glsubacc.szdescription as szsubaccountnm,

bos_cas_fcashtempitem.szdescription,
bos_cas_fcashtempitem.decamount
from
bos_cas_fcashtempitem 
left join bos_cas_fcashtemp as bct on bct.szfcashtempid = bos_cas_fcashtempitem.szfcashtempid
left join bos_gl_company on bos_gl_company.szcompanyid = bct.szcompanyid

left join bos_gl_account on bos_cas_fcashtempitem.szaccountid = bos_gl_account.szaccountid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid
and bos_gl_glsubacc.szglsubaccid = bos_cas_fcashtempitem.szsubaccountid
where
bos_cas_fcashtempitem.szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistofcosoon(
p_dtmstart timestamp,
p_dtmend timestamp,
p_szworkplaceid bos_dt_szid,
p_szaccid bos_dt_szid,
p_szsubaccid bos_dt_szglaccount,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
	bos_cas_fcashtempitem.szsubaccountid,
	bos_cas_fcashtemp.szworkplaceid,
	bos_cas_fcashtemp.szccyrateid,
	bos_cas_fcashtemp.szccyid,
	bos_cas_fcashtemp.szcashdirection

from 
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempidinner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where 
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and 
bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and 
bos_cas_fcashtemp.szfcashid = '' and 
bos_cas_fcashtemp.bapplied = 1 and 
bos_cas_fcashtempitem.btitemnumber = 0 and 
bos_cas_fcashtemp.szworkplaceid like p_szworkplaceid and 
bos_cas_fcashtempitem.szaccountid like p_szaccid and 
os_cas_fcashtempitem.szsubaccountid like p_szsubaccid and 
bos_cas_fcashtemp.szofficerid like p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistofcosoon_013(
p_dtmstart timestamp,
p_dtmend timestamp,
p_szworkplaceid bos_dt_szid,
p_szaccid bos_dt_szid,
p_szsubaccid bos_dt_szglaccount,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
	bos_cas_fcashtempitem.szsubaccountid,
	bos_cas_fcashtemp.szworkplaceid,
	bos_cas_fcashtemp.szccyrateid,
	bos_cas_fcashtemp.szccyid,
	bos_cas_fcashtemp.szcashdirection
	
from 
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempidinner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where 
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and bos_cas_fcashtemp.szfcashid = '' and bos_cas_fcashtemp.bapplied = 1 and bos_cas_fcashtempitem.btitemnumber = 0 and bos_cas_fcashtemp.szworkplaceid like p_szworkplaceid and bos_cas_fcashtempitem.szaccountid like p_szaccid and bos_cas_fcashtempitem.szsubaccountid like p_szsubaccid and bos_cas_fcashtemp.szofficerid like p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistoffcashtemp()
returns void as
$body$
begin
select 
szfcashtempid,
dtmtransaction

from 
bos_cas_fcashtemp;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistoftempcashbalance(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid varchar,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szworkplaceid = ''
  then

begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
bos_cas_fcashtempitem.szsubaccountid
from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.szfcashid = '' and
bos_cas_fcashtemp.bapplied = 1 and
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid;
end;

else

begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
bos_cas_fcashtempitem.szsubaccountid,
bos_cas_fcashtemp.szworkplaceid

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.szfcashid = '' and
bos_cas_fcashtemp.bapplied = 1 and
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid;

end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistoftempcashbalance_013(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid varchar,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szworkplaceid = ''
  then

begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
bos_cas_fcashtempitem.szsubaccountid
from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.szfcashid = '' and
bos_cas_fcashtemp.bapplied = 1 and
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid;
end;

else

begin
select distinct
bos_cas_fcashtemp.szcompanyid,
bos_cas_fcashtempitem.szaccountid,
bos_cas_fcashtempitem.szsubaccountid,
bos_cas_fcashtemp.szworkplaceid

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.szfcashid = '' and
bos_cas_fcashtemp.bapplied = 1 and
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid;

end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistofunvouchered(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szcashdirection bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
bos_cas_fcashtemp.szfcashtempid

from 
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempidinner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where 
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and bos_cas_fcashtemp.szfcashid = '' and bos_cas_fcashtemp.bapplied = 1 and bos_cas_fcashtempitem.btitemnumber = 0 and bos_cas_fcashtemp.szcompanyid = p_szcompanyid and bos_cas_fcashtempitem.szaccountid = p_szaccountid and bos_cas_fcashtempitem.szsubaccountid = p_szsubaccountid and bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and bos_cas_fcashtemp.szccyrateid = p_szccyrateid and bos_cas_fcashtemp.szccyid = p_szccyid and bos_cas_fcashtemp.szcashdirection = p_szcashdirection and bos_cas_fcashtemp.szofficerid like p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getlistofunvouchered_013(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szcashdirection bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
bos_cas_fcashtemp.szfcashtempid

from 
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempidinner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid
where 
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and bos_cas_fcashtemp.szfcashid = '' and bos_cas_fcashtemp.bapplied = 1 and bos_cas_fcashtempitem.btitemnumber = 0 and bos_cas_fcashtemp.szcompanyid = p_szcompanyid and bos_cas_fcashtempitem.szaccountid = p_szaccountid and bos_cas_fcashtempitem.szsubaccountid = p_szsubaccountid and bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and bos_cas_fcashtemp.szccyrateid = p_szccyrateid and bos_cas_fcashtemp.szccyid = p_szccyid and bos_cas_fcashtemp.szcashdirection = p_szcashdirection and bos_cas_fcashtemp.szofficerid like p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getsumofaccountpayment(
p_szemployeeid bos_dt_szid,
p_dtmtransaction timestamp,
p_szccyid bos_dt_szsmallid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdirection_in varchar)
returns void as
$body$
begin
select 
bcti.szaccountid, bcti.szsubaccountid, sum(bcti.decamount) as decamount

from 
bos_cas_fcashtemp as bct
left join bos_cas_fcashtempitem as bcti on bct.szfcashtempid = bcti.szfcashtempid
where 
bct.szemployeeid = p_szemployeeid and bct.dtmtransaction >= p_dtmtransaction and bct.dtmtransaction < interval '1 day' + p_dtmtransaction and bct.szccyid = p_szccyid and bcti.decamount < 0 and bcti.szaccountid like p_szaccountid and bcti.szsubaccountid like p_szsubaccountid and bct.bapplied = 1 and bct.szcashdirection = p_szdirection_in and bct.bsystemcreated = 0 group by bcti.szaccountid, bcti.szsubaccountid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getsumofaccountpayment_013(
p_szemployeeid bos_dt_szid,
p_dtmtransaction timestamp,
p_szccyid bos_dt_szsmallid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdirection_in varchar)
returns void as
$body$
begin
select 
bcti.szaccountid, bcti.szsubaccountid, sum(bcti.decamount) as decamount

from 
bos_cas_fcashtemp as bct
left join bos_cas_fcashtempitem as bcti on bct.szfcashtempid = bcti.szfcashtempid
where 
bct.szemployeeid = p_szemployeeid and bct.dtmtransaction >= p_dtmtransaction and bct.dtmtransaction < interval '1 day' + p_dtmtransaction and bct.szccyid = p_szccyid and bcti.decamount < 0 and bcti.szaccountid like p_szaccountid and bcti.szsubaccountid like p_szsubaccountid and bct.bapplied = 1 and bct.szcashdirection = p_szdirection_in and bct.bsystemcreated = 0 group by bcti.szaccountid, bcti.szsubaccountid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getsumofaccountpayment_out(
p_szemployeeid bos_dt_szid,
p_dtmtransaction timestamp,
p_szccyid bos_dt_szsmallid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdirection_out varchar)
returns void as
$body$
begin
select 
bcti.szaccountid, bcti.szsubaccountid, sum(bcti.decamount) as decamount

from 
bos_cas_fcashtemp as bct
left join bos_cas_fcashtempitem as bcti on bct.szfcashtempid = bcti.szfcashtempid
where 
bct.szemployeeid = p_szemployeeid and bct.dtmtransaction >= p_dtmtransaction and bct.dtmtransaction < interval '1 day' + p_dtmtransaction and bct.szccyid = p_szccyid and bcti.decamount > 0 and bcti.szaccountid like p_szaccountid and bcti.szsubaccountid like p_szsubaccountid and bct.bapplied = 1 and bct.szcashdirection = p_szdirection_out and bct.bsystemcreated = 0 group by bcti.szaccountid, bcti.szsubaccountid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_getsumofaccountpayment_out_013(
p_szemployeeid bos_dt_szid,
p_dtmtransaction timestamp,
p_szccyid bos_dt_szsmallid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szdirection_out varchar)
returns void as
$body$
begin
select 
bcti.szaccountid, bcti.szsubaccountid, sum(bcti.decamount) as decamount

from 
bos_cas_fcashtemp as bct
left join bos_cas_fcashtempitem as bcti on bct.szfcashtempid = bcti.szfcashtempid
where 
bct.szemployeeid = p_szemployeeid and bct.dtmtransaction >= p_dtmtransaction and bct.dtmtransaction < interval '1 day' + p_dtmtransaction and bct.szccyid = p_szccyid and bcti.decamount > 0 and bcti.szaccountid like p_szaccountid and bcti.szsubaccountid like p_szsubaccountid and bct.bapplied = 1 and bct.szcashdirection = p_szdirection_out and bct.bsystemcreated = 0 group by bcti.szaccountid, bcti.szsubaccountid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_gettempcashbalance(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin


if p_szworkplaceid = ''
  then

begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szfcashtempid,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,
bos_cas_fcashtempitem.szdescription,
bos_cas_fcashtempitem.decamount
from
bos_cas_fcashtempitem
left join bos_cas_fcashtemp on bos_cas_fcashtemp.szfcashtempid = bos_cas_fcashtempitem.szfcashtempid
where
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.bapplied = 1
order by
bos_cas_fcashtemp.dtmtransaction, bos_cas_fcashtemp.szfcashtempid;
end;

else

begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szfcashtempid,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,
bos_cas_fcashtempitem.szdescription,
bos_cas_fcashtempitem.decamount
from
bos_cas_fcashtempitem
left join bos_cas_fcashtemp on bos_cas_fcashtemp.szfcashtempid = bos_cas_fcashtempitem.szfcashtempid
where
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.bapplied = 1
order by
bos_cas_fcashtemp.dtmtransaction, bos_cas_fcashtemp.szfcashtempid;
end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_gettempcashbalance_013(
p_szcompanyid bos_dt_szmediumid,
p_szaccountid bos_dt_szid,
p_szsubaccountid bos_dt_szglaccount,
p_szworkplaceid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin


if p_szworkplaceid = ''
  then

begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szfcashtempid,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,
bos_cas_fcashtempitem.szdescription,
bos_cas_fcashtempitem.decamount
from
bos_cas_fcashtempitem
left join bos_cas_fcashtemp on bos_cas_fcashtemp.szfcashtempid = bos_cas_fcashtempitem.szfcashtempid
where
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.bapplied = 1
order by
bos_cas_fcashtemp.dtmtransaction, bos_cas_fcashtemp.szfcashtempid;
end;

else

begin
select
bos_cas_fcashtemp.dtmtransaction,
bos_cas_fcashtemp.szfcashtempid,
bos_cas_fcashtemp.szcashdirection,
bos_cas_fcashtemp.szfcashtrnid,
bos_cas_fcashtemp.szfcashid,
bos_cas_fcashtemp.szfcashurl,
bos_cas_fcashtemp.szsrctrnid,
bos_cas_fcashtemp.szsrcdocid,
bos_cas_fcashtemp.szsrcurl,
bos_cas_fcashtempitem.szdescription,
bos_cas_fcashtempitem.decamount
from
bos_cas_fcashtempitem
left join bos_cas_fcashtemp on bos_cas_fcashtemp.szfcashtempid = bos_cas_fcashtempitem.szfcashtempid
where
bos_cas_fcashtemp.szcompanyid = p_szcompanyid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtempitem.szsubaccountid like p_szsubaccountid and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtemp.dtmtransaction >= p_dtmstart and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmend and
bos_cas_fcashtemp.bapplied = 1
order by
bos_cas_fcashtemp.dtmtransaction, bos_cas_fcashtemp.szfcashtempid;
end;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_isfcashtempexist(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
select 
szfcashtempid

from 
bos_cas_fcashtemp
where 
szfcashtempid=p_szfcashtempid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_lockfcashtemp(
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashtemp
set 
dtmtransaction = dtmtransaction
where 
szfcashtempid=p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_updatefcashinfo(
p_szfcashtempid bos_dt_szid,
p_szfcashtrnid bos_dt_szmediumid,
p_szfcashid bos_dt_szid,
p_szfcashurl bos_dt_szurl)
returns void as
$body$
begin
update bos_cas_fcashtemp
set 
szfcashtrnid = p_szfcashtrnid,
szfcashid = p_szfcashid,
szfcashurl = p_szfcashurl
where 
szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_updatefcashinfo_013(
p_szfcashtempid bos_dt_szid,
p_szfcashtrnid bos_dt_szmediumid,
p_szfcashid bos_dt_szid,
p_szfcashurl bos_dt_szurl)
returns void as
$body$
begin
update bos_cas_fcashtemp
set 
szfcashtrnid = p_szfcashtrnid,
szfcashid = p_szfcashid,
szfcashurl = p_szfcashurl
where 
szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_updatefcashtemp(
p_szfcashtempid bos_dt_szid,
p_dtmtransaction timestamp,
p_szofficerid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szemployeeid bos_dt_szid,
p_szcashdirection varchar,
p_szchequeno bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmmobiletransaction timestamp,
p_szjobroutine bos_dt_szid,
p_szcashadvancerequestid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fcashtemp
set 
dtmtransaction = p_dtmtransaction,
szofficerid = p_szofficerid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szemployeeid = p_szemployeeid,
szcashdirection = p_szcashdirection,
szchequeno = p_szchequeno,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmmobiletransaction = p_dtmmobiletransaction,
szjobroutine = p_szjobroutine,
szcashadvancerequestid=p_szcashadvancerequestid
where 
szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fcashtemp_updatefcashtemp_013(
p_szfcashtempid bos_dt_szid,
p_dtmtransaction timestamp,
p_szofficerid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szemployeeid bos_dt_szid,
p_szcashdirection varchar,
p_szchequeno bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmmobiletransaction timestamp,
p_szjobroutine bos_dt_szid,
p_szcashadvancerequestid bos_dt_szid,
p_szsrctrnid bos_dt_szmediumid,
p_szsrcdocid bos_dt_szid,
p_szsrcurl varchar)
returns void as
$body$
begin
update bos_cas_fcashtemp
set 
dtmtransaction = p_dtmtransaction,
szofficerid = p_szofficerid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szemployeeid = p_szemployeeid,
szcashdirection = p_szcashdirection,
szchequeno = p_szchequeno,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmmobiletransaction = p_dtmmobiletransaction,
szjobroutine = p_szjobroutine,
szcashadvancerequestid=p_szcashadvancerequestid,
szsrctrnid=p_szsrctrnid,
szsrcdocid=p_szsrcdocid,
szsrcurl=p_szsrcurl
where 
szfcashtempid = p_szfcashtempid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_createfpdrclearing(
p_szfpdrclearingid bos_dt_szid,
p_dtmclearing timestamp,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fpdrclearing
(
szfpdrclearingid,
dtmclearing,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfpdrclearingid,
p_dtmclearing,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_createfpdrclearingitem(
p_szfpdrclearingid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrclearingitem
(
szfpdrclearingid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrclearingid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_createfpdrclearingitem_013(
p_szfpdrclearingid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrclearingitem
(
szfpdrclearingid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrclearingid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_deletefpdrclearing(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fpdrclearing
where
szfpdrclearingid = p_szfpdrclearingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_deletefpdrclearingitem(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fpdrclearingitem
where
szfpdrclearingid = p_szfpdrclearingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_getfpdrclearing(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin

select 
bos_cas_fpdrclearing.dtmclearing,
bos_cas_fpdrclearing.szdescription,
bos_cas_fpdrclearing.bresultfrtransfer,
bos_cas_fpdrclearing.bvoid,
null as bapproved,
bos_cas_fpdrclearing.bapplied,
null as bjournal,
null as bposted,
bos_cas_fpdrclearing.btprintedcount,
bos_cas_fpdrclearing.btransferred,
bos_cas_fpdrclearing.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_cas_fpdrclearing.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_cas_fpdrclearing.sztaxentityid,
bos_cas_fpdrclearing.bneedapproval,
bos_cas_fpdrclearing.gdapprovedid,
'' as szapprovalid,
null as szfjournalid ,
bos_cas_fpdrclearing.dtmcreated,
null as bsystemcreated,
bos_cas_fpdrclearing.dtmlastupdated,
bos_cas_fpdrclearing.balreadytransferred

from 
bos_cas_fpdrclearing
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrclearing.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrclearing.szworkplaceid
where
szfpdrclearingid = p_szfpdrclearingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_getfpdrclearingitem(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin
select 
bos_cas_fpdrclearingitem.szbankid,
bos_cas_fpdrclearingitem.szrefid

from 
bos_cas_fpdrclearingitem
where 
szfpdrclearingid = p_szfpdrclearingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_getlistoffpdrclearing()
returns void as
$body$
begin
select 
szfpdrclearingid,
dtmclearing

from 
bos_cas_fpdrclearing;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_isfpdrclearingexist(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin
select 
szfpdrclearingid

from 
bos_cas_fpdrclearing
where 
szfpdrclearingid = p_szfpdrclearingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_lockfpdrclearing(
p_szfpdrclearingid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrclearing
set 
szdescription = szdescription
where 
szfpdrclearingid = p_szfpdrclearingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrclearing_updatefpdrclearing(
p_szfpdrclearingid bos_dt_szid,
p_dtmclearing timestamp,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_cas_fpdrclearing
set 
dtmclearing = p_dtmclearing,
szdescription = p_szdescription,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid
where 
szfpdrclearingid = p_szfpdrclearingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_createfpdrdeposit(
p_szfpdrdepositid bos_dt_szid,
p_dtmdeposit timestamp,
p_szdescription bos_dt_szdescription,
p_szdepositbankid bos_dt_szid,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fpdrdeposit
(
szfpdrdepositid,
dtmdeposit,
szdescription,
szdepositbankid,
szclearingaccid,
szclearingsubaccid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfpdrdepositid,
p_dtmdeposit,
p_szdescription,
p_szdepositbankid,
p_szclearingaccid,
p_szclearingsubaccid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_createfpdrdeposit_013(
p_szfpdrdepositid bos_dt_szid,
p_dtmdeposit timestamp,
p_szdescription bos_dt_szdescription,
p_szdepositbankid bos_dt_szid,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_fpdrdeposit
(
szfpdrdepositid,
dtmdeposit,
szdescription,
szdepositbankid,
szclearingaccid,
szclearingsubaccid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfpdrdepositid,
p_dtmdeposit,
p_szdescription,
p_szdepositbankid,
p_szclearingaccid,
p_szclearingsubaccid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_createfpdrdeposititem(
p_szfpdrdepositid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrdeposititem
(
szfpdrdepositid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrdepositid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_createfpdrdeposititem_013(
p_szfpdrdepositid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrdeposititem
(
szfpdrdepositid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrdepositid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_deletefpdrdeposit(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_cas_fpdrdeposit
where
szfpdrdepositid = p_szfpdrdepositid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_deletefpdrdeposititem(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_cas_fpdrdeposititem
where
szfpdrdepositid = p_szfpdrdepositid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_getfpdrdeposit(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fpdrdeposit.szfpdrdepositid,
bos_cas_fpdrdeposit.dtmdeposit,
bos_cas_fpdrdeposit.szdescription,

bos_cas_fpdrdeposit.szdepositbankid,
bos_cas_bank.szname as szdepositbanknm,

bos_cas_fpdrdeposit.szclearingaccid,
bos_gl_account.szname as szclearingaccnm,

bos_cas_fpdrdeposit.szclearingsubaccid,
bos_gl_glsubacc.szdescription as szclearingsubaccnm,

bos_cas_fpdrdeposit.bresultfrtransfer,
bos_cas_fpdrdeposit.bvoid,
bos_gen_approved.bapproved,
bos_cas_fpdrdeposit.bapplied,
bos_cas_fpdrdeposit.btprintedcount,
bos_cas_fpdrdeposit.btransferred,
bos_cas_fpdrdeposit.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_cas_fpdrdeposit.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_cas_fpdrdeposit.sztaxentityid,
bos_cas_fpdrdeposit.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
null as szfjournalid,
null as bjournal,
null as bposted,
bos_cas_fpdrdeposit.dtmcreated,
null as bsystemcreated,

bos_cas_fpdrdeposit.dtmlastupdated,
bos_cas_fpdrdeposit.balreadytransferred

from
bos_cas_fpdrdeposit
left join bos_gen_approved on bos_cas_fpdrdeposit .gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_cas_bank on bos_cas_bank.szbankid = bos_cas_fpdrdeposit.szdepositbankid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrdeposit.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrdeposit.szworkplaceid

left join bos_gl_account on bos_gl_account.szaccountid = bos_cas_fpdrdeposit.szclearingaccid
left join bos_gl_glsubacc on bos_gl_glsubacc.szledgerid = bos_gl_company.szledgerid
and bos_gl_glsubacc.szglsubaccid = bos_cas_fpdrdeposit.szclearingsubaccid

where
bos_cas_fpdrdeposit.szfpdrdepositid = p_szfpdrdepositid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_getfpdrdeposititem(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin
select 
bos_cas_fpdrdeposititem.szbankid,
bos_cas_fpdrdeposititem.szrefid

from 
bos_cas_fpdrdeposititem
left join bos_cas_fpdrdeposit on bos_cas_fpdrdeposititem.szfpdrdepositid = bos_cas_fpdrdeposit.szfpdrdepositidleft join bos_cas_fpdrdeposit on bos_cas_fpdrdeposititem.szfpdrdepositid = bos_cas_fpdrdeposit.szfpdrdepositid
where 
bos_cas_fpdrdeposititem.szfpdrdepositid = p_szfpdrdepositid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_getlistoffpdrdeposit()
returns void as
$body$
begin
select 
szfpdrdepositid,
dtmdeposit,
szdescription


from 
bos_cas_fpdrdeposit;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_isfpdrdepositexist(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin
select 
szfpdrdepositid

from 
bos_cas_fpdrdeposit
where 
szfpdrdepositid = p_szfpdrdepositid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_lockfpdrdeposit(
p_szfpdrdepositid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrdeposit
set 
szdescription= szdescription
where 
szfpdrdepositid = p_szfpdrdepositid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_updatefpdrdeposit(
p_szfpdrdepositid bos_dt_szid,
p_dtmdeposit timestamp,
p_szdescription bos_dt_szdescription,
p_szdepositbankid bos_dt_szid,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
update bos_cas_fpdrdeposit
set 
dtmdeposit = p_dtmdeposit,
szdescription = p_szdescription,
szdepositbankid = p_szdepositbankid,
szclearingaccid = p_szclearingaccid,
szclearingsubaccid = p_szclearingsubaccid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

-- data status
dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred

where 
szfpdrdepositid = p_szfpdrdepositid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrdeposit_updatefpdrdeposit_013(
p_szfpdrdepositid bos_dt_szid,
p_dtmdeposit timestamp,
p_szdescription bos_dt_szdescription,
p_szdepositbankid bos_dt_szid,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
update bos_cas_fpdrdeposit
set 
dtmdeposit = p_dtmdeposit,
szdescription = p_szdescription,
szdepositbankid = p_szdepositbankid,
szclearingaccid = p_szclearingaccid,
szclearingsubaccid = p_szclearingsubaccid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

-- data status
dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred

where 
szfpdrdepositid = p_szfpdrdepositid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_createfpdrreceipt(
p_szfpdrreceiptid bos_dt_szid,
p_dtmpdrreceipt timestamp,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdeposanid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szfcashtempid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmmobiletransaction timestamp)
returns void as
$body$
begin
insert into bos_cas_fpdrreceipt
(
szfpdrreceiptid ,
dtmpdrreceipt ,
szdescription ,
deccontrolamount ,
bassumevaluable ,
szccyrateid,
szccyid,
szdeposanid,
szpayforaccid,
szpayforsubaccid,
szunclearpdraccid,
szunclearpdrsubaccid,
szfcashtempid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
dtmlastupdated,
balreadytransferred,
dtmmobiletransaction
)
values
(
p_szfpdrreceiptid ,
p_dtmpdrreceipt ,
p_szdescription ,
p_deccontrolamount ,
p_bassumevaluable ,
p_szccyrateid,
p_szccyid,
p_szdeposanid,
p_szpayforaccid,
p_szpayforsubaccid,
p_szunclearpdraccid,
p_szunclearpdrsubaccid,
p_szfcashtempid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmmobiletransaction
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_createfpdrreceipt_013(
p_szfpdrreceiptid bos_dt_szid,
p_dtmpdrreceipt timestamp,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdeposanid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szfcashtempid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmmobiletransaction timestamp,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrreceipt
(
szfpdrreceiptid ,
dtmpdrreceipt ,
szdescription ,
deccontrolamount ,
bassumevaluable ,
szccyrateid,
szccyid,
szdeposanid,
szpayforaccid,
szpayforsubaccid,
szunclearpdraccid,
szunclearpdrsubaccid,
szfcashtempid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
dtmlastupdated,
balreadytransferred,
dtmmobiletransaction,
szofficerid
)
values
(
p_szfpdrreceiptid ,
p_dtmpdrreceipt ,
p_szdescription ,
p_deccontrolamount ,
p_bassumevaluable ,
p_szccyrateid,
p_szccyid,
p_szdeposanid,
p_szpayforaccid,
p_szpayforsubaccid,
p_szunclearpdraccid,
p_szunclearpdrsubaccid,
p_szfcashtempid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmmobiletransaction,
p_szofficerid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_createfpdrreceiptitem(
p_szfpdrreceiptid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_dtmpdr timestamp,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_cas_fpdrreceiptitem
(
szfpdrreceiptid,
shitemnumber,
szbankid,
szrefid,
szcustid,
decamount,
dtmdue,
dtmpdr,
szdescription
)
values
(
p_szfpdrreceiptid,
p_shitemnumber,
p_szbankid,
p_szrefid,
p_szcustid,
p_decamount,
p_dtmdue,
p_dtmpdr,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_createfpdrreceiptitem_013(
p_szfpdrreceiptid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_dtmpdr timestamp,
p_szdescription bos_dt_szdescription,
p_custbankaccountno bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrreceiptitem  
(
szfpdrreceiptid,
shitemnumber,
szbankid,
szrefid,
szcustid,
decamount,
dtmdue,
dtmpdr,
szdescription,
custbankaccountno
)
values
(
p_szfpdrreceiptid,
p_shitemnumber,
p_szbankid,
p_szrefid,
p_szcustid,
p_decamount,
p_dtmdue,
p_dtmpdr,
p_szdescription,
p_custbankaccountno
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_deletefpdrreceipt(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
DELETE from bos_cas_fpdrreceipt
where
szfpdrreceiptid=p_szfpdrreceiptid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_deletefpdrreceiptitem(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fpdrreceiptitem
where
szfpdrreceiptid=p_szfpdrreceiptid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_getfpdrreceipt(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
select  
bos_cas_fpdrreceipt.dtmpdrreceipt ,  
bos_cas_fpdrreceipt.szdescription ,  
bos_cas_fpdrreceipt.deccontrolamount ,  
bos_cas_fpdrreceipt.bassumevaluable ,  

bos_cas_fpdrreceipt.szccyrateid,  

bos_cas_fpdrreceipt.szccyid,  
bos_cu_currency.szsymbol as szccysymbol,  
bos_cu_currency.szamountformat,  

bos_cas_fpdrreceipt.szdeposanid,  
bos_pi_employee.szname as szdeposannm,  

bos_cas_fpdrreceipt.szpayforaccid,  
bos_cas_fpdrreceipt.szpayforsubaccid,  

pay_for_acc.szname as szpayforaccnm,  
pay_for_sub_acc.szdescription as szpayforsubaccnm,  

bos_cas_fpdrreceipt.szunclearpdraccid,  
bos_cas_fpdrreceipt.szunclearpdrsubaccid,  

unclear_acc.szname as szunclearpdraccnm,  
unclear_sub_acc.szdescription as szunclearpdrsubaccnm,  

bos_cas_fpdrreceipt.szfcashtempid,  

bos_cas_fpdrreceipt.bresultfrtransfer,  
bos_cas_fpdrreceipt.bvoid,  
bos_gen_approved.bapproved,  
bos_cas_fpdrreceipt.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_cas_fpdrreceipt.btprintedcount,  
bos_cas_fpdrreceipt.btransferred,  
bos_cas_fpdrreceipt.szcompanyid,  
bos_gl_company.szname as szcompanynm,  
bos_cas_fpdrreceipt.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  
bos_cas_fpdrreceipt.sztaxentityid,  
bos_cas_fpdrreceipt.bneedapproval,  
bos_cas_fpdrreceipt.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  
bos_cas_fpdrreceipt.dtmcreated,  
bos_cas_fpdrreceipt.bsystemcreated,  

bos_cas_fpdrreceipt.dtmlastupdated,  
bos_cas_fpdrreceipt.balreadytransferred,  
bos_cas_fpdrreceipt.dtmmobiletransaction,

bos_cas_fpdrreceipt.szofficerid,
coalesce(bos_sm_user.szname, '') as szofficernm 

from  
bos_cas_fpdrreceipt 
left join bos_gen_approved on bos_cas_fpdrreceipt.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_cas_fpdrreceipt.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fpdrreceipt.szccyid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fpdrreceipt.szdeposanid  

left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrreceipt.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrreceipt.szworkplaceid  

left join bos_gl_account as pay_for_acc on pay_for_acc.szaccountid = bos_cas_fpdrreceipt.szpayforaccid  
left join bos_gl_glsubacc as pay_for_sub_acc on pay_for_sub_acc.szledgerid = bos_gl_company.szledgerid  
and pay_for_sub_acc.szglsubaccid = bos_cas_fpdrreceipt.szpayforsubaccid  

left join bos_gl_account as unclear_acc on unclear_acc.szaccountid = bos_cas_fpdrreceipt.szunclearpdraccid  
left join bos_gl_glsubacc as unclear_sub_acc on unclear_sub_acc.szledgerid = bos_gl_company.szledgerid  
and unclear_sub_acc.szglsubaccid = bos_cas_fpdrreceipt.szunclearpdrsubaccid  

left join bos_sm_user on  bos_sm_user.szuserid = bos_cas_fpdrreceipt.szofficerid

where  
bos_cas_fpdrreceipt.szfpdrreceiptid = p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_getfpdrreceipt_014(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
select  
bos_cas_fpdrreceipt.dtmpdrreceipt ,  
bos_cas_fpdrreceipt.szdescription ,  
bos_cas_fpdrreceipt.deccontrolamount ,  
bos_cas_fpdrreceipt.bassumevaluable ,  

bos_cas_fpdrreceipt.szccyrateid,  

bos_cas_fpdrreceipt.szccyid,  
bos_cu_currency.szsymbol as szccysymbol,  
bos_cu_currency.szamountformat,  

bos_cas_fpdrreceipt.szdeposanid,  
bos_pi_employee.szname as szdeposannm,  

bos_cas_fpdrreceipt.szpayforaccid,  
bos_cas_fpdrreceipt.szpayforsubaccid,  

pay_for_acc.szname as szpayforaccnm,  
pay_for_sub_acc.szdescription as szpayforsubaccnm,  

bos_cas_fpdrreceipt.szunclearpdraccid,  
bos_cas_fpdrreceipt.szunclearpdrsubaccid,  

unclear_acc.szname as szunclearpdraccnm,  
unclear_sub_acc.szdescription as szunclearpdrsubaccnm,  

bos_cas_fpdrreceipt.szfcashtempid,  

bos_cas_fpdrreceipt.bresultfrtransfer,  
bos_cas_fpdrreceipt.bvoid,  
bos_gen_approved.bapproved,  
bos_cas_fpdrreceipt.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_cas_fpdrreceipt.btprintedcount,  
bos_cas_fpdrreceipt.btransferred,  
bos_cas_fpdrreceipt.szcompanyid,  
bos_gl_company.szname as szcompanynm,  
bos_cas_fpdrreceipt.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  
bos_cas_fpdrreceipt.sztaxentityid,  
bos_cas_fpdrreceipt.bneedapproval,  
bos_cas_fpdrreceipt.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  
bos_cas_fpdrreceipt.dtmcreated,  
bos_cas_fpdrreceipt.bsystemcreated,  

bos_cas_fpdrreceipt.dtmlastupdated,  
bos_cas_fpdrreceipt.balreadytransferred,  
bos_cas_fpdrreceipt.dtmmobiletransaction,

bos_cas_fpdrreceipt.szofficerid,
coalesce(bos_sm_user.szname, '') as szofficernm 

from  
bos_cas_fpdrreceipt 
left join bos_gen_approved on bos_cas_fpdrreceipt.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_cas_fpdrreceipt.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fpdrreceipt.szccyid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fpdrreceipt.szdeposanid  

left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrreceipt.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrreceipt.szworkplaceid  

left join bos_gl_account as pay_for_acc on pay_for_acc.szaccountid = bos_cas_fpdrreceipt.szpayforaccid  
left join bos_gl_glsubacc as pay_for_sub_acc on pay_for_sub_acc.szledgerid = bos_gl_company.szledgerid  
and pay_for_sub_acc.szglsubaccid = bos_cas_fpdrreceipt.szpayforsubaccid  

left join bos_gl_account as unclear_acc on unclear_acc.szaccountid = bos_cas_fpdrreceipt.szunclearpdraccid  
left join bos_gl_glsubacc as unclear_sub_acc on unclear_sub_acc.szledgerid = bos_gl_company.szledgerid  
and unclear_sub_acc.szglsubaccid = bos_cas_fpdrreceipt.szunclearpdrsubaccid  

left join bos_sm_user on  bos_sm_user.szuserid = bos_cas_fpdrreceipt.szofficerid

where  
bos_cas_fpdrreceipt.szfpdrreceiptid = p_szfpdrreceiptid;


end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_getfpdrreceiptitem(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin

select
bos_cas_fpdrreceiptitem.shitemnumber,
bos_cas_fpdrreceiptitem.szbankid,
bos_cas_bank.szname as szbanknm,
bos_cas_fpdrreceiptitem.szrefid,
bos_cas_fpdrreceiptitem.szcustid,
bos_ar_customer.szname as szcustnm,
bos_cas_fpdrreceiptitem.decamount,
bos_cas_fpdrreceiptitem.dtmdue,
bos_cas_fpdrreceiptitem.dtmpdr,
bos_cas_fpdrreceiptitem.szdescription
from
bos_cas_fpdrreceiptitem
left join bos_ar_customer on bos_ar_customer.szcustid = bos_cas_fpdrreceiptitem.szcustid
left join bos_cas_bank on bos_cas_bank.szbankid = bos_cas_fpdrreceiptitem.szbankid
where
szfpdrreceiptid = p_szfpdrreceiptid
order by
bos_cas_fpdrreceiptitem.szbankid,	
bos_cas_fpdrreceiptitem.szrefid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_getfpdrreceiptitem_013(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin

select  
bos_cas_fpdrreceiptitem.shitemnumber,  
bos_cas_fpdrreceiptitem.szbankid,  
bos_cas_bank.szname as szbanknm,  
bos_cas_fpdrreceiptitem.szrefid,  
bos_cas_fpdrreceiptitem.szcustid,  
bos_ar_customer.szname as szcustnm,  
bos_cas_fpdrreceiptitem.decamount,  
bos_cas_fpdrreceiptitem.dtmdue,  
bos_cas_fpdrreceiptitem.dtmpdr,  
bos_cas_fpdrreceiptitem.szdescription,
bos_cas_fpdrreceiptitem.custbankaccountno  
from  
bos_cas_fpdrreceiptitem  
left join bos_ar_customer on bos_ar_customer.szcustid = bos_cas_fpdrreceiptitem.szcustid  
left join bos_cas_bank on bos_cas_bank.szbankid = bos_cas_fpdrreceiptitem.szbankid  
where  
szfpdrreceiptid = p_szfpdrreceiptid  
order by  
bos_cas_fpdrreceiptitem.szbankid,   
bos_cas_fpdrreceiptitem.szrefid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_getlistoffpdrreceipt()
returns void as
$body$
begin
select 
szfpdrreceiptid,
szdescription,
dtmpdrreceipt

from 
bos_cas_fpdrreceipt;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_isfpdrreceiptexist(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
select 
szfpdrreceiptid

from 
bos_cas_fpdrreceipt
where 
szfpdrreceiptid = p_szfpdrreceiptid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_lockfpdrreceipt(
p_szfpdrreceiptid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreceipt
set 
dtmpdrreceipt = dtmpdrreceipt
where 
szfpdrreceiptid = p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_markfpdrreceiptapplied(
p_szfpdrreceiptid bos_dt_szid,
p_bapplied smallint)
returns void as
$body$
begin
update bos_cas_fpdrreceipt
set 
bapplied = p_bapplied
where 
szfpdrreceiptid = p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_updatefcashtempid(
p_szfpdrreceiptid bos_dt_szid,
p_szfcashtempid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreceipt
set 
szfcashtempid = p_szfcashtempid
where 
szfpdrreceiptid=p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_updatefpdrreceipt(
p_szfpdrreceiptid bos_dt_szid,
p_dtmpdrreceipt timestamp,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdeposanid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmmobiletransaction timestamp)
returns void as
$body$
begin
update bos_cas_fpdrreceipt
set 
dtmpdrreceipt = p_dtmpdrreceipt ,
szdescription = p_szdescription ,
deccontrolamount = p_deccontrolamount ,
bassumevaluable = p_bassumevaluable ,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdeposanid = p_szdeposanid,
szpayforaccid = p_szpayforaccid,
szpayforsubaccid = p_szpayforsubaccid,
szunclearpdraccid = p_szunclearpdraccid,
szunclearpdrsubaccid = p_szunclearpdrsubaccid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
dtmmobiletransaction =p_dtmmobiletransaction
where 
szfpdrreceiptid=p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreceipt_updatefpdrreceipt_013(
p_szfpdrreceiptid bos_dt_szid,
p_dtmpdrreceipt timestamp,
p_szdescription bos_dt_szdescription,
p_deccontrolamount bos_dt_decamount,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdeposanid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmmobiletransaction timestamp,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreceipt
set 
dtmpdrreceipt = p_dtmpdrreceipt ,
szdescription = p_szdescription ,
deccontrolamount = p_deccontrolamount ,
bassumevaluable = p_bassumevaluable ,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdeposanid = p_szdeposanid,
szpayforaccid = p_szpayforaccid,
szpayforsubaccid = p_szpayforsubaccid,
szunclearpdraccid = p_szunclearpdraccid,
szunclearpdrsubaccid = p_szunclearpdrsubaccid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
dtmmobiletransaction =p_dtmmobiletransaction,
szofficerid = p_szofficerid
where 
szfpdrreceiptid=p_szfpdrreceiptid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_createfpdrreject(
p_szfpdrrejectid bos_dt_szid,
p_dtmreject timestamp,
p_szdescription bos_dt_szdescription,
p_szreasonid bos_dt_szid,
p_bpdrcancellation smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrreject
(
szfpdrrejectid,
dtmreject,
szdescription,
szreasonid,
bpdrcancellation,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
dtmlastupdated,
balreadytransferred,
szofficerid
)
values
(
p_szfpdrrejectid,
p_dtmreject,
p_szdescription,
p_szreasonid,
p_bpdrcancellation,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_dtmlastupdated,
p_balreadytransferred,
p_szofficerid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_createfpdrreject_014(
p_szfpdrrejectid bos_dt_szid,
p_dtmreject timestamp,
p_szdescription bos_dt_szdescription,
p_szreasonid bos_dt_szid,
p_bpdrcancellation smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrreject
(
szfpdrrejectid,
dtmreject,
szdescription,
szreasonid,
bpdrcancellation,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
dtmlastupdated,
balreadytransferred,
szofficerid
)
values
(
p_szfpdrrejectid,
p_dtmreject,
p_szdescription,
p_szreasonid,
p_bpdrcancellation,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_dtmlastupdated,
p_balreadytransferred,
p_szofficerid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_createfpdrrejectitem(
p_szfpdrrejectid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrrejectitem
(
szfpdrrejectid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrrejectid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_createfpdrrejectitem_013(
p_szfpdrrejectid bos_dt_szid,
p_shitemnumber smallint,
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_fpdrrejectitem
(
szfpdrrejectid,
shitemnumber,
szbankid,
szrefid
)
values
(
p_szfpdrrejectid,
p_shitemnumber,
p_szbankid,
p_szrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_deletefpdrreject(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fpdrreject
where
szfpdrrejectid = p_szfpdrrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_deletefpdrrejectitem(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_fpdrrejectitem
where
szfpdrrejectid = p_szfpdrrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_getfpdrreject(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
select   
bos_cas_fpdrreject.dtmreject,  
bos_cas_fpdrreject.szdescription,  
bos_cas_fpdrreject.szreasonid,  
bos_cas_fpdrreject.bpdrcancellation,  
bos_cas_fpdrreject.bresultfrtransfer,  
bos_cas_fpdrreject.bvoid,  
bos_gen_approved.bapproved,  
bos_cas_fpdrreject.bapplied,  
null as bjournal,  
null as bposted,  
bos_cas_fpdrreject.btprintedcount,  
bos_cas_fpdrreject.btransferred,  
bos_cas_fpdrreject.szcompanyid,  
bos_gl_company.szname as szcompanynm,  
bos_cas_fpdrreject.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  
bos_cas_fpdrreject.sztaxentityid,  
bos_cas_fpdrreject.bneedapproval,  
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
'' as szfjournalid,  
bos_cas_fpdrreject.dtmcreated,  
null as bsystemcreated,  

bos_cas_fpdrreject.dtmlastupdated,  
bos_cas_fpdrreject.balreadytransferred,

bos_cas_fpdrreject.szofficerid,
coalesce(bos_sm_user.szname, '') as szofficernm   

from   
bos_cas_fpdrreject 
left join bos_gen_approved on bos_cas_fpdrreject.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrreject.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrreject.szworkplaceid  
left join bos_sm_user on  bos_sm_user.szuserid = bos_cas_fpdrreject.szofficerid
where  
bos_cas_fpdrreject.szfpdrrejectid = p_szfpdrrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_getfpdrreject_014(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
select   
bos_cas_fpdrreject.dtmreject,  
bos_cas_fpdrreject.szdescription,  
bos_cas_fpdrreject.szreasonid,  
bos_cas_fpdrreject.bpdrcancellation,  
bos_cas_fpdrreject.bresultfrtransfer,  
bos_cas_fpdrreject.bvoid,  
bos_gen_approved.bapproved,  
bos_cas_fpdrreject.bapplied,  
null as bjournal,  
null as bposted,  
bos_cas_fpdrreject.btprintedcount,  
bos_cas_fpdrreject.btransferred,  
bos_cas_fpdrreject.szcompanyid,  
bos_gl_company.szname as szcompanynm,  
bos_cas_fpdrreject.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  
bos_cas_fpdrreject.sztaxentityid,  
bos_cas_fpdrreject.bneedapproval,  
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
'' as szfjournalid,  
bos_cas_fpdrreject.dtmcreated,  
null as bsystemcreated,  

bos_cas_fpdrreject.dtmlastupdated,  
bos_cas_fpdrreject.balreadytransferred,

bos_cas_fpdrreject.szofficerid,
coalesce(bos_sm_user.szname, '') as szofficernm   

from   
bos_cas_fpdrreject 
left join bos_gen_approved on bos_cas_fpdrreject.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_company on bos_gl_company.szcompanyid = bos_cas_fpdrreject.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fpdrreject.szworkplaceid  
left join bos_sm_user on  bos_sm_user.szuserid = bos_cas_fpdrreject.szofficerid
where  
bos_cas_fpdrreject.szfpdrrejectid = p_szfpdrrejectid;


end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_getfpdrrejectitem(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
select 
bos_cas_fpdrrejectitem.szbankid,
bos_cas_fpdrrejectitem.szrefid

from 
bos_cas_fpdrrejectitem
left join bos_cas_pdr on bos_cas_pdr.szbankid = bos_cas_fpdrrejectitem.szbankid and bos_cas_pdr.szrefid = bos_cas_fpdrrejectitem.szrefidleft join bos_cas_pdr on bos_cas_pdr.szbankid = bos_cas_fpdrrejectitem.szbankid and bos_cas_pdr.szrefid = bos_cas_fpdrrejectitem.szrefid

where 
szfpdrrejectid = p_szfpdrrejectid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_getlistoffpdrreject()
returns void as
$body$
begin
select 
szfpdrrejectid,
dtmreject,
szdescription

from 
bos_cas_fpdrreject;
--g

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_isfpdrrejectexist(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
select 
szfpdrrejectid

from 
bos_cas_fpdrreject
where 
szfpdrrejectid = p_szfpdrrejectid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_lockfpdrreject(
p_szfpdrrejectid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreject
set 
dtmreject = dtmreject
where 
szfpdrrejectid = p_szfpdrrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_updatefpdrreject(
p_szfpdrrejectid bos_dt_szid,
p_dtmreject timestamp,
p_szdescription bos_dt_szdescription,
p_szreasonid bos_dt_szid,
p_bpdrcancellation smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreject
set 
dtmreject = p_dtmreject,
szdescription = p_szdescription,
szreasonid = p_szreasonid,
bpdrcancellation = p_bpdrcancellation,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szofficerid = p_szofficerid
where 
szfpdrrejectid = p_szfpdrrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_fpdrreject_updatefpdrreject_014(
p_szfpdrrejectid bos_dt_szid,
p_dtmreject timestamp,
p_szdescription bos_dt_szdescription,
p_szreasonid bos_dt_szid,
p_bpdrcancellation smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_fpdrreject
set 
dtmreject = p_dtmreject,
szdescription = p_szdescription,
szreasonid = p_szreasonid,
bpdrcancellation = p_bpdrcancellation,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szofficerid = p_szofficerid
where 
szfpdrrejectid = p_szfpdrrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_freceiptschedule_getfreceiptschedule(
p_szfreceiptscheduleid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_freceiptschedule.dtmreceipt,
bos_sd_freceiptschedule.szreceipttowpid,
bos_sd_freceiptschedule.szdriverid,
bos_pi_employee.szname as szdrivernm,
bos_sd_freceiptschedule.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehicleno,
bos_sd_freceiptschedule.szstocktypeid,
bos_sd_freceiptschedule.bresultfrtransfer,
bos_sd_freceiptschedule.bvoid,
bos_gen_approved.bapproved,
bos_sd_freceiptschedule.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_freceiptschedule.btprintedcount,
bos_sd_freceiptschedule.btransferred,
bos_sd_freceiptschedule.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_freceiptschedule.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_sd_freceiptschedule.sztaxentityid,
bos_sd_freceiptschedule.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_freceiptschedule.dtmcreated,
bos_sd_freceiptschedule.bsystemcreated
from
bos_sd_freceiptschedule
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_freceiptschedule.szdriverid
left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_sd_freceiptschedule.szvehicleid
left join bos_gen_approved on bos_sd_freceiptschedule.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_freceiptschedule.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_freceiptschedule.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_freceiptschedule.szworkplaceid
where
bos_sd_freceiptschedule.szfreceiptscheduleid = p_szfreceiptscheduleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_createpdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_szdescription bos_dt_szdescription,
p_szstatus varchar,
p_dtmclear timestamp,
p_dtmreceipt timestamp,
p_dtmpdr timestamp,
p_dtmdeposit timestamp,
p_szrecworkplaceid bos_dt_szid,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdepositbankid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szcompanyid bos_dt_szmediumid,
p_szledgerid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_decremain bos_dt_decamount,
p_szfbanksettlementid bos_dt_szid,
p_bhasreconcile bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cas_pdr
(
szbankid,
szrefid,
szcustid,
decamount,
dtmdue,
szdescription,
szstatus,
dtmclear,
dtmreceipt,
dtmpdr,
dtmdeposit,
szrecworkplaceid,
bassumevaluable,
szccyrateid,
szccyid,
szdepositbankid,
szdeposanid,
szcompanyid,
szledgerid,
szpayforaccid,
szpayforsubaccid,
szunclearpdraccid,
szunclearpdrsubaccid,
szclearingaccid,
szclearingsubaccid,
--added new field jan 04,
decremain,
szfbanksettlementid,
bhasreconcile,
dtmlastupdated,
balreadytransferred
)
values
(
p_szbankid,
p_szrefid,
p_szcustid,
p_decamount,
p_dtmdue,
p_szdescription,
p_szstatus,
p_dtmclear,
p_dtmreceipt,
p_dtmpdr,
p_dtmdeposit,
p_szrecworkplaceid,
p_bassumevaluable,
p_szccyrateid,
p_szccyid,
p_szdepositbankid,
p_szdeposanid,
p_szcompanyid,
p_szledgerid,
p_szpayforaccid,
p_szpayforsubaccid,
p_szunclearpdraccid,
p_szunclearpdrsubaccid,
p_szclearingaccid,
p_szclearingsubaccid,
--added new field jan 04,
p_decremain,
p_szfbanksettlementid,
p_bhasreconcile,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_createpdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_szdescription bos_dt_szdescription,
p_szstatus varchar,
p_dtmclear timestamp,
p_dtmreceipt timestamp,
p_dtmpdr timestamp,
p_dtmdeposit timestamp,
p_szrecworkplaceid bos_dt_szid,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdepositbankid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szcompanyid bos_dt_szmediumid,
p_szledgerid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_decremain bos_dt_decamount,
p_szfbanksettlementid bos_dt_szid,
p_bhasreconcile bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_custbankaccountno bos_dt_szid,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
insert into bos_cas_pdr
(
szbankid,
szrefid,
szcustid,
decamount,
dtmdue,
szdescription,
szstatus,
dtmclear,
dtmreceipt,
dtmpdr,
dtmdeposit,
szrecworkplaceid,
bassumevaluable,
szccyrateid,
szccyid,
szdepositbankid,
szdeposanid,
szcompanyid,
szledgerid,
szpayforaccid,
szpayforsubaccid,
szunclearpdraccid,
szunclearpdrsubaccid,
szclearingaccid,
szclearingsubaccid,
--added new field jan 04,
decremain,
szfbanksettlementid,
bhasreconcile,
dtmlastupdated,
balreadytransferred,
custbankaccountno,
szofficerid
)
values
(
p_szbankid,
p_szrefid,
p_szcustid,
p_decamount,
p_dtmdue,
p_szdescription,
p_szstatus,
p_dtmclear,
p_dtmreceipt,
p_dtmpdr,
p_dtmdeposit,
p_szrecworkplaceid,
p_bassumevaluable,
p_szccyrateid,
p_szccyid,
p_szdepositbankid,
p_szdeposanid,
p_szcompanyid,
p_szledgerid,
p_szpayforaccid,
p_szpayforsubaccid,
p_szunclearpdraccid,
p_szunclearpdrsubaccid,
p_szclearingaccid,
p_szclearingsubaccid,
--added new field jan 04,
p_decremain,
p_szfbanksettlementid,
p_bhasreconcile,
p_dtmlastupdated,
p_balreadytransferred,
p_custbankaccountno,
p_szofficerid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_deletepdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_pdr
where
szrefid = p_szrefid and szbankid = p_szbankid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_deletepdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_cas_pdr
where
szrefid = p_szrefid and szbankid = p_szbankid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_getlistofpdr()
returns void as
$body$
begin
select 
szbankid,
szrefid,
szdescription

from 
bos_cas_pdr;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_getpdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select
p_szbankid as szbankid,
bos_cas_bank.szname as szbanknm,

p_szrefid as szrefid,

bos_cas_pdr.szcustid,
bos_ar_customer.szname as szcustnm,

bos_cas_pdr.decamount,
bos_cas_pdr.dtmdue,
bos_cas_pdr.szdescription,
bos_cas_pdr.szstatus,
bos_cas_pdr.dtmclear,
bos_cas_pdr.dtmreceipt,
bos_cas_pdr.dtmpdr,
bos_cas_pdr.dtmdeposit,

bos_cas_pdr.szrecworkplaceid,
bos_gl_workplace.szname as szrecworkplacenm,

bos_cas_pdr.bassumevaluable,

bos_cas_pdr.szccyrateid,
bos_cas_pdr.szccyid,
bos_cu_currency.szsymbol as szccysymbol,
bos_cu_currency.szamountformat,

bos_cas_pdr.szdepositbankid,
bank_deposit.szname as szdepositbanknm,

bos_cas_pdr.szdeposanid,
bos_pi_employee.szname as szdeposannm,

bos_cas_pdr.szcompanyid,
bos_cas_pdr.szledgerid,

bos_cas_pdr.szpayforaccid,
pay_for_acc.szname as szpayforaccnm,

bos_cas_pdr.szpayforsubaccid,
pay_for_sub_acc.szdescription as szpayforsubaccnm,

bos_cas_pdr.szunclearpdraccid,
unclear_acc.szname as szunclearpdraccnm,

bos_cas_pdr.szunclearpdrsubaccid,
unclear_sub_acc.szdescription as szunclearpdrsubaccnm,

bos_cas_pdr.szclearingaccid,
clearing_acc.szname as szclearingaccnm,

bos_cas_pdr.szclearingsubaccid,
clearing_sub_acc.szdescription as szclearingsubaccnm,

--added new field jan 04
bos_cas_pdr.decremain,
bos_cas_pdr.szfbanksettlementid,
bos_cas_pdr.bhasreconcile,

bos_cas_pdr.dtmlastupdated,
bos_cas_pdr.balreadytransferred

from
bos_cas_pdr
left join bos_ar_customer on bos_ar_customer.szcustid = bos_cas_pdr.szcustid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_pdr.szrecworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_pdr.szccyid
left join bos_cas_bank as bank_deposit on bank_deposit.szbankid = bos_cas_pdr.szdepositbankid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_pdr.szdeposanid
left join bos_cas_bank on bos_cas_bank.szbankid = bos_cas_pdr.szbankid

left join bos_gl_account as pay_for_acc on pay_for_acc.szaccountid = bos_cas_pdr.szpayforaccid
left join bos_gl_glsubacc as pay_for_sub_acc on pay_for_sub_acc.szledgerid = bos_cas_pdr.szledgerid
and pay_for_sub_acc.szglsubaccid = bos_cas_pdr.szpayforsubaccid

left join bos_gl_account as unclear_acc on unclear_acc.szaccountid = bos_cas_pdr.szunclearpdraccid
left join bos_gl_glsubacc as unclear_sub_acc on unclear_sub_acc.szledgerid = bos_cas_pdr.szledgerid
and unclear_sub_acc.szglsubaccid = bos_cas_pdr.szunclearpdrsubaccid

left join bos_gl_account as clearing_acc on clearing_acc.szaccountid = bos_cas_pdr.szclearingaccid
left join bos_gl_glsubacc as clearing_sub_acc on clearing_sub_acc.szledgerid = bos_cas_pdr.szledgerid
and clearing_sub_acc.szglsubaccid = bos_cas_pdr.szclearingsubaccid

where
bos_cas_pdr.szrefid = p_szrefid and bos_cas_pdr.szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_getpdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select    
p_szbankid as szbankid,    
bos_cas_bank.szname as szbanknm,    

p_szrefid as szrefid,    

bos_cas_pdr.szcustid,    
bos_ar_customer.szname as szcustnm,    

bos_cas_pdr.decamount,    
bos_cas_pdr.dtmdue,    
bos_cas_pdr.szdescription,    
bos_cas_pdr.szstatus,    
bos_cas_pdr.dtmclear,    
bos_cas_pdr.dtmreceipt,    
bos_cas_pdr.dtmpdr,    
bos_cas_pdr.dtmdeposit,    

bos_cas_pdr.szrecworkplaceid,    
bos_gl_workplace.szname as szrecworkplacenm,    

bos_cas_pdr.bassumevaluable,    

bos_cas_pdr.szccyrateid,    
bos_cas_pdr.szccyid,    
bos_cu_currency.szsymbol as szccysymbol,    
bos_cu_currency.szamountformat,    

bos_cas_pdr.szdepositbankid,    
bank_deposit.szname as szdepositbanknm,    

bos_cas_pdr.szdeposanid,    
bos_pi_employee.szname as szdeposannm,    

bos_cas_pdr.szcompanyid,    
bos_cas_pdr.szledgerid,    

bos_cas_pdr.szpayforaccid,    
pay_for_acc.szname as szpayforaccnm,    

bos_cas_pdr.szpayforsubaccid,    
pay_for_sub_acc.szdescription as szpayforsubaccnm,    

bos_cas_pdr.szunclearpdraccid,    
unclear_acc.szname as szunclearpdraccnm,    

bos_cas_pdr.szunclearpdrsubaccid,    
unclear_sub_acc.szdescription as szunclearpdrsubaccnm,    

bos_cas_pdr.szclearingaccid,    
clearing_acc.szname as szclearingaccnm,    

bos_cas_pdr.szclearingsubaccid,    
clearing_sub_acc.szdescription as szclearingsubaccnm,    

--added new field jan 04    
bos_cas_pdr.decremain,    
bos_cas_pdr.szfbanksettlementid,    
bos_cas_pdr.bhasreconcile,    

bos_cas_pdr.dtmlastupdated,    
bos_cas_pdr.balreadytransferred,  
bos_cas_pdr.custbankaccountno,

bos_cas_pdr.szofficerid,
coalesce(bos_sm_user.szname, '') as szofficernm    

from    
bos_cas_pdr    
left join bos_ar_customer on bos_ar_customer.szcustid = bos_cas_pdr.szcustid    
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_pdr.szrecworkplaceid    
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_pdr.szccyid    
left join bos_cas_bank as bank_deposit on bank_deposit.szbankid = bos_cas_pdr.szdepositbankid    
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_pdr.szdeposanid    
left join bos_cas_bank on bos_cas_bank.szbankid = bos_cas_pdr.szbankid    

left join bos_gl_account as pay_for_acc on pay_for_acc.szaccountid = bos_cas_pdr.szpayforaccid    
left join bos_gl_glsubacc as pay_for_sub_acc on pay_for_sub_acc.szledgerid = bos_cas_pdr.szledgerid    
and pay_for_sub_acc.szglsubaccid = bos_cas_pdr.szpayforsubaccid    

left join bos_gl_account as unclear_acc on unclear_acc.szaccountid = bos_cas_pdr.szunclearpdraccid    
left join bos_gl_glsubacc as unclear_sub_acc on unclear_sub_acc.szledgerid = bos_cas_pdr.szledgerid    
and unclear_sub_acc.szglsubaccid = bos_cas_pdr.szunclearpdrsubaccid    

left join bos_gl_account as clearing_acc on clearing_acc.szaccountid = bos_cas_pdr.szclearingaccid    
left join bos_gl_glsubacc as clearing_sub_acc on clearing_sub_acc.szledgerid = bos_cas_pdr.szledgerid    
and clearing_sub_acc.szglsubaccid = bos_cas_pdr.szclearingsubaccid    

left join bos_sm_user on  bos_sm_user.szuserid = bos_cas_pdr.szofficerid 

where    
bos_cas_pdr.szrefid = p_szrefid and bos_cas_pdr.szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_ispdrexist(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select 
szrefid

from 
bos_cas_pdr
where 
szrefid = p_szrefid and szbankid = p_szbankid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_ispdrexist_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
select 
szrefid

from 
bos_cas_pdr
where 
szrefid = p_szrefid and szbankid = p_szbankid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_lockpdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_pdr
set 
szcustid = szcustid
where 
szrefid = p_szrefid and szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_lockpdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_pdr
set 
szcustid = szcustid
where 
szrefid = p_szrefid and szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_updatepdr(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_szdescription bos_dt_szdescription,
p_szstatus varchar,
p_dtmclear timestamp,
p_dtmreceipt timestamp,
p_dtmpdr timestamp,
p_dtmdeposit timestamp,
p_szrecworkplaceid bos_dt_szid,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdepositbankid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szcompanyid bos_dt_szmediumid,
p_szledgerid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_decremain bos_dt_decamount,
p_szfbanksettlementid bos_dt_szid,
p_bhasreconcile bit)
returns void as
$body$
begin
update bos_cas_pdr
set 
szcustid = p_szcustid,
decamount = p_decamount,
dtmdue = p_dtmdue,
szdescription = p_szdescription,
szstatus = p_szstatus,
dtmclear = p_dtmclear,
dtmreceipt = p_dtmreceipt,
dtmpdr = p_dtmpdr,
dtmdeposit = p_dtmdeposit,
szrecworkplaceid = p_szrecworkplaceid,
bassumevaluable = p_bassumevaluable,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdepositbankid = p_szdepositbankid,
szdeposanid = p_szdeposanid,
szcompanyid = p_szcompanyid,
szledgerid = p_szledgerid,
szpayforaccid = p_szpayforaccid,
szpayforsubaccid = p_szpayforsubaccid,
szunclearpdraccid = p_szunclearpdraccid,
szunclearpdrsubaccid = p_szunclearpdrsubaccid,
szclearingaccid = p_szclearingaccid,
szclearingsubaccid = p_szclearingsubaccid,
decremain = p_decremain,
szfbanksettlementid = p_szfbanksettlementid,
bhasreconcile = p_bhasreconcile

where 
szrefid = p_szrefid and szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cas_pdr_updatepdr_013(
p_szbankid bos_dt_szid,
p_szrefid bos_dt_szid,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dtmdue timestamp,
p_szdescription bos_dt_szdescription,
p_szstatus varchar,
p_dtmclear timestamp,
p_dtmreceipt timestamp,
p_dtmpdr timestamp,
p_dtmdeposit timestamp,
p_szrecworkplaceid bos_dt_szid,
p_bassumevaluable bit,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_szdepositbankid bos_dt_szid,
p_szdeposanid bos_dt_szid,
p_szcompanyid bos_dt_szmediumid,
p_szledgerid bos_dt_szid,
p_szpayforaccid bos_dt_szid,
p_szpayforsubaccid bos_dt_szglaccount,
p_szunclearpdraccid bos_dt_szid,
p_szunclearpdrsubaccid bos_dt_szglaccount,
p_szclearingaccid bos_dt_szid,
p_szclearingsubaccid bos_dt_szglaccount,
p_decremain bos_dt_decamount,
p_szfbanksettlementid bos_dt_szid,
p_bhasreconcile bit,
p_custbankaccountno bos_dt_szid,
p_szofficerid bos_dt_szid)
returns void as
$body$
begin
update bos_cas_pdr
set 
szcustid = p_szcustid,
decamount = p_decamount,
dtmdue = p_dtmdue,
szdescription = p_szdescription,
szstatus = p_szstatus,
dtmclear = p_dtmclear,
dtmreceipt = p_dtmreceipt,
dtmpdr = p_dtmpdr,
dtmdeposit = p_dtmdeposit,
szrecworkplaceid = p_szrecworkplaceid,
bassumevaluable = p_bassumevaluable,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
szdepositbankid = p_szdepositbankid,
szdeposanid = p_szdeposanid,
szcompanyid = p_szcompanyid,
szledgerid = p_szledgerid,
szpayforaccid = p_szpayforaccid,
szpayforsubaccid = p_szpayforsubaccid,
szunclearpdraccid = p_szunclearpdraccid,
szunclearpdrsubaccid = p_szunclearpdrsubaccid,
szclearingaccid = p_szclearingaccid,
szclearingsubaccid = p_szclearingsubaccid,
decremain = p_decremain,
szfbanksettlementid = p_szfbanksettlementid,
bhasreconcile = p_bhasreconcile,
custbankaccountno = p_custbankaccountno,
szofficerid = p_szofficerid
where 
szrefid = p_szrefid and szbankid = p_szbankid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_callviewer_getlistofcallviewerforsalesdata(
p_szworkplaceid bos_dt_szid,
p_szgroupid bos_dt_szid,
p_szcalltype bos_dt_szsmallid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_sznomorefollowup varchar)
returns void as
$body$
begin
select 
szfcallid,
szcustid,
szname,
szcalltype,
dtmfollowup,
szcallreasonid

from 
bos_crl_fcall
where 
/* condition(s): - sztrackingid = ''. - szcalltype = 'pro', -- prospect. 'cst', -- customer stop. 'cba', -- customer basic address change. 'dac', -- delivery address change. 'iac', -- invoice address change. 'cac', -- collection address change. 'tac'. -- tax address change. */ 
sztrackingid = '' and 
(szcalltype = 'pro' or szcalltype = 'cst' or 
szcalltype = 'cbi' or szcalltype = 'dac' or 
szcalltype = 'iac' or szcalltype = 'cac' or 
szcalltype = 'tac' ) and 
szforwardtoworkplaceid like p_szworkplaceid and 
szforwardtogroupid like p_szgroupid and 
szcalltype like p_szcalltype and 
(dtmdate >= p_dtmfrom and dtmdate < interval '1 day' + p_dtmto) and 
bnomorefollowup like p_sznomorefollowup and bvoid = 0 
order by 
szzipcode,
szaddress_1,
szaddress_2;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_callviewer_getlistoffcall(
p_szworkplaceid bos_dt_szid,
p_szgroupid bos_dt_szid,
p_szcalltype bos_dt_szsmallid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_sznomorefollowup varchar)
returns void as
$body$
begin
select 
szfcallid

from 
bos_crl_fcall
where 
szforwardtoworkplaceid like p_szworkplaceid and 
szforwardtogroupid like p_szgroupid and 
szcalltype like p_szcalltype and 
(dtmdate >= p_dtmfrom and dtmdate < interval '1 day' + p_dtmto) and 
bnomorefollowup like p_sznomorefollowup and bvoid = 0 
order by 
szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_createcustfup(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp,
p_szurl bos_dt_szurl,
p_szcalltype bos_dt_szsmallid,
p_szreasonid bos_dt_szid,
p_szdocdescription bos_dt_szdescription,
p_szdescription bos_dt_szdescription,
p_bprospect bit,
p_szcustid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_crl_custfup
(
sztrnid,
szdocid,
dtmdate,
szurl,
szcalltype,
szreasonid,
szdocdescription,
szdescription,
bprospect,
szcustid,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztrnid,
p_szdocid,
p_dtmdate,
p_szurl,
p_szcalltype,
p_szreasonid,
p_szdocdescription,
p_szdescription,
p_bprospect,
p_szcustid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_createcustfup_013(
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp,
p_szurl bos_dt_szurl,
p_szcalltype bos_dt_szsmallid,
p_szreasonid bos_dt_szid,
p_szdocdescription bos_dt_szdescription,
p_szdescription bos_dt_szdescription,
p_bprospect bit,
p_szcustid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_crl_custfup
(
sztrnid,
szdocid,
dtmdate,
szurl,
szcalltype,
szreasonid,
szdocdescription,
szdescription,
bprospect,
szcustid,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztrnid,
p_szdocid,
p_dtmdate,
p_szurl,
p_szcalltype,
p_szreasonid,
p_szdocdescription,
p_szdescription,
p_bprospect,
p_szcustid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_getlistofcustfupdata(
p_szcustid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select
bos_crl_custfup.sztrnid,
bos_crl_custfup.szdocid,
bos_crl_custfup.dtmdate,
bos_crl_custfup.szurl,
bos_crl_custfup.szcalltype,
bos_crl_custfup.szreasonid,
bos_gen_reason.szdescription as szreasondescription,
bos_crl_custfup.szdocdescription,
bos_crl_custfup.szdescription,
bos_crl_custfup.bprospect,
bos_crl_custfup.szcustid,
bos_ar_customer.szname as szcustname,
bos_crl_custfup.dtmlastupdated,
bos_crl_custfup.balreadytransferred  
from
bos_crl_custfup 
left join bos_gen_reason on bos_crl_custfup.szreasonid = bos_gen_reason.szreasonid
left join bos_ar_customer on bos_crl_custfup.szcustid = bos_ar_customer.szcustid
where
bos_crl_custfup.bprospect = 0 and
bos_crl_custfup.szcustid = p_szcustid and
bos_crl_custfup.dtmdate >= p_dtmfrom and bos_crl_custfup.dtmdate < interval '1 day' + p_dtmto;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_getlistofcustfupdata_013(
p_szcustid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select
bos_crl_custfup.sztrnid,
bos_crl_custfup.szdocid,
bos_crl_custfup.dtmdate,
bos_crl_custfup.szurl,
bos_crl_custfup.szcalltype,
bos_crl_custfup.szreasonid,
bos_gen_reason.szdescription as szreasondescription,
bos_crl_custfup.szdocdescription,
bos_crl_custfup.szdescription,
bos_crl_custfup.bprospect,
bos_crl_custfup.szcustid,
bos_ar_customer.szname as szcustname,
bos_crl_custfup.dtmlastupdated,
bos_crl_custfup.balreadytransferred  
from
bos_crl_custfup left join bos_gen_reason on bos_crl_custfup.szreasonid = bos_gen_reason.szreasonid
left join bos_ar_customer on bos_crl_custfup.szcustid = bos_ar_customer.szcustid
where
bos_crl_custfup.bprospect = 0 and
bos_crl_custfup.szcustid = p_szcustid and
bos_crl_custfup.dtmdate >= p_dtmfrom and bos_crl_custfup.dtmdate < interval '1 day' + p_dtmto;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_iscustfupexist(
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
select 
szurl,
szcalltype,
	szreasonid,
	szdocdescription,
	szdescription,
	bprospect,
	szcustid

from 
bos_crl_custfup
where 
sztrnid = p_sztrnid and 
szdocid = p_szdocid and 
dtmdate = p_dtmdate ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_iscustfupexist_013(
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
select 
szurl,
szcalltype,
	szreasonid,
	szdocdescription,
	szdescription,
	bprospect,
	szcustid

from 
bos_crl_custfup
where 
sztrnid = p_sztrnid and szdocid = p_szdocid and dtmdate = p_dtmdate ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_custfup_updatecustid(
p_szfcallid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_custfup
set 
bprospect = 0,
szcustid = p_szcustid
where 
bprospect = 1 and
szcustid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_createfcall(
p_szfcallid bos_dt_szid,
p_dtmdate timestamp,
p_szcallrecipientid bos_dt_szid,
p_szcalltype bos_dt_szsmallid,
p_szcallreasonid bos_dt_szid,
p_shcallcount smallint,
p_szmessage bos_dt_szmessage,
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szforwardtoworkplaceid bos_dt_szid,
p_szforwardtogroupid bos_dt_szid,
p_dtmfollowup timestamp,
p_bnomorefollowup bit,
p_dtmfinish timestamp,
p_bsuccess bit,
p_sztrackingid bos_dt_szid,
p_breplydirectly bit,
p_szreply varchar,
p_dtmlastreminder timestamp,
p_szcontactperson bos_dt_szname,
p_szroomno bos_dt_szsmallname,
p_szfloor bos_dt_szsmallname,
p_szbuilding bos_dt_szname,
p_szaddress_1 bos_dt_szname,
p_szaddress_2 bos_dt_szname,
p_szdistrict bos_dt_szname,
p_szcity bos_dt_szmediumname,
p_szzipcode bos_dt_szsmallname,
p_szstate bos_dt_szmediumname,
p_szcountry bos_dt_szmediumname,
p_szphoneno_1 bos_dt_szmediumname,
p_szphoneno_2 bos_dt_szmediumname,
p_szfaxno bos_dt_szmediumname,
p_szmobileno bos_dt_szmediumname,
p_szemail bos_dt_szmediumname,
p_szwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_crl_fcall
(
szfcallid,
dtmdate,
szcallrecipientid,
szcalltype,
szcallreasonid,
shcallcount,
szmessage,
szcustid,
szname,
szforwardtoworkplaceid,
szforwardtogroupid,
dtmfollowup,
bnomorefollowup,
dtmfinish,
bsuccess,
sztrackingid,
breplydirectly,
szreply,
dtmlastreminder,
szcontactperson,
szroomno,
szfloor,
szbuilding,
szaddress_1,
szaddress_2,
szdistrict,
szcity,
szzipcode,
szstate,
szcountry,
szphoneno_1,
szphoneno_2,
szfaxno,
szmobileno,
szemail,
szwebsite,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcallid,
p_dtmdate,
p_szcallrecipientid,
p_szcalltype,
p_szcallreasonid,
p_shcallcount,
p_szmessage,
p_szcustid,
p_szname,
p_szforwardtoworkplaceid,
p_szforwardtogroupid,
p_dtmfollowup,
p_bnomorefollowup,
p_dtmfinish,
p_bsuccess,
p_sztrackingid,
p_breplydirectly,
p_szreply,
p_dtmlastreminder,
p_szcontactperson,
p_szroomno,
p_szfloor,
p_szbuilding,
p_szaddress_1,
p_szaddress_2,
p_szdistrict,
p_szcity,
p_szzipcode,
p_szstate,
p_szcountry,
p_szphoneno_1,
p_szphoneno_2,
p_szfaxno,
p_szmobileno,
p_szemail,
p_szwebsite,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_createfcallproduct(
p_szfcallid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_crl_fcallproduct
(
szfcallid,
szproductid,
szorderitemtypeid,
decqty,
szuomid
)
values
(
p_szfcallid,
p_szproductid,
p_szorderitemtypeid,
p_decqty,
p_szuomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_deletefcall(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_crl_fcall
where
szfcallid=p_szfcallid;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_deletefcallproduct(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_crl_fcallproduct
where
szfcallid=p_szfcallid;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_getfcall(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
select
bos_crl_fcall.dtmdate,
bos_crl_fcall.szcallrecipientid,
bos_sm_user.szname as szcallrecipientname,
bos_crl_fcall.szcalltype,
bos_crl_fcall.szcallreasonid,
bos_crl_fcall.shcallcount,
bos_crl_fcall.szmessage,
bos_crl_fcall.szcustid,
bos_crl_fcall.szname,
bos_crl_fcall.szforwardtoworkplaceid,
bos_crl_fcall.szforwardtogroupid,
bos_crl_fcall.dtmfollowup,
bos_crl_fcall.bnomorefollowup,
bos_crl_fcall.dtmfinish,
bos_crl_fcall.bsuccess,
bos_crl_fcall.sztrackingid,
bos_crl_fcall.breplydirectly,
bos_crl_fcall.szreply,
bos_crl_fcall.dtmlastreminder,

bos_crl_fcall.szcontactperson,
bos_crl_fcall.szroomno,
bos_crl_fcall.szfloor,
bos_crl_fcall.szbuilding,
bos_crl_fcall.szaddress_1,
bos_crl_fcall.szaddress_2,
bos_crl_fcall.szdistrict,
bos_crl_fcall.szcity,
bos_crl_fcall.szzipcode,
bos_crl_fcall.szstate,
bos_crl_fcall.szcountry,
bos_crl_fcall.szphoneno_1,
bos_crl_fcall.szphoneno_2,
bos_crl_fcall.szfaxno,
bos_crl_fcall.szmobileno,
bos_crl_fcall.szemail,
bos_crl_fcall.szwebsite,

bos_crl_fcall.bresultfrtransfer,
bos_crl_fcall.bvoid,
bos_gen_approved.bapproved,
bos_crl_fcall.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_crl_fcall.btprintedcount,
bos_crl_fcall.btransferred,
bos_crl_fcall.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_crl_fcall.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_crl_fcall.sztaxentityid,
bos_crl_fcall.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_crl_fcall.dtmcreated,
bos_crl_fcall.bsystemcreated,
bos_crl_fcall.szuserid,
user1.szname as szusernm_j,

-- data status.
bos_crl_fcall.dtmlastupdated,
bos_crl_fcall.balreadytransferred

from
(bos_crl_fcall left join bos_gen_approved on bos_crl_fcall.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_crl_fcall.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_sm_user on bos_crl_fcall.szcallrecipientid = bos_sm_user.szuserid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_crl_fcall.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_crl_fcall.szworkplaceid
left join bos_sm_user as user1 on user1.szuserid = bos_crl_fcall.szuserid

where
bos_crl_fcall.szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_getfcallproduct(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
select 
bos_crl_fcallproduct.szproductid,
bos_inv_product.szname as szproductname,
bos_crl_fcallproduct.szorderitemtypeid,
bos_crl_fcallproduct.decqty,
bos_crl_fcallproduct.szuomid,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j

from 
bos_crl_fcallproduct 
left join bos_inv_product on bos_crl_fcallproduct.szproductid = bos_inv_product.szproductid
where 
szfcallid=p_szfcallid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_getlistoffcall()
returns void as
$body$
begin
select 
szfcallid,
dtmdate,
szcalltype,
szcallreasonid

from 
bos_crl_fcall
where 
bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_getreplycount(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
select 
count(szfcallreplyid) as intreplycount

from 
bos_crl_fcallreply
where 
szfcallid = p_szfcallid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_isfcallexist(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
select 
szfcallid

from 
bos_crl_fcall
where 
szfcallid=p_szfcallid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_lockfcall(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcall
set 
btransferred=btransferred
where 
szfcallid=p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_markfcallvoid(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcall
set 
bvoid = 1,
bapplied = 0
where 
szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_markfcallvoid_014(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcall
set 
bvoid = 1,
bapplied = 0
where 
szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_searchcust(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szaddress varchar,
p_szphoneno varchar)
returns void as
$body$
begin
select 
bos_ar_customer.szcustid as bos_ar_customer_szcustid,
bos_ar_customer.szname as bos_ar_customer_szname,
bos_ar_customer.custszaddress_1  as bos_ar_customer_custszaddress_1,
bos_ar_customer.custszaddress_2 as bos_ar_customer_custszaddress_2,
bos_ar_customer.custszphoneno_1 as bos_ar_customer_custszphoneno_1,
bos_ar_customer.custszphoneno_2 as bos_ar_customer_custszphoneno_2,

--	delivery section
--
bos_ar_customer.szdelivertocustid as bos_ar_customer_szdelivertocustid,
dlv_bos_ar_custlocation.szcustdeliverynm as dlv_bos_ar_custlocation_szcustdeliverynm,
dlv_bos_ar_custlocation.locationszaddress_1 as dlv_bos_ar_custlocation_locationszaddress_1,
dlv_bos_ar_custlocation.locationszaddress_2 as dlv_bos_ar_custlocation_locationszaddress_2,
dlv_bos_ar_custlocation.locationszphoneno_1 as dlv_bos_ar_custlocation_locationszphoneno_1,
dlv_bos_ar_custlocation.locationszphoneno_2 as dlv_bos_ar_custlocation_locationszphoneno_2
--
--	end of delivery section


from 
bos_ar_customer

left join bos_ar_custlocation as dlv_bos_ar_custlocation on
dlv_bos_ar_custlocation.szcustid = bos_ar_customer.szdelivertocustid and 
dlv_bos_ar_custlocation.btlocid = 0

where 
( 
bos_ar_customer.szcustid like p_szcustid or 
bos_ar_customer.szdelivertocustid like p_szcustid ) 
and 
( bos_ar_customer.szname like p_szname or 
dlv_bos_ar_custlocation.szcustdeliverynm like p_szname ) 
and 
( bos_ar_customer.custszaddress_1 like p_szaddress or 
bos_ar_customer.custszaddress_2 like p_szaddress or 
dlv_bos_ar_custlocation.locationszaddress_1 like p_szaddress or 
dlv_bos_ar_custlocation.locationszaddress_2 like p_szaddress ) 
and 
( bos_ar_customer.custszphoneno_1 like p_szphoneno or 
bos_ar_customer.custszphoneno_2 like p_szphoneno or 
dlv_bos_ar_custlocation.locationszphoneno_1 like p_szphoneno or 
dlv_bos_ar_custlocation.locationszphoneno_2 like p_szphoneno ) 

order by 
bos_ar_customer.szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_searchfcall(
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szaddress varchar,
p_szphoneno varchar)
returns void as
$body$
begin
select
result.bos_crl_fcall_szfcallid,
result.bos_crl_fcall_szcalltype,
result.bos_crl_fcall_szcustid,
result.bos_crl_fcall_szname,

result.bos_ar_customer_szname,
result.bos_ar_customer_custszaddress_1,
result.bos_ar_customer_custszaddress_2,
result.bos_ar_customer_custszphoneno_1,
result.bos_ar_customer_custszphoneno_2,

--	delivery section
--
result.bos_ar_customer_szdelivertocustid,
result.dlv_bos_ar_custlocation_szcustdeliverynm,
result.dlv_bos_ar_custlocation_locationszaddress_1, 
result.dlv_bos_ar_custlocation_locationszaddress_2,
result.dlv_bos_ar_custlocation_locationszphoneno_1,
result.dlv_bos_ar_custlocation_locationszphoneno_2
--
--	end of delivery section
from

-- select from query result.
(select
bos_crl_fcall.szfcallid as bos_crl_fcall_szfcallid,
bos_crl_fcall.szcalltype as bos_crl_fcall_szcalltype,
bos_crl_fcall.szcustid as bos_crl_fcall_szcustid,
bos_crl_fcall.szname as bos_crl_fcall_szname,

coalesce(bos_ar_customer.szname, '') as bos_ar_customer_szname, 
coalesce(bos_ar_customer.custszaddress_1, '') as bos_ar_customer_custszaddress_1, 
coalesce(bos_ar_customer.custszaddress_2, '') as bos_ar_customer_custszaddress_2,
coalesce(bos_ar_customer.custszphoneno_1, '') as bos_ar_customer_custszphoneno_1,
coalesce(bos_ar_customer.custszphoneno_2, '') as bos_ar_customer_custszphoneno_2,

--	delivery section
--
coalesce(bos_ar_customer.szdelivertocustid, '') as bos_ar_customer_szdelivertocustid,
coalesce(dlv_bos_ar_custlocation.szcustdeliverynm, '') as dlv_bos_ar_custlocation_szcustdeliverynm,
coalesce(dlv_bos_ar_custlocation.locationszaddress_1, '') as dlv_bos_ar_custlocation_locationszaddress_1, 
coalesce(dlv_bos_ar_custlocation.locationszaddress_2, '') as dlv_bos_ar_custlocation_locationszaddress_2,
coalesce(dlv_bos_ar_custlocation.locationszphoneno_1, '') as dlv_bos_ar_custlocation_locationszphoneno_1,
coalesce(dlv_bos_ar_custlocation.locationszphoneno_2, '') as dlv_bos_ar_custlocation_locationszphoneno_2
--
--	end of delivery section

from
bos_crl_fcall
left join bos_ar_customer on bos_ar_customer.szcustid = bos_crl_fcall.szcustid

left join bos_ar_custlocation as dlv_bos_ar_custlocation on
dlv_bos_ar_custlocation.szcustid = bos_ar_customer.szdelivertocustid and dlv_bos_ar_custlocation.btlocid = 0

where
(
bos_crl_fcall.bnomorefollowup = 0 and
bos_crl_fcall.bvoid = 0
)
)
as result

where
(
result.bos_crl_fcall_szcustid like p_szcustid
)
and
(
result.bos_crl_fcall_szname like p_szname or
result.bos_ar_customer_szname like p_szname or
result.dlv_bos_ar_custlocation_szcustdeliverynm like p_szname
)
and
(
result.bos_ar_customer_custszaddress_1 like p_szaddress or
result.bos_ar_customer_custszaddress_2 like p_szaddress or
result.dlv_bos_ar_custlocation_locationszaddress_1 like p_szaddress or
result.dlv_bos_ar_custlocation_locationszaddress_2 like p_szaddress
)
and
(
result.bos_ar_customer_custszphoneno_1 like p_szphoneno or
result.bos_ar_customer_custszphoneno_2 like p_szphoneno or
result.dlv_bos_ar_custlocation_locationszphoneno_1 like p_szphoneno or
result.dlv_bos_ar_custlocation_locationszphoneno_2 like p_szphoneno
)
order by
result.bos_crl_fcall_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_updatefcall(
p_szfcallid bos_dt_szid,
p_dtmdate timestamp,
p_szcallrecipientid bos_dt_szid,
p_szcalltype bos_dt_szsmallid,
p_szcallreasonid bos_dt_szid,
p_shcallcount smallint,
p_szmessage bos_dt_szmessage,
p_szcustid bos_dt_szid,
p_szname bos_dt_szname,
p_szforwardtoworkplaceid bos_dt_szid,
p_szforwardtogroupid bos_dt_szid,
p_dtmfollowup timestamp,
p_breplydirectly bit,
p_szreply varchar,
p_dtmlastreminder timestamp,
p_szcontactperson bos_dt_szname,
p_szroomno bos_dt_szsmallname,
p_szfloor bos_dt_szsmallname,
p_szbuilding bos_dt_szname,
p_szaddress_1 bos_dt_szname,
p_szaddress_2 bos_dt_szname,
p_szdistrict bos_dt_szname,
p_szcity bos_dt_szmediumname,
p_szzipcode bos_dt_szsmallname,
p_szstate bos_dt_szmediumname,
p_szcountry bos_dt_szmediumname,
p_szphoneno_1 bos_dt_szmediumname,
p_szphoneno_2 bos_dt_szmediumname,
p_szfaxno bos_dt_szmediumname,
p_szmobileno bos_dt_szmediumname,
p_szemail bos_dt_szmediumname,
p_szwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcall
set 
dtmdate = p_dtmdate,
szcallrecipientid = p_szcallrecipientid,
szcalltype = p_szcalltype,
szcallreasonid = p_szcallreasonid,
shcallcount = p_shcallcount,
szmessage = p_szmessage,
szcustid = p_szcustid,
szname = p_szname,
szforwardtoworkplaceid = p_szforwardtoworkplaceid,
szforwardtogroupid = p_szforwardtogroupid,
dtmfollowup = p_dtmfollowup,
breplydirectly = p_breplydirectly,
szreply = p_szreply,
dtmlastreminder = p_dtmlastreminder,

szcontactperson = p_szcontactperson,
szroomno = p_szroomno,
szfloor = p_szfloor,
szbuilding = p_szbuilding,
szaddress_1 = p_szaddress_1,
szaddress_2 = p_szaddress_2,
szdistrict = p_szdistrict,
szcity = p_szcity,
szzipcode = p_szzipcode,
szstate = p_szstate,
szcountry = p_szcountry,
szphoneno_1 = p_szphoneno_1,
szphoneno_2 = p_szphoneno_2,
szfaxno = p_szfaxno,
szmobileno = p_szmobileno,
szemail = p_szemail,
szwebsite = p_szwebsite,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_updatefcallstatus(
p_szfcallid bos_dt_szid,
p_bnomorefollowup bit,
p_dtmfinish timestamp,
p_bsuccess bit)
returns void as
$body$
begin
update bos_crl_fcall
set 
bnomorefollowup = p_bnomorefollowup,
dtmfinish = p_dtmfinish,
bsuccess = p_bsuccess
where 
szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcall_updatetracking(
p_szfcallid bos_dt_szid,
p_sztrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcall
set 
sztrackingid = p_sztrackingid
where 
szfcallid = p_szfcallid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_createfcallreply(
p_szfcallreplyid bos_dt_szid,
p_dtmdate timestamp,
p_szreplyuserid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_bnomorefollowup bit,
p_bsuccess bit,
p_szfailreasonid bos_dt_szid,
p_szmessage bos_dt_szmessage,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefurl bos_dt_szurl,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_crl_fcallreply
(
szfcallreplyid,
dtmdate,
szreplyuserid,
szfcallid,
bnomorefollowup,
bsuccess,
szfailreasonid,
szmessage,
szreftrnid,
szrefdocid,
szrefurl,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcallreplyid,
p_dtmdate,
p_szreplyuserid,
p_szfcallid,
p_bnomorefollowup,
p_bsuccess,
p_szfailreasonid,
p_szmessage,
p_szreftrnid,
p_szrefdocid,
p_szrefurl,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_deletefcallreply(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_crl_fcallreply
where
szfcallreplyid=p_szfcallreplyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_getfcallreply(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
select
bos_crl_fcallreply.dtmdate,
bos_crl_fcallreply.szreplyuserid,
bos_sm_user.szname as szreplyusername,
bos_crl_fcallreply.szfcallid,
bos_crl_fcallreply.bsuccess,
bos_crl_fcallreply.bnomorefollowup,
bos_crl_fcallreply.szfailreasonid,
bos_crl_fcallreply.szmessage,
bos_crl_fcallreply.szreftrnid,
bos_crl_fcallreply.szrefdocid,
bos_crl_fcallreply.szrefurl,

bos_crl_fcallreply.bresultfrtransfer,
bos_crl_fcallreply.bvoid,
bos_gen_approved.bapproved,
bos_crl_fcallreply.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_crl_fcallreply.btprintedcount,
bos_crl_fcallreply.btransferred,
bos_crl_fcallreply.szcompanyid,
bos_crl_fcallreply.szworkplaceid,
bos_crl_fcallreply.sztaxentityid,
bos_crl_fcallreply.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_crl_fcallreply.dtmcreated,
bos_crl_fcallreply.bsystemcreated,
bos_crl_fcallreply.szuserid,
user1.szname as szusernm_j,
bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

-- data status.
bos_crl_fcallreply.dtmlastupdated,
bos_crl_fcallreply.balreadytransferred
from
(bos_crl_fcallreply left join bos_gen_approved on bos_crl_fcallreply.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_crl_fcallreply.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_sm_user on bos_crl_fcallreply.szreplyuserid = bos_sm_user.szuserid
left join bos_sm_user as user1 on user1.szuserid = bos_crl_fcallreply.szuserid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_crl_fcallreply.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_crl_fcallreply.szworkplaceid
where
bos_crl_fcallreply.szfcallreplyid = p_szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_getlistoffcallreply()
returns void as
$body$
begin
select 
szfcallreplyid,
dtmdate,
szfcallid

from 
bos_crl_fcallreply
where 
bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_getlistoffcallreplywherefcallid(
p_szfcallid bos_dt_szid)
returns void as
$body$
begin
select 
szfcallreplyid

from 
bos_crl_fcallreply
where 
szfcallid = p_szfcallid and bvoid = 0 
order by 
szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_isfcallreplyexist(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
select 
szfcallreplyid

from 
bos_crl_fcallreply
where 
szfcallreplyid=p_szfcallreplyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_lockfcallreply(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcallreply
set 
btransferred=btransferred
where 
szfcallreplyid=p_szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_markfcallreplyapplied(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcallreply
set 
bapplied = 1
where 
szfcallreplyid = p_szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_markfcallreplyvoid(
p_szfcallreplyid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcallreply
set 
bvoid = 1
where 
szfcallreplyid = p_szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_crl_fcallreply_updatefcallreply(
p_szfcallreplyid bos_dt_szid,
p_dtmdate timestamp,
p_szreplyuserid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_bnomorefollowup bit,
p_bsuccess bit,
p_szfailreasonid bos_dt_szid,
p_szmessage bos_dt_szmessage,
p_szreftrnid bos_dt_szmediumid,
p_szrefdocid bos_dt_szid,
p_szrefurl bos_dt_szurl,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_crl_fcallreply
set 
dtmdate = p_dtmdate,
szreplyuserid = p_szreplyuserid,
szfcallid = p_szfcallid,
bnomorefollowup = p_bnomorefollowup,
bsuccess = p_bsuccess,
szfailreasonid = p_szfailreasonid,
szmessage = p_szmessage,
szreftrnid = p_szreftrnid,
szrefdocid = p_szrefdocid,
szrefurl = p_szrefurl,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfcallreplyid = p_szfcallreplyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_createcurrency(
p_szccyid bos_dt_szsmallid,
p_szsymbol varchar,
p_szamountformat varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_cu_currency
(
bos_cu_currency.szccyid,
bos_cu_currency.szsymbol,
bos_cu_currency.szamountformat,
bos_cu_currency.dtmlastupdated,
bos_cu_currency.balreadytransferred
)
values
(
p_szccyid,
p_szsymbol,
p_szamountformat,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_createcurrencyrate(
p_szccyrateid bos_dt_szmediumid,
p_szdescription bos_dt_szdescription,
p_dtmtime timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_cu_currencyrate
(
bos_cu_currencyrate.szccyrateid,
bos_cu_currencyrate.szdescription,
bos_cu_currencyrate.dtmlastupdated,
bos_cu_currencyrate.balreadytransferred,
bos_cu_currencyrate.dtmtime
)
values
(
p_szccyrateid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmtime
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_createcurrencyrate_013(
p_szccyrateid bos_dt_szmediumid,
p_szdescription bos_dt_szdescription,
p_dtmtime timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_cu_currencyrate
(
bos_cu_currencyrate.szccyrateid,
bos_cu_currencyrate.szdescription,
bos_cu_currencyrate.dtmlastupdated,
bos_cu_currencyrate.balreadytransferred,
bos_cu_currencyrate.dtmtime
)
values
(
p_szccyrateid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmtime
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_createcurrencyrateitem(
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_sztoccyid bos_dt_szsmallid,
p_decvalue bos_dt_decccyrate)
returns void as
$body$
begin
insert into bos_cu_currencyrateitem
(
szccyrateid,
szccyid,
sztoccyid,
decvalue 
)
values
(
p_szccyrateid,
p_szccyid,
p_sztoccyid,
p_decvalue
);

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_deletecurrency(
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
DELETE FROM bos_cu_currency
where szccyid = p_szccyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_deletecurrencyrate(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
DELETE FROM bos_cu_currencyrate
where szccyrateid = p_szccyrateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_deletecurrencyrateitem(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
DELETE FROM bos_cu_currencyrateitem
where szccyrateid = p_szccyrateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getconversionvalue(
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_sztoccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
decvalue 

from 
bos_cu_currencyrateitem 
where 
 szccyrateid = p_szccyrateid and
 sztoccyid = p_sztoccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getcurrency(
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
bos_cu_currency.szsymbol,
bos_cu_currency.szamountformat,

bos_cu_currency.dtmlastupdated,
bos_cu_currency.balreadytransferred

from 
bos_cu_currency
where 
szccyid = p_szccyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getcurrencyrate(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
select 
bos_cu_currencyrate.szdescription,
bos_cu_currencyrate.dtmlastupdated,
bos_cu_currencyrate.balreadytransferred

from 
bos_cu_currencyrate
where 
 szccyrateid = p_szccyrateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getcurrencyrateitem(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szccyid, sztoccyid, decvalue 

from 
bos_cu_currencyrateitem 
where 
 szccyrateid = p_szccyrateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getlistofcurrency()
returns void as
$body$
begin
select 
szccyid, szsymbol

from 
bos_cu_currency;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_getlistofcurrencyrate()
returns void as
$body$
begin
select 
szccyrateid, szdescription 

from 
bos_cu_currencyrate;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_iscurrencyexist(
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szsymbol 

from 
bos_cu_currency 
where 
 szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_iscurrencyrateexist(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
select 
 szdescription 

from 
bos_cu_currencyrate 
where 
 szccyrateid = p_szccyrateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_lockcurrency(
p_szccyid bos_dt_szsmallid)
returns void as
$body$
begin
update bos_cu_currency
set 
szsymbol=szsymbol
where 
 szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_lockcurrencyrate(
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_cu_currencyrate
set 
szdescription = szdescription
where 
 szccyrateid = p_szccyrateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_updatecurrency(
p_szccyid bos_dt_szsmallid,
p_szsymbol varchar,
p_szamountformat varchar)
returns void as
$body$
begin
update bos_cu_currency
set 
szsymbol = p_szsymbol, szamountformat = p_szamountformat
where 
szccyid = p_szccyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_cu_currency_updatecurrencyrate(
p_szccyrateid bos_dt_szmediumid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_cu_currencyrate
set 
szdescription = p_szdescription
where 
 szccyrateid = p_szccyrateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapproval(
p_szapprovalid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_approval
(szapprovalid, szdescription, block, dtmlastupdated, balreadytransferred)
values
(p_szapprovalid, p_szdescription, 0, p_dtmlastupdated, p_balreadytransferred);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapproval_014(
p_szapprovalid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_approval
(szapprovalid, szdescription, block, dtmlastupdated, balreadytransferred)
values
(p_szapprovalid, p_szdescription, 0, p_dtmlastupdated, p_balreadytransferred);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapprovalgroup(
p_szapprovalid bos_dt_szid,
p_btlevel smallint,
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
insert into bos_gen_approvalgroup
(szapprovalid, btlevel, szgroupid)
values
(p_szapprovalid, p_btlevel, p_szgroupid);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapprovallevel(
p_szapprovalid bos_dt_szid,
p_btlevel smallint,
p_ballowskiptonext bit)
returns void as
$body$
begin
insert into bos_gen_approvallevel
(szapprovalid, btlevel, ballowskiptonext)
values
(p_szapprovalid, p_btlevel, p_ballowskiptonext);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapproved(
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_bapproved bit,
p_brejected bit,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szuri bos_dt_szbigid)
returns void as
$body$
begin
insert into bos_gen_approved
(
gdapprovedid,
szapprovalid,
bapproved,
brejected,
szurl,
szdescription,
szworkplaceid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szuri
)
values
(
p_gdapprovedid,
p_szapprovalid,
p_bapproved,
p_brejected,
p_szurl,
p_szdescription,
p_szworkplaceid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szuri
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapproved_014(
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_bapproved bit,
p_brejected bit,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szuri bos_dt_szbigid)
returns void as
$body$
begin
insert into bos_gen_approved
(
gdapprovedid,
szapprovalid,
bapproved,
brejected,
szurl,
szdescription,
szworkplaceid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szuri
)
values
(
p_gdapprovedid,
p_szapprovalid,
p_bapproved,
p_brejected,
p_szurl,
p_szdescription,
p_szworkplaceid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szuri
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_createapproveditem(
p_gdapprovedid bytea,
p_btapprovedlevel smallint,
p_szuserid bos_dt_szid,
p_szgroupid bos_dt_szid,
p_dtmapproved timestamp,
p_bapproved bit)
returns void as
$body$
begin
insert into bos_gen_approveditem
(
gdapprovedid,
btapprovedlevel,
szuserid,
szgroupid,
dtmapproved,
bapproved
)
values
(
p_gdapprovedid,
p_btapprovedlevel,
p_szuserid,
p_szgroupid,
p_dtmapproved,
p_bapproved
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_deleteapproval(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_approval
where
 szapprovalid = p_szapprovalid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_deleteapprovalgroup(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_approvalgroup
where
 szapprovalid = p_szapprovalid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_deleteapprovallevel(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_approvallevel
where
 szapprovalid = p_szapprovalid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_deleteapproved(
p_gdapprovedid bytea)
returns void as
$body$
begin
delete 
 from bos_gen_approved
where
 gdapprovedid = p_gdapprovedid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_deleteapproveditem(
p_gdapprovedid bytea)
returns void as
$body$
begin
delete 
 from bos_gen_approveditem
where
 gdapprovedid = p_gdapprovedid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapproval(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,	
balreadytransferred
from 
bos_gen_approval
where 
 szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapproval_014(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
dtmlastupdated,
    balreadytransferred
    
from 
bos_gen_approval
where 
 szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapprovalgroup(
p_szapprovalid bos_dt_szid,
p_btlevel smallint)
returns void as
$body$
begin
select 
btlevel, szgroupid

from 
bos_gen_approvalgroup
where 
 szapprovalid = p_szapprovalid and btlevel = p_btlevel;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapprovallevel(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
select 
btlevel, ballowskiptonext

from 
bos_gen_approvallevel
where 
 szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapproved(
p_gdapprovedid bytea)
returns void as
$body$
begin
select 
szapprovalid,
bapproved,
brejected,
szurl,
szdescription,
szworkplaceid,

-- data status.
dtmlastupdated,
balreadytransferred,
--new
szuri

from 
bos_gen_approved
where 
gdapprovedid = p_gdapprovedid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapproved_014(
p_gdapprovedid bytea)
returns void as
$body$
begin
select 
szapprovalid,
bapproved,
brejected,
szurl,
szdescription,
szworkplaceid,

-- data status.
dtmlastupdated,
balreadytransferred,
--new
szuri

from 
bos_gen_approved
where 
gdapprovedid = p_gdapprovedid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getapproveditem(
p_gdapprovedid bytea)
returns void as
$body$
begin
select 
bos_gen_approveditem.btapprovedlevel,
bos_gen_approveditem.szuserid,
bos_sm_user.szname as szusernm,
bos_gen_approveditem.szgroupid,
bos_gen_approveditem.dtmapproved,
bos_gen_approveditem.bapproved

from 
bos_gen_approveditem left join bos_sm_user on bos_gen_approveditem.szuserid = bos_sm_user.szuseridbos_gen_approveditem left join bos_sm_user on bos_gen_approveditem.szuserid = bos_sm_user.szuserid
where 
bos_gen_approveditem.gdapprovedid = p_gdapprovedid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getlistofapproval()
returns void as
$body$
begin
select 
szapprovalid,
szdescription

from 
bos_gen_approval;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getlistofapproved()
returns void as
$body$
begin
select 
gdapprovedid, szdescription

from 
bos_gen_approved;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_getlistofapprovedtobeapproved(
p_szuserid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

if p_szuserid = ''
  then
select
bgad.gdapprovedid,
bgae.btlevel, bgad.szurl,
bgad.szdescription
from
bos_gen_approved as bgad
inner join bos_gen_approval as bgal on bgad.szapprovalid = bgal.szapprovalid
inner join bos_gen_approvallevel as bgae on bgal.szapprovalid = bgae.szapprovalid
where
bgad.bapproved = 0
and bgad.brejected = 0
and 
(
bgad.szworkplaceid like p_szworkplaceid
or bgad.szworkplaceid = ''			--for compatibility purpose.
)
and bgae.btlevel not in (select btapprovedlevel from bos_gen_approveditem where gdapprovedid = bgad.gdapprovedid)
order by
bgad.szurl,
bgad.gdapprovedid,
bgae.btlevel;
else
select
bgad.gdapprovedid,
bgae.btlevel,
bgad.szurl,
bgad.szdescription
from
bos_gen_approved as bgad
inner join bos_gen_approval as bgal on bgad.szapprovalid = bgal.szapprovalid
inner join bos_gen_approvallevel as bgae on bgal.szapprovalid = bgae.szapprovalid
inner join bos_gen_approvalgroup as bgag on bgae.szapprovalid = bgag.szapprovalid and bgae.btlevel = bgag.btlevel
where
bgad.bapproved = 0
and bgad.brejected = 0
and 
(
bgad.szworkplaceid like p_szworkplaceid
or bgad.szworkplaceid = ''			--for compatibility purpose.
)
and bgae.btlevel not in (select btapprovedlevel from bos_gen_approveditem where gdapprovedid = bgad.gdapprovedid)
and bgag.szgroupid in (select szgroupid from bos_sm_groupuser where szuserid = p_szuserid)
order by
bgad.szurl,
bgad.gdapprovedid,
bgae.btlevel;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_isapprovalexist(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
select 
szapprovalid

from 
bos_gen_approval
where 
 szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_isapprovedexist(
p_gdapprovedid bytea)
returns void as
$body$
begin
select 
gdapprovedid

from 
bos_gen_approved
where 
 gdapprovedid = p_gdapprovedid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_lockapproval(
p_szapprovalid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_approval
set 
 block = block
where 
 szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_lockapproved(
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_gen_approved
set 
 szdescription = szdescription
where 
 gdapprovedid = p_gdapprovedid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_updateapproval(
p_szapprovalid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_approval
set 
szdescription = p_szdescription
where 
szapprovalid = p_szapprovalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_updateapproved(
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_bapproved bit,
p_brejected bit,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szuri bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_approved
set 
szapprovalid = p_szapprovalid,
bapproved = p_bapproved,
brejected = p_brejected,
szurl = p_szurl,
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid
, szuri = p_szuri
where 
gdapprovedid = p_gdapprovedid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_approval_updateapproved_014(
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_bapproved bit,
p_brejected bit,
p_szurl bos_dt_szurl,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szuri bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_approved
set 
szapprovalid = p_szapprovalid,
bapproved = p_bapproved,
brejected = p_brejected,
szurl = p_szurl,
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid
, szuri = p_szuri
where 
gdapprovedid = p_gdapprovedid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_createcalendar(
p_szcalendarid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bworkonsat bit,
p_bworkonsun bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_calendar
(
szcalendarid,
szdescription,
bworkonsat,
bworkonsun,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcalendarid,
p_szdescription,
p_bworkonsat,
p_bworkonsun,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_createcalendar_014(
p_szcalendarid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bworkonsat bit,
p_bworkonsun bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_calendar
(
szcalendarid,
szdescription,
bworkonsat,
bworkonsun,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcalendarid,
p_szdescription,
p_bworkonsat,
p_bworkonsun,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_createcalendaroverride(
p_szcalendarid bos_dt_szid,
p_shitemnumber smallint,
p_dtmoverride timestamp,
p_bworkingday bit)
returns void as
$body$
begin
insert into bos_gen_calendaroverride
(
szcalendarid,
shitemnumber,
dtmoverride,
bworkingday
)
values
(
p_szcalendarid,
p_shitemnumber,
p_dtmoverride,
p_bworkingday
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_deletecalendar(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gen_calendar
where
szcalendarid = p_szcalendarid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_deletecalendaroverride(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gen_calendaroverride
where
szcalendarid = p_szcalendarid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_getcalendar(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
bworkonsat,
bworkonsun,
dtmlastupdated,
balreadytransferred

from 
bos_gen_calendar
where 
szcalendarid = p_szcalendarid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_getcalendar_014(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
bworkonsat,
bworkonsun,
dtmlastupdated,
balreadytransferred

from 
bos_gen_calendar
where 
szcalendarid = p_szcalendarid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_getcalendaroverride(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
dtmoverride,
bworkingday

from 
bos_gen_calendaroverride
where 
szcalendarid = p_szcalendarid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_getlistofcalendar()
returns void as
$body$
begin
select 
szcalendarid,
szdescription

from 
bos_gen_calendar;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_iscalendarexist(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
select 
szcalendarid

from 
bos_gen_calendar
where 
szcalendarid = p_szcalendarid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_lockcalendar(
p_szcalendarid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_calendar
set 
bworkonsat = bworkonsat
where 
szcalendarid = p_szcalendarid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_calendar_updatecalendar(
p_szcalendarid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bworkonsat bit,
p_bworkonsun bit)
returns void as
$body$
begin
update bos_gen_calendar
set 
szdescription = p_szdescription,
bworkonsat = p_bworkonsat,
bworkonsun = p_bworkonsun
where 
szcalendarid = p_szcalendarid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_createclosing(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_dtmclosing timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_closing
(
szworkplaceid,
szclosingtype,
szlocationtype,
szlocationid,
dtmclosing,
dtmlastupdated,
balreadytransferred
)
values
(
p_szworkplaceid,
p_szclosingtype,
p_szlocationtype,
p_szlocationid,
p_dtmclosing,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_createclosing_014(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_dtmclosing timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_closing
(
szworkplaceid,
szclosingtype,
szlocationtype,
szlocationid,
dtmclosing,
dtmlastupdated,
balreadytransferred
)
values
(
p_szworkplaceid,
p_szclosingtype,
p_szlocationtype,
p_szlocationid,
p_dtmclosing,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_deleteclosing(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_dtmclosing timestamp)
returns void as
$body$
begin
delete 
 from bos_gen_closing
where
szworkplaceid = p_szworkplaceid and
szclosingtype = p_szclosingtype and
szlocationtype = p_szlocationtype and
szlocationid = p_szlocationid and
dtmclosing = p_dtmclosing;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_getclosing(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid)
returns void as
$body$
begin
select 
szworkplaceid
, szclosingtype
, szlocationtype
, szlocationid
, dtmclosing
, dtmlastupdated
, balreadytransferred

from 
bos_gen_closing
where 
szworkplaceid = p_szworkplaceid and szclosingtype = p_szclosingtype and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_getclosing_014(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid)
returns void as
$body$
begin
select 
szworkplaceid
, szclosingtype
, szlocationtype
, szlocationid
, dtmclosing
, dtmlastupdated
, balreadytransferred

from 
bos_gen_closing
where 
szworkplaceid = p_szworkplaceid and szclosingtype = p_szclosingtype and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_getlistclosing()
returns void as
$body$
begin
select 
szworkplaceid,szclosingtype,szlocationtype,szlocationid  

from 
bos_gen_closing; 

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_isclosingexist(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid)
returns void as
$body$
begin
select 
dtmclosing  

from 
bos_gen_closing 
where 
szworkplaceid = p_szworkplaceid and szclosingtype = p_szclosingtype and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_lockclosing(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_closing
set 
dtmclosing = dtmclosing
where 
szworkplaceid = p_szworkplaceid and
	szclosingtype = p_szclosingtype and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_closing_updateclosing(
p_szworkplaceid bos_dt_szid,
p_szclosingtype bos_dt_szsmallid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_dtmclosing timestamp)
returns void as
$body$
begin
update bos_gen_closing
set 
dtmclosing = p_dtmclosing
where 
szworkplaceid = p_szworkplaceid and
szclosingtype = p_szclosingtype and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_createcounter(
p_szcounterid bos_dt_szid,
p_lnglastcounternumber bigint,
p_lngmaxnumber bigint,
p_szdescription varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_counter
(szcounterid, lnglastcounternumber, lngmaxnumber, szdescription, dtmlastupdated, balreadytransferred)
values
(p_szcounterid, p_lnglastcounternumber, p_lngmaxnumber, p_szdescription, p_dtmlastupdated, p_balreadytransferred);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_createcounter_014(
p_szcounterid bos_dt_szid,
p_lnglastcounternumber bigint,
p_lngmaxnumber bigint,
p_szdescription varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_counter
(szcounterid, lnglastcounternumber, lngmaxnumber, szdescription, dtmlastupdated, balreadytransferred)
values
(p_szcounterid, p_lnglastcounternumber, p_lngmaxnumber, p_szdescription, p_dtmlastupdated, p_balreadytransferred);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_deletecounter(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_counter where szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_getcounter(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
select 
lnglastcounternumber, lngmaxnumber, szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_counter
where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_getcounter_014(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
select 
lnglastcounternumber, lngmaxnumber, szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_counter
where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_getlistofcounter()
returns void as
$body$
begin
select 
szcounterid, szdescription

from 
bos_gen_counter

order by 
szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_getnextcounter(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_counter --with (rowlock)
set 
lnglastcounternumber = lnglastcounternumber + 1

where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_getnextcounter_013(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_counter --with (rowlock)
set 
lnglastcounternumber = lnglastcounternumber + 1


where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_iscounterexist(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
select 
lnglastcounternumber 

from 
bos_gen_counter 
where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_lockcounter(
p_szcounterid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_counter
set 
 lnglastcounternumber = lnglastcounternumber
where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_counter_updatecounter(
p_szcounterid bos_dt_szid,
p_lnglastcounternumber bigint,
p_lngmaxnumber bigint,
p_szdescription varchar)
returns void as
$body$
begin
update bos_gen_counter
set 
 lnglastcounternumber = p_lnglastcounternumber, lngmaxnumber = p_lngmaxnumber, szdescription = p_szdescription
where 
 szcounterid = p_szcounterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_createdatatrf(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_gen_datatrf
(
szwpid,
szdatatrfid,
szdescription,
szflexikeyid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szwpid,
p_szdatatrfid,
p_szdescription,
p_szflexikeyid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_createdatatrfitem(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid,
p_shitemnumber smallint,
p_szuri bos_dt_szuri,
p_ballwp bit,
p_bdestwp bit,
p_szdestwpid bos_dt_szid,
p_szfromid bos_dt_szid,
p_sztoid bos_dt_szid,
p_szfromid2 bos_dt_szid,
p_sztoid2 bos_dt_szid,
p_bnotvoidonly bit,
p_bneednoapprovalonly bit,
p_bapprovedonly bit,
p_bappliedonly bit,
p_btoday bit,
p_bfromtodate bit,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bunexporteddataonly bit)
returns void as
$body$
begin
insert into bos_gen_datatrfitem
(
szwpid,
szdatatrfid,
shitemnumber,
szuri,
ballwp,
bdestwp,
szdestwpid,
szfromid,
sztoid,
szfromid2,
sztoid2,
bnotvoidonly,
bneednoapprovalonly,
bapprovedonly,
bappliedonly,
btoday,
bfromtodate,
dtmfrom,
dtmto,
bunexporteddataonly
)
values
(
p_szwpid,
p_szdatatrfid,
p_shitemnumber,
p_szuri,
p_ballwp,
p_bdestwp,
p_szdestwpid,
p_szfromid,
p_sztoid,
p_szfromid2,
p_sztoid2,
p_bnotvoidonly,
p_bneednoapprovalonly,
p_bapprovedonly,
p_bappliedonly,
p_btoday,
p_bfromtodate,
p_dtmfrom,
p_dtmto,
p_bunexporteddataonly
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_deletedatatrf(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_gen_datatrf
where
szwpid = p_szwpid and szdatatrfid = p_szdatatrfid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_deletedatatrfitem(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_gen_datatrfitem
where
szwpid = p_szwpid and szdatatrfid = p_szdatatrfid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_getdatatrf(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription,
szflexikeyid,

-- data status.
dtmlastupdated,
balreadytransferred

from 
bos_gen_datatrf
where 
szwpid = p_szwpid and szdatatrfid = p_szdatatrfid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_getdatatrfitem(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
select 
shitemnumber,
szuri,
ballwp,
bdestwp,
szdestwpid,
szfromid,
sztoid,
szfromid2,
sztoid2,
bnotvoidonly,
bneednoapprovalonly,
bapprovedonly,
bappliedonly,
btoday,
bfromtodate,
dtmfrom,
dtmto,
bunexporteddataonly

from 
bos_gen_datatrfitem
where 
szwpid = p_szwpid and szdatatrfid = p_szdatatrfid 
order by 
shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_getlistofdatatrf(
p_szwpid bos_dt_szid)
returns void as
$body$
begin
select 
szdatatrfid,
szdescription,
szflexikeyid

from 
bos_gen_datatrf
where 
szwpid = p_szwpid 
order by 
szdatatrfid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_isdatatrfexist(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
select 
szwpid

from 
bos_gen_datatrf
where 
szwpid = p_szwpid and szdatatrfid = p_szdatatrfid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_lockdatatrf(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_datatrf
set 
szdescription = szdescription
where 
szwpid = p_szwpid and
szdatatrfid = p_szdatatrfid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_datatrf_updatedatatrf(
p_szwpid bos_dt_szid,
p_szdatatrfid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_datatrf
set 
szdescription = p_szdescription,
szflexikeyid = p_szflexikeyid
where 
szwpid = p_szwpid and
szdatatrfid = p_szdatatrfid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fbackdateclosing_createfbackdateclosing(
p_szfbackdateclosingid bos_dt_szid,
p_dtmdate timestamp,
p_dtmcashierlastclosing timestamp,
p_dtmdistrlastclosing timestamp,
p_dtminvlastclosing timestamp,
p_dtmbackdate timestamp,
p_bclosecashier bos_dt_bboolean,
p_bclosedistr bos_dt_bboolean,
p_bcloseinv bos_dt_bboolean,
p_szreason bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fbackdateclosing
(
szfbackdateclosingid,
dtmdate,
dtmcashierlastclosing,
dtmdistrlastclosing,
dtminvlastclosing,
dtmbackdate,
bclosecashier,
bclosedistr,
bcloseinv,
szreason,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfbackdateclosingid,
p_dtmdate,
p_dtmcashierlastclosing,
p_dtmdistrlastclosing,
p_dtminvlastclosing,
p_dtmbackdate,
p_bclosecashier,
p_bclosedistr,
p_bcloseinv,
p_szreason,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fbackdateclosing_updatefbackdateclosing(
p_szfbackdateclosingid bos_dt_szid,
p_dtmdate timestamp,
p_dtmcashierlastclosing timestamp,
p_dtmdistrlastclosing timestamp,
p_dtminvlastclosing timestamp,
p_dtmbackdate timestamp,
p_bclosecashier bos_dt_bboolean,
p_bclosedistr bos_dt_bboolean,
p_bcloseinv bos_dt_bboolean,
p_szreason bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_fbackdateclosing
set 
dtmdate = p_dtmdate,
dtmbackdate = p_dtmbackdate,
dtmcashierlastclosing = p_dtmcashierlastclosing,
dtmdistrlastclosing = p_dtmdistrlastclosing,
dtminvlastclosing = p_dtminvlastclosing,
bclosecashier = p_bclosecashier,
bclosedistr= p_bclosedistr,
bcloseinv = p_bcloseinv,
szreason = p_szreason,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfbackdateclosingid = p_szfbackdateclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_createfclosing(
p_szfclosingid bos_dt_szid,
p_dtmclosing timestamp,
p_binventory bit,
p_bcashier bit,
p_szwhid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
insert into bos_gen_fclosing
(
szfclosingid,
dtmclosing,
binventory,
bcashier,
szwhid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid
)
values
(
p_szfclosingid,
p_dtmclosing,
p_binventory,
p_bcashier,
p_szwhid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_deletefclosing(
p_szfclosingid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_fclosing
where
 szfclosingid = p_szfclosingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_getfclosing(
p_szfclosingid bos_dt_szid)
returns void as
$body$
begin
select

bos_gen_fclosing.szfclosingid,
bos_gen_fclosing.dtmclosing,
bos_gen_fclosing.binventory,
bos_gen_fclosing.bcashier,
bos_gen_fclosing.szwhid,
bos_gen_fclosing.bresultfrtransfer,
bos_gen_fclosing.bvoid, 
bos_gen_approved.bapproved,
bos_gen_fclosing.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_gen_fclosing.btprintedcount,
bos_gen_fclosing.btransferred,
bos_gen_fclosing.szcompanyid,
bos_gen_fclosing.szworkplaceid,
bos_gen_fclosing.sztaxentityid,
bos_gen_fclosing.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid

from
bos_gen_fclosing left join bos_gen_approved on 
bos_gen_fclosing.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on 
bos_gen_fclosing.szfjournalid = bos_gl_fjournaltrans.szfjournalid
where
bos_gen_fclosing.szfclosingid = p_szfclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_getlistoffclosing(
p_szfclosingid bos_dt_szid)
returns void as
$body$
begin
select 
szfclosingid, dtmclosing 

from 
bos_gen_fclosing; 

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_isfclosingexist(
p_szfclosingid bos_dt_szid)
returns void as
$body$
begin
select 
 szfclosingid 

from 
bos_gen_fclosing 
where 
szfclosingid = p_szfclosingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_lockfclosing(
p_szfclosingid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_fclosing
set 
binventory = binventory
where 
szfclosingid = p_szfclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_markfclosingapplied(
p_szfclosingid bos_dt_szid,
p_dtmclosing timestamp)
returns void as
$body$
begin
update bos_gen_fclosing
set 
dtmclosing = p_dtmclosing,
bapplied=1
where 
szfclosingid=p_szfclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_markfclosingvoid(
p_szfclosingid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_gen_fclosing
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfclosingid = p_szfclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fclosing_updatefclosing(
p_szfclosingid bos_dt_szid,
p_dtmclosing timestamp,
p_binventory bit,
p_bcashier bit,
p_szwhid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount bit,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_fclosing
set 

szfclosingid=p_szfclosingid,
dtmclosing=p_dtmclosing,
binventory=p_binventory,
bcashier=p_bcashier,
szwhid = p_szwhid,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid

where 
szfclosingid=p_szfclosingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_createfdatatrfsettlement(
p_szfdatatrfsettlementid bos_dt_szid,
p_szdocworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szquerysource varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fdatatrfsettlement
(
szfdatatrfsettlementid,
szdocworkplaceid,
dtmfrom,
dtmto,
szquerysource,
bresultfrtransfer,
bvoid,
bapproved,
bapplied,
bjournal,
bposted,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szapprovalid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdatatrfsettlementid,
p_szdocworkplaceid,
p_dtmfrom,
p_dtmto,
p_szquerysource,
p_bresultfrtransfer,
p_bvoid,
p_bapproved,
p_bapplied,
p_bjournal,
p_bposted,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szapprovalid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_createfdatatrfsettlementitem(
p_szfdatatrfsettlementid bos_dt_szid,
p_shitemnumber smallint,
p_sztransaction varchar,
p_dectransactionqty bos_dt_decamount,
p_decamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_gen_fdatatrfsettlementitem
(
szfdatatrfsettlementid,
shitemnumber,
sztransaction,
dectransactionqty,
decamount
)
values
(
p_szfdatatrfsettlementid,
p_shitemnumber,
p_sztransaction,
p_dectransactionqty,
p_decamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_deletefdatatrfsettlement(
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_gen_fdatatrfsettlement
where
 szfdatatrfsettlementid = p_szfdatatrfsettlementid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_deletefdatatrfsettlementitem(
p_szfdatatrfsettlementid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_fdatatrfsettlementitem
where
 szfdatatrfsettlementid = p_szfdatatrfsettlementid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_getfdatatrfsettlement(
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
select
bos_gen_fdatatrfsettlement.szdocworkplaceid,
bos_gen_fdatatrfsettlement.dtmfrom,
bos_gen_fdatatrfsettlement.dtmto,
bos_gen_fdatatrfsettlement.szquerysource,
bos_gen_fdatatrfsettlement.bresultfrtransfer,
bos_gen_fdatatrfsettlement.bvoid,
bos_gen_fdatatrfsettlement.bapproved,
bos_gen_fdatatrfsettlement.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_gen_fdatatrfsettlement.btprintedcount,
bos_gen_fdatatrfsettlement.btransferred,
bos_gen_fdatatrfsettlement.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_gen_fdatatrfsettlement.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_gen_fdatatrfsettlement.sztaxentityid,
bos_gen_fdatatrfsettlement.bneedapproval,
bos_gen_approved.szapprovalid,
bos_gen_fdatatrfsettlement.gdapprovedid,
bos_gl_fjournaltrans.szfjournalid,
bos_gen_fdatatrfsettlement.dtmcreated,
bos_gen_fdatatrfsettlement.bsystemcreated,
bos_gen_fdatatrfsettlement.dtmlastupdated,
bos_gen_fdatatrfsettlement.balreadytransferred
from bos_gen_fdatatrfsettlement left join bos_gen_approved on  bos_gen_fdatatrfsettlement.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_gen_fdatatrfsettlement.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gen_fdatatrfsettlement.szcompanyid = bos_gl_company.szcompanyid
left join bos_gl_workplace on bos_gen_fdatatrfsettlement.szworkplaceid = bos_gl_workplace.szworkplaceid
where
bos_gen_fdatatrfsettlement.szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_getfdatatrfsettlementitem(
p_szfdatatrfsettlementid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
sztransaction,
dectransactionqty,
decamount

from 
bos_gen_fdatatrfsettlementitem
where 
 szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_getlistoffdatatrfsettlement()
returns void as
$body$
begin
select 
szfdatatrfsettlementid, szdocworkplaceid

from 
bos_gen_fdatatrfsettlement;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_getlistoffdatatrfsettlementthatisoverlap(
p_szquerysource varchar,
p_szdocworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
select 
szfdatatrfsettlementid

from 
bos_gen_fdatatrfsettlement
where 
 ((dtmfrom >= p_dtmfrom and dtmto < interval '1 day' + p_dtmto) or
 (dtmfrom < interval '1 day' + p_dtmfrom and dtmto >= p_dtmfrom) or
      (dtmfrom < interval '1 day' + p_dtmto and dtmto >= p_dtmto)) and
      szquerysource = p_szquerysource and
      szdocworkplaceid = p_szdocworkplaceid and
      szfdatatrfsettlementid <> p_szfdatatrfsettlementid and
      bapplied = 1;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_getlistoffdatatrfsettlementthatisoverlapforquery(
p_szquerysource varchar,
p_szdocworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
select 
szfdatatrfsettlementid

from 
bos_gen_fdatatrfsettlement
where 
 ((dtmfrom < p_dtmfrom and dtmto >= p_dtmfrom) or
 (dtmfrom < interval '1 day' + p_dtmto and dtmto >=  interval '1 day' + p_dtmto) or
      (dtmfrom < p_dtmfrom and dtmto > p_dtmto)) and
      szquerysource = p_szquerysource and
      szdocworkplaceid = p_szdocworkplaceid and
      szfdatatrfsettlementid <> p_szfdatatrfsettlementid and
      bapplied = 1;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_isfdatatrfsettlementexist(
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
select 
szfdatatrfsettlementid

from 
bos_gen_fdatatrfsettlement
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_lockfdatatrfsettlement(
p_szfdatatrfsettlementid bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_fdatatrfsettlement
set 
szdocworkplaceid = szdocworkplaceid
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_markfdatatrfsettlementapplied(
p_szfdatatrfsettlementid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_fdatatrfsettlement
set 
bapplied = 1
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_markfdatatrfsettlementunapplied(
p_szfdatatrfsettlementid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_fdatatrfsettlement
set 
bapplied = 0
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_markfdatatrfsettlementvoid(
p_szfdatatrfsettlementid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_gen_fdatatrfsettlement
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fdatatrfsettlement_updatefdatatrfsettlement(
p_szfdatatrfsettlementid bos_dt_szid,
p_szdocworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szquerysource varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_gen_fdatatrfsettlement
set 
szdocworkplaceid = p_szdocworkplaceid,
dtmfrom = p_dtmfrom,
dtmto = p_dtmto,
szquerysource = p_szquerysource,
bresultfrtransfer = p_bresultfrtransfer,
bvoid = p_bvoid,
bapproved = p_bapproved,
bapplied = p_bapplied,
bjournal = p_bjournal,
bposted = p_bposted,
btprintedcount = p_btprintedcount,
btransferred = p_btransferred,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szapprovalid = p_szapprovalid,
szfjournalid = p_szfjournalid,
dtmcreated = dtmcreated,
bsystemcreated = bsystemcreated
where 
szfdatatrfsettlementid = p_szfdatatrfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_createfieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid,
p_szparentfieldname bos_dt_szbigid,
p_szparentfieldcontent bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fieldcontent
(
szfieldclass,
szfieldname,
szfieldcontent,
szparentfieldname,
szparentfieldcontent,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfieldclass,
p_szfieldname,
p_szfieldcontent,
p_szparentfieldname,
p_szparentfieldcontent,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_createfieldcontent_014(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid,
p_szparentfieldname bos_dt_szbigid,
p_szparentfieldcontent bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fieldcontent
(
szfieldclass,
szfieldname,
szfieldcontent,
szparentfieldname,
szparentfieldcontent,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfieldclass,
p_szfieldname,
p_szfieldcontent,
p_szparentfieldname,
p_szparentfieldcontent,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_deletefieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_gen_fieldcontent
where
szfieldclass = p_szfieldclass and 
szfieldname = p_szfieldname and 
szfieldcontent = p_szfieldcontent;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_getfieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
select 
szparentfieldname,
szparentfieldcontent,
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_gen_fieldcontent
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname and szfieldcontent = p_szfieldcontent ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_getfieldcontent_014(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
select 
szparentfieldname,
szparentfieldcontent,
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_gen_fieldcontent
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname and szfieldcontent = p_szfieldcontent ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_getlistofchildfieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szparentfieldname bos_dt_szbigid,
p_szparentfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
select 
szfieldcontent, szdescription

from 
bos_gen_fieldcontent
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname and ( (szparentfieldname = p_szparentfieldname and szparentfieldcontent = p_szparentfieldcontent) or (szparentfieldname = '' and szparentfieldcontent = '') ) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_getlistoffieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
select 
szfieldcontent, szdescription

from 
bos_gen_fieldcontent
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_isfieldcontentexist(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription

from 
bos_gen_fieldcontent
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname and szfieldcontent = p_szfieldcontent ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_lockfieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_fieldcontent
set 
szdescription = szdescription
where 
szfieldclass = p_szfieldclass;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldcontent_updatefieldcontent(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szfieldcontent bos_dt_szbigid,
p_szparentfieldname bos_dt_szbigid,
p_szparentfieldcontent bos_dt_szbigid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_fieldcontent
set 
szparentfieldname = p_szparentfieldname,
szparentfieldcontent = p_szparentfieldcontent,
szdescription = p_szdescription
where 
szfieldclass = p_szfieldclass;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_createfieldname(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fieldname
(
szfieldclass,
szfieldname,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfieldclass,
p_szfieldname,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_createfieldname_014(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_fieldname
(
szfieldclass,
szfieldname,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfieldclass,
p_szfieldname,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_deletefieldname(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_gen_fieldname
where
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_getfieldname(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_fieldname
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_getfieldname_014(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_fieldname
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_getlistoffieldname(
p_szfieldclass bos_dt_szbigid)
returns void as
$body$
begin
select 
szfieldname, szdescription

from 
bos_gen_fieldname
where 
szfieldclass = p_szfieldclass ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_isfieldnameexist(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription

from 
bos_gen_fieldname
where 
szfieldclass = p_szfieldclass and szfieldname = p_szfieldname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_lockfieldname(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_fieldname
set 
szdescription = szdescription
where 
szfieldclass = p_szfieldclass;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_fieldname_updatefieldname(
p_szfieldclass bos_dt_szbigid,
p_szfieldname bos_dt_szbigid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_fieldname
set 
szdescription = p_szdescription
where 
szfieldclass = p_szfieldclass;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_createflexikey(
p_szflexikeyid bos_dt_szid,
p_btsegmentcount smallint,
p_szdescription varchar,
p_ballowdynamicglaccentry smallint,
p_szfieldclass bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_flexikey
(
szflexikeyid,
btsegmentcount,
szdescription,
ballowdynamicglaccentry,
szfieldclass,
dtmlastupdated,
balreadytransferred
)
values
(
p_szflexikeyid,
p_btsegmentcount,
p_szdescription,
p_ballowdynamicglaccentry,
p_szfieldclass,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_createflexikey_014(
p_szflexikeyid bos_dt_szid,
p_btsegmentcount smallint,
p_szdescription varchar,
p_ballowdynamicglaccentry smallint,
p_szfieldclass bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_flexikey
(
szflexikeyid,
btsegmentcount,
szdescription,
ballowdynamicglaccentry,
szfieldclass,
dtmlastupdated,
balreadytransferred
)
values
(
p_szflexikeyid,
p_btsegmentcount,
p_szdescription,
p_ballowdynamicglaccentry,
p_szfieldclass,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_createflexikeyitem(
p_szflexikeyid bos_dt_szid,
p_btsegmentnumber smallint,
p_szkeytype bos_dt_szsmallid,
p_szcontentid bos_dt_szid,
p_btsegmentlength smallint,
p_szseparator varchar,
p_szalignment varchar,
p_szfillchar varchar,
p_bbalancingsegment smallint)
returns void as
$body$
begin
insert into bos_gen_flexikeyitem
(
szflexikeyid,
btsegmentnumber,
szkeytype,
szcontentid,
btsegmentlength,
szseparator,
szalignment,
szfillchar,
bbalancingsegment
)
values
(
p_szflexikeyid,
p_btsegmentnumber,
p_szkeytype,
p_szcontentid,
p_btsegmentlength,
p_szseparator,
p_szalignment,
p_szfillchar,
p_bbalancingsegment
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_deleteflexikey(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_flexikey
where
szflexikeyid = p_szflexikeyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_deleteflexikeyitem(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_flexikeyitem
where
szflexikeyid = p_szflexikeyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_getflexikey(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
select 
btsegmentcount,
szdescription,
ballowdynamicglaccentry,
szfieldclass,
dtmlastupdated,
balreadytransferred

from 
bos_gen_flexikey
where 
szflexikeyid = p_szflexikeyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_getflexikey_014(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
select 
btsegmentcount,
szdescription,
ballowdynamicglaccentry,
szfieldclass,
dtmlastupdated,
balreadytransferred

from 
bos_gen_flexikey
where 
szflexikeyid = p_szflexikeyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_getflexikeyitem(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
select 
szflexikeyid,
btsegmentnumber,
szkeytype,
szcontentid,
btsegmentlength,
szseparator,
szalignment,
szfillchar,
bbalancingsegment

from 
bos_gen_flexikeyitem
where 
szflexikeyid = p_szflexikeyid 
order by 
szflexikeyid,
btsegmentnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_getlistofflexikey()
returns void as
$body$
begin
select 
szflexikeyid,
szdescription

from 
bos_gen_flexikey;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_isflexikeyexist(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
select 
btsegmentcount

from 
bos_gen_flexikey
where 
szflexikeyid = p_szflexikeyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_lockflexikey(
p_szflexikeyid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_flexikey
set 
btsegmentcount = btsegmentcount
where 
szflexikeyid = p_szflexikeyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_flexikey_updateflexikey(
p_szflexikeyid bos_dt_szid,
p_btsegmentcount smallint,
p_szdescription varchar,
p_ballowdynamicglaccentry smallint,
p_szfieldclass bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_flexikey
set 
btsegmentcount = p_btsegmentcount,
szdescription = p_szdescription,
ballowdynamicglaccentry = p_ballowdynamicglaccentry,
szfieldclass = p_szfieldclass
where 
szflexikeyid = p_szflexikeyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_createmenu(
p_szmenuid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_block bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_menu
(
szmenuid,
szdescription,
block,
dtmlastupdated,
balreadytransferred
)
values
(
p_szmenuid,
p_szdescription,
p_block,
p_dtmlastupdated,
p_balreadytransferred
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_createmenu_013(
p_szmenuid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_block bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_menu
(
szmenuid,
szdescription,
block,
dtmlastupdated,
balreadytransferred
)
values
(
p_szmenuid,
p_szdescription,
p_block,
p_dtmlastupdated,
p_balreadytransferred
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_createmenuitem(
p_szmenuid bos_dt_szid,
p_shitemnumber smallint,
p_szitemname bos_dt_szname,
p_szlinkaddress bos_dt_szurl)
returns void as
$body$
begin
insert into bos_gen_menuitem
(
szmenuid,
shitemnumber,
szitemname,
szlinkaddress
)
values
(
p_szmenuid,
p_shitemnumber,
p_szitemname,
p_szlinkaddress
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_createmenuitem_013(
p_szmenuid bos_dt_szid,
p_shitemnumber smallint,
p_szitemname bos_dt_szname,
p_szlinkaddress bos_dt_szurl)
returns void as
$body$
begin
insert into bos_gen_menuitem
(
szmenuid,
shitemnumber,
szitemname,
szlinkaddress
)
values
(
p_szmenuid,
p_shitemnumber,
p_szitemname,
p_szlinkaddress
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_deletemenu(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_menu
where
szmenuid = p_szmenuid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_deletemenuitem(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_menuitem
where
szmenuid = p_szmenuid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_getlistofmenu()
returns void as
$body$
begin
select 
szmenuid,
szdescription

from 
bos_gen_menu;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_getmenu(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_menu
where 
szmenuid = p_szmenuid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_getmenu_014(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred

from 
bos_gen_menu
where 
szmenuid = p_szmenuid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_getmenuitem(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
szitemname,
szlinkaddress

from 
bos_gen_menuitem
where 
szmenuid = p_szmenuid 
order by 
szmenuid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_ismenuexist(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
select 
szmenuid

from 
bos_gen_menu
where 
szmenuid = p_szmenuid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_lockmenu(
p_szmenuid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_menu
set 
block = block
where 
szmenuid = p_szmenuid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_updatemenu(
p_szmenuid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_menu
set 
szdescription = p_szdescription
where 
szmenuid = p_szmenuid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_menu_updatemenu_013(
p_szmenuid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_menu
set 
szdescription = p_szdescription
where 
szmenuid = p_szmenuid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_createolap(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_szolaptitle bos_dt_szname,
p_szolapparameter bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_gen_olap
(
szolaptypeid,
szolapname,
szolaptitle,
szolapparameter,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szolaptypeid,
p_szolapname,
p_szolaptitle,
p_szolapparameter,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_createolap_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_szolaptitle bos_dt_szname,
p_szolapparameter bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_gen_olap
(
szolaptypeid,
szolapname,
szolaptitle,
szolapparameter,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szolaptypeid,
p_szolapname,
p_szolaptitle,
p_szolapparameter,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_createolapitem(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_shitemnumber smallint,
p_szcolumnname bos_dt_szname,
p_shcolumnwidth smallint,
p_bdetail bit,
p_bsummarized bit,
p_szprinttext bos_dt_szname,
p_szsorttype bos_dt_szsmallid,
p_imaxdisplayedrow integer,
p_szrowtodisplay bos_dt_szsmallid,
p_szproductidfieldnm bos_dt_szname,
p_szcompuomidfortotal bos_dt_szid,
p_szstyle bos_dt_szid,
p_binline bos_dt_bboolean,
p_iindentlength integer,
p_bfreeze bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_gen_olapitem
(
szolaptypeid,
szolapname,
shitemnumber,
szcolumnname,
shcolumnwidth,
bdetail,
bsummarized,
szprinttext,
szsorttype,
imaxdisplayedrow,
szrowtodisplay,
szproductidfieldnm,
szcompuomidfortotal,
szstyle,
binline,
iindentlength,
bfreeze
)
values
(
p_szolaptypeid,
p_szolapname,
p_shitemnumber,
p_szcolumnname,
p_shcolumnwidth,
p_bdetail,
p_bsummarized,
p_szprinttext,
p_szsorttype,
p_imaxdisplayedrow,
p_szrowtodisplay,
p_szproductidfieldnm,
p_szcompuomidfortotal,
p_szstyle,
p_binline,
p_iindentlength,
p_bfreeze
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_createolapitem_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_shitemnumber smallint,
p_szcolumnname bos_dt_szname,
p_shcolumnwidth smallint,
p_bdetail bit,
p_bsummarized bit,
p_szprinttext bos_dt_szname,
p_szsorttype bos_dt_szsmallid,
p_imaxdisplayedrow integer,
p_szrowtodisplay bos_dt_szsmallid,
p_szproductidfieldnm bos_dt_szname,
p_szcompuomidfortotal bos_dt_szid,
p_szstyle bos_dt_szid,
p_binline bos_dt_bboolean,
p_iindentlength integer,
p_bfreeze bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_gen_olapitem
(
szolaptypeid,
szolapname,
shitemnumber,
szcolumnname,
shcolumnwidth,
bdetail,
bsummarized,
szprinttext,
szsorttype,
imaxdisplayedrow,
szrowtodisplay,
szproductidfieldnm,
szcompuomidfortotal,
szstyle,
binline,
iindentlength,
bfreeze
)
values
(
p_szolaptypeid,
p_szolapname,
p_shitemnumber,
p_szcolumnname,
p_shcolumnwidth,
p_bdetail,
p_bsummarized,
p_szprinttext,
p_szsorttype,
p_imaxdisplayedrow,
p_szrowtodisplay,
p_szproductidfieldnm,
p_szcompuomidfortotal,
p_szstyle,
p_binline,
p_iindentlength,
p_bfreeze
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_deleteolap(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_gen_olap
where
szolaptypeid = p_szolaptypeid and 
szolapname = p_szolapname;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_deleteolap_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_gen_olap
where
szolaptypeid = p_szolaptypeid and 
szolapname = p_szolapname;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_deleteolapitem(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_gen_olapitem
where
szolaptypeid = p_szolaptypeid and 
szolapname = p_szolapname;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_deleteolapitem_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_gen_olapitem
where
szolaptypeid = p_szolaptypeid and 
szolapname = p_szolapname;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getlistofolap()
returns void as
$body$
begin
select 
szolaptypeid,
szolapname,
szolaptitle

from 
bos_gen_olap

order by 
szolaptypeid,
szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getlistofolapwhereolaptype(
p_szolaptypeid bos_dt_szbigid)
returns void as
$body$
begin
select 
szolapname,
szolaptitle

from 
bos_gen_olap
where 
szolaptypeid = p_szolaptypeid 
order by 
szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getolap(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
szolaptitle,
szolapparameter,
-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_gen_olap
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getolap_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
szolaptitle,
szolapparameter,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_gen_olap
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getolapitem(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
shitemnumber,
szcolumnname,
shcolumnwidth,
bdetail,
bsummarized,
szprinttext,
szsorttype,
imaxdisplayedrow,
szrowtodisplay,
szproductidfieldnm,
szcompuomidfortotal,
szstyle,
binline,
iindentlength,
bfreeze

from 
bos_gen_olapitem
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_getolapitem_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
shitemnumber,
szcolumnname,
shcolumnwidth,
bdetail,
bsummarized,
szprinttext,
szsorttype,
imaxdisplayedrow,
szrowtodisplay,
szproductidfieldnm,
szcompuomidfortotal,
szstyle,
binline,
iindentlength,
bfreeze

from 
bos_gen_olapitem
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_isolapexist(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
szolaptypeid

from 
bos_gen_olap
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_isolapexist_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
select 
szolaptypeid

from 
bos_gen_olap
where 
szolaptypeid = p_szolaptypeid and szolapname = p_szolapname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_lockolap(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
update bos_gen_olap
set 
szolaptitle = szolaptitle
where 
szolaptypeid = p_szolaptypeid and
szolapname = p_szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_lockolap_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname)
returns void as
$body$
begin
update bos_gen_olap
set 
szolaptitle = szolaptitle
where 
szolaptypeid = p_szolaptypeid and
szolapname = p_szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_updateolap(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_szolaptitle bos_dt_szname,
p_szolapparameter bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_olap
set 
szolaptitle = p_szolaptitle,
szolapparameter = p_szolapparameter
where 
szolaptypeid = p_szolaptypeid and
szolapname = p_szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_olap_updateolap_013(
p_szolaptypeid bos_dt_szbigid,
p_szolapname bos_dt_szname,
p_szolaptitle bos_dt_szname,
p_szolapparameter bos_dt_szbigid)
returns void as
$body$
begin
update bos_gen_olap
set 
szolaptitle = p_szolaptitle, 
szolapparameter = p_szolapparameter
where 
szolaptypeid = p_szolaptypeid and
szolapname = p_szolapname;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_createreason(
p_szreasonid bos_dt_szid,
p_szreasontype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_reason
(
szreasonid,
szreasontype,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szreasonid,
p_szreasontype,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_deletereason(
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_gen_reason
where
szreasonid = p_szreasonid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_getlistofreason()
returns void as
$body$
begin
select 
szreasonid,
szreasontype,
szdescription

from 
bos_gen_reason;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_getlistofreasonwheretypebad()
returns void as
$body$
begin
select 
szreasonid,
szdescription

from 
bos_gen_reason
where 
szreasontype = 'bad' ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_getreason(
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
select 
szreasonid,
szreasontype,
szdescription,

dtmlastupdated,
balreadytransferred

from 
bos_gen_reason
where 
szreasonid = p_szreasonid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_isreasonexist(
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
select 
szreasonid

from 
bos_gen_reason
where 
szreasonid = p_szreasonid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_lockreason(
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_reason
set 
szdescription = szdescription
where 
szreasonid = p_szreasonid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_reason_updatereason(
p_szreasonid bos_dt_szid,
p_szreasontype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_reason
set 
szreasontype = p_szreasontype,
szdescription = p_szdescription
where 
szreasonid = p_szreasonid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_createroutineschedule(
p_szscheduleid bos_dt_szid,
p_szscheduleusage varchar,
p_szscheduletype bos_dt_szsmallid,
p_bincludesat bit,
p_bincludesun bit,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gen_routineschedule
(
szscheduleid,
szscheduleusage,
szscheduletype,
bincludesat,
bincludesun,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szscheduleid,
p_szscheduleusage,
p_szscheduletype,
p_bincludesat,
p_bincludesun,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_createroutinescheduleitem(
p_szscheduleid bos_dt_szid,
p_shscheduleitem smallint,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
insert into bos_gen_routinescheduleitem
(
szscheduleid,
shscheduleitem,
decvalue
)
values
(
p_szscheduleid,
p_shscheduleitem,
p_decvalue
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_deleteroutineschedule(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_routineschedule
where
szscheduleid = p_szscheduleid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_deleteroutinescheduleitem(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gen_routinescheduleitem
where
szscheduleid = p_szscheduleid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_getlistofroutineschedule(
p_szscheduleusage varchar)
returns void as
$body$
begin
select 
szscheduleid,
szscheduletype,
szdescription


from 
bos_gen_routineschedule

where 
szscheduleusage like p_szscheduleusage ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_getroutineschedule(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
select 
szscheduleid,
szscheduleusage,
szscheduletype,
bincludesat,
bincludesun,
szdescription,

dtmlastupdated,
balreadytransferred


from 
bos_gen_routineschedule
where 
szscheduleid = p_szscheduleid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_getroutinescheduleitem(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
select 
bgrsi.szscheduleid,
bgrsi.shscheduleitem,
bgrsi.decvalue,
bgrs.szscheduletype as szscheduletype_j


from 
bos_gen_routinescheduleitem as bgrsi
inner join bos_gen_routineschedule as bgrs on 
bgrs.szscheduleid = bgrsi.szscheduleid
where 
bgrsi.szscheduleid = p_szscheduleid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_isroutinescheduleexist(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
select 
szscheduleid

from 
bos_gen_routineschedule
where 
szscheduleid = p_szscheduleid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_lockroutineschedule(
p_szscheduleid bos_dt_szid)
returns void as
$body$
begin
update bos_gen_routineschedule
set 
szdescription = szdescription
where 
szscheduleid = p_szscheduleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_routineschedule_updateroutineschedule(
p_szscheduleid bos_dt_szid,
p_szscheduleusage varchar,
p_szscheduletype bos_dt_szsmallid,
p_bincludesat bit,
p_bincludesun bit,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_gen_routineschedule
set 
szscheduletype = p_szscheduletype,
szscheduleusage = p_szscheduleusage,
bincludesat = p_bincludesat,
bincludesun = p_bincludesun,
szdescription = p_szdescription
where 
szscheduleid = p_szscheduleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_createtrnmaster(
p_szuri bos_dt_szuri,
p_sztrnid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_szassemblynm bos_dt_szbigid,
p_szfqn bos_dt_szbigid,
p_bshowastransferable bit,
p_bsupportdatamaintenance bit,
p_bsupportglposting bit,
p_supportdatamaster bit,
p_supportdataextension bit)
returns void as
$body$
begin
insert into bos_gen_trnmaster
(
szuri,
sztrnid,
szname,
szassemblynm,
szfqn,
bshowastransferable,
bsupportdatamaintenance,
bsupportglposting,
supportdatamaster,
supportdataextension
)
values
(
p_szuri,
p_sztrnid,
p_szname,
p_szassemblynm,
p_szfqn,
p_bshowastransferable,
p_bsupportdatamaintenance,
p_bsupportglposting,
p_supportdatamaster,
p_supportdataextension
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_createtrnmaster_013(
p_szuri bos_dt_szuri,
p_sztrnid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_szassemblynm bos_dt_szbigid,
p_szfqn bos_dt_szbigid,
p_bshowastransferable bit,
p_bsupportdatamaintenance bit,
p_bsupportglposting bit,
p_supportdatamaster bit,
p_supportdataextension bit,
p_bsupportexportimport bit)
returns void as
$body$
begin
insert into bos_gen_trnmaster
(
szuri,
sztrnid,
szname,
szassemblynm,
szfqn,
bshowastransferable,
bsupportdatamaintenance,
bsupportglposting,
supportdatamaster,
supportdataextension,
bsupportexportimport
)
values
(
p_szuri,
p_sztrnid,
p_szname,
p_szassemblynm,
p_szfqn,
p_bshowastransferable,
p_bsupportdatamaintenance,
p_bsupportglposting,
p_supportdatamaster,
p_supportdataextension,
p_bsupportexportimport
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_deletetrnmaster(
p_szuri bos_dt_szuri)
returns void as
$body$
begin
delete from
bos_gen_trnmaster
where
szuri=p_szuri;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_getlistofdatamaster()
returns void as
$body$
begin
select 
szuri,
sztrnid,
szname

from 
bos_gen_trnmaster
where 
supportdatamaster = 1 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_getlistoftrnmaster()
returns void as
$body$
begin
select 
szuri,
sztrnid,
szname

from 
bos_gen_trnmaster;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_gettrnmaster(
p_szuri bos_dt_szuri)
returns void as
$body$
begin
select 
sztrnid,
szname,
szassemblynm,
szfqn,
bshowastransferable,
bsupportdatamaintenance,
bsupportglposting,
supportdatamaster,
supportdataextension


from 
bos_gen_trnmaster
where 
szuri=p_szuri ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_gettrnmaster_013(
p_szuri bos_dt_szuri)
returns void as
$body$
begin
select 
sztrnid,
szname,
szassemblynm,
szfqn,
bshowastransferable,
bsupportdatamaintenance,
bsupportglposting,
supportdatamaster,
supportdataextension,
bsupportexportimport


from 
bos_gen_trnmaster
where 
szuri=p_szuri ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_istrnmasterexist(
p_szuri bos_dt_szuri)
returns void as
$body$
begin
select 
szuri

from 
bos_gen_trnmaster
where 
szuri=p_szuri ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_locktrnmaster(
p_szuri bos_dt_szuri)
returns void as
$body$
begin
update bos_gen_trnmaster
set 
sztrnid=sztrnid
where 
szuri=p_szuri;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_updatetrnmaster(
p_szuri bos_dt_szuri,
p_szname bos_dt_szname,
p_szassemblynm bos_dt_szbigid,
p_szfqn bos_dt_szbigid,
p_bshowastransferable bit,
p_bsupportdatamaintenance bit,
p_bsupportglposting bit,
p_supportdatamaster bit,
p_supportdataextension bit)
returns void as
$body$
begin
update bos_gen_trnmaster
set 
szname=p_szname,
szassemblynm = p_szassemblynm,
szfqn = p_szfqn,
bshowastransferable = p_bshowastransferable,
bsupportdatamaintenance = p_bsupportdatamaintenance,
bsupportglposting = p_bsupportglposting,
supportdatamaster = p_supportdatamaster,
supportdataextension = p_supportdataextension

where 
szuri=p_szuri;

end;
$body$
language plpgsql volatile;


create or replace function bos_gen_trnmaster_updatetrnmaster_013(
p_szuri bos_dt_szuri,
p_szname bos_dt_szname,
p_szassemblynm bos_dt_szbigid,
p_szfqn bos_dt_szbigid,
p_bshowastransferable bit,
p_bsupportdatamaintenance bit,
p_bsupportglposting bit,
p_supportdatamaster bit,
p_supportdataextension bit,
p_bsupportexportimport bit)
returns void as
$body$
begin
update bos_gen_trnmaster
set 
szname=p_szname,
szassemblynm = p_szassemblynm,
szfqn = p_szfqn,
bshowastransferable = p_bshowastransferable,
bsupportdatamaintenance = p_bsupportdatamaintenance,
bsupportglposting = p_bsupportglposting,
supportdatamaster = p_supportdatamaster,
supportdataextension = p_supportdataextension,
bsupportexportimport = p_bsupportexportimport

where 
szuri=p_szuri;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_createaccount(
p_szaccountid bos_dt_szid,
p_szname bos_dt_szname,
p_szaccounttype varchar,
p_szonlyusedforworkplaceid bos_dt_szid,
p_szonlyusedforuserid bos_dt_szid,
p_szfullpathaccid bos_dt_szfullpath,
p_bytelevel bos_dt_bytelevel,
p_bgroup bos_dt_bboolean,
p_szdefaultbalance bos_dt_szonechar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_account
(
szaccountid,
szname,
szaccounttype,
szonlyusedforworkplaceid,
szonlyusedforuserid,
szfullpathaccid,
bytelevel,
bgroup,
szdefaultbalance,
dtmlastupdated,
balreadytransferred
)
values
(
p_szaccountid,
p_szname,
p_szaccounttype,
p_szonlyusedforworkplaceid,
p_szonlyusedforuserid,
p_szfullpathaccid,
p_bytelevel,
p_bgroup,
p_szdefaultbalance,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_deleteaccount(
p_szaccountid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gl_account
where
szaccountid=p_szaccountid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_getaccount(
p_szaccountid bos_dt_szid)
returns void as
$body$
begin
select
bos_gl_account.szaccountid,
bos_gl_account.szname,
bos_gl_account.szaccounttype,

bos_gl_account.szonlyusedforworkplaceid,
wp.szname as szonlyusedforworkplacenm_j,

bos_gl_account.szonlyusedforuserid,
usr.szname as szonlyusedforusernm_j,

bos_gl_account.szfullpathaccid,
bos_gl_account.bgroup,
bos_gl_account.bytelevel,
bos_gl_account.szdefaultbalance,


bos_gl_account.dtmlastupdated,
bos_gl_account.balreadytransferred

from
bos_gl_account 
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_gl_account.szonlyusedforworkplaceid
left join bos_sm_user as usr on usr.szuserid = bos_gl_account.szonlyusedforuserid
where
szaccountid=p_szaccountid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_getlistofaccount()
returns void as
$body$
begin
select 
szaccountid,
szname

from 
bos_gl_account

order by 
szaccountid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_isaccountexist(
p_szaccountid bos_dt_szid)
returns void as
$body$
begin
select 
szname

from 
bos_gl_account
where 
szaccountid=p_szaccountid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_lockaccount(
p_szaccountid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_account
set 
szaccounttype = szaccounttype
where 
szaccountid=p_szaccountid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_updateaccount(
p_szaccountid bos_dt_szid,
p_szname bos_dt_szname,
p_szaccounttype varchar,
p_szonlyusedforworkplaceid bos_dt_szid,
p_szonlyusedforuserid bos_dt_szid,
p_szfullpathaccid bos_dt_szfullpath,
p_bytelevel bos_dt_bytelevel,
p_bgroup bos_dt_bboolean,
p_szdefaultbalance bos_dt_szonechar,
p_szprevfullpathaccid bos_dt_szfullpath,
p_shdifflevel integer)
returns void as
$body$
begin
-- ### 2 update #####
update
	bos_gl_account
set
	szname = p_szname,
	szaccounttype = p_szaccounttype,
	szonlyusedforworkplaceid = p_szonlyusedforworkplaceid,
	szonlyusedforuserid = p_szonlyusedforuserid,
	szfullpathaccid = p_szfullpathaccid ,
	bytelevel = p_bytelevel ,
	bgroup = p_bgroup ,
	szdefaultbalance = p_szdefaultbalance 
where
	szaccountid = p_szaccountid;

update 
	bos_gl_account 
set
	szfullpathaccid = p_szfullpathaccid + substring(szfullpathaccid, len(p_szprevfullpathaccid) + 1, len(szfullpathaccid) - len(p_szprevfullpathaccid)),
	bytelevel = bytelevel - p_shdifflevel
where
	szfullpathaccid like p_szprevfullpathaccid+'%' and
	szaccountid <> p_szaccountid;
	
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_account_updateaccount_013(
p_szaccountid bos_dt_szid,
p_szname bos_dt_szname,
p_szaccounttype varchar,
p_szonlyusedforworkplaceid bos_dt_szid,
p_szonlyusedforuserid bos_dt_szid,
p_szfullpathaccid bos_dt_szfullpath,
p_bytelevel bos_dt_bytelevel,
p_bgroup bos_dt_bboolean,
p_szdefaultbalance bos_dt_szonechar,
p_szprevfullpathaccid bos_dt_szfullpath,
p_shdifflevel integer)
returns void as
$body$
begin
-- ### 2 update #####
update
	bos_gl_account
set
	szname = p_szname,
	szaccounttype = p_szaccounttype,
	szonlyusedforworkplaceid = p_szonlyusedforworkplaceid,
	szonlyusedforuserid = p_szonlyusedforuserid,
	szfullpathaccid = p_szfullpathaccid ,
	bytelevel = p_bytelevel ,
	bgroup = p_bgroup ,
	szdefaultbalance = p_szdefaultbalance 
where
	szaccountid = p_szaccountid;

update 
	bos_gl_account 
set
	szfullpathaccid = p_szfullpathaccid + substring(szfullpathaccid, len(p_szprevfullpathaccid) + 1, len(szfullpathaccid) - len(p_szprevfullpathaccid)),
	bytelevel = bytelevel - p_shdifflevel
where
	szfullpathaccid like p_szprevfullpathaccid+'%' and
	szaccountid <> p_szaccountid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_createcompany(
p_szcompanyid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_sztaxentityid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_sztaxserialnumber varchar,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_company
(
szcompanyid,
szname,
sztaxentityid,
szledgerid,
sztaxserialnumber,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
szccyrateid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcompanyid,
p_szname,
p_sztaxentityid,
p_szledgerid,
p_sztaxserialnumber,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_szccyrateid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_createcompany_013(
p_szcompanyid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_sztaxentityid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_sztaxserialnumber varchar,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_company
(
szcompanyid,
szname,
sztaxentityid,
szledgerid,
sztaxserialnumber,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
szccyrateid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcompanyid,
p_szname,
p_sztaxentityid,
p_szledgerid,
p_sztaxserialnumber,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_szccyrateid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_deletecompany(
p_szcompanyid bos_dt_szmediumid)
returns void as
$body$
begin
delete from
bos_gl_company
where
szcompanyid = p_szcompanyid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_getcompany(
p_szcompanyid bos_dt_szmediumid)
returns void as
$body$
begin

select
bos_gl_company.szname,

bos_gl_company.sztaxentityid,
sztaxserialnumber,

bos_gl_company.szledgerid,
bos_gl_ledger.szccyid as szledgerccyid_j,
bos_cu_currency.szamountformat as szledgerccyamountformat_j,

szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,

szccyrateid,

bos_gl_company.dtmlastupdated,
bos_gl_company.balreadytransferred

from
bos_gl_company
left join bos_gl_ledger on bos_gl_ledger.szledgerid = bos_gl_company.szledgerid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_gl_ledger.szccyid

where
bos_gl_company.szcompanyid = p_szcompanyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_getcompany_014(
p_szcompanyid bos_dt_szmediumid)
returns void as
$body$
begin

select
bos_gl_company.szname,

bos_gl_company.sztaxentityid,
sztaxserialnumber,

bos_gl_company.szledgerid,
bos_gl_ledger.szccyid as szledgerccyid_j,
bos_cu_currency.szamountformat as szledgerccyamountformat_j,

szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,

szccyrateid,

bos_gl_company.dtmlastupdated,
bos_gl_company.balreadytransferred

from
bos_gl_company
left join bos_gl_ledger on bos_gl_ledger.szledgerid = bos_gl_company.szledgerid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_gl_ledger.szccyid

where
bos_gl_company.szcompanyid = p_szcompanyid;


end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_getlistofcompany()
returns void as
$body$
begin
select 
szcompanyid,
szname

from 
bos_gl_company;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_iscompanyexist(
p_szcompanyid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szcompanyid

from 
bos_gl_company
where 
szcompanyid = p_szcompanyid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_lockcompany(
p_szcompanyid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_gl_company
set 
szname = szname
where 
szcompanyid = p_szcompanyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_updatecompany(
p_szcompanyid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_sztaxentityid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_sztaxserialnumber varchar,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_gl_company
set 
szname= p_szname,
sztaxentityid=p_sztaxentityid,
szledgerid = p_szledgerid,
sztaxserialnumber=p_sztaxserialnumber,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
szccyrateid = p_szccyrateid

where 
szcompanyid = p_szcompanyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_company_updatecompany_013(
p_szcompanyid bos_dt_szmediumid,
p_szname bos_dt_szname,
p_sztaxentityid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_sztaxserialnumber varchar,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_gl_company
set 
szname= p_szname,
sztaxentityid=p_sztaxentityid,
szledgerid = p_szledgerid,
sztaxserialnumber=p_sztaxserialnumber,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
szccyrateid = p_szccyrateid

where 
szcompanyid = p_szcompanyid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_createfjournaltrans(
p_szmyfjournalid bos_dt_szid,
p_dtmpost timestamp,
p_szaccperiodnm bos_dt_szname,
p_szfbatchid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_szjournalcategoryid bos_dt_szid,
p_szccyrateid bos_dt_szid,
p_szccyid bos_dt_szid,
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_dectotalamount bos_dt_decamount,
p_decdoctotalamount bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bclosingjournal bit,
p_szfbanksettlementid bos_dt_szid)
returns void as
$body$
begin
insert into bos_gl_fjournaltrans
(
szfjournalid,
dtmpost,
szaccperiodnm,
szfbatchid,
szledgerid,
szjournalcategoryid,
szccyrateid,
szccyid,
sztrnid,
szdocid,
szurl,
dectotalamount,
decdoctotalamount,
szdescription,
-- doc status,
bresultfrtransfer,
bvoid,
bposted,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
bclosingjournal,
szfbanksettlementid
)
values
(
p_szmyfjournalid,
p_dtmpost,
p_szaccperiodnm,
p_szfbatchid,
p_szledgerid,
p_szjournalcategoryid,
p_szccyrateid,
p_szccyid,
p_sztrnid,
p_szdocid,
p_szurl,
p_dectotalamount,
p_decdoctotalamount,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bposted,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_bclosingjournal,
p_szfbanksettlementid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_createfjournaltrans_013(
p_szmyfjournalid bos_dt_szid,
p_dtmpost timestamp,
p_szaccperiodnm bos_dt_szname,
p_szfbatchid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_szjournalcategoryid bos_dt_szid,
p_szccyrateid bos_dt_szid,
p_szccyid bos_dt_szid,
p_sztrnid bos_dt_szid,
p_szdocid bos_dt_szid,
p_szurl bos_dt_szurl,
p_dectotalamount bos_dt_decamount,
p_decdoctotalamount bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_bclosingjournal bit,
p_szfbanksettlementid bos_dt_szid)
returns void as
$body$
begin
insert into bos_gl_fjournaltrans
(
szfjournalid,
dtmpost,
szaccperiodnm,
szfbatchid,
szledgerid,
szjournalcategoryid,
szccyrateid,
szccyid,
sztrnid,
szdocid,
szurl,
dectotalamount,
decdoctotalamount,
szdescription,
-- doc status,
bresultfrtransfer,
bvoid,
bposted,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
bclosingjournal,
szfbanksettlementid
)
values
(
p_szmyfjournalid,
p_dtmpost,
p_szaccperiodnm,
p_szfbatchid,
p_szledgerid,
p_szjournalcategoryid,
p_szccyrateid,
p_szccyid,
p_sztrnid,
p_szdocid,
p_szurl,
p_dectotalamount,
p_decdoctotalamount,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bposted,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_bclosingjournal,
p_szfbanksettlementid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_deletefjournaltrans(
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gl_fjournaltrans
where
szfjournalid=p_szfjournalid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_deletefjournaltransitem(
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gl_fjournaltransitem
where
szfjournalid = p_szfjournalid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_getfjournaltrans(
p_szfjournalid bos_dt_szid,
p_bttrue bos_dt_bboolean,
p_btfalse bos_dt_bboolean)
returns void as
$body$
begin

select
bos_gl_fjournaltrans.dtmpost,
bos_gl_fjournaltrans.szaccperiodnm,
bos_gl_fjournaltrans.szfbatchid,
bos_gl_fjournaltrans.szledgerid,
bos_gl_fjournaltrans.szjournalcategoryid,
bos_gl_fjournaltrans.szccyrateid,
bos_gl_fjournaltrans.szccyid,	
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_gl_fjournaltrans.sztrnid,
bos_gl_fjournaltrans.szdocid,
bos_gl_fjournaltrans.szurl,	

bos_gl_fjournaltrans.dectotalamount,
bos_gl_fjournaltrans.decdoctotalamount,

bos_gl_fjournaltrans.szdescription,
bos_gl_fjournaltrans.szfbanksettlementid,

bos_gl_fjournaltrans.bresultfrtransfer,
bos_gl_fjournaltrans.bvoid,
bos_gen_approved.bapproved as bapproved,

p_btfalse as bapplied,		--journal document is never applied.
p_bttrue as bjournal,		--journal document is always journaled.

bos_gl_fjournaltrans.bposted,
bos_gl_fjournaltrans.btprintedcount,
bos_gl_fjournaltrans.btransferred,

bos_gl_fjournaltrans.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_gl_fjournaltrans.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_gl_fjournaltrans.sztaxentityid,

bos_gl_fjournaltrans.bneedapproval,
bos_gen_approved.gdapprovedid as gdapprovedid,
bos_gen_approved.szapprovalid as szapprovalid,

bos_gl_fjournaltrans.szfjournalid,

bos_gl_fjournaltrans.dtmcreated,
bos_gl_fjournaltrans.bsystemcreated,

bos_gl_fjournaltrans.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_gl_fjournaltrans.dtmlastupdated,
bos_gl_fjournaltrans.balreadytransferred,

bos_gl_fjournaltrans.bclosingjournal

from
bos_gl_fjournaltrans 
left join bos_cu_currency on bos_cu_currency.szccyid = bos_gl_fjournaltrans.szccyid

left join bos_gen_approved on bos_gen_approved.gdapprovedid = bos_gl_fjournaltrans.gdapprovedid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_gl_fjournaltrans.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_gl_fjournaltrans.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_gl_fjournaltrans.szuserid


where
szfjournalid=p_szfjournalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_getfjournaltrans_013(
p_szfjournalid bos_dt_szid,
p_bttrue bos_dt_bboolean,
p_btfalse bos_dt_bboolean)
returns void as
$body$
begin

select
bos_gl_fjournaltrans.dtmpost,
bos_gl_fjournaltrans.szaccperiodnm,
bos_gl_fjournaltrans.szfbatchid,
bos_gl_fjournaltrans.szledgerid,
bos_gl_fjournaltrans.szjournalcategoryid,
bos_gl_fjournaltrans.szccyrateid,
bos_gl_fjournaltrans.szccyid,	
bos_cu_currency.szamountformat as szccyamountformat_j,
bos_gl_fjournaltrans.sztrnid,
bos_gl_fjournaltrans.szdocid,
bos_gl_fjournaltrans.szurl,	

bos_gl_fjournaltrans.dectotalamount,
bos_gl_fjournaltrans.decdoctotalamount,

bos_gl_fjournaltrans.szdescription,
bos_gl_fjournaltrans.szfbanksettlementid,

bos_gl_fjournaltrans.bresultfrtransfer,
bos_gl_fjournaltrans.bvoid,
bos_gen_approved.bapproved as bapproved,

p_btfalse as bapplied,		--journal document is never applied.
p_bttrue as bjournal,		--journal document is always journaled.

bos_gl_fjournaltrans.bposted,
bos_gl_fjournaltrans.btprintedcount,
bos_gl_fjournaltrans.btransferred,

bos_gl_fjournaltrans.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_gl_fjournaltrans.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_gl_fjournaltrans.sztaxentityid,

bos_gl_fjournaltrans.bneedapproval,
bos_gen_approved.gdapprovedid as gdapprovedid,
bos_gen_approved.szapprovalid as szapprovalid,

bos_gl_fjournaltrans.szfjournalid,

bos_gl_fjournaltrans.dtmcreated,
bos_gl_fjournaltrans.bsystemcreated,

bos_gl_fjournaltrans.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_gl_fjournaltrans.dtmlastupdated,
bos_gl_fjournaltrans.balreadytransferred,

bos_gl_fjournaltrans.bclosingjournal

from
bos_gl_fjournaltrans 
left join bos_cu_currency on bos_cu_currency.szccyid = bos_gl_fjournaltrans.szccyid

left join bos_gen_approved on bos_gen_approved.gdapprovedid = bos_gl_fjournaltrans.gdapprovedid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_gl_fjournaltrans.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_gl_fjournaltrans.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_gl_fjournaltrans.szuserid


where
szfjournalid=p_szfjournalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_getlistoffjournaltrans()
returns void as
$body$
begin
select 
szfjournalid, dtmpost

from 
bos_gl_fjournaltrans;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_isfjournaltransexist(
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
select 
szfjournalid

from 
bos_gl_fjournaltrans
where 
szfjournalid=p_szfjournalid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_lockfjournaltrans(
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_fjournaltrans
set 
szdescription=szdescription
where 
szfjournalid=p_szfjournalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_updatefjournaltrans(
p_szmyfjournalid bos_dt_szid,
p_dtmpost timestamp,
p_szaccperiodnm bos_dt_szname,
p_szfbatchid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_szjournalcategoryid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_dectotalamount bos_dt_decamount,
p_decdoctotalamount bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_bclosingjournal bit,
p_szfbanksettlementid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_fjournaltrans
set 
dtmpost = p_dtmpost,
szaccperiodnm = p_szaccperiodnm,
szfbatchid = p_szfbatchid,
szledgerid = p_szledgerid,
szjournalcategoryid = p_szjournalcategoryid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
dectotalamount = p_dectotalamount,
decdoctotalamount = p_decdoctotalamount,
szdescription = p_szdescription,

bvoid = p_bvoid,
bposted = p_bposted,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
bsystemcreated = p_bsystemcreated,

szuserid = p_szuserid,
bclosingjournal = p_bclosingjournal,
szfbanksettlementid = p_szfbanksettlementid

where 
szfjournalid = p_szmyfjournalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_fjournaltrans_updatefjournaltrans_013(
p_szmyfjournalid bos_dt_szid,
p_dtmpost timestamp,
p_szaccperiodnm bos_dt_szname,
p_szfbatchid bos_dt_szid,
p_szledgerid bos_dt_szid,
p_szjournalcategoryid bos_dt_szid,
p_szccyrateid bos_dt_szmediumid,
p_szccyid bos_dt_szsmallid,
p_dectotalamount bos_dt_decamount,
p_decdoctotalamount bos_dt_decamount,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_bclosingjournal bit,
p_szfbanksettlementid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_fjournaltrans
set 
dtmpost = p_dtmpost,
szaccperiodnm = p_szaccperiodnm,
szfbatchid = p_szfbatchid,
szledgerid = p_szledgerid,
szjournalcategoryid = p_szjournalcategoryid,
szccyrateid = p_szccyrateid,
szccyid = p_szccyid,
dectotalamount = p_dectotalamount,
decdoctotalamount = p_decdoctotalamount,
szdescription = p_szdescription,

bvoid = p_bvoid,
bposted = p_bposted,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
bsystemcreated = p_bsystemcreated,

szuserid = p_szuserid,
bclosingjournal = p_bclosingjournal,
szfbanksettlementid = p_szfbanksettlementid

where 
szfjournalid = p_szmyfjournalid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_createledger(
p_szledgerid bos_dt_szid,
p_szname bos_dt_szname,
p_szledgertype varchar,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szid,
p_szacccalendarid bos_dt_szid,
p_szcoaid bos_dt_szid,
p_szretainedearningaccid bos_dt_szid,
p_szretainedearningglsubaccid bos_dt_szglaccount,
p_sztranslationadjustmentaccid bos_dt_szid,
p_sztranslationadjustmentglsubaccid bos_dt_szglaccount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_ledger
(
szledgerid,
szname,
szledgertype,
szdescription,
szccyid,
szacccalendarid,
szcoaid,
szretainedearningaccid,
szretainedearningglsubaccid,
sztranslationadjustmentaccid,
sztranslationadjustmentglsubaccid,
-- data status.,
dtmlastupdated ,
balreadytransferred
)
values
(
p_szledgerid,
p_szname,
p_szledgertype,
p_szdescription,
p_szccyid,
p_szacccalendarid,
p_szcoaid,
p_szretainedearningaccid,
p_szretainedearningglsubaccid,
p_sztranslationadjustmentaccid,
p_sztranslationadjustmentglsubaccid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_createledger_013(
p_szledgerid bos_dt_szid,
p_szname bos_dt_szname,
p_szledgertype varchar,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szid,
p_szacccalendarid bos_dt_szid,
p_szcoaid bos_dt_szid,
p_szretainedearningaccid bos_dt_szid,
p_szretainedearningglsubaccid bos_dt_szglaccount,
p_sztranslationadjustmentaccid bos_dt_szid,
p_sztranslationadjustmentglsubaccid bos_dt_szglaccount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_ledger
(
szledgerid,
szname,
szledgertype,
szdescription,
szccyid,
szacccalendarid,
szcoaid,
szretainedearningaccid,
szretainedearningglsubaccid,
sztranslationadjustmentaccid,
sztranslationadjustmentglsubaccid,
-- data status.,
dtmlastupdated ,
balreadytransferred
)
values
(
p_szledgerid,
p_szname,
p_szledgertype,
p_szdescription,
p_szccyid,
p_szacccalendarid,
p_szcoaid,
p_szretainedearningaccid,
p_szretainedearningglsubaccid,
p_sztranslationadjustmentaccid,
p_sztranslationadjustmentglsubaccid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_deleteledger(
p_szledgerid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_gl_ledger
where
szledgerid=p_szledgerid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_getledger(
p_szledgerid bos_dt_szid)
returns void as
$body$
begin
select
bos_gl_ledger.szname,
bos_gl_ledger.szledgertype,
bos_gl_ledger.szdescription,
bos_gl_ledger.dtmlastupdated,
bos_gl_ledger.balreadytransferred,

bos_gl_ledger.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,

bos_gl_ledger.szacccalendarid,
bos_gl_ledger.szcoaid,

bos_gl_ledger.szretainedearningaccid,
reacc.szname as szretainedearningaccnm_j,

bos_gl_ledger.szretainedearningglsubaccid,
resubacc.szdescription as szretainedearningglsubaccnm_j,

bos_gl_ledger.sztranslationadjustmentaccid,
taacc.szname as sztranslationadjustmentaccnm_j,

bos_gl_ledger.sztranslationadjustmentglsubaccid,
tasubacc.szdescription as sztranslationadjustmentglsubaccnm_j

from
bos_gl_ledger

left join bos_gl_account as reacc on reacc.szaccountid = bos_gl_ledger.szretainedearningaccid
left join bos_gl_glsubacc as resubacc on resubacc.szledgerid = bos_gl_ledger.szledgerid
and resubacc.szglsubaccid = bos_gl_ledger.szretainedearningglsubaccid

left join bos_gl_account as taacc on taacc.szaccountid = bos_gl_ledger.sztranslationadjustmentaccid
left join bos_gl_glsubacc as tasubacc on tasubacc.szledgerid = bos_gl_ledger.szledgerid
and tasubacc.szglsubaccid = bos_gl_ledger.sztranslationadjustmentglsubaccid

left join bos_cu_currency on bos_cu_currency.szccyid = bos_gl_ledger.szccyid

where
bos_gl_ledger.szledgerid = p_szledgerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_getlistofledger()
returns void as
$body$
begin
select 
szledgerid,
szname,
szdescription

from 
bos_gl_ledger;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_isledgerexist(
p_szledgerid bos_dt_szid)
returns void as
$body$
begin
select 
szledgerid

from 
bos_gl_ledger
where 
szledgerid=p_szledgerid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_lockledger(
p_szledgerid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_ledger
set 
szledgertype=szledgertype
where 
szledgerid=p_szledgerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_updateledger(
p_szledgerid bos_dt_szid,
p_szname bos_dt_szname,
p_szledgertype varchar,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szid,
p_szacccalendarid bos_dt_szid,
p_szcoaid bos_dt_szid,
p_szretainedearningaccid bos_dt_szid,
p_szretainedearningglsubaccid bos_dt_szglaccount,
p_sztranslationadjustmentaccid bos_dt_szid,
p_sztranslationadjustmentglsubaccid bos_dt_szglaccount)
returns void as
$body$
begin
update bos_gl_ledger
set 
szname=p_szname,
szledgertype=p_szledgertype,
szdescription=p_szdescription,
szccyid=p_szccyid,
szacccalendarid=p_szacccalendarid,
szcoaid=p_szcoaid,
szretainedearningaccid=p_szretainedearningaccid,
szretainedearningglsubaccid=p_szretainedearningglsubaccid,
sztranslationadjustmentaccid=p_sztranslationadjustmentaccid,
sztranslationadjustmentglsubaccid=p_sztranslationadjustmentglsubaccid

where 
szledgerid=p_szledgerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_ledger_updateledger_013(
p_szledgerid bos_dt_szid,
p_szname bos_dt_szname,
p_szledgertype varchar,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szid,
p_szacccalendarid bos_dt_szid,
p_szcoaid bos_dt_szid,
p_szretainedearningaccid bos_dt_szid,
p_szretainedearningglsubaccid bos_dt_szglaccount,
p_sztranslationadjustmentaccid bos_dt_szid,
p_sztranslationadjustmentglsubaccid bos_dt_szglaccount)
returns void as
$body$
begin
update bos_gl_ledger
set 
szname=p_szname,
szledgertype=p_szledgertype,
szdescription=p_szdescription,
szccyid=p_szccyid,
szacccalendarid=p_szacccalendarid,
szcoaid=p_szcoaid,
szretainedearningaccid=p_szretainedearningaccid,
szretainedearningglsubaccid=p_szretainedearningglsubaccid,
sztranslationadjustmentaccid=p_sztranslationadjustmentaccid,
sztranslationadjustmentglsubaccid=p_sztranslationadjustmentglsubaccid

where 
szledgerid=p_szledgerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_createtaxentity(
p_sztaxid bos_dt_szid,
p_szname bos_dt_szname,
p_sztaxno bos_dt_sztaxid,
p_szpkpno bos_dt_sztaxid,
p_dtmnpwpdate timestamp,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szname,
p_taxszaddress_2 bos_dt_szname,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_cpszcontactperson bos_dt_szname,
p_cpszroomno bos_dt_szsmallname,
p_cpszfloor bos_dt_szsmallname,
p_cpszbuilding bos_dt_szname,
p_cpszaddress_1 bos_dt_szname,
p_cpszaddress_2 bos_dt_szname,
p_cpszdistrict bos_dt_szname,
p_cpszcity bos_dt_szmediumname,
p_cpszzipcode bos_dt_szsmallname,
p_cpszstate bos_dt_szmediumname,
p_cpszcountry bos_dt_szmediumname,
p_cpszphoneno_1 bos_dt_szmediumname,
p_cpszphoneno_2 bos_dt_szmediumname,
p_cpszfaxno bos_dt_szmediumname,
p_cpszmobileno bos_dt_szmediumname,
p_cpszemail bos_dt_szmediumname,
p_cpszwebsite bos_dt_szmediumname,
p_toszcontactperson bos_dt_szname,
p_toszroomno bos_dt_szsmallname,
p_toszfloor bos_dt_szsmallname,
p_toszbuilding bos_dt_szname,
p_toszaddress_1 bos_dt_szname,
p_toszaddress_2 bos_dt_szname,
p_toszdistrict bos_dt_szname,
p_toszcity bos_dt_szmediumname,
p_toszzipcode bos_dt_szsmallname,
p_toszstate bos_dt_szmediumname,
p_toszcountry bos_dt_szmediumname,
p_toszphoneno_1 bos_dt_szmediumname,
p_toszphoneno_2 bos_dt_szmediumname,
p_toszfaxno bos_dt_szmediumname,
p_toszmobileno bos_dt_szmediumname,
p_toszemail bos_dt_szmediumname,
p_toszwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_gl_taxentity
(
sztaxid,
szname,
sztaxno,
szpkpno,
dtmnpwpdate,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
cpszcontactperson,
cpszroomno,
cpszfloor,
cpszbuilding,
cpszaddress_1,
cpszaddress_2,
cpszdistrict,
cpszcity,
cpszzipcode,
cpszstate,
cpszcountry,
cpszphoneno_1,
cpszphoneno_2,
cpszfaxno,
cpszmobileno,
cpszemail,
cpszwebsite,
toszcontactperson,
toszroomno,
toszfloor,
toszbuilding,
toszaddress_1,
toszaddress_2,
toszdistrict,
toszcity,
toszzipcode,
toszstate,
toszcountry,
toszphoneno_1,
toszphoneno_2,
toszfaxno,
toszmobileno,
toszemail,
toszwebsite,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztaxid,
p_szname,
p_sztaxno,
p_szpkpno,
p_dtmnpwpdate,
p_taxszcontactperson,
p_taxszroomno,
p_taxszfloor,
p_taxszbuilding,
p_taxszaddress_1,
p_taxszaddress_2,
p_taxszdistrict,
p_taxszcity,
p_taxszzipcode,
p_taxszstate,
p_taxszcountry,
p_taxszphoneno_1,
p_taxszphoneno_2,
p_taxszfaxno,
p_taxszmobileno,
p_taxszemail,
p_taxszwebsite,
p_cpszcontactperson,
p_cpszroomno,
p_cpszfloor,
p_cpszbuilding,
p_cpszaddress_1,
p_cpszaddress_2,
p_cpszdistrict,
p_cpszcity,
p_cpszzipcode,
p_cpszstate,
p_cpszcountry,
p_cpszphoneno_1,
p_cpszphoneno_2,
p_cpszfaxno,
p_cpszmobileno,
p_cpszemail,
p_cpszwebsite,
p_toszcontactperson,
p_toszroomno,
p_toszfloor,
p_toszbuilding,
p_toszaddress_1,
p_toszaddress_2,
p_toszdistrict,
p_toszcity,
p_toszzipcode,
p_toszstate,
p_toszcountry,
p_toszphoneno_1,
p_toszphoneno_2,
p_toszfaxno,
p_toszmobileno,
p_toszemail,
p_toszwebsite,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_deletetaxentity(
p_sztaxid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gl_taxentity
where
sztaxid = p_sztaxid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_getlistoftaxentity()
returns void as
$body$
begin
select 
sztaxid,
szname

from 
bos_gl_taxentity;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_gettaxentity(
p_sztaxid bos_dt_szid)
returns void as
$body$
begin
select 
sztaxid,
szname,
sztaxno,
szpkpno,
dtmnpwpdate,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
cpszcontactperson,
cpszroomno,
cpszfloor,
cpszbuilding,
cpszaddress_1,
cpszaddress_2,
cpszdistrict,
cpszcity,
cpszzipcode,
cpszstate,
cpszcountry,
cpszphoneno_1,
cpszphoneno_2,
cpszfaxno,
cpszmobileno,
cpszemail,
cpszwebsite,
toszcontactperson,
toszroomno,
toszfloor,
toszbuilding,
toszaddress_1,
toszaddress_2,
toszdistrict,
toszcity,
toszzipcode,
toszstate,
toszcountry,
toszphoneno_1,
toszphoneno_2,
toszfaxno,
toszmobileno,
toszemail,
toszwebsite,
dtmlastupdated,
balreadytransferred

from 
bos_gl_taxentity
where 
sztaxid = p_sztaxid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_istaxentityexist(
p_sztaxid bos_dt_szid)
returns void as
$body$
begin
select 
sztaxid

from 
bos_gl_taxentity
where 
sztaxid = p_sztaxid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_locktaxentity(
p_sztaxid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_taxentity
set 
taxszwebsite = taxszwebsite
where 
sztaxid = p_sztaxid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxentity_updatetaxentity(
p_sztaxid bos_dt_szid,
p_szname bos_dt_szname,
p_sztaxno bos_dt_sztaxid,
p_szpkpno bos_dt_sztaxid,
p_dtmnpwpdate timestamp,
p_taxszcontactperson bos_dt_szname,
p_taxszroomno bos_dt_szsmallname,
p_taxszfloor bos_dt_szsmallname,
p_taxszbuilding bos_dt_szname,
p_taxszaddress_1 bos_dt_szname,
p_taxszaddress_2 bos_dt_szname,
p_taxszdistrict bos_dt_szname,
p_taxszcity bos_dt_szmediumname,
p_taxszzipcode bos_dt_szsmallname,
p_taxszstate bos_dt_szmediumname,
p_taxszcountry bos_dt_szmediumname,
p_taxszphoneno_1 bos_dt_szmediumname,
p_taxszphoneno_2 bos_dt_szmediumname,
p_taxszfaxno bos_dt_szmediumname,
p_taxszmobileno bos_dt_szmediumname,
p_taxszemail bos_dt_szmediumname,
p_taxszwebsite bos_dt_szmediumname,
p_cpszcontactperson bos_dt_szname,
p_cpszroomno bos_dt_szsmallname,
p_cpszfloor bos_dt_szsmallname,
p_cpszbuilding bos_dt_szname,
p_cpszaddress_1 bos_dt_szname,
p_cpszaddress_2 bos_dt_szname,
p_cpszdistrict bos_dt_szname,
p_cpszcity bos_dt_szmediumname,
p_cpszzipcode bos_dt_szsmallname,
p_cpszstate bos_dt_szmediumname,
p_cpszcountry bos_dt_szmediumname,
p_cpszphoneno_1 bos_dt_szmediumname,
p_cpszphoneno_2 bos_dt_szmediumname,
p_cpszfaxno bos_dt_szmediumname,
p_cpszmobileno bos_dt_szmediumname,
p_cpszemail bos_dt_szmediumname,
p_cpszwebsite bos_dt_szmediumname,
p_toszcontactperson bos_dt_szname,
p_toszroomno bos_dt_szsmallname,
p_toszfloor bos_dt_szsmallname,
p_toszbuilding bos_dt_szname,
p_toszaddress_1 bos_dt_szname,
p_toszaddress_2 bos_dt_szname,
p_toszdistrict bos_dt_szname,
p_toszcity bos_dt_szmediumname,
p_toszzipcode bos_dt_szsmallname,
p_toszstate bos_dt_szmediumname,
p_toszcountry bos_dt_szmediumname,
p_toszphoneno_1 bos_dt_szmediumname,
p_toszphoneno_2 bos_dt_szmediumname,
p_toszfaxno bos_dt_szmediumname,
p_toszmobileno bos_dt_szmediumname,
p_toszemail bos_dt_szmediumname,
p_toszwebsite bos_dt_szmediumname)
returns void as
$body$
begin
update bos_gl_taxentity
set 
szname = p_szname,
sztaxno = p_sztaxno,
szpkpno = p_szpkpno,
dtmnpwpdate = p_dtmnpwpdate,
taxszcontactperson = p_taxszcontactperson,
taxszroomno = p_taxszroomno,
taxszfloor = p_taxszfloor,
taxszbuilding = p_taxszbuilding,
taxszaddress_1 = p_taxszaddress_1,
taxszaddress_2 = p_taxszaddress_2,
taxszdistrict = p_taxszdistrict,
taxszcity = p_taxszcity,
taxszzipcode = p_taxszzipcode,
taxszstate = p_taxszstate,
taxszcountry = p_taxszcountry,
taxszphoneno_1 = p_taxszphoneno_1,
taxszphoneno_2 = p_taxszphoneno_2,
taxszfaxno = p_taxszfaxno,
taxszmobileno = p_taxszmobileno,
taxszemail = p_taxszemail,
taxszwebsite = p_taxszwebsite,
cpszcontactperson = p_cpszcontactperson,
cpszroomno = p_cpszroomno,
cpszfloor = p_cpszfloor,
cpszbuilding = p_cpszbuilding,
cpszaddress_1 = p_cpszaddress_1,
cpszaddress_2 = p_cpszaddress_2,
cpszdistrict = p_cpszdistrict,
cpszcity = p_cpszcity,
cpszzipcode = p_cpszzipcode,
cpszstate = p_cpszstate,
cpszcountry = p_cpszcountry,
cpszphoneno_1 = p_cpszphoneno_1,
cpszphoneno_2 = p_cpszphoneno_2,
cpszfaxno = p_cpszfaxno,
cpszmobileno = p_cpszmobileno,
cpszemail = p_cpszemail,
cpszwebsite = p_cpszwebsite,
toszcontactperson = p_toszcontactperson,
toszroomno = p_toszroomno,
toszfloor = p_toszfloor,
toszbuilding = p_toszbuilding,
toszaddress_1 = p_toszaddress_1,
toszaddress_2 = p_toszaddress_2,
toszdistrict = p_toszdistrict,
toszcity = p_toszcity,
toszzipcode = p_toszzipcode,
toszstate = p_toszstate,
toszcountry = p_toszcountry,
toszphoneno_1 = p_toszphoneno_1,
toszphoneno_2 = p_toszphoneno_2,
toszfaxno = p_toszfaxno,
toszmobileno = p_toszmobileno,
toszemail = p_toszemail,
toszwebsite = p_toszwebsite
where 
sztaxid = p_sztaxid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_createtaxtype(
p_sztaxtypeid varchar,
p_szname bos_dt_szname,
p_decrate bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_taxtype
(
sztaxtypeid,
szname,
decrate,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztaxtypeid,
p_szname,
p_decrate,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_createtaxtype_014(
p_sztaxtypeid varchar,
p_szname bos_dt_szname,
p_decrate bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_gl_taxtype
(
sztaxtypeid,
szname,
decrate,
dtmlastupdated,
balreadytransferred
)
values
(
p_sztaxtypeid,
p_szname,
p_decrate,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_deletetaxtype(
p_sztaxtypeid varchar)
returns void as
$body$
begin
delete from
bos_gl_taxtype
where
sztaxtypeid=p_sztaxtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_getlistoftaxtype()
returns void as
$body$
begin
select 
sztaxtypeid,
szname

from 
bos_gl_taxtype;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_gettaxtype(
p_sztaxtypeid varchar)
returns void as
$body$
begin
select 
szname,
decrate,
dtmlastupdated,
balreadytransferred

from 
bos_gl_taxtype
where 
sztaxtypeid=p_sztaxtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_gettaxtype_014(
p_sztaxtypeid varchar)
returns void as
$body$
begin
select 
szname,
decrate,
dtmlastupdated,
balreadytransferred

from 
bos_gl_taxtype
where 
sztaxtypeid=p_sztaxtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_istaxtypeexist(
p_sztaxtypeid varchar)
returns void as
$body$
begin
select 
sztaxtypeid

from 
bos_gl_taxtype
where 
sztaxtypeid=p_sztaxtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_locktaxtype(
p_sztaxtypeid varchar)
returns void as
$body$
begin
update bos_gl_taxtype
set 
decrate=decrate
where 
sztaxtypeid=p_sztaxtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_taxtype_updatetaxtype(
p_sztaxtypeid varchar,
p_szname bos_dt_szname,
p_decrate bos_dt_decamount)
returns void as
$body$
begin
update bos_gl_taxtype
set 
szname=p_szname,
decrate=p_decrate
where 
sztaxtypeid=p_sztaxtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_createworkplace(
p_szworkplaceid bos_dt_szid,
p_szworkplacetypeid varchar,
p_szname bos_dt_szname,
p_wpszcontactperson bos_dt_szname,
p_wpszroomno bos_dt_szsmallname,
p_wpszfloor bos_dt_szsmallname,
p_wpszbuilding bos_dt_szname,
p_wpszaddress_1 bos_dt_szname,
p_wpszaddress_2 bos_dt_szname,
p_wpszdistrict bos_dt_szmediumname,
p_wpszcity bos_dt_szmediumname,
p_wpszzipcode bos_dt_szsmallname,
p_wpszstate bos_dt_szmediumname,
p_wpszcountry bos_dt_szmediumname,
p_wpszphoneno_1 bos_dt_szmediumname,
p_wpszphoneno_2 bos_dt_szmediumname,
p_wpszfaxno bos_dt_szmediumname,
p_wpszmobileno bos_dt_szmediumname,
p_wpszemail bos_dt_szmediumname,
p_wpszwebsite bos_dt_szmediumname,
p_szcompanyid bos_dt_szmediumid,
p_sztaxid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcalenderid bos_dt_szid,
p_szchiefofworkplace varchar,
p_szpaymentbankid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szinvorgid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_gl_workplace
(
szworkplaceid,
szworkplacetypeid,
szname,
wpszcontactperson,
wpszroomno,
wpszfloor,
wpszbuilding,
wpszaddress_1,
wpszaddress_2,
wpszdistrict,
wpszcity,
wpszzipcode,
wpszstate,
wpszcountry,
wpszphoneno_1,
wpszphoneno_2,
wpszfaxno,
wpszmobileno,
wpszemail,
wpszwebsite,
szcompanyid,
sztaxid,
szsalesorgid,
szcalenderid,
szchiefofworkplace,
szpaymentbankid,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
szinvorgid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szworkplaceid,
p_szworkplacetypeid,
p_szname,
p_wpszcontactperson,
p_wpszroomno,
p_wpszfloor,
p_wpszbuilding,
p_wpszaddress_1,
p_wpszaddress_2,
p_wpszdistrict,
p_wpszcity,
p_wpszzipcode,
p_wpszstate,
p_wpszcountry,
p_wpszphoneno_1,
p_wpszphoneno_2,
p_wpszfaxno,
p_wpszmobileno,
p_wpszemail,
p_wpszwebsite,
p_szcompanyid,
p_sztaxid,
p_szsalesorgid,
p_szcalenderid,
p_szchiefofworkplace,
p_szpaymentbankid,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_szinvorgid,
p_dtmlastupdated,
p_balreadytransferred

);
--set ansi_nulls on
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_createworkplace_013(
p_szworkplaceid bos_dt_szid,
p_szworkplacetypeid varchar,
p_szname bos_dt_szname,
p_wpszcontactperson bos_dt_szname,
p_wpszroomno bos_dt_szsmallname,
p_wpszfloor bos_dt_szsmallname,
p_wpszbuilding bos_dt_szname,
p_wpszaddress_1 bos_dt_szname,
p_wpszaddress_2 bos_dt_szname,
p_wpszdistrict bos_dt_szname,
p_wpszcity bos_dt_szmediumname,
p_wpszzipcode bos_dt_szsmallname,
p_wpszstate bos_dt_szmediumname,
p_wpszcountry bos_dt_szmediumname,
p_wpszphoneno_1 bos_dt_szmediumname,
p_wpszphoneno_2 bos_dt_szmediumname,
p_wpszfaxno bos_dt_szmediumname,
p_wpszmobileno bos_dt_szmediumname,
p_wpszemail bos_dt_szmediumname,
p_wpszwebsite bos_dt_szmediumname,
p_szcompanyid bos_dt_szmediumid,
p_sztaxid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcalenderid bos_dt_szid,
p_szchiefofworkplace varchar,
p_szpaymentbankid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szinvorgid bos_dt_szid,
p_bactive bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_gl_workplace
(
szworkplaceid,
szworkplacetypeid,
szname,
wpszcontactperson,
wpszroomno,
wpszfloor,
wpszbuilding,
wpszaddress_1,
wpszaddress_2,
wpszdistrict,
wpszcity,
wpszzipcode,
wpszstate,
wpszcountry,
wpszphoneno_1,
wpszphoneno_2,
wpszfaxno,
wpszmobileno,
wpszemail,
wpszwebsite,
szcompanyid,
sztaxid,
szsalesorgid,
szcalenderid,
szchiefofworkplace,
szpaymentbankid,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
szinvorgid,
dtmlastupdated,
balreadytransferred,
bactive
)
values
(
p_szworkplaceid,
p_szworkplacetypeid,
p_szname,
p_wpszcontactperson,
p_wpszroomno,
p_wpszfloor,
p_wpszbuilding,
p_wpszaddress_1,
p_wpszaddress_2,
p_wpszdistrict,
p_wpszcity,
p_wpszzipcode,
p_wpszstate,
p_wpszcountry,
p_wpszphoneno_1,
p_wpszphoneno_2,
p_wpszfaxno,
p_wpszmobileno,
p_wpszemail,
p_wpszwebsite,
p_szcompanyid,
p_sztaxid,
p_szsalesorgid,
p_szcalenderid,
p_szchiefofworkplace,
p_szpaymentbankid,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_szinvorgid,
p_dtmlastupdated,
p_balreadytransferred,
p_bactive
);

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_deleteworkplace(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_gl_workplace
where
szworkplaceid = p_szworkplaceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_getlistofworkplace()
returns void as
$body$
begin
select 
szworkplaceid,
szname

from 
bos_gl_workplace
order by
--in un-read-committed mode order of result is un-predictable.
--as list of workplaces is most loaded list, it is a good idea to
--define its order.
szworkplaceid;


end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_getworkplace(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select
wo.szworkplaceid,
wo.szworkplacetypeid,
wo.szname,
wo.wpszcontactperson,
wo.wpszroomno,
wo.wpszfloor,
wo.wpszbuilding,
wo.wpszaddress_1,
wo.wpszaddress_2,
wo.wpszdistrict,
wo.wpszcity,
wo.wpszzipcode,
wo.wpszstate,
wo.wpszcountry,
wo.wpszphoneno_1,
wo.wpszphoneno_2,
wo.wpszfaxno,
wo.wpszmobileno,
wo.wpszemail,
wo.wpszwebsite,

wo.szcompanyid,
co.szname as szcompanynm_j,
co.szledgerid as szcompanyledgerid_j,
le.szccyid as szcompanyledgerccyid_j,
cu.szamountformat as szcompanyledgerccyamountformat_j,
co.szccyrateid as szcompanyccyrateid_j,

wo.sztaxid,

wo.szsalesorgid,
so.szparentsalesorgid as szsalesorgid_2_j,

wo.szcalenderid,
wo.szchiefofworkplace,
wo.szpaymentbankid,
wo.szpriceid,
wo.szpriceorderid,
wo.szpromopriceid,
wo.szpromopriceorderid,

wo.szinvorgid,
io.szcostingmethod as szinvorgcostingmethod_j,
io.bdisablelottracking as binvorgdisablelottracking_j,
io.bdisablesntracking as binvorgdisablesntracking_j,

wo.dtmlastupdated,
wo.balreadytransferred
from
bos_gl_workplace as wo
left join bos_gl_company as co on co.szcompanyid = wo.szcompanyid
left join bos_gl_ledger as le on le.szledgerid = co.szledgerid
left join bos_cu_currency as cu on cu.szccyid = le.szccyid
left join bos_inv_invorg as io on io.szinvorgid = wo.szinvorgid
left join bos_sd_salesorganization as so on so.szsalesorgid = wo.szsalesorgid
where
wo.szworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_getworkplace_013(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select
wo.szworkplaceid,
wo.szworkplacetypeid,
wo.szname,
wo.wpszcontactperson,
wo.wpszroomno,
wo.wpszfloor,
wo.wpszbuilding,
wo.wpszaddress_1,
wo.wpszaddress_2,
wo.wpszdistrict,
wo.wpszcity,
wo.wpszzipcode,
wo.wpszstate,
wo.wpszcountry,
wo.wpszphoneno_1,
wo.wpszphoneno_2,
wo.wpszfaxno,
wo.wpszmobileno,
wo.wpszemail,
wo.wpszwebsite,

wo.szcompanyid,
co.szname as szcompanynm_j,
co.szledgerid as szcompanyledgerid_j,
le.szccyid as szcompanyledgerccyid_j,
cu.szamountformat as szcompanyledgerccyamountformat_j,
co.szccyrateid as szcompanyccyrateid_j,

wo.sztaxid,

wo.szsalesorgid,
so.szparentsalesorgid as szsalesorgid_2_j,

wo.szcalenderid,
wo.szchiefofworkplace,
wo.szpaymentbankid,
wo.szpriceid,
wo.szpriceorderid,
wo.szpromopriceid,
wo.szpromopriceorderid,

wo.szinvorgid,
io.szcostingmethod as szinvorgcostingmethod_j,
io.bdisablelottracking as binvorgdisablelottracking_j,
io.bdisablesntracking as binvorgdisablesntracking_j,

wo.dtmlastupdated,
wo.balreadytransferred,
wo.bactive
from
bos_gl_workplace as wo
left join bos_gl_company as co on co.szcompanyid = wo.szcompanyid
left join bos_gl_ledger as le on le.szledgerid = co.szledgerid
left join bos_cu_currency as cu on cu.szccyid = le.szccyid
left join bos_inv_invorg as io on io.szinvorgid = wo.szinvorgid
left join bos_sd_salesorganization as so on so.szsalesorgid = wo.szsalesorgid
where
wo.szworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_isworkplaceexist(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
select 
szworkplaceid

from 
bos_gl_workplace
where 
szworkplaceid = p_szworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_lockworkplace(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_workplace
set 
sztaxid = sztaxid
where 
szworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_updateworkplace(
p_szworkplaceid bos_dt_szid,
p_szworkplacetypeid varchar,
p_szname bos_dt_szname,
p_wpszcontactperson bos_dt_szname,
p_wpszroomno bos_dt_szsmallname,
p_wpszfloor bos_dt_szsmallname,
p_wpszbuilding bos_dt_szname,
p_wpszaddress_1 bos_dt_szname,
p_wpszaddress_2 bos_dt_szname,
p_wpszdistrict bos_dt_szmediumname,
p_wpszcity bos_dt_szmediumname,
p_wpszzipcode bos_dt_szsmallname,
p_wpszstate bos_dt_szmediumname,
p_wpszcountry bos_dt_szmediumname,
p_wpszphoneno_1 bos_dt_szmediumname,
p_wpszphoneno_2 bos_dt_szmediumname,
p_wpszfaxno bos_dt_szmediumname,
p_wpszmobileno bos_dt_szmediumname,
p_wpszemail bos_dt_szmediumname,
p_wpszwebsite bos_dt_szmediumname,
p_szcompanyid bos_dt_szmediumid,
p_sztaxid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcalenderid bos_dt_szid,
p_szchiefofworkplace varchar,
p_szpaymentbankid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szinvorgid bos_dt_szid)
returns void as
$body$
begin
update bos_gl_workplace
set 
szworkplacetypeid = p_szworkplacetypeid,
szname = p_szname,
wpszcontactperson = p_wpszcontactperson,
wpszroomno = p_wpszroomno,
wpszfloor = p_wpszfloor,
wpszbuilding = p_wpszbuilding,
wpszaddress_1 = p_wpszaddress_1,
wpszaddress_2 = p_wpszaddress_2,
wpszdistrict = p_wpszdistrict,
wpszcity = p_wpszcity,
wpszzipcode = p_wpszzipcode,
wpszstate = p_wpszstate,
wpszcountry = p_wpszcountry,
wpszphoneno_1 = p_wpszphoneno_1,
wpszphoneno_2 = p_wpszphoneno_2,
wpszfaxno = p_wpszfaxno,
wpszmobileno = p_wpszmobileno,
wpszemail = p_wpszemail,
wpszwebsite = p_wpszwebsite,
szcompanyid = p_szcompanyid,
sztaxid = p_sztaxid,
szsalesorgid = p_szsalesorgid,
szcalenderid=p_szcalenderid,
szchiefofworkplace = p_szchiefofworkplace,
szpaymentbankid = p_szpaymentbankid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
szinvorgid = p_szinvorgid
where 
szworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_gl_workplace_updateworkplace_013(
p_szworkplaceid bos_dt_szid,
p_szworkplacetypeid varchar,
p_szname bos_dt_szname,
p_wpszcontactperson bos_dt_szname,
p_wpszroomno bos_dt_szsmallname,
p_wpszfloor bos_dt_szsmallname,
p_wpszbuilding bos_dt_szname,
p_wpszaddress_1 bos_dt_szname,
p_wpszaddress_2 bos_dt_szname,
p_wpszdistrict bos_dt_szname,
p_wpszcity bos_dt_szmediumname,
p_wpszzipcode bos_dt_szsmallname,
p_wpszstate bos_dt_szmediumname,
p_wpszcountry bos_dt_szmediumname,
p_wpszphoneno_1 bos_dt_szmediumname,
p_wpszphoneno_2 bos_dt_szmediumname,
p_wpszfaxno bos_dt_szmediumname,
p_wpszmobileno bos_dt_szmediumname,
p_wpszemail bos_dt_szmediumname,
p_wpszwebsite bos_dt_szmediumname,
p_szcompanyid bos_dt_szmediumid,
p_sztaxid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcalenderid bos_dt_szid,
p_szchiefofworkplace varchar,
p_szpaymentbankid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_szinvorgid bos_dt_szid,
p_bactive bos_dt_bboolean)
returns void as
$body$
begin
update bos_gl_workplace
set 
szworkplacetypeid = p_szworkplacetypeid,
szname = p_szname,
wpszcontactperson = p_wpszcontactperson,
wpszroomno = p_wpszroomno,
wpszfloor = p_wpszfloor,
wpszbuilding = p_wpszbuilding,
wpszaddress_1 = p_wpszaddress_1,
wpszaddress_2 = p_wpszaddress_2,
wpszdistrict = p_wpszdistrict,
wpszcity = p_wpszcity,
wpszzipcode = p_wpszzipcode,
wpszstate = p_wpszstate,
wpszcountry = p_wpszcountry,
wpszphoneno_1 = p_wpszphoneno_1,
wpszphoneno_2 = p_wpszphoneno_2,
wpszfaxno = p_wpszfaxno,
wpszmobileno = p_wpszmobileno,
wpszemail = p_wpszemail,
wpszwebsite = p_wpszwebsite,
szcompanyid = p_szcompanyid,
sztaxid = p_sztaxid,
szsalesorgid = p_szsalesorgid,
szcalenderid=p_szcalenderid,
szchiefofworkplace = p_szchiefofworkplace,
szpaymentbankid = p_szpaymentbankid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid,
szinvorgid = p_szinvorgid,
bactive = p_bactive
where 
szworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_createcarrier(
p_szcarrierid bos_dt_szid,
p_szname bos_dt_szname,
p_szcontactperson bos_dt_szname,
p_szroomno bos_dt_szsmallname,
p_szfloor bos_dt_szsmallname,
p_szbuilding bos_dt_szname,
p_szaddress_1 bos_dt_szname,
p_szaddress_2 bos_dt_szname,
p_szdistrict bos_dt_szname,
p_szcity bos_dt_szmediumname,
p_szzipcode bos_dt_szsmallname,
p_szstate bos_dt_szmediumname,
p_szcountry bos_dt_szmediumname,
p_szphoneno_1 bos_dt_szmediumname,
p_szphoneno_2 bos_dt_szmediumname,
p_szfaxno bos_dt_szmediumname,
p_szmobileno bos_dt_szmediumname,
p_szemail bos_dt_szmediumname,
p_szwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_carrier
(
szcarrierid,
szname,
szcontactperson,
szroomno,
szfloor,
szbuilding,
szaddress_1,
szaddress_2,
szdistrict,
szcity,
szzipcode,
szstate,
szcountry,
szphoneno_1,
szphoneno_2,
szfaxno,
szmobileno,
szemail,
szwebsite,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcarrierid,
p_szname,
p_szcontactperson,
p_szroomno,
p_szfloor,
p_szbuilding,
p_szaddress_1,
p_szaddress_2,
p_szdistrict,
p_szcity,
p_szzipcode,
p_szstate,
p_szcountry,
p_szphoneno_1,
p_szphoneno_2,
p_szfaxno,
p_szmobileno,
p_szemail,
p_szwebsite,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_deletecarrier(
p_szcarrierid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_carrier
where
szcarrierid = p_szcarrierid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_getcarrier(
p_szcarrierid bos_dt_szid)
returns void as
$body$
begin
select 
szcarrierid,
szname,
szcontactperson,
szroomno,
szfloor,
szbuilding,
szaddress_1,
szaddress_2,
szdistrict,
szcity,
szzipcode,
szstate,
szcountry,
szphoneno_1,
szphoneno_2,
szfaxno,
szmobileno,
szemail,
szwebsite,

dtmlastupdated,
balreadytransferred

from 
bos_inv_carrier
where 
szcarrierid = p_szcarrierid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_getlistofcarrier()
returns void as
$body$
begin
select 
szcarrierid,
szname,
szcontactperson,
szroomno,
szfloor,
szbuilding,
szaddress_1,
szaddress_2,
szdistrict,
szcity,
szzipcode,
szstate,
szcountry,
szphoneno_1,
szphoneno_2,
szfaxno,
szmobileno,
szemail,
szwebsite

from 
bos_inv_carrier;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_iscarrierexist(
p_szcarrierid bos_dt_szid)
returns void as
$body$
begin
select 
szcarrierid

from 
bos_inv_carrier
where 
szcarrierid = p_szcarrierid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_lockcarrier(
p_szcarrierid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_carrier
set 
szwebsite = szwebsite
where 
szcarrierid = p_szcarrierid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_carrier_updatecarrier(
p_szcarrierid bos_dt_szid,
p_szname bos_dt_szname,
p_szcontactperson bos_dt_szname,
p_szroomno bos_dt_szsmallname,
p_szfloor bos_dt_szsmallname,
p_szbuilding bos_dt_szname,
p_szaddress_1 bos_dt_szname,
p_szaddress_2 bos_dt_szname,
p_szdistrict bos_dt_szname,
p_szcity bos_dt_szmediumname,
p_szzipcode bos_dt_szsmallname,
p_szstate bos_dt_szmediumname,
p_szcountry bos_dt_szmediumname,
p_szphoneno_1 bos_dt_szmediumname,
p_szphoneno_2 bos_dt_szmediumname,
p_szfaxno bos_dt_szmediumname,
p_szmobileno bos_dt_szmediumname,
p_szemail bos_dt_szmediumname,
p_szwebsite bos_dt_szmediumname,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
update bos_inv_carrier
set 
szname = p_szname,
szcontactperson = p_szcontactperson,
szroomno = p_szroomno,
szfloor = p_szfloor,
szbuilding = p_szbuilding,
szaddress_1 = p_szaddress_1,
szaddress_2 = p_szaddress_2,
szdistrict = p_szdistrict,
szcity = p_szcity,
szzipcode = p_szzipcode,
szstate = p_szstate,
szcountry = p_szcountry,
szphoneno_1 = p_szphoneno_1,
szphoneno_2 = p_szphoneno_2,
szfaxno = p_szfaxno,
szmobileno = p_szmobileno,
szemail = p_szemail,
szwebsite = p_szwebsite,

dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred
where 
szcarrierid = p_szcarrierid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_conditiontype_getlistofconditiontype()
returns void as
$body$
begin
select 
szconditiontypeid, szdescription 

from 
 bos_inv_conditiontype; 

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_createfadjustment(
p_szfadjustmentid bos_dt_szid,
p_dtmadjustment timestamp,
p_szrefftrntype bos_dt_szmediumid,
p_szrefftrnid bos_dt_szid,
p_szrefftrnnewid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fadjustment
(
szfadjustmentid,
dtmadjustment,
szrefftrntype,
szrefftrnid,
szrefftrnnewid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfadjustmentid,
p_dtmadjustment,
p_szrefftrntype,
p_szrefftrnid,
p_szrefftrnnewid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_createfadjustmentitem(
p_szfadjustmentid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fadjustmentitem
(
szfadjustmentid,
shitemnumber,
szproductid,
decqty,
szuomid,
szparentid
)
values
(
p_szfadjustmentid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_createfadjustmentitem_014(
p_szfadjustmentid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fadjustmentitem
(
szfadjustmentid,
shitemnumber,
szproductid,
decqty,
szuomid,
szparentid
)
values
(
p_szfadjustmentid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_createfadjustmentitemlot(
p_szfadjustmentid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fadjustmentitemlot
(
szfadjustmentid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfadjustmentid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_createfadjustmentitemsn(
p_szfadjustmentid bos_dt_szid,
p_shitemnumber smallint,
p_shitem2number smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fadjustmentitemsn
(
szfadjustmentid,
shitemnumber,
shitem2number,
szproductsn
)
values
(
p_szfadjustmentid,
p_shitemnumber,
p_shitem2number,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_deletefadjustment(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fadjustment
where
szfadjustmentid = p_szfadjustmentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_deletefadjustmentitem(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fadjustmentitem
where
szfadjustmentid=p_szfadjustmentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_deletefadjustmentitemlot(
p_szfadjustmentid varchar)
returns void as
$body$
begin
delete 
 from bos_inv_fadjustmentitemlot
where
 szfadjustmentid = p_szfadjustmentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_deletefadjustmentitemsn(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fadjustmentitemsn
where
szfadjustmentid=p_szfadjustmentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getfadjustment(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fadjustment.szfadjustmentid,
bos_inv_fadjustment.dtmadjustment,
bos_inv_fadjustment.szrefftrntype,
bos_inv_fadjustment.szrefftrnid,
bos_inv_fadjustment.szrefftrnnewid,
bos_ap_supplier.szname as szsuppliernm,
bos_inv_fadjustment.szdescription,
bos_inv_fadjustment.bresultfrtransfer,
bos_inv_fadjustment.bvoid,
bos_gen_approved.bapproved,
bos_inv_fadjustment.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fadjustment.btprintedcount,
bos_inv_fadjustment.btransferred,
bos_inv_fadjustment.szcompanyid, 
bos_inv_fadjustment.szworkplaceid,
bos_inv_fadjustment.sztaxentityid,
bos_inv_fadjustment.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fadjustment.dtmcreated,
bos_inv_fadjustment.bsystemcreated,
bos_inv_fadjustment.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fadjustment.dtmlastupdated,
bos_inv_fadjustment.balreadytransferred
from
(bos_inv_fadjustment left join bos_gen_approved on bos_inv_fadjustment.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fadjustment.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_ap_supplier on bos_inv_fadjustment.szrefftrnid = bos_ap_supplier.szsuppid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fadjustment.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fadjustment.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fadjustment.szuserid

where
szfadjustmentid = p_szfadjustmentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getfadjustmentitem(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_fadjustmentitem.shitemnumber,
bos_inv_fadjustmentitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_inv_fadjustmentitem.decqty,
bos_inv_fadjustmentitem.szuomid,
bos_inv_fadjustmentitem.szparentid,
bos_inv_product.szname as szparentnm_j


from 
bos_inv_fadjustmentitem left join bos_inv_product on 
bos_inv_fadjustmentitem.szproductid=bos_inv_product.szproductid

where 
bos_inv_fadjustmentitem.szfadjustmentid = p_szfadjustmentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getfadjustmentitem_014(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_fadjustmentitem.shitemnumber,
bos_inv_fadjustmentitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_inv_fadjustmentitem.decqty,
bos_inv_fadjustmentitem.szuomid,
bos_inv_fadjustmentitem.szparentid,
bos_inv_product.szname as szparentnm_j


from 
bos_inv_fadjustmentitem left join bos_inv_product on 
bos_inv_fadjustmentitem.szproductid=bos_inv_product.szproductid

where 
bos_inv_fadjustmentitem.szfadjustmentid = p_szfadjustmentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getfadjustmentitemlot(
p_szfadjustmentid varchar,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fadjustmentitemlot
where 
 szfadjustmentid = p_szfadjustmentid and shitemnumber = p_shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getfadjustmentitemsn(
p_szfadjustmentid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitem2number,
szproductsn


from 
bos_inv_fadjustmentitemsn
where 
szfadjustmentid = p_szfadjustmentid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_getlistoffadjustment()
returns void as
$body$
begin
select 
szfadjustmentid,
dtmadjustment

from 
bos_inv_fadjustment;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_isfadjustmentexist(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
select 
szfadjustmentid

from 
bos_inv_fadjustment
where 
szfadjustmentid = p_szfadjustmentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_lockfadjustment(
p_szfadjustmentid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fadjustment
set 
btransferred = btransferred
where 
szfadjustmentid = p_szfadjustmentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_updatefadjustment(
p_szfadjustmentid bos_dt_szid,
p_dtmadjustment timestamp,
p_szrefftrntype bos_dt_szmediumid,
p_szrefftrnid bos_dt_szid,
p_szrefftrnnewid bos_dt_szid,
p_szdescription varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fadjustment
set 
dtmadjustment = p_dtmadjustment,
szrefftrntype = p_szrefftrntype,
szrefftrnid = p_szrefftrnid,
szdescription = p_szdescription,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfadjustmentid = p_szfadjustmentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fadjustment_updaterefftrnnewid(
p_szfadjustmentid bos_dt_szid,
p_szrefftrnnewid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fadjustment
set 
szrefftrnnewid = p_szrefftrnnewid
where 
szfadjustmentid = p_szfadjustmentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_createfchglotstatus(
p_szfchgstatuslotid bos_dt_szid,
p_dtmfchgstatuslotid timestamp,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fchglotstatus
(
szfchgstatuslotid,
dtmfchgstatuslotid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfchgstatuslotid,
p_dtmfchgstatuslotid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_createfchglotstatusitem(
p_szfchgstatuslotid bos_dt_szid,
p_szlotid bos_dt_szid,
p_szcurrentstatus bos_dt_szid,
p_sznewstatus bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fchglotstatusitem
(
szfchgstatuslotid,
szlotid,
szcurrentstatus,
sznewstatus,
szproductid
)
values
(
p_szfchgstatuslotid,
p_szlotid,
p_szcurrentstatus,
p_sznewstatus,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_deletefchglotstatus(
p_szfchgstatuslotid varchar)
returns void as
$body$
begin
delete 
 from bos_inv_fchglotstatus
where
 szfchgstatuslotid = p_szfchgstatuslotid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_deletefchglotstatusitem(
p_szfchgstatuslotid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fchglotstatusitem
where
 szfchgstatuslotid = p_szfchgstatuslotid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_getfchglotstatus(
p_szfchgstatuslotid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fchglotstatus.szfchgstatuslotid,
bos_inv_fchglotstatus.dtmfchgstatuslotid,


bos_inv_fchglotstatus.bresultfrtransfer,
bos_inv_fchglotstatus.bvoid,

bos_gen_approved.bapproved,
bos_inv_fchglotstatus.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fchglotstatus.btprintedcount,
bos_inv_fchglotstatus.btransferred,
bos_inv_fchglotstatus.szcompanyid, 
bos_inv_fchglotstatus.szworkplaceid,
bos_inv_fchglotstatus.sztaxentityid,
bos_inv_fchglotstatus.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fchglotstatus.dtmcreated,
bos_inv_fchglotstatus.bsystemcreated,
bos_inv_fchglotstatus.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fchglotstatus.dtmlastupdated,
bos_inv_fchglotstatus.balreadytransferred
from
(bos_inv_fchglotstatus left join bos_gen_approved on bos_inv_fchglotstatus.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fchglotstatus.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fchglotstatus.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fchglotstatus.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fchglotstatus.szuserid

where
szfchgstatuslotid = p_szfchgstatuslotid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_getfchglotstatusitem(
p_szfchgstatuslotid bos_dt_szid)
returns void as
$body$
begin
select 
szfchgstatuslotid,
szlotid,
szcurrentstatus,
sznewstatus,
szproductid

from 
bos_inv_fchglotstatusitem
where 
szfchgstatuslotid = p_szfchgstatuslotid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_getlistoffchglotstatus()
returns void as
$body$
begin
select 
szfchgstatuslotid,
dtmfchgstatuslotid

from 
bos_inv_fchglotstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_isfchglotstatusexist(
p_szfchgstatuslotid bos_dt_szid)
returns void as
$body$
begin
select 
szfchgstatuslotid

from 
bos_inv_fchglotstatus
where 
szfchgstatuslotid = p_szfchgstatuslotid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_lockfchglotstatus(
p_szfchgstatuslotid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fchglotstatus
set 
btransferred = btransferred
where 
szfchgstatuslotid = p_szfchgstatuslotid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fchglotstatus_updatefchglotstatus(
p_szfchgstatuslotid bos_dt_szid,
p_dtmfchgstatuslotid timestamp,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fchglotstatus
set 
szfchgstatuslotid = p_szfchgstatuslotid,
dtmfchgstatuslotid = p_dtmfchgstatuslotid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfchgstatuslotid = p_szfchgstatuslotid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdn(
p_szfdnid bos_dt_szid,
p_dtmdelivery timestamp,
p_szfdoid bos_dt_szid,
p_szdestinationtype bos_dt_szsmallid,
p_szdestinationid bos_dt_szid,
p_dlvszcontactperson bos_dt_szname,
p_dlvszroomno bos_dt_szsmallname,
p_dlvszfloor bos_dt_szsmallname,
p_dlvszbuilding bos_dt_szname,
p_dlvszaddress_1 bos_dt_szname,
p_dlvszaddress_2 bos_dt_szname,
p_dlvszdistrict bos_dt_szmediumname,
p_dlvszcity bos_dt_szmediumname,
p_dlvszzipcode bos_dt_szsmallname,
p_dlvszstate bos_dt_szmediumname,
p_dlvszcountry bos_dt_szmediumname,
p_dlvszphoneno_1 bos_dt_szmediumname,
p_dlvszphoneno_2 bos_dt_szmediumname,
p_dlvszfaxno bos_dt_szmediumname,
p_dlvszmobileno bos_dt_szmediumname,
p_dlvszemail bos_dt_szmediumname,
p_dlvszwebsite bos_dt_szmediumname,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcustpoid bit,
p_dtmcustpo timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szfstinid bos_dt_szid,
p_bfromdistribution bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fdn
(
szfdnid,
dtmdelivery,
szfdoid,
szdestinationtype,
szdestinationid,
dlvszcontactperson,
dlvszroomno,
dlvszfloor,
dlvszbuilding,
dlvszaddress_1,
dlvszaddress_2,
dlvszdistrict,
dlvszcity,
dlvszzipcode,
dlvszstate,
dlvszcountry,
dlvszphoneno_1,
dlvszphoneno_2,
dlvszfaxno,
dlvszmobileno,
dlvszemail,
dlvszwebsite,
szcarrierid,
szvehiclenumber,
szdrivername,
szlocationtype,
szlocationid,
szstocktypeid,
szcustpoid,
dtmcustpo,
szdriverid,
szvehicleid,
szfstinid,
bfromdistribution,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdnid,
p_dtmdelivery,
p_szfdoid,
p_szdestinationtype,
p_szdestinationid,
p_dlvszcontactperson,
p_dlvszroomno,
p_dlvszfloor,
p_dlvszbuilding,
p_dlvszaddress_1,
p_dlvszaddress_2,
p_dlvszdistrict,
p_dlvszcity,
p_dlvszzipcode,
p_dlvszstate,
p_dlvszcountry,
p_dlvszphoneno_1,
p_dlvszphoneno_2,
p_dlvszfaxno,
p_dlvszmobileno,
p_dlvszemail,
p_dlvszwebsite,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szcustpoid,
p_dtmcustpo,
p_szdriverid,
p_szvehicleid,
p_szfstinid,
p_bfromdistribution,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdn_013(
p_szfdnid bos_dt_szid,
p_dtmdelivery timestamp,
p_szfdoid bos_dt_szid,
p_szdestinationtype bos_dt_szsmallid,
p_szdestinationid bos_dt_szid,
p_dlvszcontactperson bos_dt_szname,
p_dlvszroomno bos_dt_szsmallname,
p_dlvszfloor bos_dt_szsmallname,
p_dlvszbuilding bos_dt_szname,
p_dlvszaddress_1 bos_dt_szname,
p_dlvszaddress_2 bos_dt_szname,
p_dlvszdistrict bos_dt_szname,
p_dlvszcity bos_dt_szmediumname,
p_dlvszzipcode bos_dt_szsmallname,
p_dlvszstate bos_dt_szmediumname,
p_dlvszcountry bos_dt_szmediumname,
p_dlvszphoneno_1 bos_dt_szmediumname,
p_dlvszphoneno_2 bos_dt_szmediumname,
p_dlvszfaxno bos_dt_szmediumname,
p_dlvszmobileno bos_dt_szmediumname,
p_dlvszemail bos_dt_szmediumname,
p_dlvszwebsite bos_dt_szmediumname,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcustpoid bit,
p_dtmcustpo timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szfstinid bos_dt_szid,
p_bfromdistribution bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fdn
(
szfdnid,
dtmdelivery,
szfdoid,
szdestinationtype,
szdestinationid,
dlvszcontactperson,
dlvszroomno,
dlvszfloor,
dlvszbuilding,
dlvszaddress_1,
dlvszaddress_2,
dlvszdistrict,
dlvszcity,
dlvszzipcode,
dlvszstate,
dlvszcountry,
dlvszphoneno_1,
dlvszphoneno_2,
dlvszfaxno,
dlvszmobileno,
dlvszemail,
dlvszwebsite,
szcarrierid,
szvehiclenumber,
szdrivername,
szlocationtype,
szlocationid,
szstocktypeid,
szcustpoid,
dtmcustpo,
szdriverid,
szvehicleid,
szfstinid,
bfromdistribution,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdnid,
p_dtmdelivery,
p_szfdoid,
p_szdestinationtype,
p_szdestinationid,
p_dlvszcontactperson,
p_dlvszroomno,
p_dlvszfloor,
p_dlvszbuilding,
p_dlvszaddress_1,
p_dlvszaddress_2,
p_dlvszdistrict,
p_dlvszcity,
p_dlvszzipcode,
p_dlvszstate,
p_dlvszcountry,
p_dlvszphoneno_1,
p_dlvszphoneno_2,
p_dlvszfaxno,
p_dlvszmobileno,
p_dlvszemail,
p_dlvszwebsite,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szcustpoid,
p_dtmcustpo,
p_szdriverid,
p_szvehicleid,
p_szfstinid,
p_bfromdistribution,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdnitem(
p_szfdnid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_deccogs bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fdnitem
(
szfdnid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
deccogs,
szparentid
)
values
(
p_szfdnid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_deccogs,
p_szparentid
-- ==================================================================,

);
--set ansi_nulls on
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdnitem_013(
p_szfdnid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_deccogs bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fdnitem
(
szfdnid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
deccogs,
szparentid
)
values
(
p_szfdnid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_deccogs,
p_szparentid
-- ==================================================================,

);
--set ansi_nulls on
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdnitemlotqty(
p_szfdnid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fdnitemlotqty
(
szfdnid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfdnid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_createfdnitemsn(
p_szfdnid bos_dt_szid,
p_shitemnumber smallint,
p_shitem2number smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fdnitemsn
(
szfdnid,
shitemnumber,
shitem2number,
szproductsn
)
values
(
p_szfdnid,
p_shitemnumber,
p_shitem2number,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_deletefdn(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fdn
where
szfdnid=p_szfdnid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_deletefdnitem(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fdnitem
where
szfdnid=p_szfdnid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_deletefdnitemlotqty(
p_szfdnid varchar)
returns void as
$body$
begin
delete 
 from bos_inv_fdnitemlotqty
where
 szfdnid = p_szfdnid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_deletefdnitemsn(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fdnitemsn
where
szfdnid=p_szfdnid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdn(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fdn.dtmdelivery,
bos_inv_fdn.szfdoid,

bos_inv_fdn.szdestinationtype,
bos_inv_fdn.szdestinationid,

destwp.szname as szdestworkplacenm_j,
destcust.szname as szdestcustomernm_j,

bos_inv_fdn.dlvszcontactperson,
bos_inv_fdn.dlvszroomno,
bos_inv_fdn.dlvszfloor,
bos_inv_fdn.dlvszbuilding,
bos_inv_fdn.dlvszaddress_1,
bos_inv_fdn.dlvszaddress_2,
bos_inv_fdn.dlvszdistrict,
bos_inv_fdn.dlvszcity,
bos_inv_fdn.dlvszzipcode,
bos_inv_fdn.dlvszstate,
bos_inv_fdn.dlvszcountry,
bos_inv_fdn.dlvszphoneno_1,
bos_inv_fdn.dlvszphoneno_2,
bos_inv_fdn.dlvszfaxno,
bos_inv_fdn.dlvszmobileno,
bos_inv_fdn.dlvszemail,
bos_inv_fdn.dlvszwebsite,

bos_inv_fdn.szcarrierid,
carr.szname as szcarriernm_j,

bos_inv_fdn.szvehiclenumber,
bos_inv_fdn.szdrivername,

bos_inv_fdn.szlocationtype,
bos_inv_fdn.szlocationid,

wh.szname as szwarehousenm_j,

bos_inv_fdn.szstocktypeid,
bos_inv_fdn.szcustpoid,
bos_inv_fdn.dtmcustpo,
bos_inv_fdn.szdriverid,
bos_inv_fdn.szvehicleid,
bos_inv_fdn.szfstinid,
bos_inv_fdn.bfromdistribution,
bos_inv_fdn.szfadjustmentid,
bos_inv_fdn.szadjustedbyid,
bos_inv_fdn.szadjusttoid,

bos_inv_fdn.bresultfrtransfer,
bos_inv_fdn.bvoid,
bos_gen_approved.bapproved,
bos_inv_fdn.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fdn.btprintedcount,
bos_inv_fdn.btransferred,

bos_inv_fdn.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fdn.sztaxentityid,
bos_inv_fdn.bneedapproval,
bos_inv_fdn.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_inv_fdn.dtmcreated,
bos_inv_fdn.bsystemcreated,
bos_inv_fdn.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fdn.dtmlastupdated,
bos_inv_fdn.balreadytransferred,

-- description
bos_inv_fdn.szdescription

from
bos_inv_fdn 
left join bos_gen_approved on bos_inv_fdn.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fdn.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fdn.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fdn.szuserid

left join bos_gl_workplace as destwp on destwp.szworkplaceid = bos_inv_fdn.szdestinationid
left join bos_ar_customer as destcust on destcust.szcustid = bos_inv_fdn.szdestinationid

left join bos_inv_warehouse as wh on wh.szwarehouseid = bos_inv_fdn.szlocationid

left join bos_inv_carrier as carr on carr.szcarrierid = bos_inv_fdn.szcarrierid

where
bos_inv_fdn.szfdnid=p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdn_013(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fdn.dtmdelivery,
bos_inv_fdn.szfdoid,

bos_inv_fdn.szdestinationtype,
bos_inv_fdn.szdestinationid,

destwp.szname as szdestworkplacenm_j,
destcust.szname as szdestcustomernm_j,

bos_inv_fdn.dlvszcontactperson,
bos_inv_fdn.dlvszroomno,
bos_inv_fdn.dlvszfloor,
bos_inv_fdn.dlvszbuilding,
bos_inv_fdn.dlvszaddress_1,
bos_inv_fdn.dlvszaddress_2,
bos_inv_fdn.dlvszdistrict,
bos_inv_fdn.dlvszcity,
bos_inv_fdn.dlvszzipcode,
bos_inv_fdn.dlvszstate,
bos_inv_fdn.dlvszcountry,
bos_inv_fdn.dlvszphoneno_1,
bos_inv_fdn.dlvszphoneno_2,
bos_inv_fdn.dlvszfaxno,
bos_inv_fdn.dlvszmobileno,
bos_inv_fdn.dlvszemail,
bos_inv_fdn.dlvszwebsite,

bos_inv_fdn.szcarrierid,
carr.szname as szcarriernm_j,

bos_inv_fdn.szvehiclenumber,
bos_inv_fdn.szdrivername,

bos_inv_fdn.szlocationtype,
bos_inv_fdn.szlocationid,

wh.szname as szwarehousenm_j,

bos_inv_fdn.szstocktypeid,
bos_inv_fdn.szcustpoid,
bos_inv_fdn.dtmcustpo,
bos_inv_fdn.szdriverid,
bos_inv_fdn.szvehicleid,
bos_inv_fdn.szfstinid,
bos_inv_fdn.bfromdistribution,
bos_inv_fdn.szfadjustmentid,
bos_inv_fdn.szadjustedbyid,
bos_inv_fdn.szadjusttoid,

bos_inv_fdn.bresultfrtransfer,
bos_inv_fdn.bvoid,
bos_gen_approved.bapproved,
bos_inv_fdn.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fdn.btprintedcount,
bos_inv_fdn.btransferred,

bos_inv_fdn.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fdn.sztaxentityid,
bos_inv_fdn.bneedapproval,
bos_inv_fdn.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_inv_fdn.dtmcreated,
bos_inv_fdn.bsystemcreated,
bos_inv_fdn.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fdn.dtmlastupdated,
bos_inv_fdn.balreadytransferred,

-- description
bos_inv_fdn.szdescription

from
bos_inv_fdn 
left join bos_gen_approved on bos_inv_fdn.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fdn.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fdn.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fdn.szuserid

left join bos_gl_workplace as destwp on destwp.szworkplaceid = bos_inv_fdn.szdestinationid
left join bos_ar_customer as destcust on destcust.szcustid = bos_inv_fdn.szdestinationid

left join bos_inv_warehouse as wh on wh.szwarehouseid = bos_inv_fdn.szlocationid

left join bos_inv_carrier as carr on carr.szcarrierid = bos_inv_fdn.szcarrierid

where
bos_inv_fdn.szfdnid=p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdnitem(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fdnitem.shitemnumber,
bos_inv_fdnitem.szproductid,

bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_fdnitem.decqty,
bos_inv_fdnitem.decuomqty,

bos_inv_fdnitem.szuomid,
bos_inv_fdnitem.deccogs,

bos_inv_fdnitem.szparentid,
bip2.szname as szparentnm_j

from
bos_inv_fdnitem
left join bos_inv_product on bos_inv_fdnitem.szproductid=bos_inv_product.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fdnitem.szparentid

where
bos_inv_fdnitem.szfdnid = p_szfdnid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdnitem_013(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fdnitem.shitemnumber,
bos_inv_fdnitem.szproductid,

bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_fdnitem.decqty,
bos_inv_fdnitem.decuomqty,

bos_inv_fdnitem.szuomid,
bos_inv_fdnitem.deccogs,

bos_inv_fdnitem.szparentid,
bip2.szname as szparentnm_j


from
bos_inv_fdnitem
left join bos_inv_product on bos_inv_fdnitem.szproductid=bos_inv_product.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fdnitem.szparentid

where
bos_inv_fdnitem.szfdnid = p_szfdnid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdnitemlotqty(
p_szfdnid varchar,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fdnitemlotqty
where 
 szfdnid = p_szfdnid and shitemnumber = p_shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getfdnitemsn(
p_szfdnid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitem2number,
szproductsn


from 
bos_inv_fdnitemsn
where 
szfdnid = p_szfdnid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_getlistoffdn()
returns void as
$body$
begin
select 
szfdnid,
dtmdelivery

from 
bos_inv_fdn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_isfdnexist(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin
select 
szfdnid

from 
bos_inv_fdn
where 
szfdnid=p_szfdnid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_lockfdn(
p_szfdnid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fdn
set 
btransferred = btransferred

where 
szfdnid = p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_updatefdn(
p_szfdnid bos_dt_szid,
p_dtmdelivery timestamp,
p_szfdoid bos_dt_szid,
p_szdestinationtype bos_dt_szsmallid,
p_szdestinationid bos_dt_szid,
p_dlvszcontactperson bos_dt_szname,
p_dlvszroomno bos_dt_szsmallname,
p_dlvszfloor bos_dt_szsmallname,
p_dlvszbuilding bos_dt_szname,
p_dlvszaddress_1 bos_dt_szname,
p_dlvszaddress_2 bos_dt_szname,
p_dlvszdistrict bos_dt_szmediumname,
p_dlvszcity bos_dt_szmediumname,
p_dlvszzipcode bos_dt_szsmallname,
p_dlvszstate bos_dt_szmediumname,
p_dlvszcountry bos_dt_szmediumname,
p_dlvszphoneno_1 bos_dt_szmediumname,
p_dlvszphoneno_2 bos_dt_szmediumname,
p_dlvszfaxno bos_dt_szmediumname,
p_dlvszmobileno bos_dt_szmediumname,
p_dlvszemail bos_dt_szmediumname,
p_dlvszwebsite bos_dt_szmediumname,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcustpoid bit,
p_dtmcustpo timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_bfromdistribution bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fdn
set 
dtmdelivery = p_dtmdelivery,
szfdoid = p_szfdoid,
szdestinationtype = p_szdestinationtype,
szdestinationid = p_szdestinationid,
dlvszcontactperson = p_dlvszcontactperson,
dlvszroomno = p_dlvszroomno,
dlvszfloor = p_dlvszfloor,
dlvszbuilding = p_dlvszbuilding,
dlvszaddress_1 = p_dlvszaddress_1,
dlvszaddress_2 = p_dlvszaddress_2,
dlvszdistrict = p_dlvszdistrict,
dlvszcity = p_dlvszcity,
dlvszzipcode = p_dlvszzipcode,
dlvszstate = p_dlvszstate,
dlvszcountry = p_dlvszcountry,
dlvszphoneno_1 = p_dlvszphoneno_1,
dlvszphoneno_2 = p_dlvszphoneno_2,
dlvszfaxno = p_dlvszfaxno,
dlvszmobileno = p_dlvszmobileno,
dlvszemail = p_dlvszemail,
dlvszwebsite = p_dlvszwebsite,
szcarrierid=p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
bfromdistribution = p_bfromdistribution,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid=p_szadjusttoid,
szdescription = p_szdescription,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfdnid = p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_updatefdn_013(
p_szfdnid bos_dt_szid,
p_dtmdelivery timestamp,
p_szfdoid bos_dt_szid,
p_szdestinationtype bos_dt_szsmallid,
p_szdestinationid bos_dt_szid,
p_dlvszcontactperson bos_dt_szname,
p_dlvszroomno bos_dt_szsmallname,
p_dlvszfloor bos_dt_szsmallname,
p_dlvszbuilding bos_dt_szname,
p_dlvszaddress_1 bos_dt_szname,
p_dlvszaddress_2 bos_dt_szname,
p_dlvszdistrict bos_dt_szname,
p_dlvszcity bos_dt_szmediumname,
p_dlvszzipcode bos_dt_szsmallname,
p_dlvszstate bos_dt_szmediumname,
p_dlvszcountry bos_dt_szmediumname,
p_dlvszphoneno_1 bos_dt_szmediumname,
p_dlvszphoneno_2 bos_dt_szmediumname,
p_dlvszfaxno bos_dt_szmediumname,
p_dlvszmobileno bos_dt_szmediumname,
p_dlvszemail bos_dt_szmediumname,
p_dlvszwebsite bos_dt_szmediumname,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcustpoid bit,
p_dtmcustpo timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_bfromdistribution bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fdn
set 
dtmdelivery = p_dtmdelivery,
szfdoid = p_szfdoid,
szdestinationtype = p_szdestinationtype,
szdestinationid = p_szdestinationid,
dlvszcontactperson = p_dlvszcontactperson,
dlvszroomno = p_dlvszroomno,
dlvszfloor = p_dlvszfloor,
dlvszbuilding = p_dlvszbuilding,
dlvszaddress_1 = p_dlvszaddress_1,
dlvszaddress_2 = p_dlvszaddress_2,
dlvszdistrict = p_dlvszdistrict,
dlvszcity = p_dlvszcity,
dlvszzipcode = p_dlvszzipcode,
dlvszstate = p_dlvszstate,
dlvszcountry = p_dlvszcountry,
dlvszphoneno_1 = p_dlvszphoneno_1,
dlvszphoneno_2 = p_dlvszphoneno_2,
dlvszfaxno = p_dlvszfaxno,
dlvszmobileno = p_dlvszmobileno,
dlvszemail = p_dlvszemail,
dlvszwebsite = p_dlvszwebsite,
szcarrierid=p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
bfromdistribution = p_bfromdistribution,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid=p_szadjusttoid,
szdescription = p_szdescription,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfdnid = p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdn_updatefdnforadjustment(
p_szfdnid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fdn
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid

where 
szfdnid = p_szfdnid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fdnmonitor_querydata(
p_szwpid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select
coalesce(fdn2fdncreated.szfdn2id, '') as szfdn2id, fdn.szfdnid, fdn.dtmdelivery
, fdn.szworkplaceid as szoriginwpid, originwp.szname as szoriginwpnm_j
, fdn.szdestinationid as szdestwpid, destwp.szname as szdestwpnm_j
, fdni.szproductid, prod.szname as szproductnm_j
, prod.sznickname as szproductnickname_j, prod.szqtyformat as szproductqtyformat_j
, prod.szuomid as szproductuomid_j, prod.szcompuomid as szproductcompuomid_j
, prod.szuomclassid as szproductuomclassid_j
, fdni.decqty as decqtydelivered, coalesce(fstini.decqty, 0) as decqtyreceived
, (fdni.decqty-coalesce(fstini.decqty, 0)) as decqtyremain
, coalesce(fstin.dtmtransfer,'') as dtmtransfer_j

from bos_inv_fdn as fdn
left join bos_gl_workplace as originwp on fdn.szworkplaceid = originwp.szworkplaceid
left join bos_gl_workplace as destwp on fdn.szdestinationid = destwp.szworkplaceid
left join bos_inv_fdnitem as fdni on fdn.szfdnid = fdni.szfdnid
left join bos_inv_product as prod on fdni.szproductid = prod.szproductid
left join bos_inv_fstinitem as fstini on fdn.szfstinid = fstini.szfstinid
and fdni.szproductid = fstini.szproductid
left join bos_inv_fdn2fdncreated as fdn2fdncreated on fdn.szfdnid = fdn2fdncreated.szfdnid
and fdn.szdestinationid = fdn2fdncreated.szwpid
left join bos_inv_fstin as fstin on fstini.szfstinid = fstin.szfstinid

where
fdn.szworkplaceid like p_szwpid
and fdn.dtmdelivery >= p_dtmstart
and fdn.dtmdelivery < p_dtmend
and fdn.bapplied = 1
and fdn.szdestinationtype = 'wor';

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsid(
p_szfsidid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmin timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_sznobkb bos_dt_szid,
p_decritke numeric,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsid
(
szfsidid,
szsalesorgid,
dtmin,
szlocationtype,
szlocationid,
szstocktypeid,
szvehicleid,
szdriverid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
szhelperid,
szhelperid_2,
szhelperid_3,
sznobkb,
decritke,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsidid,
p_szsalesorgid,
p_dtmin,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szvehicleid,
p_szdriverid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_sznobkb,
p_decritke,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsid_014(
p_szfsidid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmin timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_sznobkb bos_dt_szid,
p_decritke numeric,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsid
(
szfsidid,
szsalesorgid,
dtmin,
szlocationtype,
szlocationid,
szstocktypeid,
szvehicleid,
szdriverid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
szhelperid,
szhelperid_2,
szhelperid_3,
sznobkb,
decritke,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsidid,
p_szsalesorgid,
p_dtmin,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szvehicleid,
p_szdriverid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_sznobkb,
p_decritke,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsiditem(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsiditem
(
szfsidid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfsidid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsiditem_013(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsiditem
(
szfsidid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfsidid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsiditemlotqty(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsiditemlotqty
(
szfsidid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfsidid,
p_btitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_createfsiditemsn(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fsiditemsn
(
szfsidid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfsidid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_deletefsid(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsid
where
szfsidid = p_szfsidid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_deletefsiditem(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsiditem
where
szfsidid = p_szfsidid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_deletefsiditemlotqty(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsiditemlotqty
where
szfsidid = p_szfsidid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_deletefsiditemsn(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsiditemsn
where
szfsidid = p_szfsidid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsid(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsid.szsalesorgid,
bos_inv_fsid.dtmin,
bos_inv_fsid.szlocationtype,
bos_inv_fsid.szlocationid,
bos_inv_fsid.szstocktypeid,
bos_inv_fsid.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehicleno,
bos_inv_fsid.szdriverid,
bos_pi_employee.szname as szdrivernm,
bos_inv_fsid.szfadjustmentid,
bos_inv_fsid.szadjustedbyid,
bos_inv_fsid.szadjusttoid,
bos_inv_fsid.szdescription,

bos_inv_fsid.szhelperid,
bos_pi_employee1.szname as szhelpernm,

bos_inv_fsid.szhelperid_2,
bos_pi_employee2.szname as szhelpernm_2,

bos_inv_fsid.szhelperid_3,
bos_pi_employee3.szname as szhelpernm_3,

bos_inv_fsid.sznobkb,
bos_inv_fsid.decritke,

bos_inv_fsid.bresultfrtransfer,
bos_inv_fsid.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsid.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsid.btprintedcount,
bos_inv_fsid.btransferred,
bos_inv_fsid.szcompanyid,
bos_inv_fsid.szworkplaceid,
bos_inv_fsid.sztaxentityid,
bos_inv_fsid.bneedapproval,
bos_inv_fsid.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsid.dtmcreated,
bos_inv_fsid.bsystemcreated,
bos_inv_fsid.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsid.dtmlastupdated,
bos_inv_fsid.balreadytransferred

from bos_inv_fsid 
left join bos_gen_approved on bos_inv_fsid.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fsid.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fsid.szdriverid = bos_pi_employee.szemployeeid

left join bos_pi_employee bos_pi_employee1 on bos_inv_fsid.szhelperid   = bos_pi_employee1.szemployeeid
left join bos_pi_employee bos_pi_employee2 on bos_inv_fsid.szhelperid_2 = bos_pi_employee2.szemployeeid
left join bos_pi_employee bos_pi_employee3 on bos_inv_fsid.szhelperid_3 = bos_pi_employee3.szemployeeid

left join bos_inv_vehicle on bos_inv_fsid.szvehicleid = bos_inv_vehicle.szvehicleid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsid.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsid.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsid.szuserid

where
bos_inv_fsid.szfsidid = p_szfsidid;


-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsid_014(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsid.szsalesorgid,
bos_inv_fsid.dtmin,
bos_inv_fsid.szlocationtype,
bos_inv_fsid.szlocationid,
bos_inv_fsid.szstocktypeid,
bos_inv_fsid.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehicleno,
bos_inv_fsid.szdriverid,
bos_pi_employee.szname as szdrivernm,
bos_inv_fsid.szfadjustmentid,
bos_inv_fsid.szadjustedbyid,
bos_inv_fsid.szadjusttoid,
bos_inv_fsid.szdescription,

bos_inv_fsid.szhelperid,
bos_pi_employee1.szname as szhelpernm,

bos_inv_fsid.szhelperid_2,
bos_pi_employee2.szname as szhelpernm_2,

bos_inv_fsid.szhelperid_3,
bos_pi_employee3.szname as szhelpernm_3,

bos_inv_fsid.sznobkb,
bos_inv_fsid.decritke,

bos_inv_fsid.bresultfrtransfer,
bos_inv_fsid.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsid.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsid.btprintedcount,
bos_inv_fsid.btransferred,
bos_inv_fsid.szcompanyid,
bos_inv_fsid.szworkplaceid,
bos_inv_fsid.sztaxentityid,
bos_inv_fsid.bneedapproval,
bos_inv_fsid.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsid.dtmcreated,
bos_inv_fsid.bsystemcreated,
bos_inv_fsid.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsid.dtmlastupdated,
bos_inv_fsid.balreadytransferred

from bos_inv_fsid 
left join bos_gen_approved on bos_inv_fsid.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fsid.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fsid.szdriverid = bos_pi_employee.szemployeeid

left join bos_pi_employee bos_pi_employee1 on bos_inv_fsid.szhelperid   = bos_pi_employee1.szemployeeid
left join bos_pi_employee bos_pi_employee2 on bos_inv_fsid.szhelperid_2 = bos_pi_employee2.szemployeeid
left join bos_pi_employee bos_pi_employee3 on bos_inv_fsid.szhelperid_3 = bos_pi_employee3.szemployeeid

left join bos_inv_vehicle on bos_inv_fsid.szvehicleid = bos_inv_vehicle.szvehicleid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsid.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsid.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsid.szuserid

where
bos_inv_fsid.szfsidid = p_szfsidid;


-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsiditem(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsiditem.btitemnumber,
bos_inv_fsiditem.szproductid,
bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_fsiditem.decqty,
bos_inv_fsiditem.decuomqty,
bos_inv_fsiditem.szuomid,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_fsiditem.szparentid as szparentid,
bip2.szname as szparentnm

from
bos_inv_fsiditem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsiditem.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fsiditem.szproductid

where
szfsidid = p_szfsidid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsiditem_014(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsiditem.btitemnumber,
bos_inv_fsiditem.szproductid,
bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_fsiditem.decqty,
bos_inv_fsiditem.decuomqty,
bos_inv_fsiditem.szuomid,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_fsiditem.szparentid as szparentid,
bip2.szname as szparentnm

from
bos_inv_fsiditem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsiditem.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fsiditem.szproductid

where
szfsidid = p_szfsidid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsiditemlotqty(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty


from 
bos_inv_fsiditemlotqty

where 
szfsidid = p_szfsidid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getfsiditemsn(
p_szfsidid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn


from 
bos_inv_fsiditemsn
where 
szfsidid = p_szfsidid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_getlistoffsid()
returns void as
$body$
begin
select 
szfsidid,
dtmin

from 
bos_inv_fsid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_isfsidexist(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
select 
szfsidid

from 
bos_inv_fsid
where 
szfsidid = p_szfsidid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_lockfsid(
p_szfsidid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsid
set 
btransferred = btransferred
where 
szfsidid = p_szfsidid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_updatefsid(
p_szfsidid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmin timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_sznobkb bos_dt_szid,
p_decritke numeric,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsid
set 
szsalesorgid = p_szsalesorgid,
dtmin = p_dtmin,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid,
szadjusttoid = p_szadjusttoid,
szdescription=p_szdescription,

szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

sznobkb	= p_sznobkb,
decritke = p_decritke,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsidid = p_szfsidid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_updatefsid_014(
p_szfsidid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmin timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_sznobkb bos_dt_szid,
p_decritke numeric,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsid
set 
szsalesorgid = p_szsalesorgid,
dtmin = p_dtmin,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid,
szadjusttoid = p_szadjusttoid,
szdescription=p_szdescription,

szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

sznobkb    = p_sznobkb,
decritke = p_decritke,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsidid = p_szfsidid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsid_updatefsidforadjustment(
p_szfsidid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsid
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid

where 
szfsidid = p_szfsidid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsod(
p_szfsodid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmout timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsod
(
szfsodid,
szsalesorgid,
szrefdocid,
dtmout,
szlocationtype,
szlocationid,
szstocktypeid,
szvehicleid,
szdriverid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
szhelperid,
szhelperid_2,
szhelperid_3,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsodid,
p_szsalesorgid,
p_szrefdocid,
p_dtmout,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szvehicleid,
p_szdriverid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsod_014(
p_szfsodid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmout timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsod
(
szfsodid,
szsalesorgid,
szrefdocid,
dtmout,
szlocationtype,
szlocationid,
szstocktypeid,
szvehicleid,
szdriverid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
szhelperid,
szhelperid_2,
szhelperid_3,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsodid,
p_szsalesorgid,
p_szrefdocid,
p_dtmout,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szvehicleid,
p_szdriverid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsoditem(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsoditem
(
szfsodid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfsodid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsoditem_014(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsoditem
(
szfsodid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfsodid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsoditemlotqty(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsoditemlotqty
(
szfsodid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfsodid,
p_btitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_createfsoditemsn(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fsoditemsn
(
szfsodid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfsodid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_deletefsod(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsod
where
szfsodid=p_szfsodid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_deletefsoditem(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsoditem
where
szfsodid=p_szfsodid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_deletefsoditemlotqty(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsoditemlotqty
where
szfsodid = p_szfsodid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_deletefsoditemsn(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsoditemsn
where
szfsodid=p_szfsodid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_getfsod(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fsod.szfsodid,
bos_inv_fsod.szsalesorgid,
bos_inv_fsod.szrefdocid,
bos_inv_fsod.dtmout,

bos_inv_fsod.szlocationtype,
bos_inv_fsod.szlocationid,
wh.szname as szwarehousenm_j,

bos_inv_fsod.szstocktypeid,

bos_inv_fsod.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehiclepoliceno_j,

bos_inv_fsod.szdriverid,
bos_pi_employee.szname as szdrivernm_j,

bos_inv_fsod.szfadjustmentid,
bos_inv_fsod.szadjustedbyid,
bos_inv_fsod.szadjusttoid,
bos_inv_fsod.szdescription,

bos_inv_fsod.szhelperid,
bos_pi_employee1.szname as szhelpernm,

bos_inv_fsod.szhelperid_2,
bos_pi_employee2.szname as szhelpernm_2,

bos_inv_fsod.szhelperid_3,
bos_pi_employee3.szname as szhelpernm_3,

bos_inv_fsod.bresultfrtransfer,
bos_inv_fsod.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsod.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsod.btprintedcount,
bos_inv_fsod.btransferred,
bos_inv_fsod.szcompanyid,
bos_inv_fsod.szworkplaceid,
bos_inv_fsod.sztaxentityid,
bos_inv_fsod.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsod.dtmcreated,
bos_inv_fsod.bsystemcreated,

bos_inv_fsod.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsod.dtmlastupdated,
bos_inv_fsod.balreadytransferred

from
(bos_inv_fsod left join bos_gen_approved on bos_inv_fsod.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fsod.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fsod.szdriverid = bos_pi_employee.szemployeeid

left join bos_pi_employee bos_pi_employee1 on bos_inv_fsod.szhelperid   = bos_pi_employee1.szemployeeid
left join bos_pi_employee bos_pi_employee2 on bos_inv_fsod.szhelperid_2 = bos_pi_employee2.szemployeeid
left join bos_pi_employee bos_pi_employee3 on bos_inv_fsod.szhelperid_3 = bos_pi_employee3.szemployeeid

left join bos_inv_vehicle on bos_inv_fsod.szvehicleid = bos_inv_vehicle.szvehicleid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsod.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsod.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsod.szuserid

left join bos_inv_warehouse as wh on wh.szwarehouseid = bos_inv_fsod.szlocationid
where
bos_inv_fsod.szfsodid = p_szfsodid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_getfsod_014(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fsod.szfsodid,
bos_inv_fsod.szsalesorgid,
bos_inv_fsod.szrefdocid,
bos_inv_fsod.dtmout,

bos_inv_fsod.szlocationtype,
bos_inv_fsod.szlocationid,
wh.szname as szwarehousenm_j,

bos_inv_fsod.szstocktypeid,

bos_inv_fsod.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehiclepoliceno_j,

bos_inv_fsod.szdriverid,
bos_pi_employee.szname as szdrivernm_j,

bos_inv_fsod.szfadjustmentid,
bos_inv_fsod.szadjustedbyid,
bos_inv_fsod.szadjusttoid,
bos_inv_fsod.szdescription,

bos_inv_fsod.szhelperid,
bos_pi_employee1.szname as szhelpernm,

bos_inv_fsod.szhelperid_2,
bos_pi_employee2.szname as szhelpernm_2,

bos_inv_fsod.szhelperid_3,
bos_pi_employee3.szname as szhelpernm_3,

bos_inv_fsod.bresultfrtransfer,
bos_inv_fsod.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsod.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsod.btprintedcount,
bos_inv_fsod.btransferred,
bos_inv_fsod.szcompanyid,
bos_inv_fsod.szworkplaceid,
bos_inv_fsod.sztaxentityid,
bos_inv_fsod.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsod.dtmcreated,
bos_inv_fsod.bsystemcreated,

bos_inv_fsod.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsod.dtmlastupdated,
bos_inv_fsod.balreadytransferred

from
(bos_inv_fsod left join bos_gen_approved on bos_inv_fsod.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fsod.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fsod.szdriverid = bos_pi_employee.szemployeeid

left join bos_pi_employee bos_pi_employee1 on bos_inv_fsod.szhelperid   = bos_pi_employee1.szemployeeid
left join bos_pi_employee bos_pi_employee2 on bos_inv_fsod.szhelperid_2 = bos_pi_employee2.szemployeeid
left join bos_pi_employee bos_pi_employee3 on bos_inv_fsod.szhelperid_3 = bos_pi_employee3.szemployeeid

left join bos_inv_vehicle on bos_inv_fsod.szvehicleid = bos_inv_vehicle.szvehicleid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsod.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsod.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsod.szuserid

left join bos_inv_warehouse as wh on wh.szwarehouseid = bos_inv_fsod.szlocationid
where
bos_inv_fsod.szfsodid = p_szfsodid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_getfsoditemlotqty(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty


from 
bos_inv_fsoditemlotqty

where 
szfsodid = p_szfsodid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_getfsoditemsn(
p_szfsodid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn


from 
bos_inv_fsoditemsn

where 
szfsodid=p_szfsodid and btitemnumber=p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_getlistoffsod()
returns void as
$body$
begin
select 
szfsodid,
dtmout

from 
bos_inv_fsod;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_isfsodexist(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
select 
szfsodid

from 
bos_inv_fsod
where 
szfsodid=p_szfsodid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_lockfsod(
p_szfsodid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsod
set 
szdescription=szdescription
where 
szfsodid=p_szfsodid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_updatefsod(
p_szfsodid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmout timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsod
set 
szsalesorgid = p_szsalesorgid,
szrefdocid = p_szrefdocid,
dtmout = p_dtmout,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szdescription = p_szdescription,

szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid ,
szadjusttoid = p_szadjusttoid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsodid = p_szfsodid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_updatefsod_014(
p_szfsodid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmout timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsod
set 
szsalesorgid = p_szsalesorgid,
szrefdocid = p_szrefdocid,
dtmout = p_dtmout,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szdescription = p_szdescription,

szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid ,
szadjusttoid = p_szadjusttoid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsodid = p_szfsodid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsod_updatefsodforadjustment(
p_szfsodid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsod
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid
where 
szfsodid = p_szfsodid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrc(
p_szfsrcid bos_dt_szid,
p_dtmreceipt timestamp,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivernm varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szsmallid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsrc
(
szfsrcid,
dtmreceipt,
szpoid,
szsupplierid,
szwarehouseid,
szstocktypeid,
szrefdn,
szcarrierid,
szvehicleid,
szdriverid,
szvehiclenumber,
szdrivernm,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
szccyid,
-- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsrcid,
p_dtmreceipt,
p_szpoid,
p_szsupplierid,
p_szwarehouseid,
p_szstocktypeid,
p_szrefdn,
p_szcarrierid,
p_szvehicleid,
p_szdriverid,
p_szvehiclenumber,
p_szdrivernm,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_szccyid,
-- doc status.,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitem(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szrefproductid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decamount,
p_btaxable bos_dt_bboolean,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsrcitem
(
szfsrcid,
shitemnumber,
szrefproductid,
szproductid,
decqty,
decuomqty,
szuomid,
decprice,
btaxable,
szparentid
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szrefproductid,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_btaxable,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitem_014(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szrefproductid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decamount,
p_btaxable bos_dt_bboolean,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fsrcitem
(
szfsrcid,
shitemnumber,
szrefproductid,
szproductid,
decqty,
decuomqty,
szuomid,
decprice,
btaxable,
szparentid
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szrefproductid,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_btaxable,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitem_015(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szrefproductid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decamount,
p_btaxable bos_dt_bboolean,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsrcitem
(
szfsrcid,
shitemnumber,
szrefproductid,
szproductid,
decqty,
decuomqty,
szuomid,
decprice,
btaxable,
szparentid,
szdistproductid,
decdistqty,
decdistprice
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szrefproductid,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_btaxable,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitemlotinfo(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fsrcitemlotinfo
(
szfsrcid,
shitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitemlotinfo_014(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fsrcitemlotinfo
(
szfsrcid,
shitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitemlotqty(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsrcitemlotqty
(
szfsrcid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfsrcid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_createfsrcitemsn(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn varchar)
returns void as
$body$
begin
insert into bos_inv_fsrcitemsn
(
szfsrcid,
shitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfsrcid,
p_shitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_deletefsrc(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrc
where
szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_deletefsrcitem(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrcitem
where
szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_deletefsrcitemlotinfo(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrcitemlotinfo
where
szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_deletefsrcitemlotqty(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_fsrcitemlotqty
where
szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_deletefsrcitemsn(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrcitemsn
where
szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrc(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsrc.szfsrcid,
bos_inv_fsrc.dtmreceipt,
bos_inv_fsrc.szpoid,
bos_inv_fsrc.szsupplierid,
bos_ap_supplier.szname as szsuppliernm,
bos_inv_fsrc.szwarehouseid,
bos_inv_fsrc.szstocktypeid,
bos_inv_fsrc.szrefdn,
bos_inv_fsrc.szcarrierid,
bos_inv_fsrc.szvehicleid,
bos_inv_fsrc.szdriverid,
bos_inv_fsrc.szvehiclenumber,
bos_inv_fsrc.szdrivernm,
bos_inv_fsrc.szfadjustmentid,
bos_inv_fsrc.szadjustedbyid,
bos_inv_fsrc.szadjusttoid,
bos_inv_fsrc.szdescription,

bos_inv_fsrc.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,

-- doc status.
bos_inv_fsrc.bresultfrtransfer,
bos_inv_fsrc.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsrc.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsrc.btprintedcount,
bos_inv_fsrc.btransferred,
bos_inv_fsrc.szcompanyid, 
bos_inv_fsrc.szworkplaceid,
bos_inv_fsrc.sztaxentityid,
bos_inv_fsrc.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsrc.dtmcreated,
bos_inv_fsrc.bsystemcreated,
bos_inv_fsrc.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsrc.dtmlastupdated,
bos_inv_fsrc.balreadytransferred

from
bos_inv_fsrc 
left join bos_gen_approved on bos_inv_fsrc.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fsrc.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_ap_supplier on bos_inv_fsrc.szsupplierid = bos_ap_supplier.szsuppid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsrc.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsrc.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsrc.szuserid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_fsrc.szccyid

where
szfsrcid = p_szfsrcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitem(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
select
	bos_inv_fsrcitem.szfsrcid,
	bos_inv_fsrcitem.shitemnumber,
	bos_inv_fsrcitem.szrefproductid,
	bos_inv_fsrcitem.szproductid,

	bos_inv_product.szname as szproductnm,
	bos_inv_product.sznickname as szproductnickname_j,
	bos_inv_product.szqtyformat as szproductqtyformat,
	bos_inv_product.szuomid as szproductuomid,
	bos_inv_product.szcompuomid as szproductcompuomid,
	bos_inv_product.szuomclassid as szproductuomclassid_j,
	bos_inv_product.sztrackingtype as szproducttrackingtype,
	ppi.szuomid as szproductpurchinfouomid_j,

	bos_inv_fsrcitem.decqty,
	bos_inv_fsrcitem.decuomqty,

	bos_inv_fsrcitem.szuomid,
	bos_inv_fsrcitem.decprice,
	bos_inv_fsrcitem.btaxable,

	bos_inv_fsrcitem.szparentid,
	parent.szname as szparentnm_j

from
	bos_inv_fsrcitem 
	left join bos_inv_product on bos_inv_product.szproductid = 

bos_inv_fsrcitem.szproductid
	left join bos_inv_productpurchaseinfo as ppi on ppi.szproductid = 

bos_inv_fsrcitem.szproductid
	left join bos_inv_fsrc on bos_inv_fsrc.szfsrcid = bos_inv_fsrcitem.szfsrcid
	left join bos_inv_product as parent on bos_inv_fsrcitem.szparentid = 

parent.szproductid

where
	bos_inv_fsrcitem.szfsrcid = p_szfsrcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitem_014(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fsrcitem.szfsrcid,
bos_inv_fsrcitem.shitemnumber,
bos_inv_fsrcitem.szrefproductid,
bos_inv_fsrcitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype,
ppi.szuomid as szproductpurchinfouomid_j,

bos_inv_fsrcitem.decqty,
bos_inv_fsrcitem.decuomqty,

bos_inv_fsrcitem.szuomid,
bos_inv_fsrcitem.decprice,
bos_inv_fsrcitem.btaxable,

bos_inv_fsrcitem.szparentid,
parent.szname as szparentnm_j

from
bos_inv_fsrcitem 
left join bos_inv_product on bos_inv_product.szproductid = 

bos_inv_fsrcitem.szproductid
left join bos_inv_productpurchaseinfo as ppi on ppi.szproductid = 

bos_inv_fsrcitem.szproductid
left join bos_inv_fsrc on bos_inv_fsrc.szfsrcid = bos_inv_fsrcitem.szfsrcid
left join bos_inv_product as parent on bos_inv_fsrcitem.szparentid = 

parent.szproductid

where
bos_inv_fsrcitem.szfsrcid = p_szfsrcid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitem_015(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fsrcitem.szfsrcid,
bos_inv_fsrcitem.shitemnumber,
bos_inv_fsrcitem.szrefproductid,
bos_inv_fsrcitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype,
ppi.szuomid as szproductpurchinfouomid_j,

bos_inv_fsrcitem.decqty,
bos_inv_fsrcitem.decuomqty,

bos_inv_fsrcitem.szuomid,
bos_inv_fsrcitem.decprice,
bos_inv_fsrcitem.btaxable,

bos_inv_fsrcitem.szparentid,
parent.szname as szparentnm_j,

bos_inv_fsrcitem.szdistproductid,
bos_inv_fsrcitem.decdistqty,
bos_inv_fsrcitem.decdistprice

from
bos_inv_fsrcitem 
left join bos_inv_product on bos_inv_product.szproductid = 

bos_inv_fsrcitem.szproductid
left join bos_inv_productpurchaseinfo as ppi on ppi.szproductid = 

bos_inv_fsrcitem.szproductid
left join bos_inv_fsrc on bos_inv_fsrc.szfsrcid = bos_inv_fsrcitem.szfsrcid
left join bos_inv_product as parent on bos_inv_fsrcitem.szparentid = 

parent.szproductid

where
bos_inv_fsrcitem.szfsrcid = p_szfsrcid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitemlotinfo(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
bos_inv_fsrcitemlotinfo.szlotid,
bos_inv_fsrcitemlotinfo.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fsrcitemlotinfo.szlottypeid,
bos_inv_fsrcitemlotinfo.szproductioncode,
bos_inv_fsrcitemlotinfo.declotstrength,
bos_inv_fsrcitemlotinfo.dtmexpired,
bos_inv_fsrcitemlotinfo.szlotstatus

from 
bos_inv_fsrcitemlotinfo left join bos_inv_product on bos_inv_fsrcitemlotinfo.szproductid = bos_inv_product.szproductid
where 
szfsrcid = p_szfsrcid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitemlotqty(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fsrcitemlotqty
where 
szfsrcid = p_szfsrcid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getfsrcitemsn(
p_szfsrcid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn


from 
bos_inv_fsrcitemsn
where 
szfsrcid = p_szfsrcid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_getlistoffsrc()
returns void as
$body$
begin
select 
szfsrcid,
dtmreceipt

from 
bos_inv_fsrc;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_isfsrcexist(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
select 
szfsrcid

from 
bos_inv_fsrc
where 
szfsrcid = p_szfsrcid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_lockfsrc(
p_szfsrcid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrc
set 
btransferred = btransferred
where 
szfsrcid = p_szfsrcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_updatefsrc(
p_szfsrcid bos_dt_szid,
p_dtmreceipt timestamp,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivernm varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szccyid bos_dt_szsmallid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrc
set 
dtmreceipt = p_dtmreceipt,
szpoid = p_szpoid,
szsupplierid = p_szsupplierid,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
szrefdn = p_szrefdn,
szcarrierid = p_szcarrierid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szvehiclenumber = p_szvehiclenumber,
szdrivernm = p_szdrivernm,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid=p_szadjusttoid,
szdescription = p_szdescription,
szccyid = p_szccyid,

-- doc status.
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsrcid = p_szfsrcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrc_updatefsrcforadjustment(
p_szfsrcid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrc
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid
where 
szfsrcid = p_szfsrcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrt(
p_szfsrtid bos_dt_szid,
p_dtmreturn timestamp,
p_szstrettype bos_dt_szsmallid,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleno varchar,
p_szdrivernm varchar,
p_sztrnid varchar,
p_szdocid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsrt
(
szfsrtid,
dtmreturn,
szstrettype,
szpoid,
szsupplierid,
szwarehouseid,
szstocktypeid,
szrefdn,
szcarrierid,
szvehicleid,
szdriverid,
szvehicleno,
szdrivernm,
sztrnid,
szdocid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
-- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsrtid,
p_dtmreturn,
p_szstrettype,
p_szpoid,
p_szsupplierid,
p_szwarehouseid,
p_szstocktypeid,
p_szrefdn,
p_szcarrierid,
p_szvehicleid,
p_szdriverid,
p_szvehicleno,
p_szdrivernm,
p_sztrnid,
p_szdocid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
-- doc status.,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrt_013(
p_szfsrtid bos_dt_szid,
p_dtmreturn timestamp,
p_szstrettype bos_dt_szsmallid,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleno varchar,
p_szdrivernm varchar,
p_sztrnid varchar,
p_szdocid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fsrt
(
szfsrtid,
dtmreturn,
szstrettype,
szpoid,
szsupplierid,
szwarehouseid,
szstocktypeid,
szrefdn,
szcarrierid,
szvehicleid,
szdriverid,
szvehicleno,
szdrivernm,
sztrnid,
szdocid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
-- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsrtid,
p_dtmreturn,
p_szstrettype,
p_szpoid,
p_szsupplierid,
p_szwarehouseid,
p_szstocktypeid,
p_szrefdn,
p_szcarrierid,
p_szvehicleid,
p_szdriverid,
p_szvehicleno,
p_szdrivernm,
p_sztrnid,
p_szdocid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
-- doc status.,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrtitem(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_inv_fsrtitem
(
szfsrtid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid
)
values
(
p_szfsrtid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrtitem_013(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsrtitem
(
szfsrtid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szdistproductid,
decdistqty
)
values
(
p_szfsrtid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szdistproductid,
p_decdistqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrtitemlotqty(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fsrtitemlotqty
(
szfsrtid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfsrtid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_createfsrtitemsn(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fsrtitemsn
(
szfsrtid,
shitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfsrtid,
p_shitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_deletefsrt(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrt
where
szfsrtid = p_szfsrtid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_deletefsrtitem(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrtitem
where
szfsrtid = p_szfsrtid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_deletefsrtitemlotqty(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrtitemlotqty
where
szfsrtid = p_szfsrtid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_deletefsrtitemsn(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fsrtitemsn
where
szfsrtid = p_szfsrtid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getfsrt(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsrt.szfsrtid,
bos_inv_fsrt.szstrettype,
bos_inv_fsrt.dtmreturn,
bos_inv_fsrt.szpoid,
bos_inv_fsrt.szsupplierid,
bos_ap_supplier.szname as szsuppliernm,
bos_inv_fsrt.szwarehouseid,
bos_inv_fsrt.szstocktypeid,
bos_inv_fsrt.szrefdn,
bos_inv_fsrt.szcarrierid,
bos_inv_fsrt.szvehicleid,
bos_inv_fsrt.szdriverid,
bos_inv_fsrt.szvehicleno,
bos_inv_fsrt.szdrivernm,
bos_inv_fsrt.sztrnid,
bos_inv_fsrt.szdocid,
bos_inv_fsrt.szfadjustmentid,
bos_inv_fsrt.szadjustedbyid,
bos_inv_fsrt.szadjusttoid,
bos_inv_fsrt.szdescription,

-- doc status.
bos_inv_fsrt.bresultfrtransfer,
bos_inv_fsrt.bvoid,
bos_gen_approved.bapproved,
bos_inv_fsrt.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fsrt.btprintedcount,
bos_inv_fsrt.btransferred,
bos_inv_fsrt.szcompanyid, 
bos_inv_fsrt.szworkplaceid,
bos_inv_fsrt.sztaxentityid,
bos_inv_fsrt.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fsrt.dtmcreated,
bos_inv_fsrt.bsystemcreated,
bos_inv_fsrt.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fsrt.dtmlastupdated,
bos_inv_fsrt.balreadytransferred
from
(bos_inv_fsrt left join bos_gen_approved on bos_inv_fsrt.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fsrt.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_ap_supplier on bos_inv_fsrt.szsupplierid = bos_ap_supplier.szsuppid 
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fsrt.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fsrt.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fsrt.szuserid
where
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getfsrtitem(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsrtitem.szfsrtid,
bos_inv_fsrtitem.shitemnumber,
bos_inv_fsrtitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype,
ppi.szuomid as szproductpurchinfouomid_j,

bos_inv_fsrtitem.decqty,
bos_inv_fsrtitem.decuomqty,

bos_inv_fsrtitem.szuomid
from
bos_inv_fsrtitem 
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsrtitem.szproductid
left join bos_inv_productpurchaseinfo as ppi on ppi.szproductid = bos_inv_fsrtitem.szproductid
where
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getfsrtitem_013(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fsrtitem.szfsrtid,
bos_inv_fsrtitem.shitemnumber,
bos_inv_fsrtitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype,
ppi.szuomid as szproductpurchinfouomid_j,

bos_inv_fsrtitem.decqty,
bos_inv_fsrtitem.decuomqty,

bos_inv_fsrtitem.szuomid,

bos_inv_fsrtitem.szdistproductid,
bos_inv_fsrtitem.decdistqty
from
bos_inv_fsrtitem 
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsrtitem.szproductid
left join bos_inv_productpurchaseinfo as ppi on ppi.szproductid = bos_inv_fsrtitem.szproductid
where
szfsrtid = p_szfsrtid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getfsrtitemlotqty(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fsrtitemlotqty
where 
szfsrtid = p_szfsrtid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getfsrtitemsn(
p_szfsrtid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn

from 
bos_inv_fsrtitemsn
where 
szfsrtid = p_szfsrtid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_getlistoffsrt()
returns void as
$body$
begin
select 
szfsrtid,
dtmreturn

from 
bos_inv_fsrt;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_isfsrtexist(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
select 
szfsrtid

from 
bos_inv_fsrt
where 
szfsrtid = p_szfsrtid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_lockfsrt(
p_szfsrtid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrt
set 
bvoid = bvoid
where 
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_updatefsrt(
p_szfsrtid bos_dt_szid,
p_dtmreturn timestamp,
p_szstrettype bos_dt_szsmallid,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleno varchar,
p_szdrivernm varchar,
p_sztrnid varchar,
p_szdocid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrt
set 
dtmreturn = p_dtmreturn,
szstrettype = p_szstrettype,
szpoid = p_szpoid,
szsupplierid = p_szsupplierid,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
szrefdn = p_szrefdn,
szcarrierid = p_szcarrierid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szvehicleno = p_szvehicleno,
szdrivernm = p_szdrivernm,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid =p_szadjusttoid,
szdescription = p_szdescription,

-- doc status.
sztrnid = p_sztrnid,
szdocid = p_szdocid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_updatefsrt_013(
p_szfsrtid bos_dt_szid,
p_dtmreturn timestamp,
p_szstrettype bos_dt_szsmallid,
p_szpoid bos_dt_szid,
p_szsupplierid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szrefdn varchar,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleno varchar,
p_szdrivernm varchar,
p_sztrnid varchar,
p_szdocid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrt
set 
dtmreturn = p_dtmreturn,
szstrettype = p_szstrettype,
szpoid = p_szpoid,
szsupplierid = p_szsupplierid,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
szrefdn = p_szrefdn,
szcarrierid = p_szcarrierid,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szvehicleno = p_szvehicleno,
szdrivernm = p_szdrivernm,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid =p_szadjusttoid,
szdescription = p_szdescription,

-- doc status.
sztrnid = p_sztrnid,
szdocid = p_szdocid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid
where 
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fsrt_updatefsrtforadjustment(
p_szfsrtid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fsrt
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid
where 
szfsrtid = p_szfsrtid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcor(
p_szfstcorid bos_dt_szid,
p_dtmcorrection timestamp,
p_szwarehouseid bos_dt_szid,
p_szreason varchar,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fstcor
(
szfstcorid,
dtmcorrection,
szwarehouseid,
szreason,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfstcorid,
p_dtmcorrection,
p_szwarehouseid,
p_szreason,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcoritem(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decstockqty bos_dt_decamount,
p_decactualqty bos_dt_decamount,
p_decuomstockqty bos_dt_decamount,
p_decuomactualqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_deccogs bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstcoritem
(
szfstcorid,
btitemnumber,
szproductid,
szstocktypeid,
decstockqty,
decactualqty,
decuomstockqty,
decuomactualqty,
szuomid,
deccogs
)
values
(
p_szfstcorid,
p_btitemnumber,
p_szproductid,
p_szstocktypeid,
p_decstockqty,
p_decactualqty,
p_decuomstockqty,
p_decuomactualqty,
p_szuomid,
p_deccogs
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcoritemlotinfo(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fstcoritemlotinfo
(
szfstcorid,
btitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfstcorid,
p_btitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcoritemlotinfo_014(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fstcoritemlotinfo
(
szfstcorid,
btitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfstcorid,
p_btitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcoritemlotqty(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstcoritemlotqty
(
szfstcorid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfstcorid,
p_btitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_createfstcoritemsn(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstcoritemsn
(
szfstcorid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfstcorid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_deletefstcor(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
   delete from  bos_inv_fstcor
where
	szfstcorid = p_szfstcorid;	
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_deletefstcoritem(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_fstcoritem
where
szfstcorid = p_szfstcorid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_deletefstcoritemlotinfo(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstcoritemlotinfo
where
szfstcorid = p_szfstcorid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_deletefstcoritemlotqty(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstcoritemlotqty
where
szfstcorid = p_szfstcorid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_deletefstcoritemsn(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstcoritemsn
where
szfstcorid=p_szfstcorid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getfstcor(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin

select 
bos_inv_fstcor.dtmcorrection,
bos_inv_fstcor.szwarehouseid,
bos_inv_fstcor.szreason,
bos_inv_fstcor.szdescription,

bos_inv_fstcor.bresultfrtransfer,
bos_inv_fstcor.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstcor.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstcor.btprintedcount,
bos_inv_fstcor.btransferred,
bos_inv_fstcor.szcompanyid,
bos_inv_fstcor.szworkplaceid,
bos_inv_fstcor.sztaxentityid,
bos_inv_fstcor.bneedapproval,
bos_inv_fstcor.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstcor.dtmcreated,
bos_inv_fstcor.bsystemcreated,
bos_inv_fstcor.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstcor.dtmlastupdated,
bos_inv_fstcor.balreadytransferred

from
bos_inv_fstcor left join bos_gen_approved on bos_inv_fstcor.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fstcor.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstcor.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstcor.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstcor.szuserid

where
bos_inv_fstcor.szfstcorid = p_szfstcorid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getfstcoritem(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_fstcoritem.btitemnumber,
bos_inv_fstcoritem.szproductid,

bos_inv_product.szname as szproductname,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_fstcoritem.szstocktypeid,

bos_inv_fstcoritem.decstockqty,
bos_inv_fstcoritem.decactualqty,

bos_inv_fstcoritem.decuomstockqty,
bos_inv_fstcoritem.decuomactualqty,

bos_inv_fstcoritem.szuomid,

bos_inv_fstcoritem.deccogs


from 
bos_inv_fstcoritem
left join bos_inv_product on 
bos_inv_fstcoritem.szproductid = bos_inv_product.szproductid


where 
bos_inv_fstcoritem.szfstcorid = p_szfstcorid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getfstcoritemlotinfo(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
bos_inv_fstcoritemlotinfo.szlotid,
bos_inv_fstcoritemlotinfo.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fstcoritemlotinfo.szlottypeid,
bos_inv_fstcoritemlotinfo.szproductioncode,
bos_inv_fstcoritemlotinfo.declotstrength,
bos_inv_fstcoritemlotinfo.dtmexpired,
bos_inv_fstcoritemlotinfo.szlotstatus

from 
bos_inv_fstcoritemlotinfo 
left join bos_inv_product on 
bos_inv_fstcoritemlotinfo.szproductid = bos_inv_product.szproductid
where 
szfstcorid = p_szfstcorid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getfstcoritemlotqty(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fstcoritemlotqty
where 
szfstcorid = p_szfstcorid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getfstcoritemsn(
p_szfstcorid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn


from 
bos_inv_fstcoritemsn
where 
szfstcorid=p_szfstcorid and btitemnumber=p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_getlistoffstcor()
returns void as
$body$
begin
select 
szfstcorid,
dtmcorrection

from 
bos_inv_fstcor;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_isfstcorexist(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
select 
szfstcorid

from 
bos_inv_fstcor
where 
szfstcorid=p_szfstcorid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_lockfstcor(
p_szfstcorid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstcor
set 
szwarehouseid = szwarehouseid
where 
szfstcorid=p_szfstcorid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstcor_updatefstcor(
p_szfstcorid bos_dt_szid,
p_dtmcorrection timestamp,
p_szwarehouseid bos_dt_szid,
p_szreason varchar,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstcor
set 
szfstcorid=p_szfstcorid,
dtmcorrection=p_dtmcorrection,
szwarehouseid=p_szwarehouseid,
szreason=p_szreason,
szdescription = p_szdescription,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfstcorid=p_szfstcorid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstin(
p_szfstinid bos_dt_szid,
p_dtmtransfer timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdrivernm bos_dt_szname,
p_szpoliceno bos_dt_szsmallname,
p_szrefdoc bos_dt_szid,
p_szfdnfilename bos_dt_szfullpath,
p_szfdnid bos_dt_szid,
p_szfdn2id bos_dt_szid,
p_szsenderworkplaceid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_fstin
(
szfstinid,
dtmtransfer,
szlocationtype,
szlocationid,
szstocktypeid,
szcarrierid,
szvehicleid,
szdriverid,
szdrivernm,
szpoliceno,
szrefdoc,
szfdnfilename,
szfdnid,
szfdn2id,
szsenderworkplaceid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfstinid,
p_dtmtransfer,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szcarrierid,
p_szvehicleid,
p_szdriverid,
p_szdrivernm,
p_szpoliceno,
p_szrefdoc,
p_szfdnfilename,
p_szfdnid,
p_szfdn2id,
p_szsenderworkplaceid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstin_013(
p_szfstinid bos_dt_szid,
p_dtmtransfer timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdrivernm bos_dt_szname,
p_szpoliceno bos_dt_szsmallname,
p_szrefdoc bos_dt_szid,
p_szfdnfilename bos_dt_szfullpath,
p_szfdnid bos_dt_szid,
p_szfdn2id bos_dt_szid,
p_szsenderworkplaceid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_fstin
(
szfstinid,
dtmtransfer,
szlocationtype,
szlocationid,
szstocktypeid,
szcarrierid,
szvehicleid,
szdriverid,
szdrivernm,
szpoliceno,
szrefdoc,
szfdnfilename,
szfdnid,
szfdn2id,
szsenderworkplaceid,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfstinid,
p_dtmtransfer,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szcarrierid,
p_szvehicleid,
p_szdriverid,
p_szdrivernm,
p_szpoliceno,
p_szrefdoc,
p_szfdnfilename,
p_szfdnid,
p_szfdn2id,
p_szsenderworkplaceid,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitem(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_deccogs bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstinitem
(
szfstinid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
deccogs
)
values
(
p_szfstinid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_deccogs
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitem_013(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_deccogs bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstinitem
(
szfstinid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
deccogs
)
values
(
p_szfstinid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_deccogs
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitemlotinfo(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fstinitemlotinfo
(
szfstinid,
btitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfstinid,
p_btitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitemlotinfo_014(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fstinitemlotinfo
(
szfstinid,
btitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfstinid,
p_btitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitemlotqty(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstinitemlotqty
(
szfstinid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfstinid,
p_btitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_createfstinitemsn(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstinitemsn
(
szfstinid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfstinid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_deletefstin(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_fstin
where
szfstinid=p_szfstinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_deletefstinitem(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_fstinitem
where
szfstinid=p_szfstinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_deletefstinitemlotinfo(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fstinitemlotinfo
where
szfstinid = p_szfstinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_deletefstinitemlotqty(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fstinitemlotqty
where
szfstinid = p_szfstinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_deletefstinitemsn(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_fstinitemsn
where
szfstinid=p_szfstinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstin(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstin.dtmtransfer,
bos_inv_fstin.szlocationtype,
bos_inv_fstin.szlocationid,
bos_inv_fstin.szstocktypeid,
bos_inv_fstin.szcarrierid,
bos_inv_fstin.szvehicleid,
bos_inv_fstin.szdriverid,
bos_inv_fstin.szdrivernm,
bos_inv_fstin.szpoliceno,
bos_inv_fstin.szrefdoc,
bos_inv_fstin.szfdnfilename,
bos_inv_fstin.szfdnid,
bos_inv_fstin.szfdn2id,
bos_inv_fstin.szsenderworkplaceid,
bos_inv_fstin.szfadjustmentid,
bos_inv_fstin.szadjustedbyid,
bos_inv_fstin.szadjusttoid,
bos_inv_fstin.szdescription,

bos_inv_fstin.bresultfrtransfer,
bos_inv_fstin.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstin.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstin.btprintedcount,
bos_inv_fstin.btransferred,
bos_inv_fstin.szcompanyid,
bos_inv_fstin.szworkplaceid,
bos_inv_fstin.sztaxentityid,
bos_inv_fstin.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstin.dtmcreated,
bos_inv_fstin.bsystemcreated,
bos_inv_fstin.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstin.dtmlastupdated,
bos_inv_fstin.balreadytransferred

from
(bos_inv_fstin left join bos_gen_approved on bos_inv_fstin.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fstin.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstin.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstin.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstin.szuserid

where
bos_inv_fstin.szfstinid = p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstin_013(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstin.dtmtransfer,
bos_inv_fstin.szlocationtype,
bos_inv_fstin.szlocationid,
bos_inv_fstin.szstocktypeid,
bos_inv_fstin.szcarrierid,
bos_inv_fstin.szvehicleid,
bos_inv_fstin.szdriverid,
bos_inv_fstin.szdrivernm,
bos_inv_fstin.szpoliceno,
bos_inv_fstin.szrefdoc,
bos_inv_fstin.szfdnfilename,
bos_inv_fstin.szfdnid,
bos_inv_fstin.szfdn2id,
bos_inv_fstin.szsenderworkplaceid,
bos_inv_fstin.szfadjustmentid,
bos_inv_fstin.szadjustedbyid,
bos_inv_fstin.szadjusttoid,
bos_inv_fstin.szdescription,

bos_inv_fstin.bresultfrtransfer,
bos_inv_fstin.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstin.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstin.btprintedcount,
bos_inv_fstin.btransferred,
bos_inv_fstin.szcompanyid,
bos_inv_fstin.szworkplaceid,
bos_inv_fstin.sztaxentityid,
bos_inv_fstin.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstin.dtmcreated,
bos_inv_fstin.bsystemcreated,
bos_inv_fstin.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstin.dtmlastupdated,
bos_inv_fstin.balreadytransferred

from
(bos_inv_fstin left join bos_gen_approved on bos_inv_fstin.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fstin.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstin.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstin.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstin.szuserid

where
bos_inv_fstin.szfstinid = p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstinitem(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_fstinitem.btitemnumber,
bos_inv_fstinitem.szproductid,

bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,

bos_inv_fstinitem.decqty,
bos_inv_fstinitem.decuomqty,

bos_inv_fstinitem.szuomid,

bos_inv_fstinitem.deccogs


from 
bos_inv_fstinitem
left join bos_inv_product on bos_inv_fstinitem.szproductid = bos_inv_product.szproductid

where 
szfstinid=p_szfstinid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstinitem_013(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_fstinitem.btitemnumber,
bos_inv_fstinitem.szproductid,

bos_inv_product.szname as szproductname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,

bos_inv_fstinitem.decqty,
bos_inv_fstinitem.decuomqty,

bos_inv_fstinitem.szuomid,

bos_inv_fstinitem.deccogs


from 
bos_inv_fstinitem
left join bos_inv_product on bos_inv_fstinitem.szproductid = bos_inv_product.szproductid

where 
szfstinid=p_szfstinid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstinitemlotinfo(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
bos_inv_fstinitemlotinfo.szlotid,
bos_inv_fstinitemlotinfo.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fstinitemlotinfo.szlottypeid,
bos_inv_fstinitemlotinfo.szproductioncode,
bos_inv_fstinitemlotinfo.declotstrength,
bos_inv_fstinitemlotinfo.dtmexpired,
bos_inv_fstinitemlotinfo.szlotstatus

from 
bos_inv_fstinitemlotinfo
left join bos_inv_product on bos_inv_fstinitemlotinfo.szproductid = bos_inv_product.szproductid

where 
szfstinid = p_szfstinid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstinitemlotqty(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_inv_fstinitemlotqty
where 
szfstinid = p_szfstinid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getfstinitemsn(
p_szfstinid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn

from 
bos_inv_fstinitemsn
where 
szfstinid=p_szfstinid and btitemnumber=p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_getlistoffstin()
returns void as
$body$
begin
select 
szfstinid,
dtmtransfer

from 
bos_inv_fstin;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_isfstinexist(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
select 
szfstinid

from 
bos_inv_fstin
where 
szfstinid=p_szfstinid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_lockfstin(
p_szfstinid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstin
set 
szvehicleid = szvehicleid
where 
szfstinid=p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_updatefstin(
p_szfstinid bos_dt_szid,
p_dtmtransfer timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdrivernm bos_dt_szname,
p_szpoliceno bos_dt_szsmallname,
p_szrefdoc bos_dt_szid,
p_szfdnfilename bos_dt_szfullpath,
p_szfdnid bos_dt_szid,
p_szfdn2id bos_dt_szid,
p_szsenderworkplaceid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstin
set 
dtmtransfer=p_dtmtransfer,
szlocationtype=p_szlocationtype,
szlocationid=p_szlocationid,
szstocktypeid=p_szstocktypeid,
szcarrierid=p_szcarrierid,
szvehicleid=p_szvehicleid,
szdriverid=p_szdriverid,
szdrivernm = p_szdrivernm,
szpoliceno = p_szpoliceno,
szrefdoc = p_szrefdoc,
szfdnfilename = p_szfdnfilename,
szfdnid = p_szfdnid,
szfdn2id = p_szfdn2id,
szsenderworkplaceid=p_szsenderworkplaceid,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid=p_szadjusttoid,
szdescription=p_szdescription,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfstinid=p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_updatefstin_013(
p_szfstinid bos_dt_szid,
p_dtmtransfer timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdrivernm bos_dt_szname,
p_szpoliceno bos_dt_szsmallname,
p_szrefdoc bos_dt_szid,
p_szfdnfilename bos_dt_szfullpath,
p_szfdnid bos_dt_szid,
p_szfdn2id bos_dt_szid,
p_szsenderworkplaceid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstin
set 
dtmtransfer=p_dtmtransfer,
szlocationtype=p_szlocationtype,
szlocationid=p_szlocationid,
szstocktypeid=p_szstocktypeid,
szcarrierid=p_szcarrierid,
szvehicleid=p_szvehicleid,
szdriverid=p_szdriverid,
szdrivernm = p_szdrivernm,
szpoliceno = p_szpoliceno,
szrefdoc = p_szrefdoc,
szfdnfilename = p_szfdnfilename,
szfdnid = p_szfdnid,
szfdn2id = p_szfdn2id,
szsenderworkplaceid=p_szsenderworkplaceid,
szfadjustmentid=p_szfadjustmentid,
szadjustedbyid=p_szadjustedbyid,
szadjusttoid=p_szadjusttoid,
szdescription=p_szdescription,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfstinid=p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstin_updatefstinforadjustment(
p_szfstinid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstin
set 
szfadjustmentid = p_szfadjustmentid,
szadjustedbyid = p_szadjustedbyid
where 
szfstinid=p_szfstinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstintern(
p_szfstinternid bos_dt_szid,
p_dtmtransfer timestamp,
p_szrefdoctype varchar,
p_szrefdocid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szfrwhid bos_dt_szid,
p_szfrstocktypeid bos_dt_szid,
p_sztowhid bos_dt_szid,
p_sztostocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szdescription bos_dt_szdescription,
p_btransportationdetail smallint,
p_szexpedition bos_dt_szname,
p_szdrivername bos_dt_szid,
p_szvehiclenumber bos_dt_szid,
p_szdriver bos_dt_szid,
p_szvehicle bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstintern
(
szfstinternid,
dtmtransfer,
szrefdoctype,
szrefdocid,
szemployeeid,
szfrwhid,
szfrstocktypeid ,
sztowhid ,
sztostocktypeid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szdescription,
--adding fields for sp,
btransportationdetail,
szexpedition,
szdrivername,
szvehiclenumber,
szdriver,
szvehicle
)
values
(
p_szfstinternid,
p_dtmtransfer,
p_szrefdoctype,
p_szrefdocid,
p_szemployeeid,
p_szfrwhid,
p_szfrstocktypeid ,
p_sztowhid ,
p_sztostocktypeid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szdescription,
--adding fields for sp,
p_btransportationdetail,
p_szexpedition,
p_szdrivername,
p_szvehiclenumber,
p_szdriver,
p_szvehicle
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstintern_014(
p_szfstinternid bos_dt_szid,
p_dtmtransfer timestamp,
p_szrefdoctype varchar,
p_szrefdocid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szfrwhid bos_dt_szid,
p_szfrstocktypeid bos_dt_szid,
p_sztowhid bos_dt_szid,
p_sztostocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szdescription bos_dt_szdescription,
p_btransportationdetail smallint,
p_szexpedition bos_dt_szname,
p_szdrivername bos_dt_szid,
p_szvehiclenumber bos_dt_szid,
p_szdriver bos_dt_szid,
p_szvehicle bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstintern
(
szfstinternid,
dtmtransfer,
szrefdoctype,
szrefdocid,
szemployeeid,
szfrwhid,
szfrstocktypeid ,
sztowhid ,
sztostocktypeid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szdescription,
--adding fields for sp,
btransportationdetail,
szexpedition,
szdrivername,
szvehiclenumber,
szdriver,
szvehicle
)
values
(
p_szfstinternid,
p_dtmtransfer,
p_szrefdoctype,
p_szrefdocid,
p_szemployeeid,
p_szfrwhid,
p_szfrstocktypeid ,
p_sztowhid ,
p_sztostocktypeid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szdescription,
--adding fields for sp,
p_btransportationdetail,
p_szexpedition,
p_szdrivername,
p_szvehiclenumber,
p_szdriver,
p_szvehicle
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstinternitem(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstinternitem
(
szfstinternid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfstinternid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstinternitem_014(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstinternitem
(
szfstinternid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfstinternid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
-- ==================================================================,
--set ansi_nulls on
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstinternitemlotqty(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstinternitemlotqty
(
szfstinternid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfstinternid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstinternitemreason(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint,
p_szreasonid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstinternitemreason
(
szfstinternid,
shitemnumber,
szreasonid,
decqty
)
values
(
p_szfstinternid,
p_shitemnumber,
p_szreasonid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_createfstinternitemsn(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstinternitemsn
(
szfstinternid,
shitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfstinternid,
p_shitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_deletefstintern(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstintern
where
szfstinternid=p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_deletefstinternitem(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstinternitem
where
szfstinternid=p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_deletefstinternitemlotqty(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstinternitemlotqty
where
szfstinternid=p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_deletefstinternitemreason(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstinternitemreason
where
szfstinternid = p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_deletefstinternitemsn(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstinternitemsn
where
szfstinternid=p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstintern(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fstintern.dtmtransfer,
bos_inv_fstintern.szrefdoctype,
bos_inv_fstintern.szrefdocid,
bos_inv_fstintern.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fstintern.szfrwhid,
bos_inv_fstintern.szfrstocktypeid,
bos_inv_fstintern.sztowhid,
bos_inv_fstintern.sztostocktypeid,
bos_inv_fstintern.bresultfrtransfer,
bos_inv_fstintern.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstintern.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstintern.btprintedcount,
bos_inv_fstintern.btransferred,
bos_inv_fstintern.szcompanyid,
bos_inv_fstintern.szworkplaceid,
bos_inv_fstintern.sztaxentityid,
bos_inv_fstintern.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstintern.dtmcreated,
bos_inv_fstintern.bsystemcreated,
bos_inv_fstintern.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstintern.dtmlastupdated,
bos_inv_fstintern.balreadytransferred,
bos_inv_fstintern.szdescription,

-- adding details data
bos_inv_fstintern.btransportationdetail,
bos_inv_fstintern.szexpedition, 
bos_inv_fstintern.szdrivername,
bos_inv_fstintern.szvehiclenumber,
bos_inv_fstintern.szdriver,
bos_inv_fstintern.szvehicle

from
(bos_inv_fstintern left join bos_gen_approved on bos_inv_fstintern.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fstintern.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fstintern.szemployeeid = bos_pi_employee.szemployeeid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstintern.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstintern.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstintern.szuserid

where
bos_inv_fstintern.szfstinternid = p_szfstinternid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstintern_014(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fstintern.dtmtransfer,
bos_inv_fstintern.szrefdoctype,
bos_inv_fstintern.szrefdocid,
bos_inv_fstintern.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fstintern.szfrwhid,
bos_inv_fstintern.szfrstocktypeid,
bos_inv_fstintern.sztowhid,
bos_inv_fstintern.sztostocktypeid,
bos_inv_fstintern.bresultfrtransfer,
bos_inv_fstintern.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstintern.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstintern.btprintedcount,
bos_inv_fstintern.btransferred,
bos_inv_fstintern.szcompanyid,
bos_inv_fstintern.szworkplaceid,
bos_inv_fstintern.sztaxentityid,
bos_inv_fstintern.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstintern.dtmcreated,
bos_inv_fstintern.bsystemcreated,
bos_inv_fstintern.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstintern.dtmlastupdated,
bos_inv_fstintern.balreadytransferred,
bos_inv_fstintern.szdescription,

-- adding details data
bos_inv_fstintern.btransportationdetail,
bos_inv_fstintern.szexpedition, 
bos_inv_fstintern.szdrivername,
bos_inv_fstintern.szvehiclenumber,
bos_inv_fstintern.szdriver,
bos_inv_fstintern.szvehicle

from
(bos_inv_fstintern left join bos_gen_approved on bos_inv_fstintern.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fstintern.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fstintern.szemployeeid = bos_pi_employee.szemployeeid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstintern.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstintern.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstintern.szuserid

where
bos_inv_fstintern.szfstinternid = p_szfstinternid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitem(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstinternitem.shitemnumber,
bos_inv_fstinternitem.szproductid,
bos_inv_product.szname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_fstinternitem.decqty,
bos_inv_fstinternitem.decuomqty,
bos_inv_fstinternitem.szuomid,

bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_fstinternitem.szparentid,
bip2.szname as szparentnm_j

from
bos_inv_fstinternitem
left join bos_inv_product on bos_inv_fstinternitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fstinternitem.szparentid
where
szfstinternid=p_szfstinternid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitem_014(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstinternitem.shitemnumber,
bos_inv_fstinternitem.szproductid,
bos_inv_product.szname,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_fstinternitem.decqty,
bos_inv_fstinternitem.decuomqty,
bos_inv_fstinternitem.szuomid,

bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_fstinternitem.szparentid,
bip2.szname as szparentnm_j

from
bos_inv_fstinternitem
left join bos_inv_product on bos_inv_fstinternitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as bip2 on bip2.szproductid = bos_inv_fstinternitem.szparentid
where
szfstinternid=p_szfstinternid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitemlotqty(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemnumber,
szlotid,
decqty

from 
bos_inv_fstinternitemlotqty
where 
szfstinternid=p_szfstinternid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitemlotqty_014(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemnumber,
szlotid,
decqty

from 
bos_inv_fstinternitemlotqty
where 
szfstinternid=p_szfstinternid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitemreason(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
fdir.szreasonid,
reason.szdescription as szreasondesc_j,
fdir.decqty

from 
bos_inv_fstinternitemreason as fdir
where 
fdir.szfstinternid = p_szfstinternid and fdir.shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getfstinternitemsn(
p_szfstinternid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn

from 
bos_inv_fstinternitemsn
where 
szfstinternid=p_szfstinternid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_getlistoffstintern()
returns void as
$body$
begin
select 
szfstinternid,
dtmtransfer

from 
bos_inv_fstintern;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_isfstinternexist(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
select 
szfstinternid

from 
bos_inv_fstintern
where 
szfstinternid=p_szfstinternid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_lockfstintern(
p_szfstinternid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstintern
set 
btransferred=btransferred
where 
szfstinternid=p_szfstinternid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_updatefstintern(
p_szfstinternid bos_dt_szid,
p_dtmtransfer timestamp,
p_szrefdoctype varchar,
p_szrefdocid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szfrwhid bos_dt_szid,
p_szfrstocktypeid bos_dt_szid,
p_sztowhid bos_dt_szid,
p_sztostocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_btransportationdetail smallint,
p_szexpedition bos_dt_szid,
p_szdrivername bos_dt_szid,
p_szvehiclenumber bos_dt_szid,
p_szdriver bos_dt_szid,
p_szvehicle bos_dt_szid)
returns void as
$body$
begin
-- ### 2 update #####
update
	bos_inv_fstintern
set
	dtmtransfer = p_dtmtransfer,
	szrefdoctype = p_szrefdoctype,
	szrefdocid = p_szrefdocid,
	szemployeeid = p_szemployeeid,
	szfrwhid = p_szfrwhid,
	szfrstocktypeid = p_szfrstocktypeid,
	sztowhid = p_sztowhid,
	sztostocktypeid = p_sztostocktypeid,
	bvoid = p_bvoid,
	bapplied = p_bapplied,
	szcompanyid = p_szcompanyid,
	szworkplaceid = p_szworkplaceid,
	sztaxentityid = p_sztaxentityid,
	bneedapproval = p_bneedapproval,
	gdapprovedid = p_gdapprovedid,

	dtmcreated = p_dtmcreated,
	szuserid = p_szuserid,

	szdescription=p_szdescription,

    --add fields for update
    btransportationdetail=p_btransportationdetail,
    szexpedition=p_szexpedition,
    szdrivername=p_szdrivername,
    szvehiclenumber=p_szvehiclenumber,
    szdriver=p_szdriver,
    szvehicle=p_szvehicle
where
	szfstinternid = p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstintern_updatefstintern_014(
p_szfstinternid bos_dt_szid,
p_dtmtransfer timestamp,
p_szrefdoctype varchar,
p_szrefdocid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szfrwhid bos_dt_szid,
p_szfrstocktypeid bos_dt_szid,
p_sztowhid bos_dt_szid,
p_sztostocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_btransportationdetail smallint,
p_szexpedition bos_dt_szid,
p_szdrivername bos_dt_szid,
p_szvehiclenumber bos_dt_szid,
p_szdriver bos_dt_szid,
p_szvehicle bos_dt_szid)
returns void as
$body$
begin
-- ### 2 update #####
update
    bos_inv_fstintern
set
    dtmtransfer = p_dtmtransfer,
    szrefdoctype = p_szrefdoctype,
    szrefdocid = p_szrefdocid,
    szemployeeid = p_szemployeeid,
    szfrwhid = p_szfrwhid,
    szfrstocktypeid = p_szfrstocktypeid,
    sztowhid = p_sztowhid,
    sztostocktypeid = p_sztostocktypeid,
    bvoid = p_bvoid,
    bapplied = p_bapplied,
    szcompanyid = p_szcompanyid,
    szworkplaceid = p_szworkplaceid,
    sztaxentityid = p_sztaxentityid,
    bneedapproval = p_bneedapproval,
    gdapprovedid = p_gdapprovedid,

    dtmcreated = p_dtmcreated,
    szuserid = p_szuserid,

    szdescription=p_szdescription,

    --add fields for update
    btransportationdetail=p_btransportationdetail,
    szexpedition=p_szexpedition,
    szdrivername=p_szdrivername,
    szvehiclenumber=p_szvehiclenumber,
    szdriver=p_szdriver,
    szvehicle=p_szvehicle
where
    szfstinternid = p_szfstinternid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_createfstmorph(
p_szfstmorphid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmmorph timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_inv_fstmorph
(
szfstmorphid,
szsalesorgid,
szrefdocid,
dtmmorph,
szlocationtype,
szlocationid,
szstocktypeid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szdescription
)
values
(
p_szfstmorphid,
p_szsalesorgid,
p_szrefdocid,
p_dtmmorph,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_createfstmorphitem(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_bissnexist bit,
p_sztoproductid bos_dt_szid,
p_sztouomid bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_inv_fstmorphitem
(
szfstmorphid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
bissnexist,
sztoproductid,
sztouomid
)
values
(
p_szfstmorphid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_bissnexist,
p_sztoproductid,
p_sztouomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_createfstmorphitemlotinfo(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_declotstrength bos_dt_decamount,
p_dtmexpired timestamp,
p_szlotstatus bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_inv_fstmorphitemlotinfo
(
szfstmorphid,
btitemnumber,
szlotid,
szproductid,
szlottypeid,
szproductioncode,
declotstrength,
dtmexpired,
szlotstatus
)
values
(
p_szfstmorphid,
p_btitemnumber,
p_szlotid,
p_szproductid,
p_szlottypeid,
p_szproductioncode,
p_declotstrength,
p_dtmexpired,
p_szlotstatus
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_createfstmorphitemlotqty(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstmorphitemlotqty
(
szfstmorphid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfstmorphid,
p_btitemnumber,
p_szlotid,
p_decqty

);
--set quoted_identifier off;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_createfstmorphitemsn(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstmorphitemsn
(
szfstmorphid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfstmorphid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_deletefstmorph(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstmorph
where
szfstmorphid=p_szfstmorphid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_deletefstmorphitem(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstmorphitem
where
szfstmorphid=p_szfstmorphid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_deletefstmorphitemlotinfo(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstmorphitemlotinfo
where
szfstmorphid = p_szfstmorphid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_deletefstmorphitemlotqty(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstmorphitemlotqty
where
szfstmorphid = p_szfstmorphid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_deletefstmorphitemsn(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstmorphitemsn
where
szfstmorphid=p_szfstmorphid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getfstmorph(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fstmorph.szsalesorgid,
bos_inv_fstmorph.szrefdocid,
bos_inv_fstmorph.dtmmorph,
bos_inv_fstmorph.szlocationtype,
bos_inv_fstmorph.szlocationid,
bos_inv_fstmorph.szstocktypeid,
bos_inv_fstmorph.bresultfrtransfer,
bos_inv_fstmorph.bvoid,
bos_gen_approved.bapproved,
bos_inv_fstmorph.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstmorph.btprintedcount,
bos_inv_fstmorph.btransferred,
bos_inv_fstmorph.szcompanyid,
bos_inv_fstmorph.szworkplaceid,
bos_inv_fstmorph.sztaxentityid,
bos_inv_fstmorph.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,
bos_inv_fstmorph.dtmcreated,
bos_inv_fstmorph.bsystemcreated,
bos_inv_fstmorph.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstmorph.dtmlastupdated,
bos_inv_fstmorph.balreadytransferred,
bos_inv_fstmorph.szdescription
from
(bos_inv_fstmorph left join bos_gen_approved on bos_inv_fstmorph.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_inv_fstmorph.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstmorph.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstmorph.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstmorph.szuserid

where
bos_inv_fstmorph.szfstmorphid = p_szfstmorphid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getfstmorphitem(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_fstmorphitem.btitemnumber,
bos_inv_fstmorphitem.szproductid,
b1.szname as szproductname,
b1.szqtyformat as szproductqtyformat,

bos_inv_fstmorphitem.decqty,
bos_inv_fstmorphitem.decuomqty,

bos_inv_fstmorphitem.szuomid,

b1.szuomid as szproductuomid,
b1.szuomclassid as szproductuomclassid_j,
b1.szcompuomid as szproductcompuomid,
b1.sztrackingtype as szproducttrackingtype,

bos_inv_fstmorphitem.bissnexist,

bos_inv_fstmorphitem.sztoproductid,
b2.szname as sztoproductname,
bos_inv_fstmorphitem.sztouomid,
b2.szuomid as sztoproductuomid,
b2.szuomclassid as sztoproductuomclassid_j,
b2.szcompuomid as sztoproductcompuomid

from
bos_inv_fstmorphitem
left join bos_inv_product as b1 on bos_inv_fstmorphitem.szproductid = b1.szproductid
left join bos_inv_product as b2 on bos_inv_fstmorphitem.sztoproductid = b2.szproductid
where
szfstmorphid=p_szfstmorphid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getfstmorphitemlotinfo(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
bos_inv_fstmorphitemlotinfo.szlotid,
bos_inv_fstmorphitemlotinfo.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fstmorphitemlotinfo.szlottypeid,
bos_inv_fstmorphitemlotinfo.szproductioncode,
bos_inv_fstmorphitemlotinfo.declotstrength,
bos_inv_fstmorphitemlotinfo.dtmexpired,
bos_inv_fstmorphitemlotinfo.szlotstatus

from 
bos_inv_fstmorphitemlotinfo left join bos_inv_product on bos_inv_fstmorphitemlotinfo.szproductid = bos_inv_product.szproductid
where 
szfstmorphid = p_szfstmorphid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getfstmorphitemlotqty(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty


from 
bos_inv_fstmorphitemlotqty

where 
szfstmorphid = p_szfstmorphid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getfstmorphitemsn(
p_szfstmorphid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn


from 
bos_inv_fstmorphitemsn
where 
szfstmorphid=p_szfstmorphid and btitemnumber=p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_getlistoffstmorph()
returns void as
$body$
begin
select 
szfstmorphid,
dtmmorph

from 
bos_inv_fstmorph;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_isfstmorphexist(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
select 
szfstmorphid

from 
bos_inv_fstmorph
where 
szfstmorphid=p_szfstmorphid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_lockfstmorph(
p_szfstmorphid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstmorph
set 
btransferred=btransferred
where 
szfstmorphid=p_szfstmorphid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstmorph_updatefstmorph(
p_szfstmorphid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_dtmmorph timestamp,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_inv_fstmorph
set 
szsalesorgid = p_szsalesorgid,
szrefdocid = p_szrefdocid,
dtmmorph = p_dtmmorph,
szlocationtype = p_szlocationtype,
szlocationid = p_szlocationid,
szstocktypeid = p_szstocktypeid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

szdescription = p_szdescription
where 
szfstmorphid = p_szfstmorphid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstreject(
p_szfstrejectid bos_dt_szid,
p_dtmdocument timestamp,
p_szrefdoctype varchar,
p_szrefdoc varchar,
p_szwhid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szqcdocid bos_dt_szid,
p_dtmqcdoc timestamp,
p_szdescription varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fstreject
(
szfstrejectid,
dtmdocument,
szrefdoctype,
szrefdoc,
szwhid,
szdepartmentid,
szstocktypeid,
szemployeeid,
szqcdocid,
dtmqcdoc,
szdescription,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfstrejectid,
p_dtmdocument,
p_szrefdoctype,
p_szrefdoc,
p_szwhid,
p_szdepartmentid,
p_szstocktypeid,
p_szemployeeid,
p_szqcdocid,
p_dtmqcdoc,
p_szdescription,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstreject_013(
p_szfstrejectid bos_dt_szid,
p_dtmdocument timestamp,
p_szrefdoctype varchar,
p_szrefdoc varchar,
p_szwhid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szqcdocid bos_dt_szid,
p_dtmqcdoc timestamp,
p_szdescription varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_fstreject
(
szfstrejectid,
dtmdocument,
szrefdoctype,
szrefdoc,
szwhid,
szdepartmentid,
szstocktypeid,
szemployeeid,
szqcdocid,
dtmqcdoc,
szdescription,
szfadjustmentid,
szadjustedbyid,
szadjusttoid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfstrejectid,
p_dtmdocument,
p_szrefdoctype,
p_szrefdoc,
p_szwhid,
p_szdepartmentid,
p_szstocktypeid,
p_szemployeeid,
p_szqcdocid,
p_dtmqcdoc,
p_szdescription,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstrejectitem(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szconditiontypeid varchar,
p_szsuggestiontypeid varchar,
p_szproductidtobesold varchar,
p_szstocktypeidtobesold varchar,
p_decqtytobesold bos_dt_decamount,
p_decuomqtytobesold bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_decnewproductcogs bos_dt_decamount,
p_szuomidtobesold varchar,
p_szreasonid varchar,
p_szparentid bos_dt_szid,
p_szparentidtobesold bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstrejectitem
(
szfstrejectid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szconditiontypeid,
szsuggestiontypeid,
szproductidtobesold,
szstocktypeidtobesold,
decqtytobesold,
decuomqtytobesold,
deccogs,
decnewproductcogs,
szuomidtobesold,
szreasonid,
szparentid,
szparentidtobesold
)
values
(
p_szfstrejectid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szconditiontypeid,
p_szsuggestiontypeid,
p_szproductidtobesold,
p_szstocktypeidtobesold,
p_decqtytobesold,
p_decuomqtytobesold,
p_deccogs,
p_decnewproductcogs,
p_szuomidtobesold,
p_szreasonid,
p_szparentid,
p_szparentidtobesold
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstrejectitem_013(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szconditiontypeid varchar,
p_szsuggestiontypeid varchar,
p_szproductidtobesold varchar,
p_szstocktypeidtobesold varchar,
p_decqtytobesold bos_dt_decamount,
p_decuomqtytobesold bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_decnewproductcogs bos_dt_decamount,
p_szuomidtobesold varchar,
p_szreasonid varchar,
p_szparentid bos_dt_szid,
p_szparentidtobesold bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fstrejectitem
(
szfstrejectid,
shitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szconditiontypeid,
szsuggestiontypeid,
szproductidtobesold,
szstocktypeidtobesold,
decqtytobesold,
decuomqtytobesold,
deccogs,
decnewproductcogs,
szuomidtobesold,
szreasonid,
szparentid,
szparentidtobesold
)
values
(
p_szfstrejectid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szconditiontypeid,
p_szsuggestiontypeid,
p_szproductidtobesold,
p_szstocktypeidtobesold,
p_decqtytobesold,
p_decuomqtytobesold,
p_deccogs,
p_decnewproductcogs,
p_szuomidtobesold,
p_szreasonid,
p_szparentid,
p_szparentidtobesold
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstrejectitemlotqty(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fstrejectitemlotqty
(
szfstrejectid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfstrejectid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstrejectitemsn(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint,
p_shitem2number smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstrejectitemsn
(
szfstrejectid,
shitemnumber,
shitem2number,
szproductsn
)
values
(
p_szfstrejectid,
p_shitemnumber,
p_shitem2number,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_createfstrejectitemsn_014(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint,
p_shitem2number smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fstrejectitemsn
(
szfstrejectid,
shitemnumber,
shitem2number,
szproductsn
)
values
(
p_szfstrejectid,
p_shitemnumber,
p_shitem2number,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_deletefstreject(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstreject
where
szfstrejectid=p_szfstrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_deletefstrejectitem(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstrejectitem
where
szfstrejectid=p_szfstrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_deletefstrejectitemlotqty(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstrejectitemlotqty
where
szfstrejectid=p_szfstrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_deletefstrejectitemsn(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_fstrejectitemsn
where
szfstrejectid=p_szfstrejectid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstreject(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
select

bos_inv_fstreject.szfstrejectid,
bos_inv_fstreject.dtmdocument,
bos_inv_fstreject.szrefdoctype,
bos_inv_fstreject.szrefdoc,
bos_inv_fstreject.szwhid,
bos_inv_fstreject.szdepartmentid,
bos_inv_fstreject.szstocktypeid,
bos_inv_fstreject.szemployeeid,
coalesce(bos_pi_employee.szname, '') as szemployeename,
bos_inv_fstreject.szqcdocid,
bos_inv_fstreject.dtmqcdoc,
bos_inv_fstreject.szdescription,
bos_inv_fstreject.szfadjustmentid,
bos_inv_fstreject.szadjustedbyid,
bos_inv_fstreject.szadjusttoid,
bos_inv_fstreject.bresultfrtransfer,
bos_inv_fstreject.bvoid, 
bos_gen_approved.bapproved,
bos_inv_fstreject.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstreject.btprintedcount,
bos_inv_fstreject.btransferred,
bos_inv_fstreject.szcompanyid,
bos_inv_fstreject.szworkplaceid,
bos_inv_fstreject.sztaxentityid,
bos_inv_fstreject.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstreject.dtmcreated,
bos_inv_fstreject.bsystemcreated,
bos_inv_fstreject.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstreject.dtmlastupdated,
bos_inv_fstreject.balreadytransferred


from
bos_inv_fstreject left join bos_gen_approved on bos_inv_fstreject.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fstreject.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fstreject.szemployeeid = bos_pi_employee.szemployeeid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstreject.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstreject.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstreject.szuserid

where
bos_inv_fstreject.szfstrejectid = p_szfstrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstreject_013(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
select

bos_inv_fstreject.szfstrejectid,
bos_inv_fstreject.dtmdocument,
bos_inv_fstreject.szrefdoctype,
bos_inv_fstreject.szrefdoc,
bos_inv_fstreject.szwhid,
bos_inv_fstreject.szdepartmentid,
bos_inv_fstreject.szstocktypeid,
bos_inv_fstreject.szemployeeid,
coalesce(bos_pi_employee.szname, '') as szemployeename,
bos_inv_fstreject.szqcdocid,
bos_inv_fstreject.dtmqcdoc,
bos_inv_fstreject.szdescription,
bos_inv_fstreject.szfadjustmentid,
bos_inv_fstreject.szadjustedbyid,
bos_inv_fstreject.szadjusttoid,
bos_inv_fstreject.bresultfrtransfer,
bos_inv_fstreject.bvoid, 
bos_gen_approved.bapproved,
bos_inv_fstreject.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fstreject.btprintedcount,
bos_inv_fstreject.btransferred,
bos_inv_fstreject.szcompanyid,
bos_inv_fstreject.szworkplaceid,
bos_inv_fstreject.sztaxentityid,
bos_inv_fstreject.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fstreject.dtmcreated,
bos_inv_fstreject.bsystemcreated,
bos_inv_fstreject.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fstreject.dtmlastupdated,
bos_inv_fstreject.balreadytransferred


from
bos_inv_fstreject left join bos_gen_approved on bos_inv_fstreject.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fstreject.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fstreject.szemployeeid = bos_pi_employee.szemployeeid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fstreject.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fstreject.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fstreject.szuserid

where
bos_inv_fstreject.szfstrejectid = p_szfstrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstrejectitem(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstrejectitem.shitemnumber,
bos_inv_fstrejectitem.szproductid,
b1.szname as szproductname,
b1.sznickname as szproductnickname_j,
b1.szqtyformat as szproductqtyformat,
b1.sztrackingtype as szproducttrackingtype,

bos_inv_fstrejectitem.decqty,
bos_inv_fstrejectitem.decuomqty,

bos_inv_fstrejectitem.szuomid,

b1.szcompuomid,
b1.szuomclassid as szproductuomclassid_j,
b1.szuomid as szproductuomid,

bos_inv_fstrejectitem.szconditiontypeid,
bos_inv_fstrejectitem.szsuggestiontypeid,

bos_inv_fstrejectitem.szproductidtobesold,
b2.szname as szproductnmtobesold,
b2.sznickname as szproductnicknametobesold_j,
b2.szqtyformat as szproductqtyformattobesold,
bos_inv_fstrejectitem.szstocktypeidtobesold,

bos_inv_fstrejectitem.decqtytobesold,
bos_inv_fstrejectitem.decuomqtytobesold,

bos_inv_fstrejectitem.szuomidtobesold,

b2.szcompuomid as szcompuomid_tobesold,
b2.szuomclassid as szproductuomclassidtobesold_j,
b2.szuomid as szproductuomid_tobesold,

bos_inv_fstrejectitem.deccogs,
bos_inv_fstrejectitem.decnewproductcogs,
bos_inv_fstrejectitem.szreasonid,

bos_inv_fstrejectitem.szparentid,
bos_inv_fstrejectitem.szparentidtobesold,
b3.szname as szparentnm,
b4.szname as szparentnmtobesold

from
bos_inv_fstrejectitem 
left join bos_inv_product as b1 on bos_inv_fstrejectitem.szproductid = b1.szproductid
left join bos_inv_product as b2 on bos_inv_fstrejectitem.szproductidtobesold = b2.szproductid
left join bos_inv_product as b3 on bos_inv_fstrejectitem.szparentid = b3.szproductid
left join bos_inv_product as b4 on bos_inv_fstrejectitem.szparentidtobesold = b4.szproductid

where
szfstrejectid=p_szfstrejectid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstrejectitem_014(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fstrejectitem.shitemnumber,
bos_inv_fstrejectitem.szproductid,
b1.szname as szproductname,
b1.sznickname as szproductnickname_j,
b1.szqtyformat as szproductqtyformat,
b1.sztrackingtype as szproducttrackingtype,

bos_inv_fstrejectitem.decqty,
bos_inv_fstrejectitem.decuomqty,

bos_inv_fstrejectitem.szuomid,

b1.szcompuomid,
b1.szuomclassid as szproductuomclassid_j,
b1.szuomid as szproductuomid,

bos_inv_fstrejectitem.szconditiontypeid,
bos_inv_fstrejectitem.szsuggestiontypeid,

bos_inv_fstrejectitem.szproductidtobesold,
b2.szname as szproductnmtobesold,
b2.sznickname as szproductnicknametobesold_j,
b2.szqtyformat as szproductqtyformattobesold,
bos_inv_fstrejectitem.szstocktypeidtobesold,

bos_inv_fstrejectitem.decqtytobesold,
bos_inv_fstrejectitem.decuomqtytobesold,

bos_inv_fstrejectitem.szuomidtobesold,

b2.szcompuomid as szcompuomid_tobesold,
b2.szuomclassid as szproductuomclassidtobesold_j,
b2.szuomid as szproductuomid_tobesold,

bos_inv_fstrejectitem.deccogs,
bos_inv_fstrejectitem.decnewproductcogs,
bos_inv_fstrejectitem.szreasonid,

bos_inv_fstrejectitem.szparentid,
bos_inv_fstrejectitem.szparentidtobesold,
b3.szname as szparentnm,
b4.szname as szparentnmtobesold

from
bos_inv_fstrejectitem 
left join bos_inv_product as b1 on bos_inv_fstrejectitem.szproductid = b1.szproductid
left join bos_inv_product as b2 on bos_inv_fstrejectitem.szproductidtobesold = b2.szproductid
left join bos_inv_product as b3 on bos_inv_fstrejectitem.szparentid = b3.szproductid
left join bos_inv_product as b4 on bos_inv_fstrejectitem.szparentidtobesold = b4.szproductid

where
szfstrejectid=p_szfstrejectid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstrejectitemlotqty(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty


from 
bos_inv_fstrejectitemlotqty
where 
szfstrejectid=p_szfstrejectid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getfstrejectitemsn(
p_szfstrejectid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemnumber,
shitem2number,
szproductsn


from 
bos_inv_fstrejectitemsn
where 
szfstrejectid=p_szfstrejectid and shitemnumber=p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_getlistoffstreject(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
select 

szfstrejectid,
dtmdocument


from 
bos_inv_fstreject;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_isfstrejectexist(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
select 

szfstrejectid


from 
bos_inv_fstreject
where 
szfstrejectid = p_szfstrejectid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_lockfstreject(
p_szfstrejectid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstreject
set 
szemployeeid=szemployeeid
where 
szfstrejectid=p_szfstrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_updatefstreject(
p_szfstrejectid bos_dt_szid,
p_dtmdocument timestamp,
p_szrefdoctype varchar,
p_szrefdoc varchar,
p_szwhid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szqcdocid bos_dt_szid,
p_dtmqcdoc timestamp,
p_szdescription varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount bit,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstreject
set 

szfstrejectid=p_szfstrejectid,
dtmdocument=p_dtmdocument,
szrefdoctype=p_szrefdoctype,
szrefdoc=p_szrefdoc,
szwhid=p_szwhid,
szdepartmentid=p_szdepartmentid,
szstocktypeid=p_szstocktypeid,
szemployeeid=p_szemployeeid,
szqcdocid=p_szqcdocid,
dtmqcdoc=p_dtmqcdoc,
szdescription=p_szdescription,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfstrejectid=p_szfstrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fstreject_updatefstreject_013(
p_szfstrejectid bos_dt_szid,
p_dtmdocument timestamp,
p_szrefdoctype varchar,
p_szrefdoc varchar,
p_szwhid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szqcdocid bos_dt_szid,
p_dtmqcdoc timestamp,
p_szdescription varchar,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount bit,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fstreject
set 

szfstrejectid=p_szfstrejectid,
dtmdocument=p_dtmdocument,
szrefdoctype=p_szrefdoctype,
szrefdoc=p_szrefdoc,
szwhid=p_szwhid,
szdepartmentid=p_szdepartmentid,
szstocktypeid=p_szstocktypeid,
szemployeeid=p_szemployeeid,
szqcdocid=p_szqcdocid,
dtmqcdoc=p_dtmqcdoc,
szdescription=p_szdescription,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfstrejectid=p_szfstrejectid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvrema(
p_szfvremaid bos_dt_szid,
p_dtmremain timestamp,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fvrema
(
szfvremaid,
dtmremain,
szvehicleid,
szdriverid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szfadjustmentid,
szadjustedbyid,
szadjusttoid
)
values
(
p_szfvremaid,
p_dtmremain,
p_szvehicleid,
p_szdriverid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid

);
--set ansi_nulls on,
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvrema_013(
p_szfvremaid bos_dt_szid,
p_dtmremain timestamp,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fvrema
(
szfvremaid,
dtmremain,
szvehicleid,
szdriverid,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szfadjustmentid,
szadjustedbyid,
szadjusttoid
)
values
(
p_szfvremaid,
p_dtmremain,
p_szvehicleid,
p_szdriverid,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szfadjustmentid,
p_szadjustedbyid,
p_szadjusttoid

);
--set ansi_nulls on,
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvremaitem(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fvremaitem
(
szfvremaid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfvremaid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvremaitem_014(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_fvremaitem
(
szfvremaid,
btitemnumber,
szproductid,
decqty,
decuomqty,
szuomid,
szparentid
)
values
(
p_szfvremaid,
p_btitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvremaitemlotqty(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_fvremaitemlotqty
(
szfvremaid,
btitemnumber,
szlotid,
decqty
)
values
(
p_szfvremaid,
p_btitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_createfvremaitemsn(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_inv_fvremaitemsn
(
szfvremaid,
btitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szfvremaid,
p_btitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_deletefvrema(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fvrema
where
szfvremaid = p_szfvremaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_deletefvremaitem(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fvremaitem
where
szfvremaid = p_szfvremaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_deletefvremaitemlotqty(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fvremaitemlotqty
where
szfvremaid = p_szfvremaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_deletefvremaitemsn(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_fvremaitemsn
where
szfvremaid = p_szfvremaid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_getfvrema(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fvrema.dtmremain,
bos_inv_fvrema.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehicleno,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname as szdrivernm,
bos_inv_fvrema.szdescription,

bos_inv_fvrema.bresultfrtransfer,
bos_inv_fvrema.bvoid,
bos_gen_approved.bapproved,
bos_inv_fvrema.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fvrema.btprintedcount,
bos_inv_fvrema.btransferred,
bos_inv_fvrema.szcompanyid,
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.sztaxentityid,
bos_inv_fvrema.bneedapproval,
bos_inv_fvrema.gdapprovedid,
bos_inv_fvrema.szfadjustmentid,
bos_inv_fvrema.szadjustedbyid,
bos_inv_fvrema.szadjusttoid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fvrema.dtmcreated,
bos_inv_fvrema.bsystemcreated,
bos_inv_fvrema.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fvrema.dtmlastupdated,
bos_inv_fvrema.balreadytransferred

from
bos_inv_fvrema left join bos_gen_approved on bos_inv_fvrema.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fvrema.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fvrema.szdriverid = bos_pi_employee.szemployeeid
left join bos_inv_vehicle on bos_inv_fvrema.szvehicleid = bos_inv_vehicle.szvehicleid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fvrema.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fvrema.szuserid

where
bos_inv_fvrema.szfvremaid = p_szfvremaid;


--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_getfvrema_013(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_fvrema.dtmremain,
bos_inv_fvrema.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehicleno,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname as szdrivernm,
bos_inv_fvrema.szdescription,

bos_inv_fvrema.bresultfrtransfer,
bos_inv_fvrema.bvoid,
bos_gen_approved.bapproved,
bos_inv_fvrema.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_inv_fvrema.btprintedcount,
bos_inv_fvrema.btransferred,
bos_inv_fvrema.szcompanyid,
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.sztaxentityid,
bos_inv_fvrema.bneedapproval,
bos_inv_fvrema.gdapprovedid,
bos_inv_fvrema.szfadjustmentid,
bos_inv_fvrema.szadjustedbyid,
bos_inv_fvrema.szadjusttoid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_inv_fvrema.dtmcreated,
bos_inv_fvrema.bsystemcreated,
bos_inv_fvrema.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_inv_fvrema.dtmlastupdated,
bos_inv_fvrema.balreadytransferred

from
bos_inv_fvrema left join bos_gen_approved on bos_inv_fvrema.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_inv_fvrema.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_inv_fvrema.szdriverid = bos_pi_employee.szemployeeid
left join bos_inv_vehicle on bos_inv_fvrema.szvehicleid = bos_inv_vehicle.szvehicleid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_inv_fvrema.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_inv_fvrema.szuserid

where
bos_inv_fvrema.szfvremaid = p_szfvremaid;


--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_getfvremaitemlotqty(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty


from 
bos_inv_fvremaitemlotqty

where 
szfvremaid = p_szfvremaid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_getfvremaitemsn(
p_szfvremaid bos_dt_szid,
p_btitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
szproductsn

from 
bos_inv_fvremaitemsn
where 
szfvremaid = p_szfvremaid and btitemnumber = p_btitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_getlistoffvrema()
returns void as
$body$
begin
select 
szfvremaid,
dtmremain

from 
bos_inv_fvrema;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_isfvremaexist(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
select 
szfvremaid

from 
bos_inv_fvrema
where 
szfvremaid = p_szfvremaid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_lockfvrema(
p_szfvremaid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fvrema
set 
btransferred = btransferred
where 
szfvremaid = p_szfvremaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_updatefvrema(
p_szfvremaid bos_dt_szid,
p_dtmremain timestamp,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fvrema
set 
dtmremain = p_dtmremain,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szdescription=p_szdescription,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

szfadjustmentid = p_szfadjustmentid,
szadjustedbyid =  p_szadjustedbyid,
szadjusttoid = p_szadjusttoid

where 
szfvremaid = p_szfvremaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_fvrema_updatefvrema_013(
p_szfvremaid bos_dt_szid,
p_dtmremain timestamp,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szfadjustmentid bos_dt_szid,
p_szadjustedbyid bos_dt_szid,
p_szadjusttoid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_fvrema
set 
dtmremain = p_dtmremain,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
szdescription=p_szdescription,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

szfadjustmentid = p_szfadjustmentid,
szadjustedbyid =  p_szadjustedbyid,
szadjusttoid = p_szadjusttoid

where 
szfvremaid = p_szfvremaid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_createlotinfo(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_declotstrength bos_dt_decamount,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_dtmexpired timestamp,
p_szlotstatus varchar,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_lotinfo
(  
szlotid,
szproductid,
declotstrength,
szlottypeid,
szproductioncode,
dtmexpired,
szlotstatus,
dtmlastupdated  
)
values
(
p_szlotid,
p_szproductid,
p_declotstrength,
p_szlottypeid,
p_szproductioncode,
p_dtmexpired,
p_szlotstatus,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_createlotinfo_014(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_declotstrength bos_dt_decamount,
p_szlottypeid bos_dt_szid,
p_szproductioncode varchar,
p_dtmexpired timestamp,
p_szlotstatus varchar,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_lotinfo
(

szlotid,
szproductid,
declotstrength,
szlottypeid,
szproductioncode,
dtmexpired,
szlotstatus,
dtmlastupdated  

)
values
(
p_szlotid,
p_szproductid,
p_declotstrength,
p_szlottypeid,
p_szproductioncode,
p_dtmexpired,
p_szlotstatus,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_deletelotinfo(
p_szlotid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_lotinfo
where
szlotid=p_szlotid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_getlistlotinfobyproduct()
returns void as
$body$
begin
select 
szlotid

from 
bos_inv_lotinfo;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_getlotinfo(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_lotinfo.szlottypeid,
bos_inv_lotinfo.declotstrength,
	bos_inv_lotinfo.dtmexpired,
	bos_inv_lotinfo.szproductioncode,
	bos_inv_lotinfo.szlotstatus,
	coalesce(bos_inv_product.szname,'') as szproductnm,
	bos_inv_lotinfo.dtmlastupdated

from 
bos_inv_lotinfo left join bos_inv_product on 
bos_inv_lotinfo.szproductid=bos_inv_product.szproductid
where 
bos_inv_lotinfo.szlotid = p_szlotid and 
bos_inv_lotinfo.szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_islotinfoexist(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szlotid 

from 
bos_inv_lotinfo 
where 
szlotid = p_szlotid and szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_lotinfo_locklotinfo(
p_szlotid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_lotinfo
set 
szlotstatus= szlotstatus
where 
szlotid=p_szlotid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtype(
p_szorderitemtypeid bos_dt_szid,
p_btaxable bit,
p_bsubjecttoinvoice bit,
p_sztrntype bos_dt_szsmallid,
p_szrentchargecalcid bos_dt_szid,
p_szpaymenttermid bos_dt_szid,
p_szinvoicegroupid bos_dt_szid,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_gdaudittrailid bytea,
p_szreturnorderitemtypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_bmustfilltrnreason bos_dt_bboolean,
p_ballowemptytrnreason bos_dt_bboolean,
p_ballowdifferentsigninqty bos_dt_bboolean,
p_ballowzeroprice bos_dt_bboolean,
p_ballownegativeqty bos_dt_bboolean,
p_ballowpositiveqty bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_orderitemtype
(
szorderitemtypeid,
btaxable,
bsubjecttoinvoice,
sztrntype,
szrentchargecalcid,
szpaymenttermid,
szinvoicegroupid,
bapplicable4allproduct,
bapplicable4alldistrchannel,
bapplicable4allsalesorg,
bapplicable4allworkplace,
bapplicable4allcust,
gdaudittrailid,
szreturnorderitemtypeid,
szpriceid,
szpromopriceid,
bmustfilltrnreason,
ballowemptytrnreason,
ballowdifferentsigninqty,
ballowzeroprice,
ballownegativeqty,
ballowpositiveqty,
dtmlastupdated,
balreadytransferred
)
values
(
p_szorderitemtypeid,
p_btaxable,
p_bsubjecttoinvoice,
p_sztrntype,
p_szrentchargecalcid,
p_szpaymenttermid,
p_szinvoicegroupid,
p_bapplicable4allproduct,
p_bapplicable4alldistrchannel,
p_bapplicable4allsalesorg,
p_bapplicable4allworkplace,
p_bapplicable4allcust,
p_gdaudittrailid,
p_szreturnorderitemtypeid,
p_szpriceid,
p_szpromopriceid,
p_bmustfilltrnreason,
p_ballowemptytrnreason,
p_ballowdifferentsigninqty,
p_ballowzeroprice,
p_ballownegativeqty,
p_ballowpositiveqty,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtype_013(
p_szorderitemtypeid bos_dt_szid,
p_btaxable bit,
p_bsubjecttoinvoice bit,
p_sztrntype bos_dt_szsmallid,
p_szrentchargecalcid bos_dt_szid,
p_szpaymenttermid bos_dt_szid,
p_szinvoicegroupid bos_dt_szid,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_gdaudittrailid bytea,
p_szreturnorderitemtypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_bmustfilltrnreason bos_dt_bboolean,
p_ballowemptytrnreason bos_dt_bboolean,
p_ballowdifferentsigninqty bos_dt_bboolean,
p_ballowzeroprice bos_dt_bboolean,
p_ballownegativeqty bos_dt_bboolean,
p_ballowpositiveqty bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_orderitemtype
(
szorderitemtypeid,
btaxable,
bsubjecttoinvoice,
sztrntype,
szrentchargecalcid,
szpaymenttermid,
szinvoicegroupid,
bapplicable4allproduct,
bapplicable4alldistrchannel,
bapplicable4allsalesorg,
bapplicable4allworkplace,
bapplicable4allcust,
gdaudittrailid,
szreturnorderitemtypeid,
szpriceid,
szpromopriceid,
bmustfilltrnreason,
ballowemptytrnreason,
ballowdifferentsigninqty,
ballowzeroprice,
ballownegativeqty,
ballowpositiveqty,
dtmlastupdated,
balreadytransferred
)
values
(
p_szorderitemtypeid,
p_btaxable,
p_bsubjecttoinvoice,
p_sztrntype,
p_szrentchargecalcid,
p_szpaymenttermid,
p_szinvoicegroupid,
p_bapplicable4allproduct,
p_bapplicable4alldistrchannel,
p_bapplicable4allsalesorg,
p_bapplicable4allworkplace,
p_bapplicable4allcust,
p_gdaudittrailid,
p_szreturnorderitemtypeid,
p_szpriceid,
p_szpromopriceid,
p_bmustfilltrnreason,
p_ballowemptytrnreason,
p_ballowdifferentsigninqty,
p_ballowzeroprice,
p_ballownegativeqty,
p_ballowpositiveqty,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtypecust(
p_szorderitemtypeid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_orderitemtypecust
(
szorderitemtypeid,
szcustid
)
values
(
p_szorderitemtypeid,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtypedistrchannel(
p_szorderitemtypeid bos_dt_szid,
p_btitemnumber smallint,
p_szdistrchannelid varchar)
returns void as
$body$
begin
insert into bos_inv_orderitemtypedistrchannel
(
szorderitemtypeid,
btitemnumber,
szdistrchannelid
)
values
(
p_szorderitemtypeid,
p_btitemnumber,
p_szdistrchannelid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtypeproduct(
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_orderitemtypeproduct
(
szorderitemtypeid,
szproductid
)
values
(
p_szorderitemtypeid,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtypesalesorg(
p_szorderitemtypeid bos_dt_szid,
p_btitemnumber smallint,
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_orderitemtypesalesorg
(
szorderitemtypeid,
btitemnumber,
szsalesorgid
)
values
(
p_szorderitemtypeid,
p_btitemnumber,
p_szsalesorgid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_createorderitemtypeworkplace(
p_szorderitemtypeid bos_dt_szid,
p_btitemnumber smallint,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_orderitemtypeworkplace
(
szorderitemtypeid,
btitemnumber,
szworkplaceid
)
values
(
p_szorderitemtypeid,
p_btitemnumber,
p_szworkplaceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtype(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtype
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtypecust(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtypecust
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtypedistrchannel(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtypedistrchannel
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtypeproduct(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtypeproduct
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtypesalesorg(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtypesalesorg
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_deleteorderitemtypeworkplace(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_orderitemtypeworkplace
where
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getlistoforderitemtype(
p_sztrntype bos_dt_szsmallid)
returns void as
$body$
begin
select 
szorderitemtypeid, sztrntype


from 
bos_inv_orderitemtype

where 
sztrntype like p_sztrntype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtype(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
btaxable,
bsubjecttoinvoice,
sztrntype,
szrentchargecalcid,
bos_inv_orderitemtype.szpaymenttermid,
bos_ar_paymentterm.intmaxpaymentday as intpaymenttermmaxpaymentday_j,
bos_inv_orderitemtype.szinvoicegroupid,
bapplicable4allproduct,
bapplicable4alldistrchannel,
bapplicable4allsalesorg,
bapplicable4allworkplace,
bapplicable4allcust,
gdaudittrailid,
szreturnorderitemtypeid,
szpriceid,
szpromopriceid,
bmustfilltrnreason,
ballowemptytrnreason,
ballowdifferentsigninqty,
ballowzeroprice,
ballownegativeqty,
ballowpositiveqty,

bos_inv_orderitemtype.dtmlastupdated,
bos_inv_orderitemtype.balreadytransferred

from 
bos_inv_orderitemtype
left join bos_ar_paymentterm on 
bos_ar_paymentterm.szpaymenttermid = bos_inv_orderitemtype.szpaymenttermid

where 
szorderitemtypeid=p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypecust(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_orderitemtypecust.szcustid,
coalesce(bos_ar_category.szdescription,'') as szcustnm_j


from 
bos_inv_orderitemtypecust
left join bos_ar_category on bos_ar_category.szcategoryid = bos_inv_orderitemtypecust.szcustid


where 
bos_inv_orderitemtypecust.szorderitemtypeid = p_szorderitemtypeid;
--set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypecust_014(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_orderitemtypecust.szcustid,
coalesce(bos_ar_category.szdescription,'') as szcustnm_j


from 
bos_inv_orderitemtypecust
left join bos_ar_category on bos_ar_category.szcategoryid = bos_inv_orderitemtypecust.szcustid


where 
bos_inv_orderitemtypecust.szorderitemtypeid = p_szorderitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypedistrchannel(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber,
szdistrchannelid

from 
bos_inv_orderitemtypedistrchannel
where 
szorderitemtypeid=p_szorderitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypeproduct(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_orderitemtypeproduct.szproductid,
bos_inv_product.szname as szproductnm_j



from 
bos_inv_orderitemtypeproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_orderitemtypeproduct.szproductid


where 
bos_inv_orderitemtypeproduct.szorderitemtypeid = p_szorderitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypesalesorg(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber,
szsalesorgid

from 
bos_inv_orderitemtypesalesorg
where 
szorderitemtypeid=p_szorderitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_getorderitemtypeworkplace(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber,
szworkplaceid

from 
bos_inv_orderitemtypeworkplace
where 
szorderitemtypeid=p_szorderitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_isorderitemtypeexist(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
szorderitemtypeid

from 
bos_inv_orderitemtype
where 
szorderitemtypeid=p_szorderitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_lockorderitemtype(
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_orderitemtype
set 
btaxable=btaxable
where 
szorderitemtypeid=p_szorderitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_updateorderitemtype(
p_szorderitemtypeid bos_dt_szid,
p_btaxable bit,
p_bsubjecttoinvoice bit,
p_sztrntype bos_dt_szsmallid,
p_szrentchargecalcid bos_dt_szid,
p_szpaymenttermid bos_dt_szid,
p_szinvoicegroupid bos_dt_szid,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnorderitemtypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_bmustfilltrnreason bos_dt_bboolean,
p_ballowemptytrnreason bos_dt_bboolean,
p_ballowdifferentsigninqty bos_dt_bboolean,
p_ballowzeroprice bos_dt_bboolean,
p_ballownegativeqty bos_dt_bboolean,
p_ballowpositiveqty bos_dt_bboolean)
returns void as
$body$
begin
update bos_inv_orderitemtype
set 
btaxable=p_btaxable,
bsubjecttoinvoice=p_bsubjecttoinvoice,
sztrntype=p_sztrntype,
szrentchargecalcid = p_szrentchargecalcid,
szpaymenttermid = p_szpaymenttermid,
szinvoicegroupid = p_szinvoicegroupid,
bapplicable4allproduct=p_bapplicable4allproduct,
bapplicable4alldistrchannel=p_bapplicable4alldistrchannel,
bapplicable4allsalesorg=p_bapplicable4allsalesorg,
bapplicable4allworkplace=p_bapplicable4allworkplace,
bapplicable4allcust=p_bapplicable4allcust,
szreturnorderitemtypeid = p_szreturnorderitemtypeid,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
bmustfilltrnreason = p_bmustfilltrnreason,
ballowemptytrnreason = p_ballowemptytrnreason,
ballowdifferentsigninqty = p_ballowdifferentsigninqty,
ballowzeroprice = p_ballowzeroprice,
ballownegativeqty = p_ballownegativeqty,
ballowpositiveqty = p_ballowpositiveqty
where 
szorderitemtypeid=p_szorderitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_orderitemtype_updateorderitemtype_013(
p_szorderitemtypeid bos_dt_szid,
p_btaxable bit,
p_bsubjecttoinvoice bit,
p_sztrntype bos_dt_szsmallid,
p_szrentchargecalcid bos_dt_szid,
p_szpaymenttermid bos_dt_szid,
p_szinvoicegroupid bos_dt_szid,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnorderitemtypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_bmustfilltrnreason bos_dt_bboolean,
p_ballowemptytrnreason bos_dt_bboolean,
p_ballowdifferentsigninqty bos_dt_bboolean,
p_ballowzeroprice bos_dt_bboolean,
p_ballownegativeqty bos_dt_bboolean,
p_ballowpositiveqty bos_dt_bboolean)
returns void as
$body$
begin
update bos_inv_orderitemtype
set 
btaxable=p_btaxable,
bsubjecttoinvoice=p_bsubjecttoinvoice,
sztrntype=p_sztrntype,
szrentchargecalcid = p_szrentchargecalcid,
szpaymenttermid = p_szpaymenttermid,
szinvoicegroupid = p_szinvoicegroupid,
bapplicable4allproduct=p_bapplicable4allproduct,
bapplicable4alldistrchannel=p_bapplicable4alldistrchannel,
bapplicable4allsalesorg=p_bapplicable4allsalesorg,
bapplicable4allworkplace=p_bapplicable4allworkplace,
bapplicable4allcust=p_bapplicable4allcust,
szreturnorderitemtypeid = p_szreturnorderitemtypeid,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
bmustfilltrnreason = p_bmustfilltrnreason,
ballowemptytrnreason = p_ballowemptytrnreason,
ballowdifferentsigninqty = p_ballowdifferentsigninqty,
ballowzeroprice = p_ballowzeroprice,
ballownegativeqty = p_ballownegativeqty,
ballowpositiveqty = p_ballowpositiveqty
where 
szorderitemtypeid=p_szorderitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertype(
p_szordertypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_ballowmanualprice bit,
p_ballowtochangelinepricedate bos_dt_bboolean,
p_szapprovalid bos_dt_szid,
p_szflexikeyid bos_dt_szid,
p_bapplicable4allorderitemtype bit,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnordertypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_ordertype
(
szordertypeid ,
szdescription ,
ballowmanualprice ,
ballowtochangelinepricedate,
szapprovalid ,
szflexikeyid ,
bapplicable4allorderitemtype ,
bapplicable4allproduct ,
bapplicable4alldistrchannel ,
bapplicable4allsalesorg ,
bapplicable4allworkplace ,
bapplicable4allcust,
szreturnordertypeid,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szordertypeid ,
p_szdescription ,
p_ballowmanualprice ,
p_ballowtochangelinepricedate,
p_szapprovalid ,
p_szflexikeyid ,
p_bapplicable4allorderitemtype ,
p_bapplicable4allproduct ,
p_bapplicable4alldistrchannel ,
p_bapplicable4allsalesorg ,
p_bapplicable4allworkplace ,
p_bapplicable4allcust,
p_szreturnordertypeid,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertype_013(
p_szordertypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_ballowmanualprice bit,
p_ballowtochangelinepricedate bos_dt_bboolean,
p_szapprovalid bos_dt_szid,
p_szflexikeyid bos_dt_szid,
p_bapplicable4allorderitemtype bit,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnordertypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_ordertype
(
szordertypeid ,
szdescription ,
ballowmanualprice ,
ballowtochangelinepricedate,
szapprovalid ,
szflexikeyid ,
bapplicable4allorderitemtype ,
bapplicable4allproduct ,
bapplicable4alldistrchannel ,
bapplicable4allsalesorg ,
bapplicable4allworkplace ,
bapplicable4allcust,
szreturnordertypeid,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szordertypeid ,
p_szdescription ,
p_ballowmanualprice ,
p_ballowtochangelinepricedate,
p_szapprovalid ,
p_szflexikeyid ,
p_bapplicable4allorderitemtype ,
p_bapplicable4allproduct ,
p_bapplicable4alldistrchannel ,
p_bapplicable4allsalesorg ,
p_bapplicable4allworkplace ,
p_bapplicable4allcust,
p_szreturnordertypeid,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypecust(
p_szordertypeid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_ordertypecust
(
szordertypeid ,
szcustid
)
values
(
p_szordertypeid ,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypedistrchannel(
p_szordertypeid bos_dt_szid,
p_btitemnumber smallint,
p_szdistrchannelid varchar)
returns void as
$body$
begin
insert into bos_inv_ordertypedistrchannel
(
szordertypeid ,
btitemnumber ,
szdistrchannelid
)
values
(
p_szordertypeid ,
p_btitemnumber ,
p_szdistrchannelid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypeorderitemtype(
p_szordertypeid bos_dt_szid,
p_btitemnumber smallint,
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_ordertypeorderitemtype
(
szordertypeid ,
btitemnumber ,
szorderitemtypeid
)
values
(
p_szordertypeid ,
p_btitemnumber ,
p_szorderitemtypeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypeproduct(
p_szordertypeid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_ordertypeproduct
(
szordertypeid ,
szproductid
)
values
(
p_szordertypeid ,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypesalesorg(
p_szordertypeid bos_dt_szid,
p_btitemnumber smallint,
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_ordertypesalesorg
(
szordertypeid ,
btitemnumber ,
szsalesorgid
)
values
(
p_szordertypeid ,
p_btitemnumber ,
p_szsalesorgid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_createordertypeworkplace(
p_szordertypeid bos_dt_szid,
p_btitemnumber smallint,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_ordertypeworkplace
(
szordertypeid ,
btitemnumber ,
szworkplaceid
)
values
(
p_szordertypeid ,
p_btitemnumber ,
p_szworkplaceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertype(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertype
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypecust(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypecust
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypedistrchannel(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypedistrchannel
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypeorderitemtype(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypeorderitemtype
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypeproduct(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypeproduct
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypesalesorg(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypesalesorg
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_deleteordertypeworkplace(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_ordertypeworkplace
where
szordertypeid=p_szordertypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_dev_deleteall()
returns void as
$body$
begin
delete from
bos_inv_ordertypecust;
delete from
bos_inv_ordertypedistrchannel;
delete from
bos_inv_ordertypeorderitemtype;
delete from
bos_inv_ordertypeproduct;
delete from
bos_inv_ordertypesalesorg;
delete from
bos_inv_ordertypeworkplace;
delete from
bos_inv_ordertype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getlistofordertype()
returns void as
$body$
begin
select 
szordertypeid,
szdescription

from 
bos_inv_ordertype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertype(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_ordertype.szdescription,

bos_inv_ordertype.ballowmanualprice,
bos_inv_ordertype.ballowtochangelinepricedate,

bos_inv_ordertype.szapprovalid,
bos_inv_ordertype.szflexikeyid,
bos_inv_ordertype.bapplicable4allorderitemtype,
bos_inv_ordertype.bapplicable4allproduct,
bos_inv_ordertype.bapplicable4alldistrchannel,
bos_inv_ordertype.bapplicable4allsalesorg,
bos_inv_ordertype.bapplicable4allworkplace,
bos_inv_ordertype.bapplicable4allcust,

bos_inv_ordertype.szreturnordertypeid,
rot.ballowmanualprice as breturnordertypeallowmanualprice_j,

bos_inv_ordertype.szpriceid,
bos_inv_ordertype.szpriceorderid,
bos_inv_ordertype.szpromopriceid,
bos_inv_ordertype.szpromopriceorderid,

bos_inv_ordertype.dtmlastupdated,
bos_inv_ordertype.balreadytransferred


from 
bos_inv_ordertype
left join bos_inv_ordertype as rot on rot.szordertypeid = bos_inv_ordertype.szreturnordertypeid


where 
bos_inv_ordertype.szordertypeid = p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypecust(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_ordertypecust.szcustid,
coalesce(bos_ar_category.szdescription,'') as szcustnm_j


from 
bos_inv_ordertypecust
left join bos_ar_category on bos_ar_category.szcategoryid = bos_inv_ordertypecust.szcustid


where 
bos_inv_ordertypecust.szordertypeid = p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypecust_014(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_ordertypecust.szcustid,
coalesce(bos_ar_category.szdescription,'') as szcustnm_j


from 
bos_inv_ordertypecust
left join bos_ar_category on bos_ar_category.szcategoryid = bos_inv_ordertypecust.szcustid


where 
bos_inv_ordertypecust.szordertypeid = p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypedistrchannel(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber ,
szdistrchannelid

from 
bos_inv_ordertypedistrchannel
where 
szordertypeid=p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypeorderitemtype(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber ,
szorderitemtypeid

from 
bos_inv_ordertypeorderitemtype
where 
szordertypeid=p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypeproduct(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_ordertypeproduct.szproductid,
bos_inv_product.szname as szproductnm_j


from 
bos_inv_ordertypeproduct
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_ordertypeproduct.szproductid


where 
bos_inv_ordertypeproduct.szordertypeid = p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypesalesorg(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber ,
szsalesorgid

from 
bos_inv_ordertypesalesorg
where 
szordertypeid=p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_getordertypeworkplace(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
btitemnumber ,
szworkplaceid

from 
bos_inv_ordertypeworkplace
where 
szordertypeid=p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_isordertypeexist(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
select 
szordertypeid

from 
bos_inv_ordertype
where 
szordertypeid=p_szordertypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_lockordertype(
p_szordertypeid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_ordertype
set 
szdescription = szdescription
where 
szordertypeid=p_szordertypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_updateordertype(
p_szordertypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_ballowmanualprice bit,
p_ballowtochangelinepricedate bos_dt_bboolean,
p_szapprovalid bos_dt_szid,
p_szflexikeyid bos_dt_szid,
p_bapplicable4allorderitemtype bit,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnordertypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_ordertype
set 
szdescription = p_szdescription ,

ballowmanualprice = p_ballowmanualprice ,
ballowtochangelinepricedate = p_ballowtochangelinepricedate,

szapprovalid = p_szapprovalid ,
szflexikeyid = p_szflexikeyid ,
bapplicable4allorderitemtype = p_bapplicable4allorderitemtype ,
bapplicable4allproduct = p_bapplicable4allproduct ,
bapplicable4alldistrchannel = p_bapplicable4alldistrchannel ,
bapplicable4allsalesorg = p_bapplicable4allsalesorg ,
bapplicable4allworkplace = p_bapplicable4allworkplace ,
bapplicable4allcust = p_bapplicable4allcust,
szreturnordertypeid = p_szreturnordertypeid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid

where 
szordertypeid = p_szordertypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_ordertype_updateordertype_013(
p_szordertypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_ballowmanualprice bit,
p_ballowtochangelinepricedate bos_dt_bboolean,
p_szapprovalid bos_dt_szid,
p_szflexikeyid bos_dt_szid,
p_bapplicable4allorderitemtype bit,
p_bapplicable4allproduct bit,
p_bapplicable4alldistrchannel bit,
p_bapplicable4allsalesorg bit,
p_bapplicable4allworkplace bit,
p_bapplicable4allcust bit,
p_szreturnordertypeid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_ordertype
set 
szdescription = p_szdescription ,

ballowmanualprice = p_ballowmanualprice ,
ballowtochangelinepricedate = p_ballowtochangelinepricedate,

szapprovalid = p_szapprovalid ,
szflexikeyid = p_szflexikeyid ,
bapplicable4allorderitemtype = p_bapplicable4allorderitemtype ,
bapplicable4allproduct = p_bapplicable4allproduct ,
bapplicable4alldistrchannel = p_bapplicable4alldistrchannel ,
bapplicable4allsalesorg = p_bapplicable4allsalesorg ,
bapplicable4allworkplace = p_bapplicable4allworkplace ,
bapplicable4allcust = p_bapplicable4allcust,
szreturnordertypeid = p_szreturnordertypeid,
szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
szpromopriceid = p_szpromopriceid,
szpromopriceorderid = p_szpromopriceorderid

where 
szordertypeid = p_szordertypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createprice(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_price
(
szownertrnid,
szpriceid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,
szproductcat_1,
szproductcat_2,
szproductcat_3,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_dtmvalidstart,
p_bisspecificenddate,
p_dtmvalidend,
p_sznextownertrnid,
p_sznextpriceid,
p_szproductcat_1,
p_szproductcat_2,
p_szproductcat_3,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createprice_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_price
(
szownertrnid,
szpriceid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,
szproductcat_1,
szproductcat_2,
szproductcat_3,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_dtmvalidstart,
p_bisspecificenddate,
p_dtmvalidend,
p_sznextownertrnid,
p_sznextpriceid,
p_szproductcat_1,
p_szproductcat_2,
p_szproductcat_3,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szuomid bos_dt_szmediumid,
p_bbaseonamount bos_dt_bboolean,
p_bunitbaseonamount bos_dt_bboolean,
p_buseforpricecalculation bit,
p_busepricewtax bit,
p_bhasdiscountbonus bit,
p_bhasproductbonus bit,
p_dtmitemvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmitemvalidend timestamp,
p_bprogressive bit)
returns void as
$body$
begin
insert into bos_inv_priceitem
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
szccyid,
szuomid,
bbaseonamount,
bunitbaseonamount,
buseforpricecalculation,
busepricewtax,
bhasdiscountbonus,
bhasproductbonus,
dtmitemvalidstart,
bisspecificenddate,
dtmitemvalidend,
bprogressive
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_szccyid,
p_szuomid,
p_bbaseonamount,
p_bunitbaseonamount,
p_buseforpricecalculation,
p_busepricewtax,
p_bhasdiscountbonus,
p_bhasproductbonus,
p_dtmitemvalidstart,
p_bisspecificenddate,
p_dtmitemvalidend,
p_bprogressive
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_szuomid bos_dt_szmediumid,
p_bbaseonamount bos_dt_bboolean,
p_bunitbaseonamount bos_dt_bboolean,
p_buseforpricecalculation bit,
p_busepricewtax bit,
p_bhasdiscountbonus bit,
p_bhasproductbonus bit,
p_dtmitemvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmitemvalidend timestamp,
p_bprogressive bit)
returns void as
$body$
begin
insert into bos_inv_priceitem
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
szccyid,
szuomid,
bbaseonamount,
bunitbaseonamount,
buseforpricecalculation,
busepricewtax,
bhasdiscountbonus,
bhasproductbonus,
dtmitemvalidstart,
bisspecificenddate,
dtmitemvalidend,
bprogressive
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_szccyid,
p_szuomid,
p_bbaseonamount,
p_bunitbaseonamount,
p_buseforpricecalculation,
p_busepricewtax,
p_bhasdiscountbonus,
p_bhasproductbonus,
p_dtmitemvalidstart,
p_bisspecificenddate,
p_dtmitemvalidend,
p_bprogressive
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_decinitialqty bos_dt_decqty,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtype bos_dt_szid,
p_bseparatediscitem bit,
p_bcalcfrprevdiscamt bit,
p_szprincipaldiscrefid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemdiscbonus
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtype,
bseparatediscitem,
bcalcfrprevdiscamt,
szprincipaldiscrefid,
dtmitemvalidstart,
decinitialqty
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decunitqty,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtype,
p_bseparatediscitem,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid,
p_dtmitemvalidstart,
p_decinitialqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_decinitialqty bos_dt_decqty,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtype bos_dt_szid,
p_bseparatediscitem bit,
p_bcalcfrprevdiscamt bit,
p_szprincipaldiscrefid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemdiscbonus
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtype,
bseparatediscitem,
bcalcfrprevdiscamt,
szprincipaldiscrefid,
dtmitemvalidstart,
decinitialqty
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decunitqty,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtype,
p_bseparatediscitem,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid,
p_dtmitemvalidstart,
p_decinitialqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitempricing(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_decprice bos_dt_decprice,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitempricing
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decprice,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decprice,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitempricing_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_decprice bos_dt_decprice,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitempricing
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decprice,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decprice,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemproductbonus
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decunitqty,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decunitqty,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemproductbonus
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
decunitqty,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_decunitqty,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemproductbonusitem
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_createpriceitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
insert into bos_inv_priceitemproductbonusitem
(
szownertrnid,
szpriceid,
gdhistory,
szproductid,
decminqty,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid,
dtmitemvalidstart
)
values
(
p_szownertrnid,
p_szpriceid,
p_gdhistory,
p_szproductid,
p_decminqty,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid,
p_dtmitemvalidstart
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deleteprice(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_price
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deleteprice_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_price
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitem
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitem
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemdiscbonus
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemdiscbonus
where
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemdiscbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemdiscbonus
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemdiscbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemdiscbonus
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitempricing(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitempricing
where
szownertrnid = p_szownertrnid and 
szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitempricing_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitempricing
where
szownertrnid = p_szownertrnid and szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitempricingwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitempricing
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitempricingwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitempricing
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonus
where
szownertrnid = p_szownertrnid and szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonus
where
szownertrnid = p_szownertrnid and szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonusitem
where
szownertrnid = p_szownertrnid and 
szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceid=p_szpriceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonusitemwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonusitem
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
p_gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonusitemwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonusitem
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
p_gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonus
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemproductbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitemproductbonus
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitem
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_deletepriceitemwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceitem
where
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getlistofprice(
p_szstatus bos_dt_szsmallid,
p_szusagetype bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceid,
szdescription


from 
bos_inv_price

where 
szownertrnid = '' and szstatus = p_szstatus and szusagetype like p_szusagetype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_priceitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_priceitem.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,

bos_inv_priceitem.szuomid,

bos_inv_priceitem.bbaseonamount,
bos_inv_priceitem.bunitbaseonamount,

bos_inv_priceitem.buseforpricecalculation,
bos_inv_priceitem.busepricewtax,
bos_inv_priceitem.bhasdiscountbonus,
bos_inv_priceitem.bhasproductbonus,

--new
bos_inv_priceitem.dtmitemvalidstart,
bos_inv_priceitem.bisspecificenddate,
bos_inv_priceitem.dtmitemvalidend,

bos_inv_priceitem.bprogressive

from
bos_inv_priceitem
left join bos_inv_product on bos_inv_priceitem.szproductid = bos_inv_product.szproductid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceitem.szccyid

where
szownertrnid = p_szownertrnid and
bos_inv_priceitem.szpriceid = p_szpriceid and
bos_inv_priceitem.gdhistory = p_gdhistory
and 
(
bos_inv_priceitem.szproductid like p_szproductid 
or 
--of course, item for all products must always be retrieved.
bos_inv_priceitem.szproductid = ''
)

order by
bos_inv_priceitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_priceitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_priceitem.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,

bos_inv_priceitem.szuomid,

bos_inv_priceitem.bbaseonamount,
bos_inv_priceitem.bunitbaseonamount,

bos_inv_priceitem.buseforpricecalculation,
bos_inv_priceitem.busepricewtax,
bos_inv_priceitem.bhasdiscountbonus,
bos_inv_priceitem.bhasproductbonus,

--new
bos_inv_priceitem.dtmitemvalidstart,
bos_inv_priceitem.bisspecificenddate,
bos_inv_priceitem.dtmitemvalidend,

bos_inv_priceitem.bprogressive

from
bos_inv_priceitem
left join bos_inv_product on bos_inv_priceitem.szproductid = bos_inv_product.szproductid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceitem.szccyid

where
szownertrnid = p_szownertrnid and
bos_inv_priceitem.szpriceid = p_szpriceid and
bos_inv_priceitem.gdhistory = p_gdhistory
and 
(
bos_inv_priceitem.szproductid like p_szproductid 
or 
--of course, item for all products must always be retrieved.
bos_inv_priceitem.szproductid = ''
)

order by
bos_inv_priceitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decunitqty,
decinitialqty,
decbonusdisc,
szdisctype,
szorderitemtype,
bseparatediscitem,
bcalcfrprevdiscamt,
bos_inv_priceitemdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceitemdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceitemdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and 
szpriceid = p_szpriceid and 
gdhistory = p_gdhistory and 
szproductid = p_szproductid and 
dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decunitqty,
decinitialqty,
decbonusdisc,
szdisctype,
szorderitemtype,
bseparatediscitem,
bcalcfrprevdiscamt,
bos_inv_priceitemdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceitemdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceitemdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory and szproductid = p_szproductid and dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitempricing(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decprice


from 
bos_inv_priceitempricing

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory and szproductid = p_szproductid and dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitempricing_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decprice


from 
bos_inv_priceitempricing

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory and szproductid = p_szproductid and dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decunitqty


from 
bos_inv_priceitemproductbonus

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory and szproductid = p_szproductid and dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin
select 
decminqty,
decunitqty


from 
bos_inv_priceitemproductbonus

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory and szproductid = p_szproductid and dtmitemvalidstart = p_dtmitemvalidstart 
order by 
decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin

select
bos_inv_priceitemproductbonusitem.szbonusproductid,

bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceitemproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceitemproductbonusitem.decbonusqty,
bos_inv_priceitemproductbonusitem.szuomid,
bos_inv_priceitemproductbonusitem.szbonustype,
bos_inv_priceitemproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceitemproductbonusitem 
left join bos_inv_product on bos_inv_priceitemproductbonusitem.szbonusproductid = bos_inv_product.szproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceitemproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceitemproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
bos_inv_priceitemproductbonusitem.szpriceid = p_szpriceid and
bos_inv_priceitemproductbonusitem.gdhistory = p_gdhistory and
bos_inv_priceitemproductbonusitem.szproductid = p_szproductid and
bos_inv_priceitemproductbonusitem.decminqty = p_decminqty and
bos_inv_priceitemproductbonusitem.dtmitemvalidstart = p_dtmitemvalidstart;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpriceitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szproductid bos_dt_szid,
p_decminqty bos_dt_decamount,
p_dtmitemvalidstart timestamp)
returns void as
$body$
begin

select
bos_inv_priceitemproductbonusitem.szbonusproductid,

bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceitemproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceitemproductbonusitem.decbonusqty,
bos_inv_priceitemproductbonusitem.szuomid,
bos_inv_priceitemproductbonusitem.szbonustype,
bos_inv_priceitemproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceitemproductbonusitem 
left join bos_inv_product on bos_inv_priceitemproductbonusitem.szbonusproductid = bos_inv_product.szproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceitemproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceitemproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
bos_inv_priceitemproductbonusitem.szpriceid = p_szpriceid and
bos_inv_priceitemproductbonusitem.gdhistory = p_gdhistory and
bos_inv_priceitemproductbonusitem.szproductid = p_szproductid and
bos_inv_priceitemproductbonusitem.decminqty = p_decminqty and
bos_inv_priceitemproductbonusitem.dtmitemvalidstart = p_dtmitemvalidstart;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpricewhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpricewhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpricewherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_getpricewherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
dtmvalidstart,
bisspecificenddate,
dtmvalidend,
sznextownertrnid,
sznextpriceid,

szproductcat_1,
szproductcat_2,
szproductcat_3,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
dtmlastupdated,
balreadytransferred


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_ispriceexistwhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceid


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_ispriceexistwhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceid


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_ispriceexistwherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceid


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_ispriceexistwherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceid


from 
bos_inv_price

where 
szownertrnid = p_szownertrnid and szpriceid = p_szpriceid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_lockpricewhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
update bos_inv_price
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_lockpricewhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
update bos_inv_price
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_lockpricewherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_inv_price
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	szstatus = p_szstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_lockpricewherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_inv_price
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	szstatus = p_szstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_updateprice(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid)
returns void as
$body$
begin
update bos_inv_price
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
dtmvalidstart = p_dtmvalidstart,
bisspecificenddate = p_bisspecificenddate,
dtmvalidend = p_dtmvalidend,
sznextownertrnid = p_sznextownertrnid,
sznextpriceid = p_sznextpriceid,

szproductcat_1 = p_szproductcat_1,
szproductcat_2 = p_szproductcat_2,
szproductcat_3 = p_szproductcat_3,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_updateprice_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmvalidstart timestamp,
p_bisspecificenddate bit,
p_dtmvalidend timestamp,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceid bos_dt_szid,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szid,
p_szdiscgroupid_2 bos_dt_szid,
p_szdiscgroupid_3 bos_dt_szid)
returns void as
$body$
begin
update bos_inv_price
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
dtmvalidstart = p_dtmvalidstart,
bisspecificenddate = p_bisspecificenddate,
dtmvalidend = p_dtmvalidend,
sznextownertrnid = p_sznextownertrnid,
sznextpriceid = p_sznextpriceid,

szproductcat_1 = p_szproductcat_1,
szproductcat_2 = p_szproductcat_2,
szproductcat_3 = p_szproductcat_3,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_updatepricestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szstatus varchar)
returns void as
$body$
begin
update bos_inv_price
set 
szstatus = p_szstatus

where 
szownertrnid = p_szownertrnid and
	szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_price_updatepricestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceid bos_dt_szid,
p_gdhistory bytea,
p_szstatus varchar)
returns void as
$body$
begin
update bos_inv_price
set 
szstatus = p_szstatus

where 
szownertrnid = p_szownertrnid and
szpriceid = p_szpriceid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorder(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_priceorder
(
szownertrnid,
szpriceorderid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
szccyid,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,
bmindiscbaseonamount,
bunitdiscbaseonamount,
bminbonusbaseonamount,
bunitbonusbaseonamount,
szuomid,
sznextownertrnid,
sznextpriceorderid,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_bisspecificenddate,
p_dtmvalidstart,
p_dtmvalidend,
p_szccyid,
p_bhascombinationbonus,
p_bonlycalculatefrcombination,
p_bhasamountdiscbonus,
p_bhasamountproductbonus,
p_bhasprovisionbonus,
p_bmindiscbaseonamount,
p_bunitdiscbaseonamount,
p_bminbonusbaseonamount,
p_bunitbonusbaseonamount,
p_szuomid,
p_sznextownertrnid,
p_sznextpriceorderid,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorder_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_priceorder
(
szownertrnid,
szpriceorderid,
gdhistory,
szusagetype,
szstatus,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
szccyid,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,
bmindiscbaseonamount,
bunitdiscbaseonamount,
bminbonusbaseonamount,
bunitbonusbaseonamount,
szuomid,
sznextownertrnid,
sznextpriceorderid,
szpricecombcd,
shpricecomborder,
szqualifierid,
szqualifierid_2,
szqualifierid_3,
szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szusagetype,
p_szstatus,
p_szworkplaceid,
p_szsalesorgid_1,
p_szsalesorgid_2,
p_szdescription,
p_bisspecificenddate,
p_dtmvalidstart,
p_dtmvalidend,
p_szccyid,
p_bhascombinationbonus,
p_bonlycalculatefrcombination,
p_bhasamountdiscbonus,
p_bhasamountproductbonus,
p_bhasprovisionbonus,
p_bmindiscbaseonamount,
p_bunitdiscbaseonamount,
p_bminbonusbaseonamount,
p_bunitbonusbaseonamount,
p_szuomid,
p_sznextownertrnid,
p_sznextpriceorderid,
p_szpricecombcd,
p_shpricecomborder,
p_szqualifierid,
p_szqualifierid_2,
p_szqualifierid_3,
p_szdiscgroupid,
p_szdiscgroupid_2,
p_szdiscgroupid_3,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_decunitamount bos_dt_decamount,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderamountdiscbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
decunitamount,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_decunitamount,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_decunitamount bos_dt_decamount,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderamountdiscbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
decunitamount,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_decunitamount,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_decunitamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_priceorderamountproductbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
decunitamount
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_decunitamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_decunitamount bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_priceorderamountproductbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
decunitamount
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_decunitamount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderamountproductbonusitem
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderamountproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderamountproductbonusitem
(
szownertrnid,
szpriceorderid,
gdhistory,
decminamount,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_decminamount,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decqty_1 bos_dt_decamount,
p_decqty_2 bos_dt_decamount,
p_decqty_3 bos_dt_decamount,
p_decqty_4 bos_dt_decamount,
p_decqty_5 bos_dt_decamount,
p_bhasdiscountbonus bit,
p_bhasproductbonus bit,
p_szuomid_1 bos_dt_szmediumid,
p_szuomid_2 bos_dt_szmediumid,
p_szuomid_3 bos_dt_szmediumid,
p_szuomid_4 bos_dt_szmediumid,
p_szuomid_5 bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_inv_priceorderitem
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decqty_1,
decqty_2,
decqty_3,
decqty_4,
decqty_5,
bhasdiscountbonus,
bhasproductbonus,
szuomid_1,
szuomid_2,
szuomid_3,
szuomid_4,
szuomid_5
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decqty_1,
p_decqty_2,
p_decqty_3,
p_decqty_4,
p_decqty_5,
p_bhasdiscountbonus,
p_bhasproductbonus,
p_szuomid_1,
p_szuomid_2,
p_szuomid_3,
p_szuomid_4,
p_szuomid_5
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decqty_1 bos_dt_decamount,
p_decqty_2 bos_dt_decamount,
p_decqty_3 bos_dt_decamount,
p_decqty_4 bos_dt_decamount,
p_decqty_5 bos_dt_decamount,
p_bhasdiscountbonus bit,
p_bhasproductbonus bit,
p_szuomid_1 bos_dt_szmediumid,
p_szuomid_2 bos_dt_szmediumid,
p_szuomid_3 bos_dt_szmediumid,
p_szuomid_4 bos_dt_szmediumid,
p_szuomid_5 bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_inv_priceorderitem
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decqty_1,
decqty_2,
decqty_3,
decqty_4,
decqty_5,
bhasdiscountbonus,
bhasproductbonus,
szuomid_1,
szuomid_2,
szuomid_3,
szuomid_4,
szuomid_5
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decqty_1,
p_decqty_2,
p_decqty_3,
p_decqty_4,
p_decqty_5,
p_bhasdiscountbonus,
p_bhasproductbonus,
p_szuomid_1,
p_szuomid_2,
p_szuomid_3,
p_szuomid_4,
p_szuomid_5
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderitemdiscbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_decunitqty,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty,
p_decbonusdisc bos_dt_decprice,
p_szdisctype bos_dt_szsmallid,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderitemdiscbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_decunitqty,
p_decbonusdisc,
p_szdisctype,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty)
returns void as
$body$
begin
insert into bos_inv_priceorderitemproductbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
decunitqty
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_decunitqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decqty,
p_decunitqty bos_dt_decqty)
returns void as
$body$
begin
insert into bos_inv_priceorderitemproductbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
decunitqty
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_decunitqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderitemproductbonusitem
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_createpriceorderitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decamount,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szbonustype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderitemproductbonusitem
(
szownertrnid,
szpriceorderid,
gdhistory,
szproductid_1,
szproductid_2,
szproductid_3,
szproductid_4,
szproductid_5,
decminqty,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_szproductid_1,
p_szproductid_2,
p_szproductid_3,
p_szproductid_4,
p_szproductid_5,
p_decminqty,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorder(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorder
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorder_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorder
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountdiscbonus
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountdiscbonus
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountdiscbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountdiscbonus
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountdiscbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountdiscbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorderamountproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorderamountproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonusitemwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete
from  bos_inv_priceorderamountproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonusitemwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderamountproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderamountproductbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete from
bos_inv_priceorderamountproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemdiscbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemdiscbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemdiscbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete
from  bos_inv_priceorderitemdiscbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemdiscbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete
from  bos_inv_priceorderitemdiscbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorderitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorderitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_inv_priceorderitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonusitemwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonusitemwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonuswheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemproductbonuswheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemwheregdhistory(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_deletepriceorderitemwheregdhistory_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getlistofpriceorder(
p_szstatus bos_dt_szsmallid,
p_szusagetype bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid,
szdescription


from 
bos_inv_priceorder

where 
szownertrnid = '' and szstatus = p_szstatus and szusagetype like p_szusagetype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
decminamount,
decunitamount,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
bos_inv_priceorderamountdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceorderamountdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderamountdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
decminamount,
decunitamount,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
bos_inv_priceorderamountdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceorderamountdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderamountdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
decminamount,
decunitamount


from 
bos_inv_priceorderamountproductbonus
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
decminamount,
decunitamount


from 
bos_inv_priceorderamountproductbonus
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount)
returns void as
$body$
begin

select
bos_inv_priceorderamountproductbonusitem.szpriceorderid,
bos_inv_priceorderamountproductbonusitem.decminamount,

bos_inv_priceorderamountproductbonusitem.szbonusproductid,

bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceorderamountproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceorderamountproductbonusitem.decbonusqty,
bos_inv_priceorderamountproductbonusitem.szuomid,
bos_inv_priceorderamountproductbonusitem.szbonustype,
bos_inv_priceorderamountproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceorderamountproductbonusitem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_priceorderamountproductbonusitem.szbonusproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceorderamountproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderamountproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory and
decminamount = p_decminamount;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderamountproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_decminamount bos_dt_decamount)
returns void as
$body$
begin

select
bos_inv_priceorderamountproductbonusitem.szpriceorderid,
bos_inv_priceorderamountproductbonusitem.decminamount,

bos_inv_priceorderamountproductbonusitem.szbonusproductid,

bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceorderamountproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceorderamountproductbonusitem.decbonusqty,
bos_inv_priceorderamountproductbonusitem.szuomid,
bos_inv_priceorderamountproductbonusitem.szbonustype,
bos_inv_priceorderamountproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceorderamountproductbonusitem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_priceorderamountproductbonusitem.szbonusproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceorderamountproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderamountproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory and
decminamount = p_decminamount;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select
bos_inv_priceorderitem.szpriceorderid,

bos_inv_priceorderitem.szproductid_1,
p1.szname as szproductnm_1,
p1.szqtyformat as szproductqtyformat_1,
p1.szuomclassid as szproductuomclassid_1_j,
p1.szuomid as szproductuomid_1,
bos_inv_priceorderitem.decqty_1,

bos_inv_priceorderitem.szproductid_2,
p2.szname as szproductnm_2,
p2.szqtyformat as szproductqtyformat_2,
p2.szuomclassid as szproductuomclassid_2_j,
p2.szuomid as szproductuomid_2,
bos_inv_priceorderitem.decqty_2,

bos_inv_priceorderitem.szproductid_3,
p3.szname as szproductnm_3,
p3.szqtyformat as szproductqtyformat_3,
p3.szuomclassid as szproductuomclassid_3_j,
p3.szuomid as szproductuomid_3,
bos_inv_priceorderitem.decqty_3,

bos_inv_priceorderitem.szproductid_4,
p4.szname as szproductnm_4,
p4.szqtyformat as szproductqtyformat_4,
p4.szuomclassid as szproductuomclassid_4_j,
p4.szuomid as szproductuomid_4,
bos_inv_priceorderitem.decqty_4,

bos_inv_priceorderitem.szproductid_5,
p5.szname as szproductnm_5,
p5.szqtyformat as szproductqtyformat_5,
p5.szuomclassid as szproductuomclassid_5_j,
p5.szuomid as szproductuomid_5,
bos_inv_priceorderitem.decqty_5,

bos_inv_priceorderitem.bhasdiscountbonus,
bos_inv_priceorderitem.bhasproductbonus,

bos_inv_priceorderitem.szuomid_1,
bos_inv_priceorderitem.szuomid_2,
bos_inv_priceorderitem.szuomid_3,
bos_inv_priceorderitem.szuomid_4,
bos_inv_priceorderitem.szuomid_5

from bos_inv_priceorderitem
left join bos_inv_product as p1 on bos_inv_priceorderitem.szproductid_1 = p1.szproductid
left join bos_inv_product as p2 on bos_inv_priceorderitem.szproductid_2 = p2.szproductid
left join bos_inv_product as p3 on bos_inv_priceorderitem.szproductid_3 = p3.szproductid
left join bos_inv_product as p4 on bos_inv_priceorderitem.szproductid_4 = p4.szproductid
left join bos_inv_product as p5 on bos_inv_priceorderitem.szproductid_5 = p5.szproductid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select
bos_inv_priceorderitem.szpriceorderid,

bos_inv_priceorderitem.szproductid_1,
p1.szname as szproductnm_1,
p1.szqtyformat as szproductqtyformat_1,
p1.szuomclassid as szproductuomclassid_1_j,
p1.szuomid as szproductuomid_1,
bos_inv_priceorderitem.decqty_1,

bos_inv_priceorderitem.szproductid_2,
p2.szname as szproductnm_2,
p2.szqtyformat as szproductqtyformat_2,
p2.szuomclassid as szproductuomclassid_2_j,
p2.szuomid as szproductuomid_2,
bos_inv_priceorderitem.decqty_2,

bos_inv_priceorderitem.szproductid_3,
p3.szname as szproductnm_3,
p3.szqtyformat as szproductqtyformat_3,
p3.szuomclassid as szproductuomclassid_3_j,
p3.szuomid as szproductuomid_3,
bos_inv_priceorderitem.decqty_3,

bos_inv_priceorderitem.szproductid_4,
p4.szname as szproductnm_4,
p4.szqtyformat as szproductqtyformat_4,
p4.szuomclassid as szproductuomclassid_4_j,
p4.szuomid as szproductuomid_4,
bos_inv_priceorderitem.decqty_4,

bos_inv_priceorderitem.szproductid_5,
p5.szname as szproductnm_5,
p5.szqtyformat as szproductqtyformat_5,
p5.szuomclassid as szproductuomclassid_5_j,
p5.szuomid as szproductuomid_5,
bos_inv_priceorderitem.decqty_5,

bos_inv_priceorderitem.bhasdiscountbonus,
bos_inv_priceorderitem.bhasproductbonus,

bos_inv_priceorderitem.szuomid_1,
bos_inv_priceorderitem.szuomid_2,
bos_inv_priceorderitem.szuomid_3,
bos_inv_priceorderitem.szuomid_4,
bos_inv_priceorderitem.szuomid_5

from bos_inv_priceorderitem
left join bos_inv_product as p1 on bos_inv_priceorderitem.szproductid_1 = p1.szproductid
left join bos_inv_product as p2 on bos_inv_priceorderitem.szproductid_2 = p2.szproductid
left join bos_inv_product as p3 on bos_inv_priceorderitem.szproductid_3 = p3.szproductid
left join bos_inv_product as p4 on bos_inv_priceorderitem.szproductid_4 = p4.szproductid
left join bos_inv_product as p5 on bos_inv_priceorderitem.szproductid_5 = p5.szproductid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemdiscbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid)
returns void as
$body$
begin
select 
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
bos_inv_priceorderitemdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceorderitemdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderitemdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory and 
szproductid_1 = p_szproductid_1 and 
szproductid_2 = p_szproductid_2 and 
szproductid_3 = p_szproductid_3 and 
szproductid_4 = p_szproductid_4 and 
szproductid_5 = p_szproductid_5;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemdiscbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid)
returns void as
$body$
begin
select 
decminqty,
decunitqty,
decbonusdisc,
szdisctype,
szorderitemtypeid,
bcalcfrprevdiscamt,
bos_inv_priceorderitemdiscbonus.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j


from 
bos_inv_priceorderitemdiscbonus
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderitemdiscbonus.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and szproductid_1 = p_szproductid_1 and szproductid_2 = p_szproductid_2 and szproductid_3 = p_szproductid_3 and szproductid_4 = p_szproductid_4 and szproductid_5 = p_szproductid_5 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemproductbonus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid)
returns void as
$body$
begin
select 
szpriceorderid,
decminqty,
decunitqty


from 
bos_inv_priceorderitemproductbonus

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and szproductid_1 = p_szproductid_1 and szproductid_2 = p_szproductid_2 and szproductid_3 = p_szproductid_3 and szproductid_4 = p_szproductid_4 and szproductid_5 = p_szproductid_5 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemproductbonus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid)
returns void as
$body$
begin
select 
szpriceorderid,
decminqty,
decunitqty


from 
bos_inv_priceorderitemproductbonus

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and szproductid_1 = p_szproductid_1 and szproductid_2 = p_szproductid_2 and szproductid_3 = p_szproductid_3 and szproductid_4 = p_szproductid_4 and szproductid_5 = p_szproductid_5 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemproductbonusitem(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decamount)
returns void as
$body$
begin
select
bos_inv_priceorderitemproductbonusitem.szpriceorderid,
bos_inv_priceorderitemproductbonusitem.decminqty,

bos_inv_priceorderitemproductbonusitem.szbonusproductid,
bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceorderitemproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceorderitemproductbonusitem.decbonusqty,
bos_inv_priceorderitemproductbonusitem.szuomid,
bos_inv_priceorderitemproductbonusitem.szbonustype,
bos_inv_priceorderitemproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceorderitemproductbonusitem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_priceorderitemproductbonusitem.szbonusproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceorderitemproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderitemproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory
and szproductid_1 = p_szproductid_1
and szproductid_2 = p_szproductid_2
and szproductid_3 = p_szproductid_3
and szproductid_4 = p_szproductid_4
and szproductid_5 = p_szproductid_5
and decminqty = p_decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderitemproductbonusitem_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szproductid_1 bos_dt_szid,
p_szproductid_2 bos_dt_szid,
p_szproductid_3 bos_dt_szid,
p_szproductid_4 bos_dt_szid,
p_szproductid_5 bos_dt_szid,
p_decminqty bos_dt_decamount)
returns void as
$body$
begin
select
bos_inv_priceorderitemproductbonusitem.szpriceorderid,
bos_inv_priceorderitemproductbonusitem.decminqty,

bos_inv_priceorderitemproductbonusitem.szbonusproductid,
bos_inv_product.szname as szbonusproductnm_j,
bos_inv_product.szdiscountgroupid as szbonusproductdiscgroupid_j,
bos_inv_product.szqtyformat as szbonusproductqtyformat_j,
bos_inv_product.szuomclassid as szbonusproductuomclassid_j,
bos_inv_product.szuomid as szbonusproductuomid_j,
bos_inv_product.szcompuomid as szbonusproductcompuomid_j,
bos_inv_product.sztrackingtype as szbonusproducttrackingtype_j,
bos_gl_taxtype.decrate as decbonusproducttaxrate_j,

bos_inv_priceorderitemproductbonusitem.szorderitemtypeid,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,

bos_inv_priceorderitemproductbonusitem.decbonusqty,
bos_inv_priceorderitemproductbonusitem.szuomid,
bos_inv_priceorderitemproductbonusitem.szbonustype,
bos_inv_priceorderitemproductbonusitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j

from 
bos_inv_priceorderitemproductbonusitem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_priceorderitemproductbonusitem.szbonusproductid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_priceorderitemproductbonusitem.szorderitemtypeid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_inv_priceorderitemproductbonusitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid

where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory
and szproductid_1 = p_szproductid_1
and szproductid_2 = p_szproductid_2
and szproductid_3 = p_szproductid_3
and szproductid_4 = p_szproductid_4
and szproductid_5 = p_szproductid_5
and decminqty = p_decminqty;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderwhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderwhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderwherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_getpriceorderwherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid,
gdhistory,
szstatus,
szusagetype,
szworkplaceid,
szsalesorgid_1,
szsalesorgid_2,
szdescription,
bisspecificenddate,
dtmvalidstart,
dtmvalidend,
bos_inv_priceorder.szccyid,
bos_cu_currency.szamountformat as szccyamountformat,
bhascombinationbonus,
bonlycalculatefrcombination,
bhasamountdiscbonus,
bhasamountproductbonus,
bhasprovisionbonus,

bmindiscbaseonamount,
bunitdiscbaseonamount,

bminbonusbaseonamount,
bunitbonusbaseonamount,

szuomid,

sznextownertrnid,
sznextpriceorderid,

szpricecombcd,
shpricecomborder,

szqualifierid,
szqualifierid_2,
szqualifierid_3,

szdiscgroupid,
szdiscgroupid_2,
szdiscgroupid_3,

-- data status.
bos_inv_priceorder.dtmlastupdated,
bos_inv_priceorder.balreadytransferred

from 
bos_inv_priceorder
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_priceorder.szccyid


where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_ispriceorderexistwhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceorderid


from 
bos_inv_priceorder

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_ispriceorderexistwhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
szpriceorderid


from 
bos_inv_priceorder

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_ispriceorderexistwherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid


from 
bos_inv_priceorder

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_ispriceorderexistwherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
select 
szpriceorderid


from 
bos_inv_priceorder

where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and szstatus = p_szstatus ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_lockpriceorderwhereguid(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szdescription = szdescription
where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_lockpriceorderwhereguid_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szdescription = szdescription
where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_lockpriceorderwherestatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus varchar)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	szstatus = p_szstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_lockpriceorderwherestatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_szstatus varchar)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szdescription = szdescription

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	szstatus = p_szstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_updatepriceorder(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
bisspecificenddate = p_bisspecificenddate,
dtmvalidstart = p_dtmvalidstart,
dtmvalidend = p_dtmvalidend,
szccyid = p_szccyid,
bhascombinationbonus = p_bhascombinationbonus,
bonlycalculatefrcombination = p_bonlycalculatefrcombination,
bhasamountdiscbonus = p_bhasamountdiscbonus,
bhasamountproductbonus = p_bhasamountproductbonus,
bhasprovisionbonus = p_bhasprovisionbonus,

bmindiscbaseonamount = p_bmindiscbaseonamount,
bunitdiscbaseonamount = p_bunitdiscbaseonamount,

bminbonusbaseonamount = p_bminbonusbaseonamount,
bunitbonusbaseonamount = p_bunitbonusbaseonamount,

szuomid = p_szuomid,

sznextownertrnid = p_sznextownertrnid,
sznextpriceorderid = p_sznextpriceorderid,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_updatepriceorder_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szusagetype bos_dt_szsmallid,
p_szstatus bos_dt_szsmallid,
p_szworkplaceid bos_dt_szid,
p_szsalesorgid_1 bos_dt_szid,
p_szsalesorgid_2 bos_dt_szid,
p_szdescription varchar,
p_bisspecificenddate bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_szccyid bos_dt_szsmallid,
p_bhascombinationbonus bit,
p_bonlycalculatefrcombination bit,
p_bhasamountdiscbonus bit,
p_bhasamountproductbonus bit,
p_bhasprovisionbonus bit,
p_bmindiscbaseonamount bos_dt_bboolean,
p_bunitdiscbaseonamount bos_dt_bboolean,
p_bminbonusbaseonamount bos_dt_bboolean,
p_bunitbonusbaseonamount bos_dt_bboolean,
p_szuomid bos_dt_szmediumid,
p_sznextownertrnid bos_dt_szmediumid,
p_sznextpriceorderid bos_dt_szid,
p_szpricecombcd bos_dt_szmediumid,
p_shpricecomborder smallint,
p_szqualifierid bos_dt_szbigid,
p_szqualifierid_2 bos_dt_szbigid,
p_szqualifierid_3 bos_dt_szbigid,
p_szdiscgroupid bos_dt_szbigid,
p_szdiscgroupid_2 bos_dt_szbigid,
p_szdiscgroupid_3 bos_dt_szbigid)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szusagetype = p_szusagetype,
szstatus = p_szstatus,
szworkplaceid = p_szworkplaceid,
szsalesorgid_1 = p_szsalesorgid_1,
szsalesorgid_2 = p_szsalesorgid_2,
szdescription = p_szdescription,
bisspecificenddate = p_bisspecificenddate,
dtmvalidstart = p_dtmvalidstart,
dtmvalidend = p_dtmvalidend,
szccyid = p_szccyid,
bhascombinationbonus = p_bhascombinationbonus,
bonlycalculatefrcombination = p_bonlycalculatefrcombination,
bhasamountdiscbonus = p_bhasamountdiscbonus,
bhasamountproductbonus = p_bhasamountproductbonus,
bhasprovisionbonus = p_bhasprovisionbonus,

bmindiscbaseonamount = p_bmindiscbaseonamount,
bunitdiscbaseonamount = p_bunitdiscbaseonamount,

bminbonusbaseonamount = p_bminbonusbaseonamount,
bunitbonusbaseonamount = p_bunitbonusbaseonamount,

szuomid = p_szuomid,

sznextownertrnid = p_sznextownertrnid,
sznextpriceorderid = p_sznextpriceorderid,

szpricecombcd = p_szpricecombcd,
shpricecomborder = p_shpricecomborder,

szqualifierid = p_szqualifierid,
szqualifierid_2 = p_szqualifierid_2,
szqualifierid_3 = p_szqualifierid_3,

szdiscgroupid = p_szdiscgroupid,
szdiscgroupid_2 = p_szdiscgroupid_2,
szdiscgroupid_3 = p_szdiscgroupid_3

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_updatepriceorderstatus(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szstatus = p_szstatus

where 
szownertrnid = p_szownertrnid and
	szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorder_updatepriceorderstatus_013(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_inv_priceorder
set 
szstatus = p_szstatus

where 
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
	gdhistory = p_gdhistory;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovision_create(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shminproductorder integer,
p_bbaseonamount smallint,
p_bhasdiscountbonus smallint,
p_bhasproductbonus smallint,
p_bhasminorderonamount smallint,
p_szuomid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderprovision
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shminproductorder,
bbaseonamount,
bhasdiscountbonus,
bhasproductbonus,
bhasminorderonamount,
szuomid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shminproductorder,
p_bbaseonamount,
p_bhasdiscountbonus,
p_bhasproductbonus,
p_bhasminorderonamount,
p_szuomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovision_delete(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderprovision
where
szownertrnid = p_szownertrnid and 
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovision_deletehistoryonly(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderprovision
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and 
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovision_getlist(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
select 
shprovisionid,
shminproductorder,
bbaseonamount,
bhasdiscountbonus,
bhasproductbonus,
bhasminorderonamount,
szuomid

from 
bos_inv_priceorderprovision
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitem_create(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer,
p_szproductid bos_dt_szid,
p_decminorder bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bmustorder smallint)
returns void as
$body$
begin
insert into bos_inv_priceorderprovisionitem
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shprovisionitemid,
szproductid,
decminorder,
szuomid,
bmustorder
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shprovisionitemid,
p_szproductid,
p_decminorder,
p_szuomid,
p_bmustorder
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitem_delete(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitem_deletehistoryonly(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitem_getlist(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer)
returns void as
$body$
begin
select 
a.shprovisionitemid,
a.szproductid,
a.decminorder,
a.szuomid,
a.bmustorder,
coalesce(b.szname, '') as szproductname_j

from 
bos_inv_priceorderprovisionitem a
where 
a.szownertrnid = p_szownertrnid and a.szpriceorderid = p_szpriceorderid and a.gdhistory = p_gdhistory and a.shprovisionid = p_shprovisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_create(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer,
p_decminqty bos_dt_decamount,
p_decunitqty bos_dt_decamount,
p_szdisctype bos_dt_szid,
p_decbonusdisc bos_dt_decamount,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderprovisionitemdiscount
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shprovisionitemid,
decminqty,
decunitqty,
szdisctype,
decbonusdisc,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shprovisionitemid,
p_decminqty,
p_decunitqty,
p_szdisctype,
p_decbonusdisc,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_create_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer,
p_decminqty bos_dt_decamount,
p_decunitqty bos_dt_decamount,
p_szdisctype bos_dt_szid,
p_decbonusdisc bos_dt_decamount,
p_szorderitemtypeid bos_dt_szid,
p_bcalcfrprevdiscamt smallint,
p_szprincipaldiscrefid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderprovisionitemdiscount
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shprovisionitemid,
decminqty,
decunitqty,
szdisctype,
decbonusdisc,
szorderitemtypeid,
bcalcfrprevdiscamt,
szprincipaldiscrefid,
szproductid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shprovisionitemid,
p_decminqty,
p_decunitqty,
p_szdisctype,
p_decbonusdisc,
p_szorderitemtypeid,
p_bcalcfrprevdiscamt,
p_szprincipaldiscrefid,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_delete(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderprovisionitemdiscount
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_deletehistoryonly(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
from  bos_inv_priceorderprovisionitemdiscount
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_getlist(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer)
returns void as
$body$
begin
select 
a.shprovisionitemid,
a.decminqty,
a.decunitqty,
a.szdisctype,
a.decbonusdisc,
a.szorderitemtypeid,
a.bcalcfrprevdiscamt,
a.szprincipaldiscrefid,
coalesce(b.szdescription,'') as szprincipaldiscrefdesc_j

from 
bos_inv_priceorderprovisionitemdiscount a
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and shprovisionid = p_shprovisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemdiscount_getlist_014(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer)
returns void as
$body$
begin
select 
a.shprovisionitemid,
a.decminqty,
a.decunitqty,
a.szdisctype,
a.decbonusdisc,
a.szorderitemtypeid,
a.bcalcfrprevdiscamt,
a.szprincipaldiscrefid,
coalesce(b.szdescription,'') as szprincipaldiscrefdesc_j,
a.szproductid

from 
bos_inv_priceorderprovisionitemdiscount a
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and shprovisionid = p_shprovisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonus_create(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer,
p_decminqty bos_dt_decamount,
p_decunitqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_priceorderprovisionitemproductbonus
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shprovisionitemid,
decminqty,
decunitqty
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shprovisionitemid,
p_decminqty,
p_decunitqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonus_delete(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonus_deletehistoryonly(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitemproductbonus
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonus_getlist(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer)
returns void as
$body$
begin
select 
shprovisionitemid,
decminqty,
decunitqty

from 
bos_inv_priceorderprovisionitemproductbonus
where 
szownertrnid = p_szownertrnid and szpriceorderid = p_szpriceorderid and gdhistory = p_gdhistory and shprovisionid = p_shprovisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonusitem_create(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer,
p_shprovisionproductbonusitemid integer,
p_szbonusproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decbonusqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szbonustype bos_dt_szid,
p_szprincipaldiscrefid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_priceorderprovisionitemproductbonusitem
(
szownertrnid,
szpriceorderid,
gdhistory,
shprovisionid,
shprovisionitemid,
shprovisionproductbonusitemid,
szbonusproductid,
szorderitemtypeid,
decbonusqty,
szuomid,
szbonustype,
szprincipaldiscrefid
)
values
(
p_szownertrnid,
p_szpriceorderid,
p_gdhistory,
p_shprovisionid,
p_shprovisionitemid,
p_shprovisionproductbonusitemid,
p_szbonusproductid,
p_szorderitemtypeid,
p_decbonusqty,
p_szuomid,
p_szbonustype,
p_szprincipaldiscrefid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonusitem_delete(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonusitem_deletehistoryonly(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea)
returns void as
$body$
begin
delete 
 from bos_inv_priceorderprovisionitemproductbonusitem
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_priceorderprovisionitemproductbonusitem_getlist(
p_szownertrnid bos_dt_szmediumid,
p_szpriceorderid bos_dt_szid,
p_gdhistory bytea,
p_shprovisionid integer,
p_shprovisionitemid integer)
returns void as
$body$
begin
select
a.shprovisionitemid,
a.szbonusproductid,

coalesce(b.szname,'') as szbonusproductnm_j,
coalesce(b.szdiscountgroupid,'') as szbonusproductdiscgroupid_j,
coalesce(b.szqtyformat,'') as szbonusproductqtyformat_j,
coalesce(b.szuomclassid,'') as szbonusproductuomclassid_j,
coalesce(b.szuomid,'') as szbonusproductuomid_j,
coalesce(b.szcompuomid,'') as szbonusproductcompuomid_j,
coalesce(b.sztrackingtype,'') as szbonusproducttrackingtype_j,

a.szorderitemtypeid,
coalesce(c.sztrntype,'') as szorderitemtypetrntype_j,
coalesce(c.btaxable,0) as borderitemtypetaxable_j,

coalesce(d.decrate,0) as decbonusproducttaxrate_j,

a.decbonusqty,
a.szuomid,
a.szbonustype,
a.szprincipaldiscrefid,
coalesce(e.szdescription,'') as szprincipaldiscrefdesc_j
from bos_inv_priceorderprovisionitemproductbonusitem a
left join bos_inv_product b on b.szproductid = a.szbonusproductid
left join bos_inv_orderitemtype c on c.szorderitemtypeid = a.szorderitemtypeid
left join bos_gl_taxtype d on d.sztaxtypeid = b.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as e on a.szprincipaldiscrefid = e.szprincipaldiscrefid
where
szownertrnid = p_szownertrnid and
szpriceorderid = p_szpriceorderid and
gdhistory = p_gdhistory and
shprovisionid = p_shprovisionid and
shprovisionitemid = p_shprovisionitemid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproduct(
p_szproductid bos_dt_szid,
p_szname varchar,
p_sznickname bos_dt_szname,
p_bservice bit,
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_bkit bit,
p_bexplodekit bit,
p_bbreaknonexplodekit bos_dt_bboolean,
p_sztrackingtype bos_dt_szsmallid,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_szqtyformat varchar,
p_szorderitemtypeid bos_dt_szid,
p_szarclassid bos_dt_szid,
p_sztaxtypeid bos_dt_szid,
p_szcompuomid bos_dt_szid,
p_szsupplytype bos_dt_szsmallid,
p_bdonotcheckqtywhendoproductbooking bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_bshowkit bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szdiscountgroupid bos_dt_szid,
p_busedbyallworkplace bos_dt_bboolean,
p_bpromo bos_dt_bboolean,
p_dtmpromostart timestamp,
p_dtmpromoend timestamp,
p_szbarcode bos_dt_szid,
p_szbarcodesekunder bos_dt_szid,
p_szbarcodetersier bos_dt_szid,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_product
(
szproductid ,
szname,
sznickname,
bservice,
szuomclassid,
szuomid,
bkit,
bexplodekit  ,
bbreaknonexplodekit,
sztrackingtype,
szcategory_1 ,
szcategory_2 ,
szcategory_3 ,
szcategory_4 ,
szcategory_5,
szcategory_6 ,
szcategory_7 ,
szcategory_8 ,
szcategory_9 ,
szcategory_10,
szqtyformat,
szorderitemtypeid,
szarclassid,
sztaxtypeid,
szcompuomid,
szsupplytype,
bdonotcheckqtywhendoproductbooking,
dtmvalidstart,
dtmvalidend,
bshowkit,
dtmlastupdated,
balreadytransferred,
szdiscountgroupid,
busedbyallworkplace,
bpromo,
dtmpromostart,
dtmpromoend,
szbarcode,
-- add szbarcodesekunder and szbarcodetersier --,
 szbarcodesekunder,
szbarcodetersier,
szapplicationclass
)
values
(
p_szproductid ,
p_szname,
p_sznickname,
p_bservice,
p_szuomclassid,
p_szuomid,
p_bkit,
p_bexplodekit  ,
p_bbreaknonexplodekit,
p_sztrackingtype,
p_szcategory_1,
p_szcategory_2 ,
p_szcategory_3 ,
p_szcategory_4,
p_szcategory_5,
p_szcategory_6,
p_szcategory_7 ,
p_szcategory_8 ,
p_szcategory_9,
p_szcategory_10,
p_szqtyformat,
p_szorderitemtypeid,
p_szarclassid,
p_sztaxtypeid,
p_szcompuomid,
p_szsupplytype,
p_bdonotcheckqtywhendoproductbooking,
p_dtmvalidstart,
p_dtmvalidend,
p_bshowkit,
p_dtmlastupdated,
p_balreadytransferred,
p_szdiscountgroupid,
p_busedbyallworkplace,
p_bpromo,
p_dtmpromostart,
p_dtmpromoend,
p_szbarcode,
-- add szbarcodesekunder and szbarcodetersier --,
 p_szbarcodesekunder,
p_szbarcodetersier,
p_szapplicationclass
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproduct_013(
p_szproductid bos_dt_szid,
p_szname varchar,
p_sznickname bos_dt_szname,
p_bservice bit,
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_bkit bit,
p_bexplodekit bit,
p_bbreaknonexplodekit bos_dt_bboolean,
p_sztrackingtype bos_dt_szsmallid,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_szqtyformat varchar,
p_szorderitemtypeid bos_dt_szid,
p_szarclassid bos_dt_szid,
p_sztaxtypeid bos_dt_szid,
p_szcompuomid bos_dt_szid,
p_szsupplytype bos_dt_szsmallid,
p_bdonotcheckqtywhendoproductbooking bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_bshowkit bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szdiscountgroupid bos_dt_szid,
p_busedbyallworkplace bos_dt_bboolean,
p_bpromo bos_dt_bboolean,
p_dtmpromostart timestamp,
p_dtmpromoend timestamp,
p_szbarcode bos_dt_szid,
p_szbarcodesekunder bos_dt_szid,
p_szbarcodetersier bos_dt_szid,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_product
(
szproductid ,
szname,
sznickname,
bservice,
szuomclassid,
szuomid,
bkit,
bexplodekit  ,
bbreaknonexplodekit,
sztrackingtype,
szcategory_1 ,
szcategory_2 ,
szcategory_3 ,
szcategory_4 ,
szcategory_5,
szcategory_6 ,
szcategory_7 ,
szcategory_8 ,
szcategory_9 ,
szcategory_10,
szqtyformat,
szorderitemtypeid,
szarclassid,
sztaxtypeid,
szcompuomid,
szsupplytype,
bdonotcheckqtywhendoproductbooking,
dtmvalidstart,
dtmvalidend,
bshowkit,
dtmlastupdated,
balreadytransferred,
szdiscountgroupid,
busedbyallworkplace,
bpromo,
dtmpromostart,
dtmpromoend,
szbarcode,
-- add szbarcodesekunder and szbarcodetersier --,
 szbarcodesekunder,
szbarcodetersier,
szapplicationclass
)
values
(
p_szproductid ,
p_szname,
p_sznickname,
p_bservice,
p_szuomclassid,
p_szuomid,
p_bkit,
p_bexplodekit  ,
p_bbreaknonexplodekit,
p_sztrackingtype,
p_szcategory_1,
p_szcategory_2 ,
p_szcategory_3 ,
p_szcategory_4,
p_szcategory_5,
p_szcategory_6,
p_szcategory_7 ,
p_szcategory_8 ,
p_szcategory_9,
p_szcategory_10,
p_szqtyformat,
p_szorderitemtypeid,
p_szarclassid,
p_sztaxtypeid,
p_szcompuomid,
p_szsupplytype,
p_bdonotcheckqtywhendoproductbooking,
p_dtmvalidstart,
p_dtmvalidend,
p_bshowkit,
p_dtmlastupdated,
p_balreadytransferred,
p_szdiscountgroupid,
p_busedbyallworkplace,
p_bpromo,
p_dtmpromostart,
p_dtmpromoend,
p_szbarcode,
-- add szbarcodesekunder and szbarcodetersier --,
 p_szbarcodesekunder,
p_szbarcodetersier,
p_szapplicationclass
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductitemkit(
p_szproductid bos_dt_szid,
p_szkititemproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_inv_productkititem
(
szproductid,
szkititemproductid,
decqty,
szuomid
)
values
(
p_szproductid,
p_szkititemproductid,
p_decqty,
p_szuomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductposinfo(
p_szproductid bos_dt_szid,
p_szmediatype bos_dt_szsmallid,
p_szmediatitle varchar,
p_szmachinebrandid bos_dt_szid,
p_szmachinetype varchar,
p_shyear smallint,
p_szmachinesn varchar,
p_szdrawingnumber varchar,
p_szpositionnumber varchar)
returns void as
$body$
begin
insert into bos_inv_productpositioninfo
(
szproductid,
szmediatype,
szmediatitle,
szmachinebrandid,
szmachinetype,
shyear,
szmachinesn,
szdrawingnumber,
szpositionnumber
)
values
(
p_szproductid,
p_szmediatype,
p_szmediatitle,
p_szmachinebrandid,
p_szmachinetype,
p_shyear,
p_szmachinesn,
p_szdrawingnumber,
p_szpositionnumber
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductprice(
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_busepricewtax bit,
p_decprice bos_dt_decprice,
p_szpriceccyid bos_dt_szsmallid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_productprice
(
szproductid,
szpriceid,
szuomid,
busepricewtax,
decprice,
szpriceccyid,
szpromopriceid
)
values
(
p_szproductid,
p_szpriceid,
p_szuomid,
p_busepricewtax,
p_decprice,
p_szpriceccyid,
p_szpromopriceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductprice_013(
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_busepricewtax bit,
p_decprice bos_dt_decprice,
p_szpriceccyid bos_dt_szsmallid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_productprice
(
szproductid,
szpriceid,
szuomid,
busepricewtax,
decprice,
szpriceccyid,
szpromopriceid
)
values
(
p_szproductid,
p_szpriceid,
p_szuomid,
p_busepricewtax,
p_decprice,
p_szpriceccyid,
p_szpromopriceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductpurchinfo(
p_szproductid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_sztaxtypeid bos_dt_szid,
p_busepricewtax bit,
p_decpurchprice bos_dt_decprice,
p_szpriceccyid bos_dt_szid,
p_declastpurchprice bos_dt_decprice,
p_dtmlastpurchdate timestamp,
p_szlastsupplierid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szdefaultsuppid bos_dt_szid,
p_decbasepurchprice_s bos_dt_decprice)
returns void as
$body$
begin
insert into bos_inv_productpurchaseinfo
(
szproductid,
szuomid,
sztaxtypeid,
busepricewtax,
decpurchprice,
szpriceccyid,
declastpurchprice,
dtmlastpurchdate,
szlastsupplierid,
szpriceid,
szpromopriceid,
szdefaultsuppid,
decbasepurchprice_s
)
values
(
p_szproductid,
p_szuomid,
p_sztaxtypeid,
p_busepricewtax,
p_decpurchprice,
p_szpriceccyid,
p_declastpurchprice,
p_dtmlastpurchdate,
p_szlastsupplierid,
p_szpriceid,
p_szpromopriceid,
p_szdefaultsuppid,
p_decbasepurchprice_s

);
--set ansi_nulls on,
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductpurchinfo_013(
p_szproductid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_sztaxtypeid bos_dt_szid,
p_busepricewtax bit,
p_decpurchprice bos_dt_decprice,
p_szpriceccyid bos_dt_szid,
p_declastpurchprice bos_dt_decprice,
p_dtmlastpurchdate timestamp,
p_szlastsupplierid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szdefaultsuppid bos_dt_szid,
p_decbasepurchprice_s bos_dt_decprice)
returns void as
$body$
begin
insert into bos_inv_productpurchaseinfo
(
szproductid,
szuomid,
sztaxtypeid,
busepricewtax,
decpurchprice,
szpriceccyid,
declastpurchprice,
dtmlastpurchdate,
szlastsupplierid,
szpriceid,
szpromopriceid,
szdefaultsuppid,
decbasepurchprice_s
)
values
(
p_szproductid,
p_szuomid,
p_sztaxtypeid,
p_busepricewtax,
p_decpurchprice,
p_szpriceccyid,
p_declastpurchprice,
p_dtmlastpurchdate,
p_szlastsupplierid,
p_szpriceid,
p_szpromopriceid,
p_szdefaultsuppid,
p_decbasepurchprice_s
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproductsernum(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_inv_productsernum
(
szproductid ,
szproductsn ,
szdescription
)
values
(
p_szproductid,
p_szproductsn,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_createproducttechinfo(
p_szproductid bos_dt_szid,
p_decweight numeric,
p_szuomweight varchar,
p_decvolume numeric,
p_szuomvolume varchar,
p_declength numeric,
p_szuomlength varchar,
p_decwidth numeric,
p_szuomwidth varchar,
p_decheight numeric,
p_szuomheight varchar,
p_decstoretemp numeric,
p_szuomtemp varchar,
p_decstorehuminity numeric,
p_szuomhuminity varchar,
p_szdescription varchar)
returns void as
$body$
begin
insert into bos_inv_producttechnicalspecinfo
(
szproductid,
decweight,
szuomweight,
decvolume,
szuomvolume,
declength,
szuomlength,
decwidth,
szuomwidth,
decheight,
szuomheight,
decstoretemp,
szuomtemp,
decstorehuminity,
szuomhuminity,
szdescription
)
values
(
p_szproductid,
p_decweight,
p_szuomweight,
p_decvolume,
p_szuomvolume,
p_declength,
p_szuomlength,
p_decwidth,
p_szuomwidth,
p_decheight,
p_szuomheight,
p_decstoretemp,
p_szuomtemp,
p_decstorehuminity,
p_szuomhuminity,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproduct(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM bos_inv_product
where szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproductitemkit(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_productkititem
where
szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproductposinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_productpositioninfo
where
szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproductprice(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_inv_productprice
where
	szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproductpurchinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_productpurchaseinfo
where
szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproductsernum(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
DELETE FROM bos_inv_productsernum 
where
	szproductid = p_szproductid and
	szproductsn = p_szproductsn;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_deleteproducttechinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_producttechnicalspecinfo
where
szproductid = p_szproductid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproduct()
returns void as
$body$
begin
select 
szproductid,
	szname,
	sznickname,
	szuomid

from 
bos_inv_product;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproductposinfo()
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productpositioninfo;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproductprice()
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productprice;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproductpurchinfo()
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productpurchaseinfo;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproductsernum()
returns void as
$body$
begin
select 
szproductid, szproductsn, szdescription 

from 
bos_inv_productsernum; 

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getlistofproducttechinfo()
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_producttechnicalspecinfo;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproduct(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select 
bos_inv_product.szproductid,
bos_inv_product.szname,
bos_inv_product.sznickname,
bos_inv_product.bservice,
bos_inv_product.szuomclassid,
bos_inv_uomclass.szdescription as szuomclassdescription_j,
bos_inv_product.szuomid,

bos_inv_product.bkit,
bos_inv_product.bexplodekit,
bos_inv_product.bbreaknonexplodekit,

bos_inv_product.sztrackingtype,	
bos_inv_product.szcategory_1,
bos_inv_product.szcategory_2,
bos_inv_product.szcategory_3,
bos_inv_product.szcategory_4,
bos_inv_product.szcategory_5,
bos_inv_product.szcategory_6,
bos_inv_product.szcategory_7,
bos_inv_product.szcategory_8,
bos_inv_product.szcategory_9,
bos_inv_product.szcategory_10,
tbl_cat1.szpriceid as szcategory_1_priceid_j,
tbl_cat1.szpromopriceid as szcategory_1_promopriceid_j,
tbl_cat2.szpriceid as szcategory_2_priceid_j,
tbl_cat2.szpromopriceid as szcategory_2_promopriceid_j,
tbl_cat3.szpriceid as szcategory_3_priceid_j,
tbl_cat3.szpromopriceid as szcategory_3_promopriceid_j,
tbl_cat4.szpriceid as szcategory_4_priceid_j,
tbl_cat4.szpromopriceid as szcategory_4_promopriceid_j,
tbl_cat5.szpriceid as szcategory_5_priceid_j,
tbl_cat5.szpromopriceid as szcategory_5_promopriceid_j,
tbl_cat6.szpriceid as szcategory_6_priceid_j,
tbl_cat6.szpromopriceid as szcategory_6_promopriceid_j,
tbl_cat7.szpriceid as szcategory_7_priceid_j,
tbl_cat7.szpromopriceid as szcategory_7_promopriceid_j,
tbl_cat8.szpriceid as szcategory_8_priceid_j,
tbl_cat8.szpromopriceid as szcategory_8_promopriceid_j,
tbl_cat9.szpriceid as szcategory_9_priceid_j,
tbl_cat9.szpromopriceid as szcategory_9_promopriceid_j,
tbl_cat10.szpriceid as szcategory_10_priceid_j,
tbl_cat10.szpromopriceid as szcategory_10_promopriceid_j,

bos_inv_product.szqtyformat,

bos_inv_product.szorderitemtypeid,
bos_inv_product.szarclassid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,	
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,

bos_inv_product.sztaxtypeid,
bos_gl_taxtype.decrate as dectaxtyperate_j,

bos_inv_product.szcompuomid,
bos_inv_product.szsupplytype,
bos_inv_product.bdonotcheckqtywhendoproductbooking,

bos_inv_product.dtmvalidstart,
bos_inv_product.dtmvalidend,

bos_inv_product.bshowkit,

pp.szuomid as szproductpriceuomid_j,

bipt.decvolume as decproductvolume_j,
bipt.szuomvolume as szproductvolumeuomid_j,
bipt.decweight as decproductweight_j,
bipt.szuomweight as szproductweightuomid_j,

bos_inv_product.dtmlastupdated,
bos_inv_product.balreadytransferred,

bos_inv_product.szdiscountgroupid
, coalesce(gwp.szdiscountgroupid, '') as szworkplacediscountgroupid_j

, bos_inv_product.busedbyallworkplace,

bos_inv_product.bpromo,
bos_inv_product.dtmpromostart,
bos_inv_product.dtmpromoend,
bos_inv_product.szbarcode

-- add szbarcodesekunder and szbarcodetersier --
, bos_inv_product.szbarcodesekunder,
bos_inv_product.szbarcodetersier,
bos_inv_product.szapplicationclass

from
bos_inv_product
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_product.szorderitemtypeid
left join bos_inv_productcategory as tbl_cat1 on tbl_cat1.szproductcategoryid = bos_inv_product.szcategory_1
left join bos_inv_productcategory as tbl_cat2 on tbl_cat2.szproductcategoryid = bos_inv_product.szcategory_2
left join bos_inv_productcategory as tbl_cat3 on tbl_cat3.szproductcategoryid = bos_inv_product.szcategory_3
left join bos_inv_productcategory as tbl_cat4 on tbl_cat4.szproductcategoryid = bos_inv_product.szcategory_4
left join bos_inv_productcategory as tbl_cat5 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_5
left join bos_inv_productcategory as tbl_cat6 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_6
left join bos_inv_productcategory as tbl_cat7 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_7
left join bos_inv_productcategory as tbl_cat8 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_8
left join bos_inv_productcategory as tbl_cat9 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_9
left join bos_inv_productcategory as tbl_cat10 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_10
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bos_inv_product.szproductid
left join bos_inv_productprice as pp on pp.szproductid = bos_inv_product.szproductid
left join bos_inv_uomclass on bos_inv_uomclass.szuomclassid = bos_inv_product.szuomclassid
left join bos_gl_workplaceproduct as gwp on gwp.szworkplaceid = p_szworkplaceid
and gwp.szproductid = bos_inv_product.szproductid

where
bos_inv_product.szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproduct_013(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select   
bos_inv_product.szproductid,  
bos_inv_product.szname,  
bos_inv_product.sznickname,  
bos_inv_product.bservice,  
bos_inv_product.szuomclassid,  
bos_inv_uomclass.szdescription as szuomclassdescription_j,  
bos_inv_product.szuomid,  

bos_inv_product.bkit,  
bos_inv_product.bexplodekit,  
bos_inv_product.bbreaknonexplodekit,  

bos_inv_product.sztrackingtype,   
bos_inv_product.szcategory_1,  
bos_inv_product.szcategory_2,  
bos_inv_product.szcategory_3,  
bos_inv_product.szcategory_4,  
bos_inv_product.szcategory_5,  
bos_inv_product.szcategory_6,  
bos_inv_product.szcategory_7,  
bos_inv_product.szcategory_8,  
bos_inv_product.szcategory_9,  
bos_inv_product.szcategory_10,  
tbl_cat1.szpriceid as szcategory_1_priceid_j,  
tbl_cat1.szpromopriceid as szcategory_1_promopriceid_j,  
tbl_cat2.szpriceid as szcategory_2_priceid_j,  
tbl_cat2.szpromopriceid as szcategory_2_promopriceid_j,  
tbl_cat3.szpriceid as szcategory_3_priceid_j,  
tbl_cat3.szpromopriceid as szcategory_3_promopriceid_j,  
tbl_cat4.szpriceid as szcategory_4_priceid_j,  
tbl_cat4.szpromopriceid as szcategory_4_promopriceid_j,  
tbl_cat5.szpriceid as szcategory_5_priceid_j,  
tbl_cat5.szpromopriceid as szcategory_5_promopriceid_j,  
tbl_cat6.szpriceid as szcategory_6_priceid_j,  
tbl_cat6.szpromopriceid as szcategory_6_promopriceid_j,  
tbl_cat7.szpriceid as szcategory_7_priceid_j,  
tbl_cat7.szpromopriceid as szcategory_7_promopriceid_j,  
tbl_cat8.szpriceid as szcategory_8_priceid_j,  
tbl_cat8.szpromopriceid as szcategory_8_promopriceid_j,  
tbl_cat9.szpriceid as szcategory_9_priceid_j,  
tbl_cat9.szpromopriceid as szcategory_9_promopriceid_j,  
tbl_cat10.szpriceid as szcategory_10_priceid_j,  
tbl_cat10.szpromopriceid as szcategory_10_promopriceid_j,  

bos_inv_product.szqtyformat,  

bos_inv_product.szorderitemtypeid,  
bos_inv_product.szarclassid,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,   
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,  
bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,  

bos_inv_product.sztaxtypeid,  
bos_gl_taxtype.decrate as dectaxtyperate_j,  

bos_inv_product.szcompuomid,  
bos_inv_product.szsupplytype,  
bos_inv_product.bdonotcheckqtywhendoproductbooking,  

bos_inv_product.dtmvalidstart,  
bos_inv_product.dtmvalidend,  

bos_inv_product.bshowkit,  

pp.szuomid as szproductpriceuomid_j,  

bipt.decvolume as decproductvolume_j,  
bipt.szuomvolume as szproductvolumeuomid_j,  
bipt.decweight as decproductweight_j,  
bipt.szuomweight as szproductweightuomid_j,  

bos_inv_product.dtmlastupdated,  
bos_inv_product.balreadytransferred,  

bos_inv_product.szdiscountgroupid  
, coalesce(gwp.szdiscountgroupid, '') as szworkplacediscountgroupid_j  

, bos_inv_product.busedbyallworkplace,  

bos_inv_product.bpromo,  
bos_inv_product.dtmpromostart,  
bos_inv_product.dtmpromoend,  
bos_inv_product.szbarcode  

-- add szbarcodesekunder and szbarcodetersier --  
, bos_inv_product.szbarcodesekunder,  
bos_inv_product.szbarcodetersier,  
bos_inv_product.szapplicationclass  

from  
bos_inv_product  
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid  
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_product.szorderitemtypeid  
left join bos_inv_productcategory as tbl_cat1 on tbl_cat1.szproductcategoryid = bos_inv_product.szcategory_1  
left join bos_inv_productcategory as tbl_cat2 on tbl_cat2.szproductcategoryid = bos_inv_product.szcategory_2  
left join bos_inv_productcategory as tbl_cat3 on tbl_cat3.szproductcategoryid = bos_inv_product.szcategory_3  
left join bos_inv_productcategory as tbl_cat4 on tbl_cat4.szproductcategoryid = bos_inv_product.szcategory_4  
left join bos_inv_productcategory as tbl_cat5 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_5  
left join bos_inv_productcategory as tbl_cat6 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_6  
left join bos_inv_productcategory as tbl_cat7 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_7  
left join bos_inv_productcategory as tbl_cat8 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_8  
left join bos_inv_productcategory as tbl_cat9 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_9  
left join bos_inv_productcategory as tbl_cat10 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_10  
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bos_inv_product.szproductid  
left join bos_inv_productprice as pp on pp.szproductid = bos_inv_product.szproductid  
left join bos_inv_uomclass on bos_inv_uomclass.szuomclassid = bos_inv_product.szuomclassid  
left join bos_gl_workplaceproduct as gwp on gwp.szworkplaceid = p_szworkplaceid  
and gwp.szproductid = bos_inv_product.szproductid  

where  
bos_inv_product.szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductitemkit(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_productkititem.szkititemproductid,

bos_inv_product.szname as szproductnm,
bos_inv_productkititem.decqty,
bos_inv_productkititem.szuomid,
bos_inv_product.szcompuomid,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_gl_taxtype.decrate as decproducttaxtypetaxrate_j,
bos_inv_product.szorderitemtypeid as szproductorderitemtypeid_j,

bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(gwp.szdiscountgroupid, '') as szworkplacediscgroupid_j

, bos_inv_orderitemtype.btaxable as bproductorderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szproductorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szproductorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bmustfilltrnreason as bproductorderitemtypemustfilltrnreason_j,

bipt.decvolume as decproductvolume_j,
bipt.szuomvolume as szproductvolumeuomid_j,
bipt.decweight as decproductweight_j,
bipt.szuomweight as szproductweightuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j
from
bos_inv_productkititem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_productkititem.szkititemproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_product.szorderitemtypeid
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bos_inv_productkititem.szkititemproductid
left join bos_gl_workplaceproduct as gwp on gwp.szworkplaceid = p_szworkplaceid
and gwp.szproductid = bos_inv_productkititem.szproductid
where	
bos_inv_productkititem.szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductitemkit_014(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_productkititem.szkititemproductid,

bos_inv_product.szname as szproductnm,
bos_inv_productkititem.decqty,
bos_inv_productkititem.szuomid,
bos_inv_product.szcompuomid,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_gl_taxtype.decrate as decproducttaxtypetaxrate_j,
bos_inv_product.szorderitemtypeid as szproductorderitemtypeid_j,

bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(gwp.szdiscountgroupid, '') as szworkplacediscgroupid_j

, bos_inv_orderitemtype.btaxable as bproductorderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szproductorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szproductorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bmustfilltrnreason as bproductorderitemtypemustfilltrnreason_j,

bipt.decvolume as decproductvolume_j,
bipt.szuomvolume as szproductvolumeuomid_j,
bipt.decweight as decproductweight_j,
bipt.szuomweight as szproductweightuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j
from
bos_inv_productkititem
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_productkititem.szkititemproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_inv_product.szorderitemtypeid
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bos_inv_productkititem.szkititemproductid
left join bos_gl_workplaceproduct as gwp on gwp.szworkplaceid = p_szworkplaceid
and gwp.szproductid = bos_inv_productkititem.szproductid
where    
bos_inv_productkititem.szproductid = p_szproductid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductname(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
sznickname
from 
bos_inv_product
where 
 szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductposinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid,
	szmediatype,
	szmediatitle,
	szmachinebrandid,
	szmachinetype,
	shyear,
	szmachinesn,
	szdrawingnumber,
	szpositionnumber

from 
bos_inv_productpositioninfo
where 
 szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductprice(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_productprice.szproductid,

bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_productprice.szpriceid,
bos_inv_productprice.szuomid,
bos_inv_productprice.busepricewtax,
bos_inv_productprice.decprice,
bos_inv_productprice.szpriceccyid,
bos_cu_currency.szamountformat as szpriceformat_j,
bos_inv_productprice.szpromopriceid,

tbl_cat1.szpriceid as szcategory_1_priceid_j,
tbl_cat1.szpromopriceid as szcategory_1_promopriceid_j,
tbl_cat2.szpriceid as szcategory_2_priceid_j,
tbl_cat2.szpromopriceid as szcategory_2_promopriceid_j,
tbl_cat3.szpriceid as szcategory_3_priceid_j,
tbl_cat3.szpromopriceid as szcategory_3_promopriceid_j,
tbl_cat4.szpriceid as szcategory_4_priceid_j,
tbl_cat4.szpromopriceid as szcategory_4_promopriceid_j,
tbl_cat5.szpriceid as szcategory_5_priceid_j,
tbl_cat5.szpromopriceid as szcategory_5_promopriceid_j,
tbl_cat6.szpriceid as szcategory_6_priceid_j,
tbl_cat6.szpromopriceid as szcategory_6_promopriceid_j,
tbl_cat7.szpriceid as szcategory_7_priceid_j,
tbl_cat7.szpromopriceid as szcategory_7_promopriceid_j,
tbl_cat8.szpriceid as szcategory_8_priceid_j,
tbl_cat8.szpromopriceid as szcategory_8_promopriceid_j,
tbl_cat9.szpriceid as szcategory_9_priceid_j,
tbl_cat9.szpromopriceid as szcategory_9_promopriceid_j,
tbl_cat10.szpriceid as szcategory_10_priceid_j,
tbl_cat10.szpromopriceid as szcategory_10_promopriceid_j


from
bos_inv_productprice
left join bos_cu_currency on bos_cu_currency.szccyid = szpriceccyid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_productprice.szproductid
left join bos_inv_productcategory as tbl_cat1 on tbl_cat1.szproductcategoryid = bos_inv_product.szcategory_1
left join bos_inv_productcategory as tbl_cat2 on tbl_cat2.szproductcategoryid = bos_inv_product.szcategory_2
left join bos_inv_productcategory as tbl_cat3 on tbl_cat3.szproductcategoryid = bos_inv_product.szcategory_3
left join bos_inv_productcategory as tbl_cat4 on tbl_cat4.szproductcategoryid = bos_inv_product.szcategory_4
left join bos_inv_productcategory as tbl_cat5 on tbl_cat5.szproductcategoryid = bos_inv_product.szcategory_5
left join bos_inv_productcategory as tbl_cat6 on tbl_cat6.szproductcategoryid = bos_inv_product.szcategory_6
left join bos_inv_productcategory as tbl_cat7 on tbl_cat7.szproductcategoryid = bos_inv_product.szcategory_7
left join bos_inv_productcategory as tbl_cat8 on tbl_cat8.szproductcategoryid = bos_inv_product.szcategory_8
left join bos_inv_productcategory as tbl_cat9 on tbl_cat9.szproductcategoryid = bos_inv_product.szcategory_9
left join bos_inv_productcategory as tbl_cat10 on tbl_cat10.szproductcategoryid = bos_inv_product.szcategory_10

where
bos_inv_productprice.szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductpurchinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_productpurchaseinfo.szproductid,
bos_inv_productpurchaseinfo.szuomid,
bos_inv_productpurchaseinfo.sztaxtypeid,
bos_inv_productpurchaseinfo.busepricewtax,
bos_inv_productpurchaseinfo.decpurchprice,
bos_inv_productpurchaseinfo.szpriceccyid,
bos_inv_productpurchaseinfo.declastpurchprice,
bos_inv_productpurchaseinfo.dtmlastpurchdate,
bos_inv_productpurchaseinfo.szlastsupplierid,
bos_ap_supplier.szname as szlastsuppliernm,
bos_inv_productpurchaseinfo.szpriceid,
bos_cu_currency.szamountformat as szccyamountformat,
bos_inv_productpurchaseinfo.szpromopriceid,
bos_inv_productpurchaseinfo.szdefaultsuppid,
coalesce(defsupp.szname, '') as szdefaultsuppnm_j,
decbasepurchprice_s

from bos_inv_productpurchaseinfo
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_inv_productpurchaseinfo.szlastsupplierid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_productpurchaseinfo.szpriceccyid
left join bos_ap_supplier defsupp on defsupp.szsuppid = bos_inv_productpurchaseinfo.szdefaultsuppid
where szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductpurchinfo_013(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_productpurchaseinfo.szproductid,  
bos_inv_productpurchaseinfo.szuomid,  
bos_inv_productpurchaseinfo.sztaxtypeid,  
bos_inv_productpurchaseinfo.busepricewtax,  
bos_inv_productpurchaseinfo.decpurchprice,  
bos_inv_productpurchaseinfo.szpriceccyid,  
bos_inv_productpurchaseinfo.declastpurchprice,  
bos_inv_productpurchaseinfo.dtmlastpurchdate,  
bos_inv_productpurchaseinfo.szlastsupplierid,  
bos_ap_supplier.szname as szlastsuppliernm,  
bos_inv_productpurchaseinfo.szpriceid,  
bos_cu_currency.szamountformat as szccyamountformat,  
bos_inv_productpurchaseinfo.szpromopriceid,  
bos_inv_productpurchaseinfo.szdefaultsuppid,  
coalesce(defsupp.szname, '') as szdefaultsuppnm_j,  
decbasepurchprice_s  

from bos_inv_productpurchaseinfo  
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_inv_productpurchaseinfo.szlastsupplierid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_inv_productpurchaseinfo.szpriceccyid  
left join bos_ap_supplier defsupp on defsupp.szsuppid = bos_inv_productpurchaseinfo.szdefaultsuppid  
where szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproductsernum(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
select 
szdescription 

from 
bos_inv_productsernum 
where 
szproductid = p_szproductid and szproductsn = p_szproductsn ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_getproducttechinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid,
decweight,
	szuomweight,
	decvolume,
	szuomvolume,
	declength,
	szuomlength,
	decwidth,
	szuomwidth,
	decheight,
	szuomheight,
	decstoretemp,
	szuomtemp,
	decstorehuminity,
	szuomhuminity,
	szdescription

from 
bos_inv_producttechnicalspecinfo
where 
 szproductid  = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproductexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szname

from 
bos_inv_product
where 
szproductid  = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproductposinfoexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productpositioninfo
where 
szproductid  = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproductpriceexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productprice
where 
szproductid  = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproductpurchinfoexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_productpurchaseinfo
where 
szproductid  = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproductsernumexist(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
select 
szdescription 

from 
bos_inv_productsernum 
where 
szproductid = p_szproductid and szproductsn = p_szproductsn ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_isproducttechinfoexist(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_producttechnicalspecinfo
where 
szproductid  = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproduct(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_product
set 
bkit = bkit
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproductposinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productpositioninfo
set 
szmediatype = szmediatype
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproductprice(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productprice
set 
busepricewtax = busepricewtax
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproductpurchinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productpurchaseinfo
set 
busepricewtax  = busepricewtax
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproductsernum(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
update bos_inv_productsernum
set 
szdescription = szdescription
where 
szproductid = p_szproductid and
szproductsn = p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_lockproducttechinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_producttechnicalspecinfo
set 
decweight = decweight
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproduct(
p_szproductid bos_dt_szid,
p_szname varchar,
p_sznickname bos_dt_szname,
p_bservice bit,
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_bkit bit,
p_bexplodekit bit,
p_bbreaknonexplodekit bos_dt_bboolean,
p_sztrackingtype bos_dt_szsmallid,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_szqtyformat varchar,
p_szorderitemtypeid bos_dt_szid,
p_szarclassid bos_dt_szid,
p_sztaxtypeid bos_dt_szid,
p_szcompuomid bos_dt_szid,
p_szsupplytype bos_dt_szsmallid,
p_bdonotcheckqtywhendoproductbooking bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_bshowkit bit,
p_szdiscountgroupid bos_dt_szid,
p_busedbyallworkplace bos_dt_bboolean,
p_bpromo bos_dt_bboolean,
p_dtmpromostart timestamp,
p_dtmpromoend timestamp,
p_szbarcode bos_dt_szid,
p_szbarcodesekunder bos_dt_szid,
p_szbarcodetersier bos_dt_szid,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
update bos_inv_product
set 
szname = p_szname,
sznickname = p_sznickname,
bservice = p_bservice,
szuomclassid = p_szuomclassid,
szuomid = p_szuomid,

bkit = p_bkit,
bexplodekit = p_bexplodekit,
bbreaknonexplodekit = p_bbreaknonexplodekit,

sztrackingtype = p_sztrackingtype,
szcategory_1  = p_szcategory_1,
szcategory_2  = p_szcategory_2,
szcategory_3  = p_szcategory_3,
szcategory_4  = p_szcategory_4,
szcategory_5  = p_szcategory_5,
szcategory_6  = p_szcategory_6,
szcategory_7  = p_szcategory_7,
szcategory_8  = p_szcategory_8,
szcategory_9  = p_szcategory_9,
szcategory_10  = p_szcategory_10,

szqtyformat = p_szqtyformat,
szorderitemtypeid = p_szorderitemtypeid,
szarclassid = p_szarclassid,
sztaxtypeid = p_sztaxtypeid,

szcompuomid = p_szcompuomid,
szsupplytype=p_szsupplytype,
bdonotcheckqtywhendoproductbooking = p_bdonotcheckqtywhendoproductbooking,

dtmvalidstart = p_dtmvalidstart,
dtmvalidend = p_dtmvalidend,

bshowkit=p_bshowkit,

szdiscountgroupid = p_szdiscountgroupid,
busedbyallworkplace = p_busedbyallworkplace,
bpromo=p_bpromo,
dtmpromostart=p_dtmpromostart,
dtmpromoend=p_dtmpromoend,
szbarcode=p_szbarcode

-- add szbarcodesekunder and szbarcodetersier
, szbarcodesekunder = p_szbarcodesekunder,
szbarcodetersier = p_szbarcodetersier,
szapplicationclass = p_szapplicationclass


where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproduct_013(
p_szproductid bos_dt_szid,
p_szname varchar,
p_sznickname bos_dt_szname,
p_bservice bit,
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_bkit bit,
p_bexplodekit bit,
p_bbreaknonexplodekit bos_dt_bboolean,
p_sztrackingtype bos_dt_szsmallid,
p_szcategory_1 bos_dt_szid,
p_szcategory_2 bos_dt_szid,
p_szcategory_3 bos_dt_szid,
p_szcategory_4 bos_dt_szid,
p_szcategory_5 bos_dt_szid,
p_szcategory_6 bos_dt_szid,
p_szcategory_7 bos_dt_szid,
p_szcategory_8 bos_dt_szid,
p_szcategory_9 bos_dt_szid,
p_szcategory_10 bos_dt_szid,
p_szqtyformat varchar,
p_szorderitemtypeid bos_dt_szid,
p_szarclassid bos_dt_szid,
p_sztaxtypeid bos_dt_szid,
p_szcompuomid bos_dt_szid,
p_szsupplytype bos_dt_szsmallid,
p_bdonotcheckqtywhendoproductbooking bit,
p_dtmvalidstart timestamp,
p_dtmvalidend timestamp,
p_bshowkit bit,
p_szdiscountgroupid bos_dt_szid,
p_busedbyallworkplace bos_dt_bboolean,
p_bpromo bos_dt_bboolean,
p_dtmpromostart timestamp,
p_dtmpromoend timestamp,
p_szbarcode bos_dt_szid,
p_szbarcodesekunder bos_dt_szid,
p_szbarcodetersier bos_dt_szid,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
update bos_inv_product
set 
szname = p_szname,
sznickname = p_sznickname,
bservice = p_bservice,
szuomclassid = p_szuomclassid,
szuomid = p_szuomid,

bkit = p_bkit,
bexplodekit = p_bexplodekit,
bbreaknonexplodekit = p_bbreaknonexplodekit,

sztrackingtype = p_sztrackingtype,
szcategory_1  = p_szcategory_1,
szcategory_2  = p_szcategory_2,
szcategory_3  = p_szcategory_3,
szcategory_4  = p_szcategory_4,
szcategory_5  = p_szcategory_5,
szcategory_6  = p_szcategory_6,
szcategory_7  = p_szcategory_7,
szcategory_8  = p_szcategory_8,
szcategory_9  = p_szcategory_9,
szcategory_10  = p_szcategory_10,

szqtyformat = p_szqtyformat,
szorderitemtypeid = p_szorderitemtypeid,
szarclassid = p_szarclassid,
sztaxtypeid = p_sztaxtypeid,

szcompuomid = p_szcompuomid,
szsupplytype=p_szsupplytype,
bdonotcheckqtywhendoproductbooking = p_bdonotcheckqtywhendoproductbooking,

dtmvalidstart = p_dtmvalidstart,
dtmvalidend = p_dtmvalidend,

bshowkit=p_bshowkit,

szdiscountgroupid = p_szdiscountgroupid,
busedbyallworkplace = p_busedbyallworkplace,
bpromo=p_bpromo,
dtmpromostart=p_dtmpromostart,
dtmpromoend=p_dtmpromoend,
szbarcode=p_szbarcode

-- add szbarcodesekunder and szbarcodetersier
, szbarcodesekunder = p_szbarcodesekunder,
szbarcodetersier = p_szbarcodetersier,
szapplicationclass = p_szapplicationclass


where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductposinfo(
p_szproductid bos_dt_szid,
p_szmediatype bos_dt_szsmallid,
p_szmediatitle varchar,
p_szmachinebrandid bos_dt_szid,
p_szmachinetype varchar,
p_shyear smallint,
p_szmachinesn varchar,
p_szdrawingnumber varchar,
p_szpositionnumber varchar)
returns void as
$body$
begin
update bos_inv_productpositioninfo
set 
szmediatype=p_szmediatype,
szmediatitle=p_szmediatitle,
szmachinebrandid=p_szmachinebrandid,
szmachinetype=p_szmachinetype,
shyear=p_shyear,
szmachinesn=p_szmachinesn,
szdrawingnumber=p_szdrawingnumber,
szpositionnumber=p_szpositionnumber
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductprice(
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_busepricewtax bit,
p_decprice bos_dt_decprice,
p_szpriceccyid bos_dt_szsmallid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productprice
set 
szpriceid=p_szpriceid,
szuomid=p_szuomid,
busepricewtax=p_busepricewtax,
decprice=p_decprice,
szpriceccyid=p_szpriceccyid,
szpromopriceid=p_szpromopriceid
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductprice_013(
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_busepricewtax bit,
p_decprice bos_dt_decprice,
p_szpriceccyid bos_dt_szsmallid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productprice
set 
szpriceid=p_szpriceid,
szuomid=p_szuomid,
busepricewtax=p_busepricewtax,
decprice=p_decprice,
szpriceccyid=p_szpriceccyid,
szpromopriceid=p_szpromopriceid
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductpurchinfo(
p_szproductid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_sztaxtypeid bos_dt_szid,
p_busepricewtax bit,
p_decpurchprice bos_dt_decprice,
p_szpriceccyid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szdefaultsuppid bos_dt_szid,
p_decbasepurchprice_s bos_dt_decprice)
returns void as
$body$
begin
update bos_inv_productpurchaseinfo
set 
szproductid = p_szproductid,
szuomid = p_szuomid,
sztaxtypeid = p_sztaxtypeid,
busepricewtax = p_busepricewtax,
decpurchprice = p_decpurchprice,
szpriceccyid = p_szpriceccyid,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szdefaultsuppid = p_szdefaultsuppid,
decbasepurchprice_s = p_decbasepurchprice_s
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductpurchinfo_013(
p_szproductid bos_dt_szid,
p_szuomid bos_dt_szmediumid,
p_sztaxtypeid bos_dt_szid,
p_busepricewtax bit,
p_decpurchprice bos_dt_decprice,
p_szpriceccyid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szdefaultsuppid bos_dt_szid,
p_decbasepurchprice_s bos_dt_decprice)
returns void as
$body$
begin
update bos_inv_productpurchaseinfo
set 
szproductid = p_szproductid,
szuomid = p_szuomid,
sztaxtypeid = p_sztaxtypeid,
busepricewtax = p_busepricewtax,
decpurchprice = p_decpurchprice,
szpriceccyid = p_szpriceccyid,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szdefaultsuppid = p_szdefaultsuppid,
decbasepurchprice_s = p_decbasepurchprice_s
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproductsernum(
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_inv_productsernum
set 
szdescription = p_szdescription
where 
szproductid = p_szproductid and
szproductsn = p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_product_updateproducttechinfo(
p_szproductid bos_dt_szid,
p_decweight numeric,
p_szuomweight varchar,
p_decvolume numeric,
p_szuomvolume varchar,
p_declength numeric,
p_szuomlength varchar,
p_decwidth numeric,
p_szuomwidth varchar,
p_decheight numeric,
p_szuomheight varchar,
p_decstoretemp numeric,
p_szuomtemp varchar,
p_decstorehuminity numeric,
p_szuomhuminity varchar,
p_szdescription varchar)
returns void as
$body$
begin
update bos_inv_producttechnicalspecinfo
set 
decweight=p_decweight,
szuomweight=p_szuomweight,
decvolume=p_decvolume,
szuomvolume=p_szuomvolume,
declength=p_declength,
szuomlength=p_szuomlength,
decwidth=p_decwidth,
szuomwidth=p_szuomwidth,
decheight=p_decheight,
szuomheight=p_szuomheight,
decstoretemp=p_decstoretemp,
szuomtemp=p_szuomtemp,
decstorehuminity=p_decstorehuminity,
szuomhuminity=p_szuomhuminity,
szdescription=p_szdescription
where 
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_createproductcategory(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_productcategory
(
szproductcategoryid,
szdescription,
szpriceid,
szpromopriceid,
szcategorytype,
dtmlastupdated,
balreadytransferred
)
values
(
p_szproductcategoryid,
p_szdescription,
p_szpriceid,
p_szpromopriceid,
p_szcategorytype,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_createproductcategory_013(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_productcategory
(
szproductcategoryid,
szdescription,
szpriceid,
szpromopriceid,
szcategorytype,
dtmlastupdated,
balreadytransferred
)
values
(
p_szproductcategoryid,
p_szdescription,
p_szpriceid,
p_szpromopriceid,
p_szcategorytype,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_deleteproductcategory(
p_szproductcategoryid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_productcategory
where
szproductcategoryid = p_szproductcategoryid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_deleteproductcategorywithtype(
p_szproductcategoryid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_inv_productcategory
where
szproductcategoryid = p_szproductcategoryid and 
szcategorytype = p_szcategorytype;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_getlistofproductcategory()
returns void as
$body$
begin
select 
szproductcategoryid,
szdescription

from 
bos_inv_productcategory

order by 
szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_getproductcategory(
p_szproductcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
a.szproductcategoryid,
a.szdescription,
a.szpriceid,
a.szpromopriceid,
a.szcategorytype,
b.szdescription as szcategorytypedesc_j

from 
bos_inv_productcategory a
where 
a.szproductcategoryid = p_szproductcategoryid;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_getproductcategory_013(
p_szproductcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
a.szproductcategoryid,
a.szdescription,
a.szpriceid,
a.szpromopriceid,
a.szcategorytype,
b.szdescription as szcategorytypedesc_j

from 
bos_inv_productcategory a
where 
a.szproductcategoryid = p_szproductcategoryid;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_getproductcategorywithtype(
p_szproductcategoryid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
select 
cat.szproductcategoryid,
cat.szdescription,
cat.szpriceid,
cat.szpromopriceid,
cat.szcategorytype,
typ.szdescription as szcategorytypedesc_j,
cat.dtmlastupdated,
cat.balreadytransferred


from 
bos_inv_productcategory cat
where 
cat.szproductcategoryid = p_szproductcategoryid and cat.szcategorytype = p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_isproductcategoryexist(
p_szproductcategoryid bos_dt_szid)
returns void as
$body$
begin
select 
szproductcategoryid

from 
bos_inv_productcategory
where 
szproductcategoryid = p_szproductcategoryid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_isproductcategoryexistwithtype(
p_szproductcategoryid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
select 
szproductcategoryid

from 
bos_inv_productcategory
where 
szproductcategoryid = p_szproductcategoryid and szcategorytype = p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_lockproductcategory(
p_szproductcategoryid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productcategory
set 
szdescription = szdescription
where 
szproductcategoryid = p_szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_updateproductcategory(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productcategory
set 
szdescription = p_szdescription,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szcategorytype = p_szcategorytype
where 
szproductcategoryid = p_szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_updateproductcategory_013(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productcategory
set 
szdescription = p_szdescription,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid,
szcategorytype = p_szcategorytype
where 
szproductcategoryid = p_szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_updateproductcategorywithtype(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productcategory
set 
szdescription = p_szdescription,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid
where 
szproductcategoryid = p_szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategory_updateproductcategorywithtype_013(
p_szproductcategoryid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szcategorytype bos_dt_szid)
returns void as
$body$
begin
update bos_inv_productcategory
set 
szdescription = p_szdescription,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid
where 
szproductcategoryid = p_szproductcategoryid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_createproductcategorytype(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_productcategorytype
(
szcategorytype,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcategorytype,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_deleteproductcategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
delete 
  from bos_inv_productcategorytype
where
szcategorytype = p_szcategorytype;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_getlistofproductcategorytype()
returns void as
$body$
begin
select 
szcategorytype, szdescription

from 
bos_inv_productcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_getproductcategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription,

dtmlastupdated,
balreadytransferred

from 
bos_inv_productcategorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_isproductcategorytypeexist(
p_szcategorytype varchar)
returns void as
$body$
begin
select 
szdescription

from 
bos_inv_productcategorytype
where 
szcategorytype=p_szcategorytype ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_lockproductcategorytype(
p_szcategorytype varchar)
returns void as
$body$
begin
update bos_inv_productcategorytype
set 
szdescription = szdescription
where 
szcategorytype=p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_productcategorytype_updateproductcategorytype(
p_szcategorytype varchar,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_inv_productcategorytype
set 
szdescription = p_szdescription
where 
szcategorytype = p_szcategorytype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_producttechnicalspecinfo_gettechnicalspecinfo(
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
decweight,
szuomweight,
decvolume,
szuomvolume,
declength,
szuomlength,
decwidth,
szuomwidth,
decheight,
szuomheight,
szdescription

from 
bos_inv_producttechnicalspecinfo
where 
szproductid = p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_allocatestock(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp,
p_decallocatedqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stockallocation
set 
decallocatedqty = decallocatedqty + p_decallocatedqty,
decwpallocatedqty = decwpallocatedqty + p_decallocatedqty

where 
szproductid = p_szproductid and
szworkplaceid = p_szworkplaceid and
	dtmexpired = p_dtmexpired;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_allocatestock_014(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp,
p_decallocatedqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stockallocation
set 
decallocatedqty = decallocatedqty + p_decallocatedqty,
decwpallocatedqty = decwpallocatedqty + p_decallocatedqty

where 
szproductid = p_szproductid and
 szworkplaceid = p_szworkplaceid and
    dtmexpired = p_dtmexpired;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyonhand bos_dt_decamount,
p_bfreeze smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_stock
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
decqtyonhand,
-- stock opname parameter,
bfreeze,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_decqtyonhand,
-- stock opname parameter,
p_bfreeze,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstock_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyonhand bos_dt_decamount,
p_bfreeze smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_stock
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
decqtyonhand,
-- stock opname parameter,
bfreeze,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_decqtyonhand,
-- stock opname parameter,
p_bfreeze,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstock_015(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyonhand bos_dt_decamount,
p_bfreeze smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_szdistproductid bos_dt_szid,
p_decdistqtyonhand bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_stock
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
decqtyonhand,
-- stock opname parameter,
bfreeze,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- distributor original data,
szdistproductid,
decdistqtyonhand
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_decqtyonhand,
-- stock opname parameter,
p_bfreeze,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- distributor original data,
p_szdistproductid,
p_decdistqtyonhand
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp,
p_decallocatedqty bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stockallocation
(

szproductid  ,
szworkplaceid  ,
dtmexpired  ,
decallocatedqty  ,
dtmlastupdated,
decwpallocatedqty  

)
values
(
p_szproductid,
p_szworkplaceid,
p_dtmexpired,
p_decallocatedqty,
p_dtmlastupdated,
p_decallocatedqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstockallocation_014(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp,
p_decallocatedqty bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stockallocation
(

szproductid  ,
szworkplaceid  ,
dtmexpired  ,
decallocatedqty  ,
dtmlastupdated,
decwpallocatedqty  

)
values
(
p_szproductid,
p_szworkplaceid,
p_dtmexpired,
p_decallocatedqty,
p_dtmlastupdated,
p_decallocatedqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstockhistory(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdhistoryid bytea,
p_shorder smallint,
p_decqty bos_dt_decamount,
p_decdocqty bos_dt_decamount,
p_szdocuomid bos_dt_szmediumid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szstocktransferreason varchar,
p_szordertypeid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_szpartytype bos_dt_szsmallid,
p_szpartyid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_szpartyloctype bos_dt_szsmallid,
p_szpartylocid bos_dt_szid,
p_szfakturpajakid bos_dt_szid,
p_deccogs bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stockhistory
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
dtmtransaction,
gdhistoryid,
shorder,
decqty,
decdocqty,
szdocuomid,
sztrnid,
szdocid,
szstocktransferreason,
szordertypeid,
szorderitemtypeid,
szurl,
szreportedastype,
szreportedasid,
szpartytype,
szpartyid,
szemployeeid,
szrefdocid,
szpartyloctype,
szpartylocid,
szfakturpajakid,
deccogs,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_dtmtransaction,
p_gdhistoryid,
p_shorder,
p_decqty,
p_decdocqty,
p_szdocuomid,
p_sztrnid,
p_szdocid,
p_szstocktransferreason,
p_szordertypeid,
p_szorderitemtypeid,
p_szurl,
p_szreportedastype,
p_szreportedasid,
p_szpartytype,
p_szpartyid,
p_szemployeeid,
p_szrefdocid,
p_szpartyloctype,
p_szpartylocid,
p_szfakturpajakid,
p_deccogs,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstockhistory_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdhistoryid bytea,
p_shorder smallint,
p_decqty bos_dt_decamount,
p_decdocqty bos_dt_decamount,
p_szdocuomid bos_dt_szmediumid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szstocktransferreason varchar,
p_szordertypeid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_szpartytype bos_dt_szsmallid,
p_szpartyid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_szpartyloctype bos_dt_szsmallid,
p_szpartylocid bos_dt_szid,
p_szfakturpajakid bos_dt_szid,
p_deccogs bos_dt_decamount,
p_bfreeze smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stockhistory
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
dtmtransaction,
gdhistoryid,
shorder,
decqty,
decdocqty,
szdocuomid,
sztrnid,
szdocid,
szstocktransferreason,
szordertypeid,
szorderitemtypeid,
szurl,
szreportedastype,
szreportedasid,
szpartytype,
szpartyid,
szemployeeid,
szrefdocid,
szpartyloctype,
szpartylocid,
szfakturpajakid,
deccogs,
bfreeze,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_dtmtransaction,
p_gdhistoryid,
p_shorder,
p_decqty,
p_decdocqty,
p_szdocuomid,
p_sztrnid,
p_szdocid,
p_szstocktransferreason,
p_szordertypeid,
p_szorderitemtypeid,
p_szurl,
p_szreportedastype,
p_szreportedasid,
p_szpartytype,
p_szpartyid,
p_szemployeeid,
p_szrefdocid,
p_szpartyloctype,
p_szpartylocid,
p_szfakturpajakid,
p_deccogs,
p_bfreeze,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstockhistory_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdhistoryid bytea,
p_shorder smallint,
p_decqty bos_dt_decamount,
p_decdocqty bos_dt_decamount,
p_szdocuomid bos_dt_szmediumid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szstocktransferreason varchar,
p_szordertypeid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szurl bos_dt_szurl,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_szpartytype bos_dt_szsmallid,
p_szpartyid bos_dt_szid,
p_szemployeeid bos_dt_szid,
p_szrefdocid bos_dt_szid,
p_szpartyloctype bos_dt_szsmallid,
p_szpartylocid bos_dt_szid,
p_szfakturpajakid bos_dt_szid,
p_deccogs bos_dt_decamount,
p_bfreeze smallint,
p_dtmlastupdated timestamp,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_inv_stockhistory
(
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
dtmtransaction,
gdhistoryid,
shorder,
decqty,
decdocqty,
szdocuomid,
sztrnid,
szdocid,
szstocktransferreason,
szordertypeid,
szorderitemtypeid,
szurl,
szreportedastype,
szreportedasid,
szpartytype,
szpartyid,
szemployeeid,
szrefdocid,
szpartyloctype,
szpartylocid,
szfakturpajakid,
deccogs,
bfreeze,
dtmlastupdated,
szdistproductid,
decdistqty
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_dtmtransaction,
p_gdhistoryid,
p_shorder,
p_decqty,
p_decdocqty,
p_szdocuomid,
p_sztrnid,
p_szdocid,
p_szstocktransferreason,
p_szordertypeid,
p_szorderitemtypeid,
p_szurl,
p_szreportedastype,
p_szreportedasid,
p_szpartytype,
p_szpartyid,
p_szemployeeid,
p_szrefdocid,
p_szpartyloctype,
p_szpartylocid,
p_szfakturpajakid,
p_deccogs,
p_bfreeze,
p_dtmlastupdated,
p_szdistproductid,
p_decdistqty
);
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksn(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocksn
(
szproductsn,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
shqty,
dtmlastupdated,
isynctransferstatus
)
values
(
p_szproductsn,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_shqty,
p_dtmlastupdated,
0
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksn_014(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocksn
(
szproductsn,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
shqty,
dtmlastupdated,
isynctransferstatus
)
values
(
p_szproductsn,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_shqty,
p_dtmlastupdated,
0
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksnhistory(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_gdstockhistoryid bytea,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocksnhistory
(
szproductsn,
szproductid,
gdstockhistoryid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
shqty,
dtmlastupdated
)
values
(
p_szproductsn,
p_szproductid,
p_gdstockhistoryid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_shqty,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksnhistory_013(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_gdstockhistoryid bytea,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocksnhistory
(
szproductsn,
szproductid,
gdstockhistoryid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
shqty,
dtmlastupdated,
isynctransferstatus
)
values
(
p_szproductsn,
p_szproductid,
p_gdstockhistoryid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_szreportedastype,
p_szreportedasid,
p_shqty,
p_dtmlastupdated,
0
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksnproduct(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_dtmlastchecked timestamp,
p_szsuppid bos_dt_szid,
p_szcheckerid bos_dt_szid,
p_szchassisnumber bos_dt_szmediumname)
returns void as
$body$
begin
insert into bos_inv_stocksnproduct
(
szproductsn,
szproductid,
dtmlastchecked,
szsuppid,
szcheckerid,
szchassisnumber,
isynctransferstatus
)
values
(
p_szproductsn,
p_szproductid,
p_dtmlastchecked,
p_szsuppid,
p_szcheckerid,
p_szchassisnumber,
0
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocksnproduct_014(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_dtmlastchecked timestamp,
p_szsuppid bos_dt_szid,
p_szcheckerid bos_dt_szid,
p_szchassisnumber bos_dt_szmediumname)
returns void as
$body$
begin
insert into bos_inv_stocksnproduct
(
szproductsn,
szproductid,
dtmlastchecked,
szsuppid,
szcheckerid,
szchassisnumber,
isynctransferstatus
)
values
(
p_szproductsn,
p_szproductid,
p_dtmlastchecked,
p_szsuppid,
p_szcheckerid,
p_szchassisnumber,
0
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp,
p_decqtytodeliver bos_dt_decamount,
p_decqtydelivered bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocktodeliver
(
szproductid,
szlocationtype,
szlocationid,
dtmdelivery,
decqtytodeliver,
decqtydelivered,
-- data status.,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_dtmdelivery,
p_decqtytodeliver,
p_decqtydelivered,
-- data status.,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktodeliver_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp,
p_decqtytodeliver bos_dt_decamount,
p_decqtydelivered bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocktodeliver
(
szproductid,
szlocationtype,
szlocationid,
dtmdelivery,
decqtytodeliver,
decqtydelivered,
-- data status.,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_dtmdelivery,
p_decqtytodeliver,
p_decqtydelivered,
-- data status.,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp,
p_decqtytoreceive bos_dt_decamount,
p_decqtyreceived bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocktoreceive
(
szproductid,
szlocationtype,
szlocationid,
dtmreceive,
decqtytoreceive,
decqtyreceived,
-- data status.,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_dtmreceive,
p_decqtytoreceive,
p_decqtyreceived,
-- data status.,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktoreceive_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp,
p_decqtytoreceive bos_dt_decamount,
p_decqtyreceived bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocktoreceive
(
szproductid,
szlocationtype,
szlocationid,
dtmreceive,
decqtytoreceive,
decqtyreceived,
-- data status.,
dtmlastupdated
)
values
(
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_dtmreceive,
p_decqtytoreceive,
p_decqtyreceived,
-- data status.,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktype(
p_szstocktypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bavailableforsales smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_stocktype
(
szstocktypeid,
szdescription,
bavailableforsales,
 dtmlastupdated,
 balreadytransferred
)
values
(
p_szstocktypeid,
p_szdescription,
p_bavailableforsales,
 p_dtmlastupdated,
 p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_createstocktype_013(
p_szstocktypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bavailableforsales smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_inv_stocktype
(
szstocktypeid,
szdescription,
bavailableforsales,
 dtmlastupdated,
 balreadytransferred
)
values
(
p_szstocktypeid,
p_szdescription,
p_bavailableforsales,
 p_dtmlastupdated,
 p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_decrstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtydecr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand - p_decqtydecr,
dtmlastupdated = p_dtmlastupdated
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and  
 szlocationid = p_szlocationid and  
 szstocktypeid = p_szstocktypeid and  
 szreportedastype = p_szreportedastype and  
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_decrstock_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtydecr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand - p_decqtydecr,
dtmlastupdated = p_dtmlastupdated
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and    
 szlocationid = p_szlocationid and    
 szstocktypeid = p_szstocktypeid and    
 szreportedastype = p_szreportedastype and    
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_decrstock_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtydecr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_decdistqtydecr bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand - p_decqtydecr,
dtmlastupdated = p_dtmlastupdated,
decdistqtyonhand = decdistqtyonhand - p_decdistqtydecr
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and    
 szlocationid = p_szlocationid and    
 szstocktypeid = p_szstocktypeid and    
 szreportedastype = p_szreportedastype and    
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_deletestocksn(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
delete 
from  bos_inv_stocksn
where
szproductsn = p_szproductsn;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_deletestocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp)
returns void as
$body$
begin
DELETE FROM
	bos_inv_stocktodeliver 
where
	szproductid = p_szproductid and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery);
	
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_deletestocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp)
returns void as
$body$
begin
DELETE FROM
	bos_inv_stocktoreceive 

where
	szproductid = p_szproductid and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive);
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_deletestocktype(
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_stocktype
where
szstocktypeid = p_szstocktypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofqtyofstockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
select 
bos_inv_stockallocation.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_stockallocation.szworkplaceid,

sum(bos_inv_stockallocation.decallocatedqty) as sumofdecallocatedqty


from 
bos_inv_stockallocation
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockallocation.szproductid


where 
bos_inv_stockallocation.szproductid like p_szproductid and bos_inv_stockallocation.szworkplaceid like p_szworkplaceid and bos_inv_stockallocation.dtmexpired >= p_dtmdate 

group by 
bos_inv_stockallocation.szproductid, 
bos_inv_product.szname, 
bos_inv_product.szqtyformat, 
bos_inv_product.sztrackingtype, 
bos_inv_product.szuomid, 
bos_inv_product.szcompuomid, 
bos_inv_product.szuomclassid, 
bos_inv_stockallocation.szworkplaceid ;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofqtyofstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
bos_inv_stocktodeliver.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_stocktodeliver.szlocationtype,
bos_inv_stocktodeliver.szlocationid,
sum(bos_inv_stocktodeliver.decqtytodeliver) as sumofdecqtytodeliver,
sum(bos_inv_stocktodeliver.decqtydelivered) as sumofdecqtydelivered


from 
bos_inv_stocktodeliver left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktodeliver.szproductid


where 
bos_inv_stocktodeliver.szproductid like p_szproductid and bos_inv_stocktodeliver.szlocationtype like p_szlocationtype and bos_inv_stocktodeliver.szlocationid like p_szlocationid and (bos_inv_stocktodeliver.dtmdelivery >= p_dtmstart and bos_inv_stocktodeliver.dtmdelivery < interval '1 day' + p_dtmend) 

group by 
bos_inv_stocktodeliver.szproductid, 
bos_inv_product.szname, 
bos_inv_product.szqtyformat, 
bos_inv_product.sztrackingtype, 
bos_inv_product.szuomid, 
bos_inv_product.szcompuomid, 
bos_inv_product.szuomclassid, 
bos_inv_stocktodeliver.szlocationtype, 
bos_inv_stocktodeliver.szlocationid ;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofqtyofstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
bos_inv_stocktoreceive.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_inv_stocktoreceive.szlocationtype,
bos_inv_stocktoreceive.szlocationid,
sum(bos_inv_stocktoreceive.decqtytoreceive) as sumofdecqtytoreceive,
sum(bos_inv_stocktoreceive.decqtyreceived) as sumofdecqtyreceived


from 
bos_inv_stocktoreceive left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktoreceive.szproductid


where 
bos_inv_stocktoreceive.szproductid like p_szproductid and bos_inv_stocktoreceive.szlocationtype like p_szlocationtype and bos_inv_stocktoreceive.szlocationid like p_szlocationid and (bos_inv_stocktoreceive.dtmreceive >= p_dtmstart and bos_inv_stocktoreceive.dtmreceive < interval '1 day' + p_dtmend) 

group by 
bos_inv_stocktoreceive.szproductid, 
bos_inv_product.szname, 
bos_inv_product.szqtyformat, 
bos_inv_product.sztrackingtype, 
bos_inv_product.szuomid, 
bos_inv_product.szcompuomid, 
bos_inv_product.szuomclassid, 
bos_inv_stocktoreceive.szlocationtype, 
bos_inv_stocktoreceive.szlocationid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofsnviewerdata(
p_szworkplaceid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szserialnumber varchar,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_inv_stocksn.szreportedasid as szworkplaceid,
coalesce(bos_gl_workplace.szname,'') as szworkplacenm,
	coalesce(dbo.kgenlocationtypetoname(bos_inv_stocksn.szlocationtype),'') as szlocationtype,
	bos_inv_stocksn.szlocationid,
	coalesce(
	bos_ar_custlocation.szcustdeliverynm,
		coalesce(
		bos_pi_employee.szname,
			coalesce(
			bos_ap_supplier.szname,
				coalesce(
				bos_inv_carrier.szname,
					coalesce(
					bos_inv_warehouse.szname,
						coalesce(
						bos_inv_vehicle.szpoliceno,''
						))))))
	as szlocationnm,
	coalesce(bos_ar_custlocation.locationszaddress_1+' '+
		   bos_ar_custlocation.locationszaddress_2+' '+
		   bos_ar_custlocation.locationszcity+' '+
		   bos_ar_custlocation.locationszzipcode,'') as szaddress,
	bos_inv_stocksn.szproductsn as szproductsn,
	coalesce(bos_inv_stocksnproduct.szproductid,'') as szproductid,
	coalesce(bos_inv_product.szname,'') as szproductnm,
	bos_inv_stocksn.szstocktypeid,
	coalesce(dbo.kgenpaymenttypetoname(bos_sd_fdoitem.szpaymenttype),'') as szpaymenttype,
	coalesce(bos_sd_rentalproduct.sztrnid+' '+bos_sd_rentalproduct.szdocid,' ') as szreffdoc,
	coalesce(dbo.kgenreturndatenotime(bos_sd_fdo.dtmdelivery),'1900-01-01') as dtminstalled,
	coalesce(dbo.kgenreturndatenotime(bos_sd_rentalproduct.dtmlastinvoiced),'1900-01-01') as dtminvoiced,
	coalesce(bos_sd_rentalproduct.deccharge,0) as decprice,
	coalesce(dbo.kgenbittroubletostringtrouble(bos_sd_rentalproduct.btrouble),'') as sztrouble


from 
bos_inv_stocksn
left join bos_sd_rentalproduct on bos_sd_rentalproduct.szsernum=bos_inv_stocksn.szproductsn
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn=bos_inv_stocksn.szproductsn
left join bos_sd_fdoitemsn on bos_sd_fdoitemsn.szproductsn=bos_sd_rentalproduct.szsernum
left join bos_sd_fdoitem on bos_sd_fdoitem.szdoid=bos_sd_fdoitemsn.szdoid and bos_sd_fdoitem.shitemnumber=bos_sd_fdoitemsn.shitemnumber
left join bos_sd_fdo on bos_sd_fdo.szdoid=bos_sd_rentalproduct.szdocid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksn.szreportedasid
left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_inv_stocksn.szlocationid
left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_inv_stocksn.szlocationid
left join bos_ar_custlocation on bos_ar_custlocation.szcustid = bos_inv_stocksn.szlocationid
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_inv_stocksn.szlocationid
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_inv_stocksn.szlocationid
left join bos_pi_employee on bos_pi_employee.szemployeeid=bos_inv_stocksnproduct.szproductid
left join bos_inv_product on bos_inv_product.szproductid=bos_inv_stocksnproduct.szproductid

where 
bos_inv_stocksn.shqty>0 and 
bos_inv_stocksn.szreportedastype='wor' and 
bos_inv_stocksn.szreportedasid like p_szworkplaceid and 
bos_inv_stocksn.szlocationtype like p_szlocationtype and 
bos_inv_stocksn.szlocationid like p_szlocationid and 
bos_inv_stocksn.szproductsn like p_szserialnumber and 
bos_inv_stocksnproduct.szproductid like p_szproductid 

order by 
szworkplaceid,
szlocationtype,
szlocationid,
szproductid,
szproductsn;

end;
$body$
language plpgsql volatile;

create or replace function bos_inv_stock_getlistofsnviewerdata_013(
p_szworkplaceid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szserialnumber varchar,
p_szproductid bos_dt_szid,
p_dtmtransaction timestamp,	
p_szstocktypeid varchar)

returns void as
$body$
begin
select distinct
bos_inv_stocksn.szreportedasid as szworkplaceid,
	coalesce(bos_gl_workplace.szname,'') as szworkplacenm,
	coalesce(dbo.kgenlocationtypetoname(bos_inv_stocksn.szlocationtype),'') as szlocationtype,
	bos_inv_stocksn.szlocationid,
	coalesce(bos_ar_custlocation.szcustdeliverynm,
		coalesce(bos_pi_employee.szname,
			coalesce(bos_ap_supplier.szname,
				coalesce(bos_inv_carrier.szname,
					coalesce(bos_inv_warehouse.szname,
						coalesce(bos_inv_vehicle.szpoliceno,'')))))) as szlocationnm,
	coalesce(bos_ar_custlocation.locationszaddress_1+' '+
		   bos_ar_custlocation.locationszaddress_2+' '+
		   bos_ar_custlocation.locationszcity+' '+
		   bos_ar_custlocation.locationszzipcode,'') as szaddress,
	bos_inv_stocksn.szproductsn as szproductsn,
	coalesce(bos_inv_stocksn.szproductid,'') as szproductid,
	coalesce(bos_inv_product.szname,'') as szproductnm,
	bos_inv_stocksn.szstocktypeid,
	coalesce(dbo.kgenpaymenttypetoname(bos_sd_fdoitem.szpaymenttype),'') as szpaymenttype,
	coalesce(bos_sd_rentalproduct.sztrnid+' '+bos_sd_rentalproduct.szdocid,' ') as szreffdoc,
	coalesce(dbo.kgenreturndatenotime(bos_sd_fdo.dtmdelivery),'1900-01-01') as dtminstalled,
	coalesce(dbo.kgenreturndatenotime(bos_sd_rentalproduct.dtmlastinvoiced),'1900-01-01') as dtminvoiced,
	coalesce(bos_sd_rentalproduct.deccharge,0) as decprice,
	coalesce(dbo.kgenbittroubletostringtrouble(bos_sd_rentalproduct.btrouble),'') as sztrouble


from 
(
        select 
			szproductsn,
			szreportedasid,
			szproductid,
			szreportedastype,
			szlocationtype,
			szlocationid,
			szstocktypeid
        from
			(	select 
					a.szproductsn,
					shqty*-1 as flag, 
					a.szreportedasid, 
					a.szproductid, 
					a.szreportedastype, 
					a.szlocationtype, 
					a.szlocationid, 
					a.szstocktypeid
				from bos_inv_stocksnhistory a
				inner join bos_inv_stockhistory b on b.gdhistoryid = a.gdstockhistoryid
				where cast(b.dtmtransaction as date) > p_dtmtransaction
					and a.szreportedasid like p_szworkplaceid
					and a.szproductid like p_szproductid
					and a.szstocktypeid like p_szstocktypeid
					and a.szlocationid like p_szlocationid
					and a.szlocationtype like p_szlocationtype
					and a.szreportedastype = 'wor'
					and a.szproductsn like p_szserialnumber
				union all
				select 
					c.szproductsn,shqty as flag,
					szreportedasid,szproductid,
					c.szreportedastype,
					c.szlocationtype,
					c.szlocationid,
					c.szstocktypeid
				from bos_inv_stocksn c 
				inner join bos_inv_stocksnproduct d on c.szproductsn = d.szproductsn
					and szreportedasid like p_szworkplaceid
					and szproductid like p_szproductid
					and szstocktypeid like p_szstocktypeid
					and szlocationid like p_szlocationid
					and szlocationtype like p_szlocationtype
					and szreportedastype = 'wor'
					and c.szproductsn like p_szserialnumber
			) z
        group by 
			szproductsn,
			szreportedasid,
			szproductid,
			szreportedastype,
			szlocationtype,
			szlocationid,
			szstocktypeid
         having sum(flag) <> 0
    ) as bos_inv_stocksn
left join bos_sd_rentalproduct on bos_sd_rentalproduct.szsernum = bos_inv_stocksn.szproductsn
--left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_inv_stocksn.szproductsn
left join bos_sd_fdoitemsn on bos_sd_fdoitemsn.szproductsn = bos_sd_rentalproduct.szsernum 
left join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdoitemsn.szdoid 
	and bos_sd_fdoitem.shitemnumber = bos_sd_fdoitemsn.shitemnumber 
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_rentalproduct.szdocid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksn.szreportedasid
left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_inv_stocksn.szlocationid
left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_inv_stocksn.szlocationid
left join bos_ar_custlocation on bos_ar_custlocation.szcustid = bos_inv_stocksn.szlocationid
left join bos_ap_supplier on bos_ap_supplier.szsuppid = bos_inv_stocksn.szlocationid
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_inv_stocksn.szlocationid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szsalesid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksn.szproductid

order by 
szworkplaceid,
szlocationtype,
szlocationid,
szproductid,
szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
bfreeze

from 
bos_inv_stock
where 
bos_inv_stock.szproductid like p_szproductid and bos_inv_stock.szlocationtype like p_szlocationtype and bos_inv_stock.szlocationid like p_szlocationid and bos_inv_stock.szstocktypeid like p_szstocktypeid and bos_inv_stock.szreportedastype like p_szreportedastype and bos_inv_stock.szreportedasid like  p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstock_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
szreportedastype,
szreportedasid,
bfreeze

from 
bos_inv_stock
where 
bos_inv_stock.szproductid like p_szproductid and bos_inv_stock.szlocationtype like p_szlocationtype and bos_inv_stock.szlocationid like p_szlocationid and bos_inv_stock.szstocktypeid like p_szstocktypeid and bos_inv_stock.szreportedastype like p_szreportedastype and bos_inv_stock.szreportedasid like  p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockbalance(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szproductcat_4 bos_dt_szid,
p_szproductcat_5 bos_dt_szid)
returns void as
$body$
begin

with bish as(
select  
decqtycurrent = sum(case when dtmtransaction >= p_dtmend + 1   then decqty else 0 end),
decqtyout = sum(case when dtmtransaction < p_dtmend + 1 and decqty < 0  then decqty else 0 end),
decqtyin = sum(case when dtmtransaction < p_dtmend + 1 and decqty >= 0  then decqty else 0 end),
szproductid,  
szlocationtype,  
szlocationid,  
szstocktypeid,  
szreportedastype,  
szreportedasid
from  
bos_inv_stockhistory
where
dtmtransaction >= p_dtmstart
group by  
szproductid,  
szlocationtype,  
szlocationid,  
szstocktypeid,  
szreportedastype,  
szreportedasid
)
select   
bis.szproductid,  
bip.szname as szproductname,  
bis.szlocationtype,  
bis.szlocationid,  
bis.szstocktypeid,  
bis.szreportedastype,  

bis.szreportedasid,  
wp.szname as szreportedasnm_j,  

bip.szqtyformat,  
bip.sztrackingtype,  
bip.szuomid,  
bip.szcompuomid as szproductcompuomid,  
bip.szuomclassid as szproductuomclassid_j,  
bis.decqtyonhand
, coalesce(bish.decqtyin, 0) as decqtyin
, coalesce(bish.decqtyout,0) as decqtyout
, coalesce(bish.decqtycurrent, 0) as decqtytocurrent  

from  
bos_inv_stock as bis  
left join bos_inv_product as bip on bis.szproductid = bip.szproductid  
left join bos_gl_workplace as wp on wp.szworkplaceid = bis.szreportedasid  
left join bish
on 
bish.szproductid = bis.szproductid and  
bish.szlocationtype = bis.szlocationtype and  
bish.szlocationid = bis.szlocationid and  
bish.szstocktypeid = bis.szstocktypeid and  
bish.szreportedastype = bis.szreportedastype and  
bish.szreportedasid = bis.szreportedasid

where  
bis.szproductid = case p_szproductid when '%' then bis.szproductid else p_szproductid end
and bis.szlocationtype = case p_szlocationtype when '%' then bis.szlocationtype else p_szlocationtype end
and bis.szlocationid = case p_szlocationid when '%' then bis.szlocationid else p_szlocationid end
and bis.szstocktypeid = case p_szstocktypeid when '%' then bis.szstocktypeid else p_szstocktypeid end
and bis.szreportedastype = case p_szreportedastype when '%' then bis.szreportedastype else p_szreportedastype end
and bis.szreportedasid = case p_szreportedasid  when '%' then bis.szreportedasid else p_szreportedasid end
and bip.szcategory_1 = case p_szproductcat_1 when '%' then bip.szcategory_1 else p_szproductcat_1 end
and bip.szcategory_2 = case p_szproductcat_2 when '%' then bip.szcategory_2 else p_szproductcat_2 end
and bip.szcategory_3 = case p_szproductcat_3 when '%' then bip.szcategory_3 else p_szproductcat_3 end
and bip.szcategory_4 = case p_szproductcat_4 when '%' then bip.szcategory_4 else p_szproductcat_4 end
and bip.szcategory_5 = case p_szproductcat_5 when '%' then bip.szcategory_5 else p_szproductcat_5 end

order by  
bis.szproductid,  
bip.szname,  
bis.szlocationtype,  
bis.szlocationid,  
bis.szstocktypeid,  
bis.szreportedastype,  
bis.szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockbalance_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szproductcat_1 bos_dt_szid,
p_szproductcat_2 bos_dt_szid,
p_szproductcat_3 bos_dt_szid,
p_szproductcat_4 bos_dt_szid,
p_szproductcat_5 bos_dt_szid)
returns void as
$body$
begin

with bish as(  
select    
decqtycurrent = sum(case when dtmtransaction >= p_dtmend + 1   then decqty else 0 end),  
decqtyout = sum(case when dtmtransaction < p_dtmend + 1 and decqty < 0  then decqty else 0 end),  
decqtyin = sum(case when dtmtransaction < p_dtmend + 1 and decqty >= 0  then decqty else 0 end),  
szproductid,    
szlocationtype,    
szlocationid,    
szstocktypeid,    
szreportedastype,    
szreportedasid  
from    
bos_inv_stockhistory  
where  
dtmtransaction >= p_dtmstart  
group by    
szproductid,    
szlocationtype,    
szlocationid,    
szstocktypeid,    
szreportedastype,    
szreportedasid  
)  
select     
bis.szproductid,    
bip.szname as szproductname,    
bis.szlocationtype,    
bis.szlocationid,    
bis.szstocktypeid,    
bis.szreportedastype,    

bis.szreportedasid,    
wp.szname as szreportedasnm_j,    

bip.szqtyformat,    
bip.sztrackingtype,    
bip.szuomid,    
bip.szcompuomid as szproductcompuomid,    
bip.szuomclassid as szproductuomclassid_j,    
bis.decqtyonhand  
, coalesce(bish.decqtyin, 0) as decqtyin  
, coalesce(bish.decqtyout,0) as decqtyout  
, coalesce(bish.decqtycurrent, 0) as decqtytocurrent    

from    
bos_inv_stock as bis    
left join bos_inv_product as bip on bis.szproductid = bip.szproductid    
left join bos_gl_workplace as wp on wp.szworkplaceid = bis.szreportedasid    
left join bish  
on   
bish.szproductid = bis.szproductid and    
bish.szlocationtype = bis.szlocationtype and    
bish.szlocationid = bis.szlocationid and    
bish.szstocktypeid = bis.szstocktypeid and    
bish.szreportedastype = bis.szreportedastype and    
bish.szreportedasid = bis.szreportedasid  

where    
bis.szproductid = case p_szproductid when '%' then bis.szproductid else p_szproductid end  
and bis.szlocationtype = case p_szlocationtype when '%' then bis.szlocationtype else p_szlocationtype end  
and bis.szlocationid = case p_szlocationid when '%' then bis.szlocationid else p_szlocationid end  
and bis.szstocktypeid = case p_szstocktypeid when '%' then bis.szstocktypeid else p_szstocktypeid end  
and bis.szreportedastype = case p_szreportedastype when '%' then bis.szreportedastype else p_szreportedastype end  
and bis.szreportedasid = case p_szreportedasid  when '%' then bis.szreportedasid else p_szreportedasid end  
and bip.szcategory_1 = case p_szproductcat_1 when '%' then bip.szcategory_1 else p_szproductcat_1 end  
and bip.szcategory_2 = case p_szproductcat_2 when '%' then bip.szcategory_2 else p_szproductcat_2 end  
and bip.szcategory_3 = case p_szproductcat_3 when '%' then bip.szcategory_3 else p_szproductcat_3 end  
and bip.szcategory_4 = case p_szproductcat_4 when '%' then bip.szcategory_4 else p_szproductcat_4 end  
and bip.szcategory_5 = case p_szproductcat_5 when '%' then bip.szcategory_5 else p_szproductcat_5 end  

order by    
bis.szproductid,    
bip.szname,    
bis.szlocationtype,    
bis.szlocationid,    
bis.szstocktypeid,    
bis.szreportedastype,    
bis.szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockdata(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.szstocktypeid,
bos_inv_stock.szreportedastype,

bos_inv_stock.szreportedasid,
wp.szname as szreportedasnm_j,

bos_inv_stock.szlocationtype,
bos_inv_stock.szlocationid,
bos_inv_stock.decqtyonhand,

--datastatus
bos_inv_stock.dtmlastupdated,
bos_inv_stock.balreadytransferred

--for stock opname
,bos_inv_stock.bfreeze
from
bos_inv_stock 
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_inv_stock.szreportedasid
where
bos_inv_stock.szproductid like p_szproductid and
bos_inv_stock.szreportedastype like p_szreportedastype and
bos_inv_stock.szreportedasid like  p_szreportedasid and
bos_inv_stock.szlocationtype like p_szlocationtype and
bos_inv_stock.szlocationid like p_szlocationid and
bos_inv_stock.szstocktypeid like p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockdata_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.szstocktypeid,
bos_inv_stock.szreportedastype,

bos_inv_stock.szreportedasid,
wp.szname as szreportedasnm_j,

bos_inv_stock.szlocationtype,
bos_inv_stock.szlocationid,
bos_inv_stock.decqtyonhand,

--datastatus
bos_inv_stock.dtmlastupdated,
bos_inv_stock.balreadytransferred

--for stock opname
,bos_inv_stock.bfreeze
from
bos_inv_stock 
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_inv_stock.szreportedasid
where
bos_inv_stock.szproductid like p_szproductid and
bos_inv_stock.szreportedastype like p_szreportedastype and
bos_inv_stock.szreportedasid like  p_szreportedasid and
bos_inv_stock.szlocationtype like p_szlocationtype and
bos_inv_stock.szlocationid like p_szlocationid and
bos_inv_stock.szstocktypeid like p_szstocktypeid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockdataavailableforsales(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin

select  
bos_inv_stock.szproductid,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_product.sztrackingtype as szproducttrackingtype,  
bos_inv_product.szuomid as szproductuomid,  
bos_inv_product.szcompuomid as szproductcompuomid,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_stock.szstocktypeid,  
bos_inv_stock.szreportedastype,  

bos_inv_stock.szreportedasid,  
wp.szname as szreportedasnm_j,  

bos_inv_stock.szlocationtype,  
bos_inv_stock.szlocationid,  
bos_inv_stock.decqtyonhand, 
bos_inv_stock.bfreeze, 

--datastatus  
bos_inv_stock.dtmlastupdated,  
bos_inv_stock.balreadytransferred  

from  
bos_inv_stock   
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid  
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_inv_stock.szreportedasid  

where  
bos_inv_stock.szproductid like p_szproductid and  
bos_inv_stock.szreportedastype like p_szreportedastype and  
bos_inv_stock.szreportedasid like  p_szreportedasid and  
bos_inv_stock.szlocationtype like p_szlocationtype and  
bos_inv_stock.szlocationid like p_szlocationid and  
bos_inv_stock.szstocktypeid like p_szstocktypeid and  
bos_inv_stocktype.bavailableforsales = 1;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstockdataavailableforsales_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin

select  
bos_inv_stock.szproductid,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_product.sztrackingtype as szproducttrackingtype,  
bos_inv_product.szuomid as szproductuomid,  
bos_inv_product.szcompuomid as szproductcompuomid,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_stock.szstocktypeid,  
bos_inv_stock.szreportedastype,  

bos_inv_stock.szreportedasid,  
wp.szname as szreportedasnm_j,  

bos_inv_stock.szlocationtype,  
bos_inv_stock.szlocationid,  
bos_inv_stock.decqtyonhand, 
bos_inv_stock.bfreeze, 

--datastatus  
bos_inv_stock.dtmlastupdated,  
bos_inv_stock.balreadytransferred  

from  
bos_inv_stock   
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid  
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_inv_stock.szreportedasid  

where  
bos_inv_stock.szproductid like p_szproductid and  
bos_inv_stock.szreportedastype like p_szreportedastype and  
bos_inv_stock.szreportedasid like  p_szreportedasid and  
bos_inv_stock.szlocationtype like p_szlocationtype and  
bos_inv_stock.szlocationid like p_szlocationid and  
bos_inv_stock.szstocktypeid like p_szstocktypeid and  
bos_inv_stocktype.bavailableforsales = 1;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstocksn(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szsn bos_dt_szid)
returns void as
$body$
begin

select
bos_inv_stocksn.szproductsn,
bos_inv_stocksn.szlocationtype,
bos_inv_stocksn.szlocationid,
bos_inv_stocksn.szstocktypeid,
bos_inv_stocksn.szreportedasid as szworkplaceid,
bos_inv_stocksnproduct.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
wp.szname as szreportedasnm_j

from 
bos_inv_stocksn
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_inv_stocksn.szproductsn
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnproduct.szproductid
left join bos_gl_workplace as wp on wp.szworkplaceid = bos_inv_stocksn.szreportedasid

where
bos_inv_stocksnproduct.szproductid like p_szproductid and
bos_inv_stocksn.szlocationtype like p_szlocationtype and
bos_inv_stocksn.szlocationid like p_szlocationid and
bos_inv_stocksn.szstocktypeid like p_szstocktypeid and
bos_inv_stocksn.szreportedastype = 'wor' and
bos_inv_stocksn.szreportedasid like p_szworkplaceid and
bos_inv_stocksn.szproductsn like p_szsn and
bos_inv_stocksn.shqty > 0

order by 
bos_inv_stocksn.szproductsn,
bos_inv_stocksnproduct.szproductid,
bos_inv_stocksn.szlocationtype,
bos_inv_stocksn.szlocationid,
bos_inv_stocksn.szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstocktodeliver()
returns void as
$body$
begin
select 
szproductid,
szlocationtype,
szlocationid,
dtmdelivery,
decqtytodeliver

from 
bos_inv_stocktodeliver;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstocktoreceive()
returns void as
$body$
begin
select 
szproductid,
szlocationtype,
szlocationid,
dtmreceive,
decqtytoreceive


from 
bos_inv_stocktoreceive;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getlistofstocktype()
returns void as
$body$
begin
select 
szstocktypeid,
szdescription

from 
bos_inv_stocktype;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getonestocksn(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stocksnproduct.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_stocksn.shqty,
bos_inv_stocksn.dtmlastupdated

from 
bos_inv_stocksn
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_inv_stocksn.szproductsn
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnproduct.szproductid
where
bos_inv_stocksn.szproductsn = p_szproductsn and
bos_inv_stocksn.szlocationtype = p_szlocationtype and 
bos_inv_stocksn.szlocationid = p_szlocationid and
bos_inv_stocksn.szstocktypeid=p_szstocktypeid and
bos_inv_stocksn.szreportedastype = p_szreportedastype and
bos_inv_stocksn.szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getqtyofstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select distinct
decqtyonhand

from 
bos_inv_stock
where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and szstocktypeid=p_szstocktypeid and szreportedastype = p_szreportedastype and szreportedasid = p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getqtyofstockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
select 
sum(a.decallocatedqty ) as sumofdecallocatedqty

from 
bos_inv_stockallocation a
where 
a.szproductid = p_szproductid and a.szworkplaceid = p_szworkplaceid and a.dtmexpired >= p_dtmdate group by a.szproductid, a.szworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getqtyofstockallocation_014(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
select 
sum(a.decallocatedqty ) as sumofdecallocatedqty

from 
bos_inv_stockallocation a
where 
a.szproductid = p_szproductid and a.szworkplaceid = p_szworkplaceid and a.dtmexpired >= p_dtmdate group by a.szproductid, a.szworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getqtyofstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
sum(decqtytodeliver - decqtydelivered) as sumofdecqtytodeliver

from 
bos_inv_stocktodeliver

where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid like p_szlocationid and (dtmdelivery >= p_dtmstart and dtmdelivery < interval '1 day' + p_dtmend) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getqtyofstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
sum(decqtytoreceive - decqtyreceived) as sumofdecqtytoreceive

from 
bos_inv_stocktoreceive
where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid like p_szlocationid and (dtmreceive >= p_dtmstart and dtmreceive < interval '1 day' + p_dtmend) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.bfreeze as bfreeze
,sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand


from 
bos_inv_stock
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid


where 
bos_inv_stock.szproductid = p_szproductid and bos_inv_stock.szlocationtype like p_szlocationtype and bos_inv_stock.szlocationid like p_szlocationid and bos_inv_stock.szstocktypeid like p_szstocktypeid and bos_inv_stock.szreportedastype like p_szreportedastype and bos_inv_stock.szreportedasid like  p_szreportedasid group by bos_inv_stock.szproductid, bos_inv_product.szname, bos_inv_product.szqtyformat, bos_inv_product.sztrackingtype, bos_inv_product.szuomid, bos_inv_product.szcompuomid, bos_inv_product.szuomclassid ,bos_inv_stock.bfreeze ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstock_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.bfreeze as bfreeze
,sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand


from 
bos_inv_stock
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid


where 
bos_inv_stock.szproductid = p_szproductid and 
bos_inv_stock.szlocationtype like p_szlocationtype and 
bos_inv_stock.szlocationid like p_szlocationid and 
bos_inv_stock.szstocktypeid like p_szstocktypeid and 
bos_inv_stock.szreportedastype like p_szreportedastype and 
bos_inv_stock.szreportedasid like  p_szreportedasid 
group by 
bos_inv_stock.szproductid, 
bos_inv_product.szname, 
bos_inv_product.szqtyformat, 
bos_inv_product.sztrackingtype, 
bos_inv_product.szuomid, 
bos_inv_product.szcompuomid, 
bos_inv_product.szuomclassid ,
bos_inv_stock.bfreeze ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstock_015(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.bfreeze as bfreeze
,sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand
,bos_inv_stock.szdistproductid
,sum(bos_inv_stock.decdistqtyonhand) as decsumofdistqtyonhand


from 
bos_inv_stock
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid


where 
bos_inv_stock.szproductid = p_szproductid and 
bos_inv_stock.szlocationtype like p_szlocationtype and 
bos_inv_stock.szlocationid like p_szlocationid and 
bos_inv_stock.szstocktypeid like p_szstocktypeid and 
bos_inv_stock.szreportedastype like p_szreportedastype 
and bos_inv_stock.szreportedasid like  p_szreportedasid 
group by bos_inv_stock.szproductid, 
bos_inv_product.szname, 
bos_inv_product.szqtyformat, 
bos_inv_product.sztrackingtype, 
bos_inv_product.szuomid, 
bos_inv_product.szcompuomid, 
bos_inv_product.szuomclassid ,
bos_inv_stock.bfreeze ,
bos_inv_stock.szdistproductid; 
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstockavailableforsales(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin

select  
bos_inv_stock.szproductid,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_product.sztrackingtype as szproducttrackingtype,  
bos_inv_product.szuomid as szproductuomid,  
bos_inv_product.szcompuomid as szproductcompuomid,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand ,
bos_inv_stock.bfreeze 

from  
bos_inv_stock   
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid  
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_stocklot on bos_inv_stocklot.szproductid = bos_inv_stock.szproductid  
and bos_inv_stocklot.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_lotinfo on bos_inv_lotinfo.szlotid = bos_inv_stocklot.szlotid  
left join bos_inv_lotstatus on bos_inv_lotstatus.szlotstatusid = bos_inv_lotinfo.szlotstatus  

where  
bos_inv_stock.szproductid = p_szproductid and  
bos_inv_stock.szlocationtype like p_szlocationtype and  
bos_inv_stock.szlocationid like p_szlocationid and  
bos_inv_stock.szstocktypeid like p_szstocktypeid and  
bos_inv_stock.szreportedastype like p_szreportedastype and  
bos_inv_stock.szreportedasid like  p_szreportedasid and  
(  
bos_inv_stocktype.bavailableforsales = 1  
or  
bos_inv_lotstatus.bavailableforsales = 1  
)  

group by   

bos_inv_stock.szproductid,   
bos_inv_product.szname,   
bos_inv_product.szqtyformat,   
bos_inv_product.sztrackingtype,   
bos_inv_product.szuomid,  
bos_inv_product.szcompuomid,  
bos_inv_product.szuomclassid,
bos_inv_stock.bfreeze;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstockavailableforsales_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin

select  
bos_inv_stock.szproductid,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_product.sztrackingtype as szproducttrackingtype,  
bos_inv_product.szuomid as szproductuomid,  
bos_inv_product.szcompuomid as szproductcompuomid,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand ,
bos_inv_stock.bfreeze 

from  
bos_inv_stock   
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid  
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_stocklot on bos_inv_stocklot.szproductid = bos_inv_stock.szproductid  
and bos_inv_stocklot.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_lotinfo on bos_inv_lotinfo.szlotid = bos_inv_stocklot.szlotid  
left join bos_inv_lotstatus on bos_inv_lotstatus.szlotstatusid = bos_inv_lotinfo.szlotstatus  

where  
bos_inv_stock.szproductid = p_szproductid and  
bos_inv_stock.szlocationtype like p_szlocationtype and  
bos_inv_stock.szlocationid like p_szlocationid and  
bos_inv_stock.szstocktypeid like p_szstocktypeid and  
bos_inv_stock.szreportedastype like p_szreportedastype and  
bos_inv_stock.szreportedasid like  p_szreportedasid and  
(  
bos_inv_stocktype.bavailableforsales = 1  
or  
bos_inv_lotstatus.bavailableforsales = 1  
)  

group by   
--  
--  note : what we want is to get stock of product summed, so do not add group by that could  
--  make same product id results more than one rows.  
--  
bos_inv_stock.szproductid,   
bos_inv_product.szname,   
bos_inv_product.szqtyformat,   
bos_inv_product.sztrackingtype,   
bos_inv_product.szuomid,  
bos_inv_product.szcompuomid,  
bos_inv_product.szuomclassid,
bos_inv_stock.bfreeze;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstockavailableforsales_015(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin

select  
bos_inv_stock.szproductid,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_product.sztrackingtype as szproducttrackingtype,  
bos_inv_product.szuomid as szproductuomid,  
bos_inv_product.szcompuomid as szproductcompuomid,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
sum(bos_inv_stock.decqtyonhand) as decsumofqtyonhand ,
bos_inv_stock.bfreeze, 
bos_inv_stock.szdistproductid ,
sum(bos_inv_stock.decdistqtyonhand) as decsumofdistqtyonhand 

from  
bos_inv_stock   
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid  
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_stocklot on bos_inv_stocklot.szproductid = bos_inv_stock.szproductid  
and bos_inv_stocklot.szstocktypeid = bos_inv_stock.szstocktypeid  
left join bos_inv_lotinfo on bos_inv_lotinfo.szlotid = bos_inv_stocklot.szlotid  
left join bos_inv_lotstatus on bos_inv_lotstatus.szlotstatusid = bos_inv_lotinfo.szlotstatus  

where  
bos_inv_stock.szproductid = p_szproductid and  
bos_inv_stock.szlocationtype like p_szlocationtype and  
bos_inv_stock.szlocationid like p_szlocationid and  
bos_inv_stock.szstocktypeid like p_szstocktypeid and  
bos_inv_stock.szreportedastype like p_szreportedastype and  
bos_inv_stock.szreportedasid like  p_szreportedasid and  
(  
bos_inv_stocktype.bavailableforsales = 1  
or  
bos_inv_lotstatus.bavailableforsales = 1  
)  

group by   
--  
--  note : what we want is to get stock of product summed, so do not add group by that could  
--  make same product id results more than one rows.  
--  
bos_inv_stock.szproductid,   
bos_inv_product.szname,   
bos_inv_product.szqtyformat,   
bos_inv_product.sztrackingtype,   
bos_inv_product.szuomid,  
bos_inv_product.szcompuomid,  
bos_inv_product.szuomclassid,
bos_inv_stock.bfreeze,
bos_inv_stock.szdistproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstockhistory(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select 
bos_inv_stockhistory.dtmtransaction,
bos_inv_stockhistory.gdhistoryid,
bos_inv_stockhistory.shorder,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_stockhistory.szlocationtype,
bos_inv_stockhistory.szlocationid,
bos_inv_stockhistory.szstocktypeid,
bos_inv_stockhistory.szstocktransferreason,
bos_inv_stockhistory.decdocqty,
bos_inv_stockhistory.decqty,
bos_inv_stockhistory.szdocid,
bos_inv_stockhistory.szdocuomid,
bos_inv_stockhistory.szorderitemtypeid,
bos_inv_stockhistory.szordertypeid,
bos_inv_stockhistory.sztrnid,
bos_inv_stockhistory.szurl,
bos_inv_stockhistory.szreportedastype,
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartytype,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stockhistory.szrefdocid,
bos_inv_stockhistory.szpartyloctype,
bos_inv_stockhistory.szpartylocid,
bos_inv_stockhistory.szfakturpajakid,
bos_inv_stockhistory.deccogs 

from 
bos_inv_stockhistory
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
where
bos_inv_stockhistory.szproductid = p_szproductid and
bos_inv_stockhistory.szproductid like p_szproductid and
bos_inv_stockhistory.szlocationtype like p_szlocationtype and
bos_inv_stockhistory.szlocationid like p_szlocationid and
bos_inv_stockhistory.szstocktypeid like p_szstocktypeid and
bos_inv_stockhistory.szreportedastype like p_szreportedastype and
bos_inv_stockhistory.szreportedasid like p_szreportedasid  and
(bos_inv_stockhistory.dtmtransaction >= p_dtmstart and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmend)
order by
dtmtransaction, shorder;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstockhistory_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select   
bos_inv_stockhistory.dtmtransaction,  
bos_inv_stockhistory.gdhistoryid,  
bos_inv_stockhistory.shorder,  
bos_inv_product.szname as szproductnm,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_inv_stockhistory.szlocationtype,  
bos_inv_stockhistory.szlocationid,  
bos_inv_stockhistory.szstocktypeid,  
bos_inv_stockhistory.szstocktransferreason,  
bos_inv_stockhistory.decdocqty,  
bos_inv_stockhistory.decqty,  
bos_inv_stockhistory.szdocid,  
bos_inv_stockhistory.szdocuomid,  
bos_inv_stockhistory.szorderitemtypeid,  
bos_inv_stockhistory.szordertypeid,  
bos_inv_stockhistory.sztrnid,  
bos_inv_stockhistory.szurl,  
bos_inv_stockhistory.szreportedastype,  
bos_inv_stockhistory.szreportedasid,  
bos_inv_stockhistory.szpartytype,  
bos_inv_stockhistory.szpartyid,  
bos_inv_stockhistory.szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_inv_stockhistory.szrefdocid,  
bos_inv_stockhistory.szpartyloctype,  
bos_inv_stockhistory.szpartylocid,  
bos_inv_stockhistory.szfakturpajakid,  
bos_inv_stockhistory.deccogs   

from   
bos_inv_stockhistory  
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid  
where  
bos_inv_stockhistory.szproductid = p_szproductid and  
bos_inv_stockhistory.szproductid like p_szproductid and  
bos_inv_stockhistory.szlocationtype like p_szlocationtype and  
bos_inv_stockhistory.szlocationid like p_szlocationid and  
bos_inv_stockhistory.szstocktypeid like p_szstocktypeid and  
bos_inv_stockhistory.szreportedastype like p_szreportedastype and  
bos_inv_stockhistory.szreportedasid like p_szreportedasid  and  
(bos_inv_stockhistory.dtmtransaction >= p_dtmstart and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmend)  
order by  
dtmtransaction, shorder;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksn(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin

select 
bos_inv_stocksnproduct.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_stocksn.szlocationtype, 
bos_inv_stocksn.szlocationid, 
bos_inv_stocksn.szstocktypeid,  
bos_inv_stocksn.szreportedastype,
bos_inv_stocksn.szreportedasid,
bos_inv_stocksn.shqty,
bos_inv_stocksn.dtmlastupdated
from 
bos_inv_stocksn
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_inv_stocksn.szproductsn
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnproduct.szproductid

where
bos_inv_stocksn.szproductsn = p_szproductsn and
bos_inv_stocksn.shqty > 0

order by
bos_inv_stocksn.dtmlastupdated desc;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksnhistory(
p_szproductsn bos_dt_szsn,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select 
bos_inv_stockhistory.dtmtransaction,
bos_inv_stocksnhistory.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_stocksnhistory.szlocationtype,
bos_inv_stocksnhistory.szlocationid,
bos_inv_stocksnhistory.szstocktypeid,
bos_inv_stocksnhistory.szreportedastype,
bos_inv_stocksnhistory.szreportedasid,
bos_inv_stocksnhistory.shqty,
bos_inv_stockhistory.sztrnid,
bos_inv_stockhistory.szdocid, 
bos_inv_stockhistory.szstocktransferreason,
bos_inv_stockhistory.szordertypeid,
bos_inv_stockhistory.szorderitemtypeid,
bos_inv_stockhistory.szurl,
bos_inv_stockhistory.szpartytype,
bos_inv_stockhistory.szpartyid

from 
bos_inv_stockhistory
inner join bos_inv_stocksnhistory on bos_inv_stocksnhistory.szproductid = bos_inv_stockhistory.szproductid
and bos_inv_stocksnhistory.szlocationtype = bos_inv_stockhistory.szlocationtype
and bos_inv_stocksnhistory.szlocationid = bos_inv_stockhistory.szlocationid
and bos_inv_stocksnhistory.szstocktypeid = bos_inv_stockhistory.szstocktypeid
and bos_inv_stocksnhistory.szreportedastype = bos_inv_stockhistory.szreportedastype
and bos_inv_stocksnhistory.szreportedasid = bos_inv_stockhistory.szreportedasid
--guid index is very slow. so place this where clause last (hope sql server is smart enough to use this last).
and bos_inv_stocksnhistory.gdstockhistoryid = bos_inv_stockhistory.gdhistoryid
left join bos_inv_product on bos_inv_stocksnhistory.szproductid = bos_inv_product.szproductid

where
(bos_inv_stockhistory.dtmtransaction >= p_dtmstart and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmend)
and bos_inv_stocksnhistory.szproductsn like p_szproductsn
and bos_inv_stocksnhistory.shqty > 0

order by
bos_inv_stockhistory.dtmtransaction, bos_inv_stockhistory.shorder;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksnproduct(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin

select     
bos_inv_stocksnproduct.szproductsn,    
bos_inv_stocksnproduct.szproductid,    
bos_inv_stocksnproduct.dtmlastchecked,    
bos_inv_stocksnproduct.szsuppid,    
bos_inv_stocksnproduct.szcheckerid,    
bos_inv_stocksnproduct.szchassisnumber,    
bos_ap_supplier.szname as szsuppliername,    
bos_pi_employee.szname as szcheckername,    
bos_inv_product.szname as szproductname,  
bos_inv_stocksnproduct.dtmlastupdated     
from     
bos_inv_stocksnproduct    
left join bos_ap_supplier     
on bos_inv_stocksnproduct.szsuppid = bos_ap_supplier.szsuppid    
left join bos_pi_employee    
on bos_inv_stocksnproduct.szcheckerid = bos_pi_employee.szemployeeid    
left join bos_inv_product    
on bos_inv_stocksnproduct.szproductid = bos_inv_product.szproductid    
where    
bos_inv_stocksnproduct.szproductsn = p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksnproduct_013(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin

select       
bos_inv_stocksnproduct.szproductsn,      
bos_inv_stocksnproduct.szproductid,      
bos_inv_stocksnproduct.dtmlastchecked,      
bos_inv_stocksnproduct.szsuppid,      
bos_inv_stocksnproduct.szcheckerid,      
bos_inv_stocksnproduct.szchassisnumber,      
bos_ap_supplier.szname as szsuppliername,      
bos_pi_employee.szname as szcheckername,      
bos_inv_product.szname as szproductname,    
bos_inv_stocksnproduct.dtmlastupdated       
from       
bos_inv_stocksnproduct      
left join bos_ap_supplier       
on bos_inv_stocksnproduct.szsuppid = bos_ap_supplier.szsuppid      
left join bos_pi_employee      
on bos_inv_stocksnproduct.szcheckerid = bos_pi_employee.szemployeeid      
left join bos_inv_product      
on bos_inv_stocksnproduct.szproductid = bos_inv_product.szproductid      
where      
bos_inv_stocksnproduct.szproductsn = p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksntotalqty(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
select 
sum(bos_inv_stocksn.shqty) as shtotalqty

from 
bos_inv_stocksn
where 
bos_inv_stocksn.szproductsn = p_szproductsn group by bos_inv_stocksn.szproductsn ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocksntotalqty_013(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
select 
sum(bos_inv_stocksn.shqty) as shtotalqty

from 
bos_inv_stocksn
where 
bos_inv_stocksn.szproductsn = p_szproductsn group by bos_inv_stocksn.szproductsn ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

decqtytodeliver,
decqtydelivered, bos_inv_stocktodeliver.dtmlastupdated


from 
bos_inv_stocktodeliver
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktodeliver.szproductid


where 
bos_inv_stocktodeliver.szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktodeliver_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

decqtytodeliver,
decqtydelivered, bos_inv_stocktodeliver.dtmlastupdated


from 
bos_inv_stocktodeliver
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktodeliver.szproductid


where 
bos_inv_stocktodeliver.szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

decqtytoreceive,
decqtyreceived
, bos_inv_stocktoreceive.dtmlastupdated


from 
bos_inv_stocktoreceive
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktoreceive.szproductid


where 
bos_inv_stocktoreceive.szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktoreceive_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp)
returns void as
$body$
begin
select 
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

decqtytoreceive,
decqtyreceived, bos_inv_stocktoreceive.dtmlastupdated


from 
bos_inv_stocktoreceive
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocktoreceive.szproductid


where 
bos_inv_stocktoreceive.szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktype(
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
select 
szstocktypeid,
szdescription,
bavailableforsales,

-- data status
dtmlastupdated,
balreadytransferred


from 
bos_inv_stocktype
where 
szstocktypeid = p_szstocktypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_getstocktype_014(
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
select 
szstocktypeid,
szdescription,
bavailableforsales,

-- data status
dtmlastupdated,
balreadytransferred


from 
bos_inv_stocktype
where 
szstocktypeid = p_szstocktypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyincr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand + p_decqtyincr,
dtmlastupdated = p_dtmlastupdated
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and    
 szlocationid = p_szlocationid and    
 szstocktypeid = p_szstocktypeid and    
 szreportedastype = p_szreportedastype and    
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstock_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyincr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand + p_decqtyincr,
dtmlastupdated = p_dtmlastupdated
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and      
 szlocationid = p_szlocationid and      
 szstocktypeid = p_szstocktypeid and      
 szreportedastype = p_szreportedastype and      
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstock_014(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyincr bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_decdistqtyincr bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand + p_decqtyincr,
dtmlastupdated = p_dtmlastupdated,
decdistqtyonhand = decdistqtyonhand + p_decdistqtyincr
where 
szproductid = p_szproductid and
 szlocationtype = p_szlocationtype and      
 szlocationid = p_szlocationid and      
 szstocktypeid = p_szstocktypeid and      
 szreportedastype = p_szreportedastype and      
 szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstockdelivered(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktodeliver
set 
decqtydelivered = decqtydelivered + p_decqty

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	dtmdelivery = p_dtmdelivery;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstockreceived(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktoreceive
set 
decqtyreceived = decqtyreceived + p_decqty

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	dtmreceive = p_dtmreceive;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstocksn(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_inv_stocksn
set 
shqty = shqty + p_shqty,
dtmlastupdated = p_dtmlastupdated,
isynctransferstatus=0
where 
szproductsn = p_szproductsn and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	szstocktypeid = p_szstocktypeid and
	szreportedastype = p_szreportedastype and
	szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstocksn_014(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_shqty smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_inv_stocksn
set 
shqty = shqty + p_shqty,
dtmlastupdated = p_dtmlastupdated,
isynctransferstatus=0
where 
szproductsn = p_szproductsn and
 szlocationtype = p_szlocationtype and
    szlocationid = p_szlocationid and
    szstocktypeid = p_szstocktypeid and
    szreportedastype = p_szreportedastype and
    szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktodeliver
set 
decqtytodeliver = decqtytodeliver + p_decqty

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	dtmdelivery = p_dtmdelivery;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_incrstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktoreceive
set 
decqtytoreceive = decqtytoreceive + p_decqty

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	dtmreceive = p_dtmreceive;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstockallocationexist(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp)
returns void as
$body$
begin
select 
decallocatedqty


from 
bos_inv_stockallocation

where 
szproductid = p_szproductid and szworkplaceid = p_szworkplaceid and dtmexpired = p_dtmexpired ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstockexist(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
decqtyonhand 

from 
bos_inv_stock 
where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and szstocktypeid = p_szstocktypeid and szreportedastype = p_szreportedastype and szreportedasid = p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstockhistoryexist(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdhistoryid bytea)
returns void as
$body$
begin
select 
--any short field
bos_inv_stockhistory.shorder

from 
bos_inv_stockhistory
where 
bos_inv_stockhistory.szproductid = p_szproductid and bos_inv_stockhistory.szproductid like p_szproductid and bos_inv_stockhistory.szlocationtype like p_szlocationtype and bos_inv_stockhistory.szlocationid like p_szlocationid and bos_inv_stockhistory.szstocktypeid like p_szstocktypeid and bos_inv_stockhistory.szreportedastype like p_szreportedastype and bos_inv_stockhistory.szreportedasid like p_szreportedasid  and bos_inv_stockhistory.dtmtransaction = p_dtmtransaction and gdhistoryid = p_gdhistoryid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstocksnexist(
p_szproductsn bos_dt_szsn,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
shqty


from 
bos_inv_stocksn

where 
szproductsn = p_szproductsn and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and szstocktypeid = p_szstocktypeid and szreportedastype = p_szreportedastype and szreportedasid = p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstocksnproductexist(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
select 
szproductid

from 
bos_inv_stocksnproduct
where 
szproductsn = p_szproductsn ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstocktodeliverexist(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp)
returns void as
$body$
begin
select 
decqtytodeliver


from 
bos_inv_stocktodeliver

where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstocktoreceiveexist(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp)
returns void as
$body$
begin
select 
decqtytoreceive


from 
bos_inv_stocktoreceive

where 
szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and (dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_isstocktypeexist(
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
select 
szstocktypeid

from 
bos_inv_stocktype
where 
szstocktypeid = p_szstocktypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_justgetstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.decqtyonhand,

bos_inv_stock.dtmlastupdated,
bos_inv_stock.balreadytransferred
,bos_inv_stock.bfreeze

from 
bos_inv_stock
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid


where 
bos_inv_stock.szproductid = p_szproductid and bos_inv_stock.szlocationtype = p_szlocationtype and bos_inv_stock.szlocationid = p_szlocationid and bos_inv_stock.szstocktypeid = p_szstocktypeid and bos_inv_stock.szreportedastype = p_szreportedastype and bos_inv_stock.szreportedasid = p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_justgetstock_013(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_stock.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.sztrackingtype as szproducttrackingtype,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_stock.decqtyonhand,

bos_inv_stock.dtmlastupdated,
bos_inv_stock.balreadytransferred
,bos_inv_stock.bfreeze
,bos_inv_stock.szdistproductid
,bos_inv_stock.decdistqtyonhand

from 
bos_inv_stock
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stock.szproductid


where 
bos_inv_stock.szproductid = p_szproductid and 
bos_inv_stock.szlocationtype = p_szlocationtype and 
bos_inv_stock.szlocationid = p_szlocationid and 
bos_inv_stock.szstocktypeid = p_szstocktypeid and 
bos_inv_stock.szreportedastype = p_szreportedastype and 
bos_inv_stock.szreportedasid = p_szreportedasid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_justgetstockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp)
returns void as
$body$
begin
select 
decallocatedqty,
dtmlastupdated

from 
bos_inv_stockallocation
where 
bos_inv_stockallocation.szproductid = p_szproductid and bos_inv_stockallocation.szworkplaceid = p_szworkplaceid and bos_inv_stockallocation.dtmexpired = p_dtmexpired; 
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = decqtyonhand

where 
--there's no obvious reason to lock the all or more than one products, so do not use 'like'.;
szproductid = p_szproductid and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	szstocktypeid = p_szstocktypeid and
	szreportedastype = p_szreportedastype and
	szreportedasid = p_szreportedasid;
	
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin
update bos_inv_stockallocation
set 
decallocatedqty = decallocatedqty


where 
bos_inv_stockallocation.szproductid = p_szproductid and
bos_inv_stockallocation.szworkplaceid = p_szworkplaceid and
	bos_inv_stockallocation.dtmexpired >= p_dtmdate;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstocksn(
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
update bos_inv_stocksn
set 
shqty = shqty
where 
szproductsn = p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp)
returns void as
$body$
begin
update bos_inv_stocktodeliver
set 
decqtytodeliver = decqtytodeliver

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp)
returns void as
$body$
begin
update bos_inv_stocktoreceive
set 
decqtytoreceive = decqtytoreceive

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_lockstocktype(
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_stocktype
set 
bavailableforsales = bavailableforsales

where 
szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestock(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_szreportedastype bos_dt_szsmallid,
p_szreportedasid bos_dt_szid,
p_decqtyonhand bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stock
set 
decqtyonhand = p_decqtyonhand
where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	szstocktypeid = p_szstocktypeid and
	szreportedastype = p_szreportedastype and
	szreportedasid = p_szreportedasid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestockallocation(
p_szproductid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmexpired timestamp,
p_decallocatedqty bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stockallocation
set 
decallocatedqty = p_decallocatedqty,
decwpallocatedqty = p_decallocatedqty

where 
szproductid = p_szproductid and
 szworkplaceid = p_szworkplaceid and  
 dtmexpired = p_dtmexpired;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocksnproduct(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_stocksnproduct
set 
szproductid=p_szproductid,
isynctransferstatus=0
where 
szproductsn=p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocksnproduct_014(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_stocksnproduct
set 
szproductid=p_szproductid,
isynctransferstatus=0
where 
szproductsn=p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocksnproductwstocksnproductinfo(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_dtmlastchecked timestamp,
p_szsuppid bos_dt_szid,
p_szcheckerid bos_dt_szid,
p_szchassisnumber bos_dt_szmediumname)
returns void as
$body$
begin
update bos_inv_stocksnproduct
set 
szproductid=p_szproductid,
dtmlastchecked=p_dtmlastchecked,
szsuppid=p_szsuppid,
szcheckerid=p_szcheckerid,
szchassisnumber=p_szchassisnumber,
isynctransferstatus=0
where 
szproductsn=p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocksnproductwstocksnproductinfo_014(
p_szproductsn bos_dt_szsn,
p_szproductid bos_dt_szid,
p_dtmlastchecked timestamp,
p_szsuppid bos_dt_szid,
p_szcheckerid bos_dt_szid,
p_szchassisnumber bos_dt_szmediumname)
returns void as
$body$
begin
update bos_inv_stocksnproduct
set 
szproductid=p_szproductid,
dtmlastchecked=p_dtmlastchecked,
szsuppid=p_szsuppid,
szcheckerid=p_szcheckerid,
szchassisnumber=p_szchassisnumber,
isynctransferstatus=0
where 
szproductsn=p_szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocktodeliver(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmdelivery timestamp,
p_decqtytodeliver bos_dt_decamount,
p_decqtydelivered bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktodeliver
set 
decqtytodeliver = p_decqtytodeliver,
decqtydelivered = p_decqtydelivered

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmdelivery >= p_dtmdelivery and dtmdelivery < interval '1 day' + p_dtmdelivery);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocktoreceive(
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_dtmreceive timestamp,
p_decqtytoreceive bos_dt_decamount,
p_decqtyreceived bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocktoreceive
set 
decqtytoreceive = p_decqtytoreceive,
decqtyreceived = p_decqtyreceived

where 
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	(dtmreceive >= p_dtmreceive and dtmreceive < interval '1 day' + p_dtmreceive);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stock_updatestocktype(
p_szstocktypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bavailableforsales smallint)
returns void as
$body$
begin
update bos_inv_stocktype
set 
szdescription = p_szdescription,
bavailableforsales = p_bavailableforsales

where 
szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stockhistory_getstockcardheader(
p_szworkplaceid varchar,
p_szwarehouseid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szlocationidtype bos_dt_szsmallid)
returns void as
$body$
begin

select 
st.szproductid,
coalesce(prd.szname,'') as szproductnm,
sum(st.decqtyonhand)-  
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
szlocationtype=p_szlocationidtype and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>=p_dtmfrom),0) as decbegbalance,
sum(st.decqtyonhand)-  
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
szlocationtype='war' and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>p_dtmto + 1),0) as decendbalance,
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
(szstocktransferreason='cor' or
szstocktransferreason='mor' or
szstocktransferreason='iqu' or
szstocktransferreason='rej') and
szlocationtype='war' and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>=p_dtmfrom and
dtmtransaction<p_dtmfrom+1),0) as deccorrection
from
bos_inv_stock as st
left join bos_inv_product as prd on prd.szproductid=st.szproductid
where
st.szlocationtype = 'war' and
st.szreportedastype = 'wor' and
st.szlocationid = p_szwarehouseid and
st.szreportedasid = p_szworkplaceid and
st.szproductid like p_szproductid

group by
st.szproductid,
prd.szname
order by
st.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stockhistory_getstockcardheader_014(
p_szworkplaceid varchar,
p_szwarehouseid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szlocationidtype bos_dt_szsmallid)
returns void as
$body$
begin

select 
st.szproductid,
coalesce(prd.szname,'') as szproductnm,
sum(st.decqtyonhand)-  
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
szlocationtype=p_szlocationidtype and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>=p_dtmfrom),0) as decbegbalance,
sum(st.decqtyonhand)-  
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
szlocationtype='war' and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>p_dtmto + 1),0) as decendbalance,
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory
where
(szstocktransferreason='cor' or
szstocktransferreason='mor' or
szstocktransferreason='iqu' or
szstocktransferreason='rej') and
szlocationtype='war' and
szlocationid like p_szwarehouseid and
szproductid = p_szproductid and
dtmtransaction>=p_dtmfrom and
dtmtransaction<p_dtmfrom+1),0) as deccorrection
from
bos_inv_stock as st
left join bos_inv_product as prd on prd.szproductid=st.szproductid
where
st.szlocationtype = 'war' and
st.szreportedastype = 'wor' and
st.szlocationid = p_szwarehouseid and
st.szreportedasid = p_szworkplaceid and
st.szproductid like p_szproductid
group by
st.szproductid,
prd.szname
order by
st.szproductid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stockhistory_getstockcarditem(
p_szworkplaceid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szlocationtype bos_dt_szid)
returns void as
$body$
begin
select distinct
sh.szdocid,
sh.sztrnid,
sh.szstocktypeid,
dbo.kgenreturndatenotime(dtmtransaction) as dtmdate,
sh.szpartyid,
coalesce(war.szname,coalesce(veh.szpoliceno,coalesce(wp.szname,coalesce(sp.szname,coalesce(cust.szname,''))))) as szpartyname,
sh.szrefdocid as szreffno,
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory 
where
decqty > 0 and
szdocid = sh.szdocid and
sztrnid = sh.sztrnid and
szlocationtype = sh.szlocationtype and
szlocationid like sh.szlocationid and
szproductid = sh.szproductid and
dtmtransaction = sh.dtmtransaction), 0) as decin,
coalesce(abs((
select
sum(decqty)
from
bos_inv_stockhistory 
where
decqty < 0 and
szdocid = sh.szdocid and
sztrnid = sh.sztrnid and
szlocationtype = sh.szlocationtype and
szlocationid like sh.szlocationid and
szproductid = sh.szproductid and
dtmtransaction = sh.dtmtransaction)), 0) as decout
from
bos_inv_stockhistory as sh
left join bos_gl_workplace as wp on wp.szworkplaceid=sh.szlocationid
left join bos_ap_supplier as sp on sp.szsuppid=sh.szlocationid
left join bos_ar_customer as cust on cust.szcustid=sh.szlocationid
left join bos_inv_vehicle as veh on veh.szvehicleid=sh.szlocationid
left join bos_inv_warehouse as war on war.szwarehouseid=sh.szlocationid
where
sh.szreportedastype='wor' and
sh.szlocationtype = p_szlocationtype and
sh.dtmtransaction>=p_dtmfrom and 
sh.dtmtransaction<p_dtmto + 1 and
sh.szlocationid like p_szwarehouseid and
sh.szreportedasid = p_szworkplaceid and
sh.szproductid like p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stockhistory_getstockcarditem_014(
p_szworkplaceid bos_dt_szid,
p_szwarehouseid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szlocationtype bos_dt_szid)
returns void as
$body$
begin
select distinct
sh.szdocid,
sh.sztrnid,
sh.szstocktypeid,
dbo.kgenreturndatenotime(dtmtransaction) as dtmdate,
sh.szpartyid,
coalesce(war.szname,coalesce(veh.szpoliceno,coalesce(wp.szname,coalesce(sp.szname,coalesce(cust.szname,''))))) as szpartyname,
sh.szrefdocid as szreffno,
coalesce((
select
sum(decqty)
from
bos_inv_stockhistory 
where
decqty > 0 and
szdocid = sh.szdocid and
sztrnid = sh.sztrnid and
szlocationtype = sh.szlocationtype and
szlocationid like sh.szlocationid and
szproductid = sh.szproductid and
dtmtransaction = sh.dtmtransaction), 0) as decin,
coalesce(abs((
select
sum(decqty)
from
bos_inv_stockhistory 
where
decqty < 0 and
szdocid = sh.szdocid and
sztrnid = sh.sztrnid and
szlocationtype = sh.szlocationtype and
szlocationid like sh.szlocationid and
szproductid = sh.szproductid and
dtmtransaction = sh.dtmtransaction)), 0) as decout
from
bos_inv_stockhistory as sh
left join bos_gl_workplace as wp on wp.szworkplaceid=sh.szlocationid
left join bos_ap_supplier as sp on sp.szsuppid=sh.szlocationid
left join bos_ar_customer as cust on cust.szcustid=sh.szlocationid
left join bos_inv_vehicle as veh on veh.szvehicleid=sh.szlocationid
left join bos_inv_warehouse as war on war.szwarehouseid=sh.szlocationid
where
sh.szreportedastype='wor' and
sh.szlocationtype = p_szlocationtype and
sh.dtmtransaction>=p_dtmfrom and 
sh.dtmtransaction<p_dtmto + 1 and
sh.szlocationid like p_szwarehouseid and
sh.szreportedasid = p_szworkplaceid and
sh.szproductid like p_szproductid;


end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_createstocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decqtyonhand bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocklot
(
szlotid,
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
decqtyonhand,
dtmlastupdated
)
values
(
p_szlotid,
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_decqtyonhand,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_createstocklothistory(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdstockhistoryid bytea,
p_shorder smallint,
p_decqty bos_dt_decamount,
p_decdocqty bos_dt_decamount,
p_szdocuomid bos_dt_szmediumid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szstocktransferreason varchar,
p_szurl bos_dt_szurl,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocklothistory
(
szlotid,
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
dtmtransaction,
gdstockhistoryid,
shorder,
decqty,
decdocqty,
szdocuomid,
sztrnid,
szdocid,
szstocktransferreason,
szurl,
dtmlastupdated
)
values
(
p_szlotid,
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_dtmtransaction,
p_gdstockhistoryid,
p_shorder,
p_decqty,
p_decdocqty,
p_szdocuomid,
p_sztrnid,
p_szdocid,
p_szstocktransferreason,
p_szurl,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_createstocklothistory_013(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_dtmtransaction timestamp,
p_gdstockhistoryid bytea,
p_shorder smallint,
p_decqty bos_dt_decamount,
p_decdocqty bos_dt_decamount,
p_szdocuomid bos_dt_szmediumid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szstocktransferreason varchar,
p_szurl bos_dt_szurl,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_inv_stocklothistory
(
szlotid,
szproductid,
szlocationtype,
szlocationid,
szstocktypeid,
dtmtransaction,
gdstockhistoryid,
shorder,
decqty,
decdocqty,
szdocuomid,
sztrnid,
szdocid,
szstocktransferreason,
szurl,
dtmlastupdated
)
values
(
p_szlotid,
p_szproductid,
p_szlocationtype,
p_szlocationid,
p_szstocktypeid,
p_dtmtransaction,
p_gdstockhistoryid,
p_shorder,
p_decqty,
p_decdocqty,
p_szdocuomid,
p_sztrnid,
p_szdocid,
p_szstocktransferreason,
p_szurl,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_deletestocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_stocklot
where
szlotid = p_szlotid and
szproductid = p_szproductid and
szlocationtype = p_szlocationtype and
szlocationid = p_szlocationid and
szstocktypeid = p_szstocktypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_getlistofstocklot()
returns void as
$body$
begin
select 
szlotid,
	szproductid, 
	szlocationtype, 
	szlocationid, 
	szstocktypeid
	
from 
bos_inv_stocklot;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_getstocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bgetonlyavailableqty bit)
returns void as
$body$
begin

if p_bgetonlyavailableqty = 0 then


select
bos_inv_stocklot.szlotid,
bos_inv_stocklot.szproductid, 
bos_inv_stocklot.szlocationtype, 
bos_inv_stocklot.szlocationid, 
bos_inv_stocklot.szstocktypeid, sum(decqtyonhand) as decsumofqtyonhand,
coalesce(bos_inv_lotinfo.szlottypeid,'') as szlottypeid,
coalesce(bos_inv_lotinfo.declotstrength,0) as declotstrength,
bos_inv_lotinfo.dtmexpired,
coalesce(bos_inv_lotinfo.szproductioncode,'') as szproductioncode,
coalesce(bos_inv_lotinfo.szlotstatus,'') as szlotstatus,
coalesce(bos_inv_product.szname,'') as productnm

from
bos_inv_stocklot
left join bos_inv_lotinfo on bos_inv_stocklot.szlotid=bos_inv_lotinfo.szlotid and bos_inv_stocklot.szproductid=bos_inv_lotinfo.szproductid
left join bos_inv_product on bos_inv_stocklot.szproductid=bos_inv_product.szproductid

where
bos_inv_stocklot.szlotid like p_szlotid and
bos_inv_stocklot.szproductid = p_szproductid and
bos_inv_stocklot.szlocationtype like p_szlocationtype and
bos_inv_stocklot.szlocationid like p_szlocationid and
bos_inv_stocklot.szstocktypeid like p_szstocktypeid

group by
bos_inv_stocklot.szlotid, 
bos_inv_stocklot.szproductid, 
bos_inv_stocklot.szlocationtype, 
bos_inv_stocklot.szlocationid, 
bos_inv_stocklot.szstocktypeid,
bos_inv_lotinfo.szlottypeid,
bos_inv_lotinfo.declotstrength,
bos_inv_lotinfo.dtmexpired,
bos_inv_lotinfo.szproductioncode,
bos_inv_lotinfo.szlotstatus,
bos_inv_product.szname;

else

select
bos_inv_stocklot.szlotid,
bos_inv_stocklot.szproductid, 
bos_inv_stocklot.szlocationtype, 
bos_inv_stocklot.szlocationid, 
bos_inv_stocklot.szstocktypeid, sum(decqtyonhand) as decsumofqtyonhand,
coalesce(bos_inv_lotinfo.szlottypeid,'') as szlottypeid,
coalesce(bos_inv_lotinfo.declotstrength,0) as declotstrength,
bos_inv_lotinfo.dtmexpired,
coalesce(bos_inv_lotinfo.szproductioncode,'') as szproductioncode,
coalesce(bos_inv_lotinfo.szlotstatus,'') as szlotstatus,
coalesce(bos_inv_product.szname,'') as productnm

from
bos_inv_stocklot
left join bos_inv_lotinfo on bos_inv_stocklot.szlotid=bos_inv_lotinfo.szlotid and bos_inv_stocklot.szproductid=bos_inv_lotinfo.szproductid
left join bos_inv_product on bos_inv_stocklot.szproductid=bos_inv_product.szproductid

where
bos_inv_stocklot.szlotid like p_szlotid and
bos_inv_stocklot.szproductid = p_szproductid and
bos_inv_stocklot.szlocationtype like p_szlocationtype and
bos_inv_stocklot.szlocationid like p_szlocationid and
bos_inv_stocklot.szstocktypeid like p_szstocktypeid and
bos_inv_stocklot.decqtyonhand > 0	
--bgetonlyavailableqty = 1

group by
bos_inv_stocklot.szlotid, 
bos_inv_stocklot.szproductid, 
bos_inv_stocklot.szlocationtype, 
bos_inv_stocklot.szlocationid, 
bos_inv_stocklot.szstocktypeid,
bos_inv_lotinfo.szlottypeid,
bos_inv_lotinfo.declotstrength,
bos_inv_lotinfo.dtmexpired,
bos_inv_lotinfo.szproductioncode,
bos_inv_lotinfo.szlotstatus,
bos_inv_product.szname;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_getstocklot_013(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bgetonlyavailableqty bit)
returns void as
$body$
begin

if p_bgetonlyavailableqty = 0  
  then

select  
bos_inv_stocklot.szlotid,  
bos_inv_stocklot.szproductid,   
bos_inv_stocklot.szlocationtype,   
bos_inv_stocklot.szlocationid,   
bos_inv_stocklot.szstocktypeid, sum(decqtyonhand) as decsumofqtyonhand,  
coalesce(bos_inv_lotinfo.szlottypeid,'') as szlottypeid,  
coalesce(bos_inv_lotinfo.declotstrength,0) as declotstrength,  
bos_inv_lotinfo.dtmexpired,  
coalesce(bos_inv_lotinfo.szproductioncode,'') as szproductioncode,  
coalesce(bos_inv_lotinfo.szlotstatus,'') as szlotstatus,  
coalesce(bos_inv_product.szname,'') as productnm  

from  
bos_inv_stocklot  
left join bos_inv_lotinfo on bos_inv_stocklot.szlotid=bos_inv_lotinfo.szlotid and bos_inv_stocklot.szproductid=bos_inv_lotinfo.szproductid  
left join bos_inv_product on bos_inv_stocklot.szproductid=bos_inv_product.szproductid  

where  
bos_inv_stocklot.szlotid like p_szlotid and  
bos_inv_stocklot.szproductid = p_szproductid and  
bos_inv_stocklot.szlocationtype like p_szlocationtype and  
bos_inv_stocklot.szlocationid like p_szlocationid and  
bos_inv_stocklot.szstocktypeid like p_szstocktypeid  

group by  
bos_inv_stocklot.szlotid,   
bos_inv_stocklot.szproductid,   
bos_inv_stocklot.szlocationtype,   
bos_inv_stocklot.szlocationid,   
bos_inv_stocklot.szstocktypeid,  
bos_inv_lotinfo.szlottypeid,  
bos_inv_lotinfo.declotstrength,  
bos_inv_lotinfo.dtmexpired,  
bos_inv_lotinfo.szproductioncode,  
bos_inv_lotinfo.szlotstatus,  
bos_inv_product.szname;  

else  

select  
bos_inv_stocklot.szlotid,  
bos_inv_stocklot.szproductid,   
bos_inv_stocklot.szlocationtype,   
bos_inv_stocklot.szlocationid,   
bos_inv_stocklot.szstocktypeid, sum(decqtyonhand) as decsumofqtyonhand,  
coalesce(bos_inv_lotinfo.szlottypeid,'') as szlottypeid,  
coalesce(bos_inv_lotinfo.declotstrength,0) as declotstrength,  
bos_inv_lotinfo.dtmexpired,  
coalesce(bos_inv_lotinfo.szproductioncode,'') as szproductioncode,  
coalesce(bos_inv_lotinfo.szlotstatus,'') as szlotstatus,  
coalesce(bos_inv_product.szname,'') as productnm  

from  
bos_inv_stocklot  
left join bos_inv_lotinfo on bos_inv_stocklot.szlotid=bos_inv_lotinfo.szlotid and bos_inv_stocklot.szproductid=bos_inv_lotinfo.szproductid  
left join bos_inv_product on bos_inv_stocklot.szproductid=bos_inv_product.szproductid  

where  
bos_inv_stocklot.szlotid like p_szlotid and  
bos_inv_stocklot.szproductid = p_szproductid and  
bos_inv_stocklot.szlocationtype like p_szlocationtype and  
bos_inv_stocklot.szlocationid like p_szlocationid and  
bos_inv_stocklot.szstocktypeid like p_szstocktypeid and  
bos_inv_stocklot.decqtyonhand > 0    --bgetonlyavailableqty = 1  

group by  
bos_inv_stocklot.szlotid,   
bos_inv_stocklot.szproductid,   
bos_inv_stocklot.szlocationtype,   
bos_inv_stocklot.szlocationid,   
bos_inv_stocklot.szstocktypeid,  
bos_inv_lotinfo.szlottypeid,  
bos_inv_lotinfo.declotstrength,  
bos_inv_lotinfo.dtmexpired,  
bos_inv_lotinfo.szproductioncode,  
bos_inv_lotinfo.szlotstatus,  
bos_inv_product.szname;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_incrstocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decqtyincr bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_inv_stocklot
set 
decqtyonhand = decqtyonhand + p_decqtyincr,
dtmlastupdated = p_dtmlastupdated

where 
szlotid = p_szlotid and
szproductid = p_szproductid and    
 szlocationtype = p_szlocationtype and    
 szlocationid = p_szlocationid and    
 szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_incrstocklot_013(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decqtyincr bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_inv_stocklot
set 
decqtyonhand = decqtyonhand + p_decqtyincr,
dtmlastupdated = p_dtmlastupdated

where 
szlotid = p_szlotid and
 szproductid = p_szproductid and    
 szlocationtype = p_szlocationtype and    
 szlocationid = p_szlocationid and    
 szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_isstocklotexist(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
select 
decqtyonhand 

from 
bos_inv_stocklot 
where 
szlotid = p_szlotid and szproductid = p_szproductid and szlocationtype = p_szlocationtype and szlocationid = p_szlocationid and szstocktypeid = p_szstocktypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_lockstocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype bos_dt_szsmallid,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_stocklot
set 
decqtyonhand = decqtyonhand
where 
szlotid = p_szlotid and
szproductid = p_szproductid and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_stocklot_updatestocklot(
p_szlotid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szlocationtype varchar,
p_szlocationid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_decqtyonhand bos_dt_decamount)
returns void as
$body$
begin
update bos_inv_stocklot
set 
decqtyonhand = p_decqtyonhand
where 
szlotid= p_szlotid and
szproductid = p_szproductid and
	szlocationtype = p_szlocationtype and
	szlocationid = p_szlocationid and
	szstocktypeid = p_szstocktypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_suggestiontype_getlistofsuggestiontype()
returns void as
$body$
begin
select 
szsuggestiontypeid, szdescription 

from 
 bos_inv_suggestiontype; 

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_createuom(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_uom
(
szuomclassid,
szuomid,
block,
dtmlastupdated,
balreadytransferred
)
values
(
p_szuomclassid,
p_szuomid,
0,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_createuomitem(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid,
p_sztouomclassid bos_dt_szmediumid,
p_sztouomid bos_dt_szmediumid,
p_decvalue bos_dt_decuomconv)
returns void as
$body$
begin
insert into bos_inv_uomconversion
(
szuomclassid,
szuomid,
sztouomclassid,
sztouomid,
decvalue
)
values
(
p_szuomclassid,
p_szuomid,
p_sztouomclassid,
p_sztouomid,
p_decvalue
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_deleteuom(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
delete 
 from bos_inv_uom
where
szuomclassid = p_szuomclassid and
szuomid = p_szuomid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_deleteuomitem(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
delete 
from  bos_inv_uomconversion
where
szuomclassid = p_szuomclassid and
szuomid = p_szuomid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_getlistofuom(
p_szuomclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szuomid

from 
bos_inv_uom
where 
szuomclassid = p_szuomclassid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_getuom(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szuomclassid,
szuomid,
dtmlastupdated,
balreadytransferred

from 
bos_inv_uom
where 
szuomclassid = p_szuomclassid and szuomid = p_szuomid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_getuomconversion(
p_szfruomclassid bos_dt_szmediumid,
p_szfruomid bos_dt_szmediumid,
p_sztouomclassid bos_dt_szmediumid,
p_sztouomid bos_dt_szmediumid)
returns void as
$body$
begin
select 
decvalue

from 
bos_inv_uomconversion
where 
szuomclassid = p_szfruomclassid and szuomid = p_szfruomid and sztouomclassid = p_sztouomclassid and sztouomid = p_sztouomid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_getuomitem(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
select 
--now we support reverse conversion that we must also return the "from" uom.
szuomclassid,
szuomid,
sztouomclassid,
sztouomid,
decvalue

from 
bos_inv_uomconversion
where 
(szuomclassid = p_szuomclassid and szuomid = p_szuomid) or (sztouomclassid = p_szuomclassid and sztouomid = p_szuomid) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_isuomexist(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szuomclassid,
szuomid

from 
bos_inv_uom
where 
szuomclassid = p_szuomclassid and szuomid = p_szuomid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uom_lockuom(
p_szuomclassid bos_dt_szmediumid,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_inv_uom
set 
block=block
where 
szuomclassid = p_szuomclassid and
szuomid = p_szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_createuomclass(
p_szuomclassid bos_dt_szmediumid,
p_szdescription bos_dt_szbigdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_uomclass
(
szuomclassid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szuomclassid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_deleteuomclass(
p_szuomclassid bos_dt_szmediumid)
returns void as
$body$
begin
delete from
bos_inv_uomclass
where
 szuomclassid = p_szuomclassid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_getlistofuomclass()
returns void as
$body$
begin
select 
szuomclassid, szdescription 

from 
bos_inv_uomclass;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_getuomclass(
p_szuomclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred 

from 
bos_inv_uomclass 
where 
 szuomclassid = p_szuomclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_isuomclassexist(
p_szuomclassid bos_dt_szmediumid)
returns void as
$body$
begin
select 
szdescription 

from 
bos_inv_uomclass 
where 
 szuomclassid = p_szuomclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_lockuomclass(
p_szuomclassid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_inv_uomclass
set 
 szdescription = szdescription
where 
 szuomclassid = p_szuomclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_uomclass_updateuomclass(
p_szuomclassid bos_dt_szmediumid,
p_szdescription bos_dt_szbigdescription)
returns void as
$body$
begin
update bos_inv_uomclass
set 
 szdescription = p_szdescription
where 
 szuomclassid = p_szuomclassid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_createvehicle(
p_szvehicleid bos_dt_szid,
p_szpoliceno bos_dt_szsmallname,
p_szchassisno bos_dt_szmediumname,
p_szmachineno bos_dt_szmediumname,
p_szvehiclecapacityid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_bactive bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_vehicle
(
szvehicleid,
szpoliceno,
szchassisno,
szmachineno,
szvehiclecapacityid,
szworkplaceid,
bactive,
dtmlastupdated,
balreadytransferred
)
values
(
p_szvehicleid,
p_szpoliceno,
p_szchassisno,
p_szmachineno,
p_szvehiclecapacityid,
p_szworkplaceid,
p_bactive,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_createvehicle_013(
p_szvehicleid bos_dt_szid,
p_szpoliceno bos_dt_szsmallname,
p_szchassisno bos_dt_szmediumname,
p_szmachineno bos_dt_szmediumname,
p_szvehiclecapacityid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_bactive bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_vehicle
(
szvehicleid,
szpoliceno,
szchassisno,
szmachineno,
szvehiclecapacityid,
szworkplaceid,
bactive,
dtmlastupdated,
balreadytransferred
)
values
(
p_szvehicleid,
p_szpoliceno,
p_szchassisno,
p_szmachineno,
p_szvehiclecapacityid,
p_szworkplaceid,
p_bactive,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_deletevehicle(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM bos_inv_vehicle 
where szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_getactivevehicle(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
select 
bactive

from 
bos_inv_vehicle
where 
 szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_getlistofvehicle()
returns void as
$body$
begin
select 
szvehicleid,
szpoliceno

from 
bos_inv_vehicle;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_getvehicle(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
select 
tbl_vec.szpoliceno,
tbl_vec.szchassisno,
tbl_vec.szmachineno,
tbl_vec.szvehiclecapacityid,
tbl_vec.szworkplaceid,
tbl_vec.bactive,
tbl_cap.decmaxweight as deccapmaxweight_j,
tbl_cap.szweightuomid as szcapweightuomid_j,
tbl_cap.decmaxvolume as deccapmaxvolume_j,
tbl_cap.szvolumeuomid as szcapvolumeuomid_j,
tbl_vec.dtmlastupdated,
tbl_vec.balreadytransferred

from 
bos_inv_vehicle as tbl_vec
left join bos_inv_vehiclecapacity as tbl_cap on tbl_cap.szvehiclecapacityid = tbl_vec.szvehiclecapacityid

where 
szvehicleid = p_szvehicleid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_getvehicle_014(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
select 
tbl_vec.szpoliceno,
tbl_vec.szchassisno,
tbl_vec.szmachineno,
tbl_vec.szvehiclecapacityid,
tbl_vec.szworkplaceid,
tbl_vec.bactive,
tbl_cap.decmaxweight as deccapmaxweight_j,
tbl_cap.szweightuomid as szcapweightuomid_j,
tbl_cap.decmaxvolume as deccapmaxvolume_j,
tbl_cap.szvolumeuomid as szcapvolumeuomid_j,
tbl_vec.dtmlastupdated,
tbl_vec.balreadytransferred

from 
bos_inv_vehicle as tbl_vec
left join bos_inv_vehiclecapacity as tbl_cap on tbl_cap.szvehiclecapacityid = tbl_vec.szvehiclecapacityid

where 
szvehicleid = p_szvehicleid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_isvehicleexist(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
select 
 szpoliceno, 
  szchassisno, 
  szmachineno, 
  szvehiclecapacityid, 
  szworkplaceid 

from 
bos_inv_vehicle
where 
 szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_lockvehicle(
p_szvehicleid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_vehicle
set 
szpoliceno = szpoliceno
where 
 szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_updatevehicle(
p_szvehicleid bos_dt_szid,
p_szpoliceno bos_dt_szsmallname,
p_szchassisno bos_dt_szmediumname,
p_szmachineno bos_dt_szmediumname,
p_szvehiclecapacityid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_bactive bos_dt_bboolean)
returns void as
$body$
begin
update bos_inv_vehicle
set 
szpoliceno = p_szpoliceno,
szchassisno = p_szchassisno,
szmachineno = p_szmachineno,
szvehiclecapacityid = p_szvehiclecapacityid,
szworkplaceid = p_szworkplaceid,
bactive = p_bactive
where 
 szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehicle_updatevehicle_013(
p_szvehicleid bos_dt_szid,
p_szpoliceno bos_dt_szsmallname,
p_szchassisno bos_dt_szmediumname,
p_szmachineno bos_dt_szmediumname,
p_szvehiclecapacityid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_bactive bos_dt_bboolean)
returns void as
$body$
begin
update bos_inv_vehicle
set 
szpoliceno = p_szpoliceno,
szchassisno = p_szchassisno,
szmachineno = p_szmachineno,
szvehiclecapacityid = p_szvehiclecapacityid,
szworkplaceid = p_szworkplaceid,
bactive = p_bactive
where 
 szvehicleid = p_szvehicleid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_createvehiclecapacity(
p_szvehiclecapacityid bos_dt_szmediumid,
p_decmaxweight bos_dt_decamount,
p_decmaxvolume bos_dt_decamount,
p_szweightuomid bos_dt_szid,
p_szvolumeuomid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_inv_vehiclecapacity
(
szvehiclecapacityid,
decmaxweight,
decmaxvolume,
szweightuomid,
szvolumeuomid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szvehiclecapacityid,
p_decmaxweight,
p_decmaxvolume,
p_szweightuomid,
p_szvolumeuomid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_deletevehiclecapacity(
p_szvehiclecapacityid bos_dt_szmediumid)
returns void as
$body$
begin
delete from bos_inv_vehiclecapacity
where szvehiclecapacityid = p_szvehiclecapacityid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_getlistofvehiclecapacity()
returns void as
$body$
begin
select 
szvehiclecapacityid

from 
bos_inv_vehiclecapacity;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_getvehiclecapacity(
p_szvehiclecapacityid bos_dt_szmediumid)
returns void as
$body$
begin
select 
decmaxweight,
decmaxvolume,
	szweightuomid,
	szvolumeuomid,
	dtmlastupdated,
	balreadytransferred
	
from 
bos_inv_vehiclecapacity
where 
 szvehiclecapacityid = p_szvehiclecapacityid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_isvehiclecapacityexist(
p_szvehiclecapacityid bos_dt_szmediumid)
returns void as
$body$
begin
select 
decmaxweight, decmaxvolume 

from 
bos_inv_vehiclecapacity
where 
 szvehiclecapacityid = p_szvehiclecapacityid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_lockvehiclecapacity(
p_szvehiclecapacityid bos_dt_szmediumid)
returns void as
$body$
begin
update bos_inv_vehiclecapacity
set 
decmaxvolume = decmaxvolume
where 
 szvehiclecapacityid = p_szvehiclecapacityid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_vehiclecapacity_updatevehiclecapacity(
p_szvehiclecapacityid bos_dt_szmediumid,
p_decmaxweight bos_dt_decamount,
p_decmaxvolume bos_dt_decamount,
p_szweightuomid bos_dt_szid,
p_szvolumeuomid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_vehiclecapacity
set 
decmaxweight = p_decmaxweight,
decmaxvolume = p_decmaxvolume,
szweightuomid = p_szweightuomid,
szvolumeuomid = p_szvolumeuomid
where 
 szvehiclecapacityid = p_szvehiclecapacityid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_createwarehouse(
p_szwarehouseid bos_dt_szid,
p_szname bos_dt_szname,
p_whszcontactperson bos_dt_szname,
p_whszroomno bos_dt_szsmallname,
p_whszfloor bos_dt_szsmallname,
p_whszbuilding bos_dt_szname,
p_whszaddress_1 bos_dt_szname,
p_whszaddress_2 bos_dt_szname,
p_whszdistrict bos_dt_szname,
p_whszcity bos_dt_szmediumname,
p_whszzipcode bos_dt_szsmallname,
p_whszstate bos_dt_szmediumname,
p_whszcountry bos_dt_szmediumname,
p_whszphoneno_1 bos_dt_szmediumname,
p_whszphoneno_2 bos_dt_szmediumname,
p_whszfaxno bos_dt_szmediumname,
p_whszmobileno bos_dt_szmediumname,
p_whszemail bos_dt_szmediumname,
p_whszwebsite bos_dt_szmediumname,
p_szworkplaceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_inv_warehouse
(
szwarehouseid,
szname,
whszcontactperson,
whszroomno,
whszfloor,
whszbuilding,
whszaddress_1,
whszaddress_2,
whszdistrict,
whszcity,
whszzipcode,
whszstate,
whszcountry,
whszphoneno_1,
whszphoneno_2,
whszfaxno,
whszmobileno,
whszemail,
whszwebsite,
szworkplaceid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szwarehouseid,
p_szname,
p_whszcontactperson,
p_whszroomno,
p_whszfloor,
p_whszbuilding,
p_whszaddress_1,
p_whszaddress_2,
p_whszdistrict,
p_whszcity,
p_whszzipcode,
p_whszstate,
p_whszcountry,
p_whszphoneno_1,
p_whszphoneno_2,
p_whszfaxno,
p_whszmobileno,
p_whszemail,
p_whszwebsite,
p_szworkplaceid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_createwarehousestocktype(
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_inv_warehousestocktype
(
szwarehouseid ,
szstocktypeid
)
values
(
p_szwarehouseid ,
p_szstocktypeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_deletewarehouse(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_warehouse
where
szwarehouseid=p_szwarehouseid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_deletewarehousestocktype(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_inv_warehousestocktype
where
szwarehouseid=p_szwarehouseid;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_getlistofwarehouse()
returns void as
$body$
begin
select 
szwarehouseid,
szname

from 
bos_inv_warehouse;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_getlistofwarehousewherewp(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
select 
szwarehouseid,
szname

from 
bos_inv_warehouse
where 
szworkplaceid = p_szworkplaceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_getwarehouse(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
whszcontactperson,
whszroomno,
whszfloor,
whszbuilding,
whszaddress_1,
whszaddress_2,
whszdistrict,
whszcity,
whszzipcode,
whszstate,
whszcountry,
whszphoneno_1,
whszphoneno_2,
whszfaxno,
whszmobileno,
whszemail,
whszwebsite,
szworkplaceid,

dtmlastupdated,
balreadytransferred

from 
bos_inv_warehouse
where 
szwarehouseid=p_szwarehouseid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_getwarehousestocktype(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
select 
bos_inv_warehousestocktype.szstocktypeid,
bos_inv_stocktype.szdescription,
bos_inv_stocktype.bavailableforsales


from 
bos_inv_warehousestocktype
left join bos_inv_stocktype on bos_inv_stocktype.szstocktypeid =
bos_inv_warehousestocktype.szstocktypeid
where 
szwarehouseid = p_szwarehouseid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_iswarehouseexist(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
select 
szwarehouseid

from 
bos_inv_warehouse
where 
szwarehouseid=p_szwarehouseid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_lockwarehouse(
p_szwarehouseid bos_dt_szid)
returns void as
$body$
begin
update bos_inv_warehouse
set 
szname=szname
where 
szwarehouseid=p_szwarehouseid;

end;
$body$
language plpgsql volatile;


create or replace function bos_inv_warehouse_updatewarehouse(
p_szwarehouseid bos_dt_szid,
p_szname bos_dt_szname,
p_whszcontactperson bos_dt_szname,
p_whszroomno bos_dt_szsmallname,
p_whszfloor bos_dt_szsmallname,
p_whszbuilding bos_dt_szname,
p_whszaddress_1 bos_dt_szname,
p_whszaddress_2 bos_dt_szname,
p_whszdistrict bos_dt_szname,
p_whszcity bos_dt_szmediumname,
p_whszzipcode bos_dt_szsmallname,
p_whszstate bos_dt_szmediumname,
p_whszcountry bos_dt_szmediumname,
p_whszphoneno_1 bos_dt_szmediumname,
p_whszphoneno_2 bos_dt_szmediumname,
p_whszfaxno bos_dt_szmediumname,
p_whszmobileno bos_dt_szmediumname,
p_whszemail bos_dt_szmediumname,
p_whszwebsite bos_dt_szmediumname,
p_szworkplaceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
update bos_inv_warehouse
set 
szname=p_szname,
whszcontactperson=p_whszcontactperson,
whszroomno=p_whszroomno,
whszfloor=p_whszfloor,
whszbuilding=p_whszbuilding,
whszaddress_1=p_whszaddress_1,
whszaddress_2=p_whszaddress_2,
whszdistrict=p_whszdistrict,
whszcity=p_whszcity,
whszzipcode=p_whszzipcode,
whszstate=p_whszstate,
whszcountry=p_whszcountry,
whszphoneno_1=p_whszphoneno_1,
whszphoneno_2=p_whszphoneno_2,
whszfaxno=p_whszfaxno,
whszmobileno=p_whszmobileno,
whszemail=p_whszemail,
whszwebsite=p_whszwebsite,
szworkplaceid=p_szworkplaceid,

dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred
where 
szwarehouseid=p_szwarehouseid;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_createfpromo(
p_szfpromoid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szpromomediaid1 bos_dt_szid,
p_szpromomediaid2 bos_dt_szid,
p_szpromomediaid3 bos_dt_szid,
p_szpromomediaid4 bos_dt_szid,
p_szpromomediaid5 bos_dt_szid,
p_szpromotypeid1 bos_dt_szid,
p_szpromotypeid2 bos_dt_szid,
p_szpromotypeid3 bos_dt_szid,
p_szpromotypeid4 bos_dt_szid,
p_szpromotypeid5 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_mkt_fpromo
(
szfpromoid,
dtmstart,
dtmend,
szpromomediaid1,
szpromomediaid2,
szpromomediaid3,
szpromomediaid4,
szpromomediaid5,
szpromotypeid1,
szpromotypeid2,
szpromotypeid3,
szpromotypeid4,
szpromotypeid5,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfpromoid ,
p_dtmstart,
p_dtmend,
p_szpromomediaid1,
p_szpromomediaid2,
p_szpromomediaid3,
p_szpromomediaid4,
p_szpromomediaid5,
p_szpromotypeid1,
p_szpromotypeid2,
p_szpromotypeid3,
p_szpromotypeid4,
p_szpromotypeid5,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_createfpromoitem(
p_szfpromoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmevent timestamp,
p_deccountofperformance bos_dt_decamount,
p_decduration bos_dt_decamount,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_mkt_fpromoitem
(
szfpromoid,
shitemnumber,
dtmevent,
deccountofperformance,
decduration,
szdescription
)
values
(
p_szfpromoid,
p_shitemnumber,
p_dtmevent,
p_deccountofperformance,
p_decduration,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_deletefpromo(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_mkt_fpromo
where
szfpromoid = p_szfpromoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_deletefpromoitem(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_mkt_fpromoitem
where
szfpromoid = p_szfpromoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_getfpromo(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin

select
bos_mkt_fpromo.dtmstart,
bos_mkt_fpromo.dtmend,
bos_mkt_fpromo.szpromomediaid1,
bos_mkt_fpromo.szpromomediaid2,
bos_mkt_fpromo.szpromomediaid3,
bos_mkt_fpromo.szpromomediaid4,
bos_mkt_fpromo.szpromomediaid5,
bos_mkt_fpromo.szpromotypeid1,
bos_mkt_fpromo.szpromotypeid2,
bos_mkt_fpromo.szpromotypeid3,
bos_mkt_fpromo.szpromotypeid4,
bos_mkt_fpromo.szpromotypeid5,
bos_mkt_fpromo.szdescription,
bos_mkt_fpromo.bresultfrtransfer,
bos_mkt_fpromo.bvoid,
bos_gen_approved.bapproved,
bos_mkt_fpromo.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_mkt_fpromo.btprintedcount,
bos_mkt_fpromo.btransferred,
bos_mkt_fpromo.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_mkt_fpromo.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_mkt_fpromo.sztaxentityid,
bos_mkt_fpromo.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_mkt_fpromo.dtmcreated,
bos_mkt_fpromo.bsystemcreated,

bos_mkt_fpromo.dtmlastupdated,
bos_mkt_fpromo.balreadytransferred
from
bos_mkt_fpromo
left join bos_gen_approved on bos_gen_approved.gdapprovedid = bos_mkt_fpromo.gdapprovedid
left join bos_gl_fjournaltrans on bos_gl_fjournaltrans.szfjournalid = bos_mkt_fpromo.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_mkt_fpromo.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_mkt_fpromo.szworkplaceid
where
bos_mkt_fpromo.szfpromoid = p_szfpromoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_getfpromoitem(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin
select 
dtmevent,
deccountofperformance,
decduration,
szdescription

from 
bos_mkt_fpromoitem
where 
bos_mkt_fpromoitem.szfpromoid = p_szfpromoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_getlistoffpromo()
returns void as
$body$
begin
select 
szfpromoid,
szdescription

from 
bos_mkt_fpromo;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_isfpromoexist(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin
select 
szfpromoid

from 
bos_mkt_fpromo
where 
szfpromoid = p_szfpromoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_lockfpromo(
p_szfpromoid bos_dt_szid)
returns void as
$body$
begin
update bos_mkt_fpromo
set 
dtmstart = dtmstart
where 
szfpromoid = p_szfpromoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_fpromo_updatefpromo(
p_szfpromoid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szpromomediaid1 bos_dt_szid,
p_szpromomediaid2 bos_dt_szid,
p_szpromomediaid3 bos_dt_szid,
p_szpromomediaid4 bos_dt_szid,
p_szpromomediaid5 bos_dt_szid,
p_szpromotypeid1 bos_dt_szid,
p_szpromotypeid2 bos_dt_szid,
p_szpromotypeid3 bos_dt_szid,
p_szpromotypeid4 bos_dt_szid,
p_szpromotypeid5 bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_mkt_fpromo
set 
dtmstart = p_dtmstart,
dtmend = p_dtmend,
szpromomediaid1 = p_szpromomediaid1,
szpromomediaid2 = p_szpromomediaid2,
szpromomediaid3 = p_szpromomediaid3,
szpromomediaid4 = p_szpromomediaid4,
szpromomediaid5 = p_szpromomediaid5,
szpromotypeid1 = p_szpromotypeid1,
szpromotypeid2 = p_szpromotypeid2,
szpromotypeid3 = p_szpromotypeid3,
szpromotypeid4 = p_szpromotypeid4,
szpromotypeid5 = p_szpromotypeid5,
szdescription = p_szdescription,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid
where 
szfpromoid = p_szfpromoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_createpromoviewer(
p_szpromoviewerid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szdaterange varchar,
p_dtmstart timestamp,
p_dtmend timestamp,
p_sztimegranular varchar,
p_szpromomediaid1 bos_dt_szid,
p_szpromomediaid2 bos_dt_szid,
p_szpromomediaid3 bos_dt_szid,
p_szpromomediaid4 bos_dt_szid,
p_szpromomediaid5 bos_dt_szid,
p_szpromotypeid1 bos_dt_szid,
p_szpromotypeid2 bos_dt_szid,
p_szpromotypeid3 bos_dt_szid,
p_szpromotypeid4 bos_dt_szid,
p_szpromotypeid5 bos_dt_szid,
p_szsalesorgid1 bos_dt_szid,
p_szsalesorgid2 bos_dt_szid,
p_szsalesorgid3 bos_dt_szid,
p_szsalesorgid4 bos_dt_szid,
p_szsalesorgid5 bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szcustcategoryid1 bos_dt_szid,
p_szcustcategoryid2 bos_dt_szid,
p_szcustcategoryid3 bos_dt_szid,
p_szcustcategoryid4 bos_dt_szid,
p_szcustcategoryid5 bos_dt_szid,
p_szproductcategoryid1 bos_dt_szid,
p_szproductcategoryid2 bos_dt_szid,
p_szproductcategoryid3 bos_dt_szid,
p_szproductcategoryid4 bos_dt_szid,
p_szproductcategoryid5 bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_mkt_promoviewer
(
szpromoviewerid,
szdescription,
szdaterange,
dtmstart,
dtmend,
sztimegranular,
szpromomediaid1,
szpromomediaid2,
szpromomediaid3,
szpromomediaid4,
szpromomediaid5,
szpromotypeid1,
szpromotypeid2,
szpromotypeid3,
szpromotypeid4,
szpromotypeid5,
szsalesorgid1,
szsalesorgid2,
szsalesorgid3,
szsalesorgid4,
szsalesorgid5,
szworkplaceid,
szdistrchannelid,
szcustcategoryid1,
szcustcategoryid2,
szcustcategoryid3,
szcustcategoryid4,
szcustcategoryid5,
szproductcategoryid1,
szproductcategoryid2,
szproductcategoryid3,
szproductcategoryid4,
szproductcategoryid5,
szproductid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szpromoviewerid,
p_szdescription,
p_szdaterange,
p_dtmstart,
p_dtmend,
p_sztimegranular,
p_szpromomediaid1,
p_szpromomediaid2,
p_szpromomediaid3,
p_szpromomediaid4,
p_szpromomediaid5,
p_szpromotypeid1,
p_szpromotypeid2,
p_szpromotypeid3,
p_szpromotypeid4,
p_szpromotypeid5,
p_szsalesorgid1,
p_szsalesorgid2,
p_szsalesorgid3,
p_szsalesorgid4,
p_szsalesorgid5,
p_szworkplaceid,
p_szdistrchannelid,
p_szcustcategoryid1,
p_szcustcategoryid2,
p_szcustcategoryid3,
p_szcustcategoryid4,
p_szcustcategoryid5,
p_szproductcategoryid1,
p_szproductcategoryid2,
p_szproductcategoryid3,
p_szproductcategoryid4,
p_szproductcategoryid5,
p_szproductid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_deletepromoviewer(
p_szpromoviewerid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_mkt_promoviewer
where
szpromoviewerid = p_szpromoviewerid;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_getlistofpromoviewer()
returns void as
$body$
begin
select 
szpromoviewerid,
szdescription

from 
bos_mkt_promoviewer;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_getpromoviewer(
p_szpromoviewerid bos_dt_szid)
returns void as
$body$
begin
select 
bos_mkt_promoviewer.szdescription,
bos_mkt_promoviewer.szdaterange,
bos_mkt_promoviewer.dtmstart,
bos_mkt_promoviewer.dtmend,
bos_mkt_promoviewer.sztimegranular,
bos_mkt_promoviewer.szpromomediaid1,
bos_mkt_promoviewer.szpromomediaid2,
bos_mkt_promoviewer.szpromomediaid3,
bos_mkt_promoviewer.szpromomediaid4,
bos_mkt_promoviewer.szpromomediaid5,
bos_mkt_promoviewer.szpromotypeid1,
bos_mkt_promoviewer.szpromotypeid2,
bos_mkt_promoviewer.szpromotypeid3,
bos_mkt_promoviewer.szpromotypeid4,
bos_mkt_promoviewer.szpromotypeid5,
bos_mkt_promoviewer.szsalesorgid1,
bos_mkt_promoviewer.szsalesorgid2,
bos_mkt_promoviewer.szsalesorgid3,
bos_mkt_promoviewer.szsalesorgid4,
bos_mkt_promoviewer.szsalesorgid5,
bos_mkt_promoviewer.szworkplaceid,
bos_mkt_promoviewer.szdistrchannelid,
bos_mkt_promoviewer.szcustcategoryid1,
bos_mkt_promoviewer.szcustcategoryid2,
bos_mkt_promoviewer.szcustcategoryid3,
bos_mkt_promoviewer.szcustcategoryid4,
bos_mkt_promoviewer.szcustcategoryid5,
bos_mkt_promoviewer.szproductcategoryid1,
bos_mkt_promoviewer.szproductcategoryid2,
bos_mkt_promoviewer.szproductcategoryid3,
bos_mkt_promoviewer.szproductcategoryid4,
bos_mkt_promoviewer.szproductcategoryid5,
bos_mkt_promoviewer.szproductid,
bos_inv_product.szname as szproductnm,

-- data status.
bos_mkt_promoviewer.dtmlastupdated,
bos_mkt_promoviewer.balreadytransferred

from 
bos_mkt_promoviewer
left join bos_inv_product on bos_inv_product.szproductid = bos_mkt_promoviewer.szproductid

where 
bos_mkt_promoviewer.szpromoviewerid = p_szpromoviewerid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_ispromoviewerexist(
p_szpromoviewerid bos_dt_szid)
returns void as
$body$
begin
select 
szpromoviewerid

from 
bos_mkt_promoviewer
where 
szpromoviewerid = p_szpromoviewerid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_lockpromoviewer(
p_szpromoviewerid bos_dt_szid)
returns void as
$body$
begin
update bos_mkt_promoviewer
set 
dtmstart = dtmstart
where 
szpromoviewerid = p_szpromoviewerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_mkt_promoviewer_updatepromoviewer(
p_szpromoviewerid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szdaterange varchar,
p_dtmstart timestamp,
p_dtmend timestamp,
p_sztimegranular varchar,
p_szpromomediaid1 bos_dt_szid,
p_szpromomediaid2 bos_dt_szid,
p_szpromomediaid3 bos_dt_szid,
p_szpromomediaid4 bos_dt_szid,
p_szpromomediaid5 bos_dt_szid,
p_szpromotypeid1 bos_dt_szid,
p_szpromotypeid2 bos_dt_szid,
p_szpromotypeid3 bos_dt_szid,
p_szpromotypeid4 bos_dt_szid,
p_szpromotypeid5 bos_dt_szid,
p_szsalesorgid1 bos_dt_szid,
p_szsalesorgid2 bos_dt_szid,
p_szsalesorgid3 bos_dt_szid,
p_szsalesorgid4 bos_dt_szid,
p_szsalesorgid5 bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szdistrchannelid bos_dt_szid,
p_szcustcategoryid1 bos_dt_szid,
p_szcustcategoryid2 bos_dt_szid,
p_szcustcategoryid3 bos_dt_szid,
p_szcustcategoryid4 bos_dt_szid,
p_szcustcategoryid5 bos_dt_szid,
p_szproductcategoryid1 bos_dt_szid,
p_szproductcategoryid2 bos_dt_szid,
p_szproductcategoryid3 bos_dt_szid,
p_szproductcategoryid4 bos_dt_szid,
p_szproductcategoryid5 bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_mkt_promoviewer
set 
szdescription = p_szdescription,
szdaterange = p_szdaterange,
dtmstart = p_dtmstart,
dtmend = p_dtmend,
sztimegranular = p_sztimegranular,
szpromomediaid1 = p_szpromomediaid1,
szpromomediaid2 = p_szpromomediaid2,
szpromomediaid3 = p_szpromomediaid3,
szpromomediaid4 = p_szpromomediaid4,
szpromomediaid5 = p_szpromomediaid5,
szpromotypeid1 = p_szpromotypeid1,
szpromotypeid2 = p_szpromotypeid2,
szpromotypeid3 = p_szpromotypeid3,
szpromotypeid4 = p_szpromotypeid4,
szpromotypeid5 = p_szpromotypeid5,
szsalesorgid1 = p_szsalesorgid1,
szsalesorgid2 = p_szsalesorgid2,
szsalesorgid3 = p_szsalesorgid3,
szsalesorgid4 = p_szsalesorgid4,
szsalesorgid5 = p_szsalesorgid5,
szworkplaceid = p_szworkplaceid,
szdistrchannelid = p_szdistrchannelid,
szcustcategoryid1 = p_szcustcategoryid1,
szcustcategoryid2 = p_szcustcategoryid2,
szcustcategoryid3 = p_szcustcategoryid3,
szcustcategoryid4 = p_szcustcategoryid4,
szcustcategoryid5 = p_szcustcategoryid5,
szproductcategoryid1 = p_szproductcategoryid1,
szproductcategoryid2 = p_szproductcategoryid2,
szproductcategoryid3 = p_szproductcategoryid3,
szproductcategoryid4 = p_szproductcategoryid4,
szproductcategoryid5 = p_szproductcategoryid5,
szproductid = p_szproductid
where 
szpromoviewerid = p_szpromoviewerid;

end;
$body$
language plpgsql volatile;


create or replace function bos_msi_fieldmapping_create(
p_sztype varchar,
p_szidfrom varchar,
p_szidto varchar)
returns void as
$body$
begin
insert into bos_msi_fieldmapping(sztype, szidfrom, szidto)
values
(p_sztype, p_szidfrom, p_szidto);

end;
$body$
language plpgsql volatile;


create or replace function bos_msi_fieldmapping_delete(
p_sztype varchar)
returns void as
$body$
begin
delete 
 from bos_msi_fieldmapping
where
     (sztype = p_sztype);
end;
$body$
language plpgsql volatile;


create or replace function bos_msi_fieldmapping_getlist(
p_sztype varchar,
p_szidfrom varchar,
p_szidto varchar)
returns void as
$body$
begin
select 
     sztype, szidfrom, szidto

from 
bos_msi_fieldmapping
where 
     (sztype = p_sztype);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_createdepartment(
p_szdepartmentid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_pi_department
(szdepartmentid,szname,szdescription)
values
(
p_szdepartmentid,
p_szname,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_deletedepartment(
p_szdepartmentid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_pi_department
where
szdepartmentid=p_szdepartmentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_getdepartment(
p_szdepartmentid bos_dt_szid)
returns void as
$body$
begin
select 
szname,szdescription

from 
bos_pi_department
where 
szdepartmentid=p_szdepartmentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_getlistofdepartment()
returns void as
$body$
begin
select 
szdepartmentid,
szname,
szdescription

from 
bos_pi_department;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_isdepartmentexist(
p_szdepartmentid bos_dt_szid)
returns void as
$body$
begin
select 
szdepartmentid

from 
bos_pi_department
where 
szdepartmentid=p_szdepartmentid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_department_updatedepartment(
p_szdepartmentid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_pi_department
set 
szname = p_szname,
szdescription = p_szdescription
where 
szdepartmentid = p_szdepartmentid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_createdivision(
p_szdivisionid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_pi_division
(
szdivisionid,
szname,
szdescription
)
values
(
p_szdivisionid,
p_szname,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_deletedivision(
p_szdivisionid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_pi_division
where
szdivisionid=p_szdivisionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_getdivision(
p_szdivisionid bos_dt_szid)
returns void as
$body$
begin
select 
szname,szdescription

from 
bos_pi_division
where 
szdivisionid=p_szdivisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_getlistofdivision()
returns void as
$body$
begin
select 
szdivisionid,
szname,
szdescription

from 
bos_pi_division;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_isdivisionexist(
p_szdivisionid bos_dt_szid)
returns void as
$body$
begin
select 
szdivisionid

from 
bos_pi_division
where 
szdivisionid=p_szdivisionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_division_updatedivision(
p_szdivisionid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_pi_division
set 
szname = p_szname,
szdescription = p_szdescription
where 
szdivisionid = p_szdivisionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_changepasskeyemployee(
p_szemployeeid bos_dt_szid,
p_decpasskey bos_dt_decamount)
returns void as
$body$
begin
update bos_pi_employee
set 
decpasskey = p_decpasskey

where 
szemployeeid = p_szemployeeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_createemployee(
p_szemployeeid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szsupervisorid bos_dt_szid,
p_szdivisionid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szteamid bos_dt_szid,
p_bincludeindailysettlement bos_dt_bboolean,
p_szroutinetype bos_dt_szsmallid,
p_szfvremascheduleid bos_dt_szid,
p_introundinglevel_for_distribution integer,
p_szsubaccidformodis bos_dt_szglaccount,
p_bhasgprs bos_dt_bboolean,
p_bhasgps bos_dt_bboolean,
p_bhasprinter bos_dt_bboolean,
p_bhasbarcodecustinfo bos_dt_bboolean,
p_bhasbarcodereadertoreadsn bos_dt_bboolean,
p_decpasskey bos_dt_decamount,
p_bactive bos_dt_bboolean,
p_szgpstype bos_dt_szsmallid,
p_szbarcodereadertype bos_dt_szsmallid,
p_bmustfillassetmonitoring bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean,
p_bcheckinusinggps bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_pi_employee
(
szemployeeid,
szname,
szworkplaceid,
szdeliverygroupid,
szsupervisorid,
szdivisionid,
szdepartmentid,
szteamid,
bincludeindailysettlement,
szroutinetype,
szfvremascheduleid,
introundinglevel_for_distribution,
szsubaccidformodis,
bhasgprs,
bhasgps,
bhasprinter,
bhasbarcodecustinfo,
bhasbarcodereadertoreadsn,
decpasskey,
bactive,
szgpstype,
szbarcodereadertype,
bmustfillassetmonitoring,
dtmlastupdated,
balreadytransferred,
bcheckinusinggps
)
values
(
p_szemployeeid,
p_szname,
p_szworkplaceid,
p_szdeliverygroupid,
p_szsupervisorid,
p_szdivisionid,
p_szdepartmentid,
p_szteamid,
p_bincludeindailysettlement,
p_szroutinetype,
p_szfvremascheduleid,
p_introundinglevel_for_distribution,
p_szsubaccidformodis,
p_bhasgprs,
p_bhasgps,
p_bhasprinter,
p_bhasbarcodecustinfo,
p_bhasbarcodereadertoreadsn,
p_decpasskey,
p_bactive,
p_szgpstype,
p_szbarcodereadertype,
p_bmustfillassetmonitoring,
p_dtmlastupdated,
p_balreadytransferred,
p_bcheckinusinggps
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_createemployee_013(
p_szemployeeid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szsupervisorid bos_dt_szid,
p_szdivisionid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szteamid bos_dt_szid,
p_bincludeindailysettlement bos_dt_bboolean,
p_szroutinetype bos_dt_szsmallid,
p_szfvremascheduleid bos_dt_szid,
p_introundinglevel_for_distribution integer,
p_szsubaccidformodis bos_dt_szglaccount,
p_bhasgprs bos_dt_bboolean,
p_bhasgps bos_dt_bboolean,
p_bhasprinter bos_dt_bboolean,
p_bhasbarcodecustinfo bos_dt_bboolean,
p_bhasbarcodereadertoreadsn bos_dt_bboolean,
p_decpasskey bos_dt_decamount,
p_bactive bos_dt_bboolean,
p_szgpstype bos_dt_szsmallid,
p_szbarcodereadertype bos_dt_szsmallid,
p_bmustfillassetmonitoring bos_dt_bboolean,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean,
p_bcheckinusinggps bos_dt_bboolean,
p_szdevicetype bos_dt_szid,
p_adcid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pi_employee
(
szemployeeid,
szname,
szworkplaceid,
szdeliverygroupid,
szsupervisorid,
szdivisionid,
szdepartmentid,
szteamid,
bincludeindailysettlement,
szroutinetype,
szfvremascheduleid,
introundinglevel_for_distribution,
szsubaccidformodis,
bhasgprs,
bhasgps,
bhasprinter,
bhasbarcodecustinfo,
bhasbarcodereadertoreadsn,
decpasskey,
bactive,
szgpstype,
szbarcodereadertype,
bmustfillassetmonitoring,
dtmlastupdated,
balreadytransferred,
bcheckinusinggps,
szdevicetype,
adcid
)
values
(
p_szemployeeid,
p_szname,
p_szworkplaceid,
p_szdeliverygroupid,
p_szsupervisorid,
p_szdivisionid,
p_szdepartmentid,
p_szteamid,
p_bincludeindailysettlement,
p_szroutinetype,
p_szfvremascheduleid,
p_introundinglevel_for_distribution,
p_szsubaccidformodis,
p_bhasgprs,
p_bhasgps,
p_bhasprinter,
p_bhasbarcodecustinfo,
p_bhasbarcodereadertoreadsn,
p_decpasskey,
p_bactive,
p_szgpstype,
p_szbarcodereadertype,
p_bmustfillassetmonitoring,
p_dtmlastupdated,
p_balreadytransferred,
p_bcheckinusinggps,
p_szdevicetype,
p_adcid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_createemployeedistribution(
p_szdriverid bos_dt_szid,
p_szhelperid1 bos_dt_szid,
p_szhelperid2 bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean,
p_szhelperid3 bos_dt_szid)
returns void as
$body$
begin
insert into bos_pi_employeedistribution
(
szdriverid,
szhelperid1,
szhelperid2,
szvehicleid,
dtmlastupdated,
balreadytransferred,
szhelperid3
)
values
(
p_szdriverid,
p_szhelperid1,
p_szhelperid2,
p_szvehicleid,
p_dtmlastupdated,
p_balreadytransferred,
p_szhelperid3
-- ==================================================================,
--set ansi_nulls off,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_createemployeedistribution_014(
p_szdriverid bos_dt_szid,
p_szhelperid1 bos_dt_szid,
p_szhelperid2 bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean,
p_szhelperid3 bos_dt_szid)
returns void as
$body$
begin
insert into bos_pi_employeedistribution
(
szdriverid,
szhelperid1,
szhelperid2,
szvehicleid,
dtmlastupdated,
balreadytransferred,
szhelperid3
)
values
(
p_szdriverid,
p_szhelperid1,
p_szhelperid2,
p_szvehicleid,
p_dtmlastupdated,
p_balreadytransferred,
p_szhelperid3
-- ==================================================================,
--set ansi_nulls off
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_deleteemployee(
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_pi_employee
where
szemployeeid=p_szemployeeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_deleteemployeedistribution(
p_szdriverid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_pi_employeedistribution
where
szdriverid=p_szdriverid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getemployee(
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin

select    
emp.szname,    

emp.decpasskey,    

emp.szworkplaceid,    
wp.szname as szworkplacenm_j,    

emp.szdeliverygroupid,    
delg.szdesc as szdeliverygroupnm_j,    

emp.szsupervisorid,    
sup.szname as szsupervisornm_j,    

sup.szsupervisorid as szsupervisorid_2_j,    
sup2.szname as szsupervisornm_2_j,    

sup2.szsupervisorid as szsupervisorid_3_j,    
sup3.szname as szsupervisornm_3_j,    

emp.szdivisionid,    
div.szname as szdivisionnm_j,    

emp.szdepartmentid,    
dep.szname as szdepartmentnm_j,    

emp.szteamid,    
tea.szdescription as szteamdescr_j,    

ed.szvehicleid as szvehicleid_j,    
veh.szpoliceno as szvehiclepoliceno_j,    
veh.szvehiclecapacityid as szvehiclecapacityid_j,    

emp.bincludeindailysettlement,    
emp.szroutinetype,    

emp.szfvremascheduleid,    
emp.introundinglevel_for_distribution,    

emp.szsubaccidformodis,    
gsa.szdescription as szsubaccnmformodis_j,    

emp.dtmlastupdated,    
emp.balreadytransferred    
,    
emp.bhasgprs,    
emp.bhasgps,    
emp.bhasprinter,     
emp.bhasbarcodecustinfo,    
emp.bhasbarcodereadertoreadsn,    

emp.bactive,    
emp.szgpstype,    
emp.szbarcodereadertype,     
emp.bmustfillassetmonitoring,    
emp.bcheckinusinggps   
from    
bos_pi_employee as emp    
left join bos_gl_workplace as wp on wp.szworkplaceid = emp.szworkplaceid    

left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = emp.szdeliverygroupid    

left join bos_pi_employee as sup on sup.szemployeeid = emp.szsupervisorid    
left join bos_pi_employee as sup2 on sup2.szemployeeid = sup.szsupervisorid    
left join bos_pi_employee as sup3 on sup3.szemployeeid = sup2.szsupervisorid    

left join bos_pi_division as div on div.szdivisionid = emp.szdivisionid    
left join bos_pi_department as dep on dep.szdepartmentid = emp.szdepartmentid    
left join bos_pi_team as tea on tea.szteamid = emp.szteamid    

left join bos_pi_employeedistribution as ed on ed.szdriverid = emp.szemployeeid    
left join bos_inv_vehicle as veh on veh.szvehicleid = ed.szvehicleid    
left join bos_gl_glsubacc as gsa on gsa.szglsubaccid = emp.szsubaccidformodis    

where    
emp.szemployeeid = p_szemployeeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getemployee_013(
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin

select        
emp.szname,        

emp.decpasskey,        

emp.szworkplaceid,        
wp.szname as szworkplacenm_j,        

emp.szdeliverygroupid,        
delg.szdesc as szdeliverygroupnm_j,        

emp.szsupervisorid,        
sup.szname as szsupervisornm_j,        

sup.szsupervisorid as szsupervisorid_2_j,        
sup2.szname as szsupervisornm_2_j,        

sup2.szsupervisorid as szsupervisorid_3_j,        
sup3.szname as szsupervisornm_3_j,        

emp.szdivisionid,        
div.szname as szdivisionnm_j,        

emp.szdepartmentid,        
dep.szname as szdepartmentnm_j,        

emp.szteamid,        
tea.szdescription as szteamdescr_j,        

ed.szvehicleid as szvehicleid_j,        
veh.szpoliceno as szvehiclepoliceno_j,        
veh.szvehiclecapacityid as szvehiclecapacityid_j,        

emp.bincludeindailysettlement,        
emp.szroutinetype,        

emp.szfvremascheduleid,        
emp.introundinglevel_for_distribution,        

emp.szsubaccidformodis,        
gsa.szdescription as szsubaccnmformodis_j,        

emp.dtmlastupdated,        
emp.balreadytransferred,        
emp.bhasgprs,        
emp.bhasgps,        
emp.bhasprinter,         
emp.bhasbarcodecustinfo,        
emp.bhasbarcodereadertoreadsn,        

emp.bactive,        
emp.szgpstype,        
emp.szbarcodereadertype,         
emp.bmustfillassetmonitoring,        
emp.bcheckinusinggps,
emp.szdevicetype,
emp.adcid  

from        
bos_pi_employee as emp        
left join bos_gl_workplace as wp on wp.szworkplaceid = emp.szworkplaceid        

left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = emp.szdeliverygroupid        

left join bos_pi_employee as sup on sup.szemployeeid = emp.szsupervisorid        
left join bos_pi_employee as sup2 on sup2.szemployeeid = sup.szsupervisorid        
left join bos_pi_employee as sup3 on sup3.szemployeeid = sup2.szsupervisorid        

left join bos_pi_division as div on div.szdivisionid = emp.szdivisionid        
left join bos_pi_department as dep on dep.szdepartmentid = emp.szdepartmentid        
left join bos_pi_team as tea on tea.szteamid = emp.szteamid        

left join bos_pi_employeedistribution as ed on ed.szdriverid = emp.szemployeeid        
left join bos_inv_vehicle as veh on veh.szvehicleid = ed.szvehicleid        
left join bos_gl_glsubacc as gsa on gsa.szglsubaccid = emp.szsubaccidformodis        

where        
emp.szemployeeid = p_szemployeeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getemployeedistribution(
p_szdriverid bos_dt_szid)
returns void as
$body$
begin

select
ed.szdriverid,
e1.szname as szdrivernm,
ed.szhelperid1,
e2.szname as szhelpernm1,
ed.szhelperid2,
e3.szname as szhelpernm2,
ed.szvehicleid,
v1.szpoliceno as szpoliceno,
v1.szvehiclecapacityid,
ed.dtmlastupdated,
ed.balreadytransferred,
ed.szhelperid3,
e4.szname as szhelpernm3

from
bos_pi_employeedistribution as ed
left join bos_pi_employee as e1 on e1.szemployeeid = ed.szdriverid
left join bos_pi_employee as e2 on e2.szemployeeid = ed.szhelperid1
left join bos_pi_employee as e3 on e3.szemployeeid = ed.szhelperid2
left join bos_pi_employee as e4 on e4.szemployeeid = ed.szhelperid3
left join bos_inv_vehicle as v1 on v1.szvehicleid = ed.szvehicleid

where
ed.szdriverid=p_szdriverid;

-- ==================================================================

--set ansi_nulls off

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getemployeedistribution_014(
p_szdriverid bos_dt_szid)
returns void as
$body$
begin

select
ed.szdriverid,
e1.szname as szdrivernm,
ed.szhelperid1,
e2.szname as szhelpernm1,
ed.szhelperid2,
e3.szname as szhelpernm2,
ed.szvehicleid,
v1.szpoliceno as szpoliceno,
v1.szvehiclecapacityid,
ed.dtmlastupdated,
ed.balreadytransferred,
ed.szhelperid3,
e4.szname as szhelpernm3

from
bos_pi_employeedistribution as ed
left join bos_pi_employee as e1 on e1.szemployeeid = ed.szdriverid
left join bos_pi_employee as e2 on e2.szemployeeid = ed.szhelperid1
left join bos_pi_employee as e3 on e3.szemployeeid = ed.szhelperid2
left join bos_pi_employee as e4 on e4.szemployeeid = ed.szhelperid3
left join bos_inv_vehicle as v1 on v1.szvehicleid = ed.szvehicleid

where
ed.szdriverid=p_szdriverid;

-- ==================================================================

--set ansi_nulls off


end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getlistofemployee(
p_szworkplaceid bos_dt_szid,
p_bactiveonly bos_dt_bboolean,
p_szroutinetype bos_dt_szid)
returns void as
$body$
begin

if p_bactiveonly = 1
  then

select
szemployeeid,
szname
from
bos_pi_employee
where
szworkplaceid like p_szworkplaceid
and szroutinetype like p_szroutinetype
and bactive = 1;

else

select
szemployeeid,
szname
from
bos_pi_employee
where
szworkplaceid like p_szworkplaceid
and szroutinetype like p_szroutinetype;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getlistofemployee_013(
p_szworkplaceid bos_dt_szid,
p_bactiveonly bos_dt_bboolean,
p_szroutinetype bos_dt_szid)
returns void as
$body$
begin

if p_bactiveonly = 1  
  then

select  
szemployeeid,  
szname  
from  
bos_pi_employee  
where  
szworkplaceid like p_szworkplaceid  
and szroutinetype like p_szroutinetype  
and bactive = 1; 

else  

select  
szemployeeid,  
szname  
from  
bos_pi_employee  
where  
szworkplaceid like p_szworkplaceid  
and szroutinetype like p_szroutinetype;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_getlistofemployeedistribution()
returns void as
$body$
begin
select 
szdriverid

from 
bos_pi_employeedistribution;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_isemployeedistributionexist(
p_szdriverid bos_dt_szid)
returns void as
$body$
begin
select 
szdriverid

from 
bos_pi_employeedistribution
where 
szdriverid=p_szdriverid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_isemployeeexist(
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin
select 
szemployeeid

from 
bos_pi_employee
where 
szemployeeid=p_szemployeeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_lockemployee(
p_szemployeeid bos_dt_szid)
returns void as
$body$
begin
update bos_pi_employee
set 
szworkplaceid=szworkplaceid
where 
szemployeeid=p_szemployeeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_lockemployeedistribution(
p_szdriverid bos_dt_szid)
returns void as
$body$
begin
update bos_pi_employeedistribution
set 
szhelperid1 = szhelperid1

where 
szdriverid=p_szdriverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_updateemployee(
p_szemployeeid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szsupervisorid bos_dt_szid,
p_szdivisionid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szteamid bos_dt_szid,
p_bincludeindailysettlement bos_dt_bboolean,
p_szroutinetype bos_dt_szsmallid,
p_szfvremascheduleid bos_dt_szid,
p_introundinglevel_for_distribution integer,
p_szsubaccidformodis bos_dt_szglaccount,
p_bhasgprs bos_dt_bboolean,
p_bhasgps bos_dt_bboolean,
p_bhasprinter bos_dt_bboolean,
p_bhasbarcodecustinfo bos_dt_bboolean,
p_bhasbarcodereadertoreadsn bos_dt_bboolean,
p_bactive bos_dt_bboolean,
p_szgpstype bos_dt_szsmallid,
p_szbarcodereadertype bos_dt_szsmallid,
p_bmustfillassetmonitoring bos_dt_bboolean,
p_bcheckinusinggps bos_dt_bboolean)
returns void as
$body$
begin
update bos_pi_employee
set 
szname = p_szname,
szworkplaceid = p_szworkplaceid,
szdeliverygroupid = p_szdeliverygroupid,
szsupervisorid = p_szsupervisorid,
szdivisionid = p_szdivisionid,
szdepartmentid = p_szdepartmentid,
szteamid = p_szteamid,
bincludeindailysettlement = p_bincludeindailysettlement,
szroutinetype = p_szroutinetype,
szfvremascheduleid = p_szfvremascheduleid,
introundinglevel_for_distribution = p_introundinglevel_for_distribution,
szsubaccidformodis = p_szsubaccidformodis,
bhasgprs = p_bhasgprs,
bhasgps = p_bhasgps,
bhasprinter = p_bhasprinter,
bhasbarcodecustinfo = p_bhasbarcodecustinfo,
bhasbarcodereadertoreadsn = p_bhasbarcodereadertoreadsn,
bactive = p_bactive,
szgpstype =p_szgpstype,
szbarcodereadertype=p_szbarcodereadertype,
bmustfillassetmonitoring=p_bmustfillassetmonitoring,
bcheckinusinggps = p_bcheckinusinggps
where 
szemployeeid = p_szemployeeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_updateemployee_013(
p_szemployeeid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_szdeliverygroupid bos_dt_szid,
p_szsupervisorid bos_dt_szid,
p_szdivisionid bos_dt_szid,
p_szdepartmentid bos_dt_szid,
p_szteamid bos_dt_szid,
p_bincludeindailysettlement bos_dt_bboolean,
p_szroutinetype bos_dt_szsmallid,
p_szfvremascheduleid bos_dt_szid,
p_introundinglevel_for_distribution integer,
p_szsubaccidformodis bos_dt_szglaccount,
p_bhasgprs bos_dt_bboolean,
p_bhasgps bos_dt_bboolean,
p_bhasprinter bos_dt_bboolean,
p_bhasbarcodecustinfo bos_dt_bboolean,
p_bhasbarcodereadertoreadsn bos_dt_bboolean,
p_bactive bos_dt_bboolean,
p_szgpstype bos_dt_szsmallid,
p_szbarcodereadertype bos_dt_szsmallid,
p_bmustfillassetmonitoring bos_dt_bboolean,
p_bcheckinusinggps bos_dt_bboolean,
p_szdevicetype bos_dt_szid,
p_adcid bos_dt_szid)
returns void as
$body$
begin
-- ### 2 update #####
update      
 bos_pi_employee      
set      
 szname = p_szname,      
 szworkplaceid = p_szworkplaceid,      
 szdeliverygroupid = p_szdeliverygroupid,      
 szsupervisorid = p_szsupervisorid,      
 szdivisionid = p_szdivisionid,      
 szdepartmentid = p_szdepartmentid,      
 szteamid = p_szteamid,      
 bincludeindailysettlement = p_bincludeindailysettlement,      
 szroutinetype = p_szroutinetype,      
 szfvremascheduleid = p_szfvremascheduleid,      
 introundinglevel_for_distribution = p_introundinglevel_for_distribution,      
 szsubaccidformodis = p_szsubaccidformodis,      
 bhasgprs = p_bhasgprs,      
 bhasgps = p_bhasgps,      
 bhasprinter = p_bhasprinter,      
 bhasbarcodecustinfo = p_bhasbarcodecustinfo,      
 bhasbarcodereadertoreadsn = p_bhasbarcodereadertoreadsn,      
 bactive = p_bactive,      
 szgpstype =p_szgpstype,      
 szbarcodereadertype=p_szbarcodereadertype,      
 bmustfillassetmonitoring=p_bmustfillassetmonitoring,      
 bcheckinusinggps = p_bcheckinusinggps,
 szdevicetype = p_szdevicetype,     
  adcid=p_adcid
where      
 szemployeeid = p_szemployeeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_updateemployeedistribution(
p_szdriverid bos_dt_szid,
p_szhelperid1 bos_dt_szid,
p_szhelperid2 bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szhelperid3 bos_dt_szid)
returns void as
$body$
begin
update bos_pi_employeedistribution
set 
szhelperid1 = p_szhelperid1,
szhelperid2 = p_szhelperid2,
szvehicleid = p_szvehicleid,
szhelperid3 = p_szhelperid3

where 
szdriverid = p_szdriverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pi_employee_updateemployeedistribution_014(
p_szdriverid bos_dt_szid,
p_szhelperid1 bos_dt_szid,
p_szhelperid2 bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szhelperid3 bos_dt_szid)
returns void as
$body$
begin
update bos_pi_employeedistribution
set 
szhelperid1 = p_szhelperid1,
szhelperid2 = p_szhelperid2,
szvehicleid = p_szvehicleid,
szhelperid3 = p_szhelperid3

where 
szdriverid = p_szdriverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_fpoitemdatereceiptexpectation_createfpoitemdatereceiptexpectation(
p_szfpo_sid bos_dt_szid,
p_shitemnumber smallint,
p_dtmreceiptdate timestamp,
p_decqtyorder bos_dt_decqty)
returns void as
$body$
begin
insert into bos_pur_fpoitemdatereceiptexpectation
(
szfpo_sid,
shitemnumber,
dtmreceiptdate,
decqtyorder
)
values
(
p_szfpo_sid,
p_shitemnumber,
p_dtmreceiptdate,
p_decqtyorder
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_fpoitemdatereceiptexpectation_deletefpoitemdatereceiptexpectation(
p_szfpo_sid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_pur_fpoitemdatereceiptexpectation
where
szfpo_sid = p_szfpo_sid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_fpoitemdatereceiptexpectation_getfpoitemdatereceiptexpectation(
p_szfpo_sid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin

select
fpoi.szfpo_sid,
fpoi.shitemnumber,
fpoi.dtmreceiptdate,
fpoi.decqtyorder,
(select distinct
sum(fpor.decqty)
from 
bos_pur_fporeceipt_sitem fpor
where
fpor.szfporeceipt_sid in (
select 
szfporeceipt_sid
from
bos_pur_fporeceipt_s
where 
szpoid = fpoi.szfpo_sid
)
and
fpor.szproductid in (
select 
szproductid
from
bos_pur_fpo_sitem
where 
szfpo_sid = fpoi.szfpo_sid
and
shitemnumber = fpoi.shitemnumber
)
) as decqtydelivered_j
from
bos_pur_fpoitemdatereceiptexpectation fpoi
where
fpoi.szfpo_sid = p_szfpo_sid
and
fpoi.shitemnumber = p_shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_fporeceipt_s_getfporeceipt_sidbypoid(
p_szpoid bos_dt_szid)
returns void as
$body$
begin
select 
szfporeceipt_sid

from 
bos_pur_fporeceipt_s
where 
szpoid = p_szpoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_createfrequisition(
p_szfrequisitionid bos_dt_szid,
p_dtmrequisition timestamp,
p_szdemandtype bos_dt_szsmallid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bopen smallint,
p_szfreqreceivedid bos_dt_szid,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_pur_frequisition
(
szfrequisitionid,
dtmrequisition,
szdemandtype,
szreasonid,
szdescription,
bopen,
szfreqreceivedid,
-- doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfrequisitionid,
p_dtmrequisition,
p_szdemandtype,
p_szreasonid,
p_szdescription,
p_bopen,
p_szfreqreceivedid,
-- doc status.,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_createfrequisitionitem(
p_szfrequisitionid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqtyrequired bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_dtmrequired timestamp,
p_szfpoid bos_dt_szid,
p_decqtyordered bos_dt_decamount)
returns void as
$body$
begin
insert into bos_pur_frequisitionitem
(
szfrequisitionid,
szproductid,
decqtyrequired,
szuomid,
dtmrequired,
szfpoid,
decqtyordered
)
values
(
p_szfrequisitionid,
p_szproductid,
p_decqtyrequired,
p_szuomid,
p_dtmrequired,
p_szfpoid,
p_decqtyordered
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_deletefrequisition(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_frequisition
where
szfrequisitionid = p_szfrequisitionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_deletefrequisitionitem(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_frequisitionitem
where
szfrequisitionid = p_szfrequisitionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_getfrequisition(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
select
bos_pur_frequisition.dtmrequisition,
bos_pur_frequisition.szdemandtype,
bos_pur_frequisition.szreasonid,
bos_pur_frequisition.szdescription,
bos_pur_frequisition.bopen,
bos_pur_frequisition.szfreqreceivedid,
bos_pi_userinfo.szdivisionid as szuserdivisionid,
bos_pi_division.szname as szuserdivisionnm,
bos_pi_userinfo.szdepartmentid as szuserdepartmentid,
bos_pi_department.szname as szuserdepartmentnm,

-- doc status.
bos_pur_frequisition.bresultfrtransfer,
bos_pur_frequisition.bvoid,
bos_gen_approved.bapproved,
bos_pur_frequisition.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_pur_frequisition.btprintedcount,
bos_pur_frequisition.btransferred,
bos_pur_frequisition.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_pur_frequisition.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_pur_frequisition.sztaxentityid,
bos_pur_frequisition.bneedapproval,
bos_pur_frequisition.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_pur_frequisition.dtmcreated,
bos_pur_frequisition.bsystemcreated,
bos_pur_frequisition.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_pur_frequisition.dtmlastupdated,
bos_pur_frequisition.balreadytransferred
from
bos_pur_frequisition

-- for doc status.
left join bos_gen_approved on bos_pur_frequisition.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_pur_frequisition.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_pur_frequisition.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_pur_frequisition.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_pur_frequisition.szuserid

left join bos_pi_userinfo on bos_pi_userinfo.szuserid = bos_pur_frequisition.szuserid
left join bos_pi_division on bos_pi_division.szdivisionid = bos_pi_userinfo.szdivisionid
left join bos_pi_department on bos_pi_department.szdepartmentid = bos_pi_userinfo.szdepartmentid
where
szfrequisitionid = p_szfrequisitionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_getfrequisitionitem(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_frequisitionitem.szfrequisitionid,
bos_pur_frequisitionitem.szproductid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szuomid as szproductuomid,
bos_inv_product.szcompuomid as szproductcompuomid,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype,

bos_pur_frequisitionitem.decqtyrequired,
bos_pur_frequisitionitem.szuomid,
bos_pur_frequisitionitem.dtmrequired,
bos_pur_frequisitionitem.szfpoid,
bos_pur_frequisitionitem.decqtyordered

from 
bos_pur_frequisitionitem
left join bos_inv_product on bos_pur_frequisitionitem.szproductid = bos_inv_product.szproductid
where 
szfrequisitionid = p_szfrequisitionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_getlistoffrequisition()
returns void as
$body$
begin
select 
szfrequisitionid,
dtmrequisition

from 
bos_pur_frequisition;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_isfrequisitionexist(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
select 
szfrequisitionid

from 
bos_pur_frequisition
where 
szfrequisitionid = p_szfrequisitionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_lockfrequisition(
p_szfrequisitionid bos_dt_szid)
returns void as
$body$
begin
update bos_pur_frequisition
set 
szdemandtype = szdemandtype
where 
szfrequisitionid = p_szfrequisitionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_markfrequisitionapplied(
p_szfrequisitionid bos_dt_szid,
p_dtmrequisition timestamp,
p_bapplied bit)
returns void as
$body$
begin
update bos_pur_frequisition
set 
dtmrequisition = p_dtmrequisition,
bapplied = p_bapplied
where 
szfrequisitionid = p_szfrequisitionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_markfrequisitionvoid(
p_szfrequisitionid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_pur_frequisition
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfrequisitionid = p_szfrequisitionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_frequisition_updatefrequisition(
p_szfrequisitionid bos_dt_szid,
p_dtmrequisition timestamp,
p_szdemandtype bos_dt_szsmallid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer smallint,
p_bvoid smallint,
p_bapproved smallint,
p_bapplied smallint,
p_bjournal smallint,
p_bposted smallint,
p_btprintedcount smallint,
p_btransferred smallint,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval smallint,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_pur_frequisition
set 
dtmrequisition = p_dtmrequisition,
szdemandtype = p_szdemandtype,
szreasonid = p_szreasonid,
szdescription = p_szdescription,

-- doc status.
bvoid = p_bvoid,
bapplied = p_bapplied,
-- it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
szuserid = p_szuserid,
dtmcreated = p_dtmcreated
where 
szfrequisitionid = p_szfrequisitionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_createpurchaseitemtype(
p_szpurchaseitemtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_sztrntype bos_dt_szsmallid,
p_btaxable smallint,
p_bbilled smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_szborrowchargecalcid bos_dt_szid,
p_ballowzeroprice smallint,
p_szreturpurchaseitemtypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_ballowmanualprice smallint,
p_ballowmanualdiscount smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_pur_purchaseitemtype
(
szpurchaseitemtypeid,
szdescription,
sztrntype,
btaxable,
bbilled,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
szborrowchargecalcid,
ballowzeroprice,
szreturpurchaseitemtypeid,
gdaudittrailid,
ballowmanualprice,
ballowmanualdiscount,
dtmlastupdated,
balreadytransferred
)
values
(
p_szpurchaseitemtypeid,
p_szdescription,
p_sztrntype,
p_btaxable,
p_bbilled,
p_bapplicable4allpurchorg,
p_bapplicable4allsupplier,
p_bapplicable4allproduct,
p_szborrowchargecalcid,
p_ballowzeroprice,
p_szreturpurchaseitemtypeid,
p_gdaudittrailid,
p_ballowmanualprice,
p_ballowmanualdiscount,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_createpurchaseitemtype_013(
p_szpurchaseitemtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_sztrntype bos_dt_szsmallid,
p_btaxable smallint,
p_bbilled smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_szborrowchargecalcid bos_dt_szid,
p_ballowzeroprice smallint,
p_szreturpurchaseitemtypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_ballowmanualprice smallint,
p_ballowmanualdiscount smallint,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_pur_purchaseitemtype
(
szpurchaseitemtypeid,
szdescription,
sztrntype,
btaxable,
bbilled,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
szborrowchargecalcid,
ballowzeroprice,
szreturpurchaseitemtypeid,
gdaudittrailid,
ballowmanualprice,
ballowmanualdiscount,
dtmlastupdated,
balreadytransferred
)
values
(
p_szpurchaseitemtypeid,
p_szdescription,
p_sztrntype,
p_btaxable,
p_bbilled,
p_bapplicable4allpurchorg,
p_bapplicable4allsupplier,
p_bapplicable4allproduct,
p_szborrowchargecalcid,
p_ballowzeroprice,
p_szreturpurchaseitemtypeid,
p_gdaudittrailid,
p_ballowmanualprice,
p_ballowmanualdiscount,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_createpurchaseitemtypeproduct(
p_szpurchaseitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchaseitemtypeproduct
(
szpurchaseitemtypeid,
szproductid
)
values
(
p_szpurchaseitemtypeid,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_createpurchaseitemtypepurchorg(
p_szpurchaseitemtypeid bos_dt_szid,
p_szpurchorgid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchaseitemtypepurchorg
(
szpurchaseitemtypeid,
szpurchorgid
)
values
(
p_szpurchaseitemtypeid,
p_szpurchorgid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_createpurchaseitemtypesupplier(
p_szpurchaseitemtypeid bos_dt_szid,
p_szsupplierid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchaseitemtypesupplier
(
szpurchaseitemtypeid,
szsupplierid
)
values
(
p_szpurchaseitemtypeid,
p_szsupplierid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_deletepurchaseitemtype(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchaseitemtype
where
szpurchaseitemtypeid = p_szpurchaseitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_deletepurchaseitemtypeproduct(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchaseitemtypeproduct
where
szpurchaseitemtypeid = p_szpurchaseitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_deletepurchaseitemtypepurchorg(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchaseitemtypepurchorg
where
szpurchaseitemtypeid = p_szpurchaseitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_deletepurchaseitemtypesupplier(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchaseitemtypesupplier
where
szpurchaseitemtypeid = p_szpurchaseitemtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getlistofpurchaseitemtype()
returns void as
$body$
begin
select 
szpurchaseitemtypeid,
szdescription,
sztrntype

from 
bos_pur_purchaseitemtype;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getpurchaseitemtype(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
sztrntype,
btaxable,
bbilled,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
szborrowchargecalcid,
ballowzeroprice,
szreturpurchaseitemtypeid,
gdaudittrailid,
ballowmanualprice,
ballowmanualdiscount,

dtmlastupdated,
balreadytransferred

from 
bos_pur_purchaseitemtype
where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getpurchaseitemtype_013(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
sztrntype,
btaxable,
bbilled,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
szborrowchargecalcid,
ballowzeroprice,
szreturpurchaseitemtypeid,
gdaudittrailid,
ballowmanualprice,
ballowmanualdiscount,

dtmlastupdated,
balreadytransferred

from 
bos_pur_purchaseitemtype
where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getpurchaseitemtypeproduct(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchaseitemtypeproduct.szproductid,
bos_inv_product.szname as szproductnm

from 
bos_pur_purchaseitemtypeproduct 
left join bos_inv_product

on bos_pur_purchaseitemtypeproduct.szproductid = bos_inv_product.szproductid
where 
bos_pur_purchaseitemtypeproduct.szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getpurchaseitemtypepurchorg(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchaseitemtypepurchorg.szpurchorgid,
bos_scm_purchorg.szdescription as szpurchorgdesc

from 
bos_pur_purchaseitemtypepurchorg
left join bos_scm_purchorg on bos_pur_purchaseitemtypepurchorg.szpurchorgid = bos_scm_purchorg.szpurchorgid

where 
bos_pur_purchaseitemtypepurchorg.szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_getpurchaseitemtypesupplier(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchaseitemtypesupplier.szsupplierid,
bos_ap_supplier.szname as szsuppliernm

from 
bos_pur_purchaseitemtypesupplier 
left join bos_ap_supplier

on bos_pur_purchaseitemtypesupplier.szsupplierid = bos_ap_supplier.szsuppid
where 
bos_pur_purchaseitemtypesupplier.szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_ispurchaseitemtypeexist(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
select 
szpurchaseitemtypeid

from 
bos_pur_purchaseitemtype
where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_lockpurchaseitemtype(
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
update bos_pur_purchaseitemtype
set 
btaxable = btaxable
where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_updatepurchaseitemtype(
p_szpurchaseitemtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_sztrntype bos_dt_szsmallid,
p_btaxable smallint,
p_bbilled smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_szborrowchargecalcid bos_dt_szid,
p_ballowzeroprice smallint,
p_szreturpurchaseitemtypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_ballowmanualprice smallint,
p_ballowmanualdiscount smallint)
returns void as
$body$
begin
update bos_pur_purchaseitemtype
set 
szdescription = p_szdescription,
sztrntype = p_sztrntype,
btaxable = p_btaxable,
bbilled = p_bbilled,
bapplicable4allpurchorg = p_bapplicable4allpurchorg,
bapplicable4allsupplier = p_bapplicable4allsupplier,
bapplicable4allproduct = p_bapplicable4allproduct,
szborrowchargecalcid = p_szborrowchargecalcid,
ballowzeroprice = p_ballowzeroprice,
szreturpurchaseitemtypeid = p_szreturpurchaseitemtypeid,
gdaudittrailid = p_gdaudittrailid,
ballowmanualprice = p_ballowmanualprice,
ballowmanualdiscount = p_ballowmanualdiscount

where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchaseitemtype_updatepurchaseitemtype_013(
p_szpurchaseitemtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_sztrntype bos_dt_szsmallid,
p_btaxable smallint,
p_bbilled smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_szborrowchargecalcid bos_dt_szid,
p_ballowzeroprice smallint,
p_szreturpurchaseitemtypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_ballowmanualprice smallint,
p_ballowmanualdiscount smallint)
returns void as
$body$
begin
update bos_pur_purchaseitemtype
set 
szdescription = p_szdescription,
sztrntype = p_sztrntype,
btaxable = p_btaxable,
bbilled = p_bbilled,
bapplicable4allpurchorg = p_bapplicable4allpurchorg,
bapplicable4allsupplier = p_bapplicable4allsupplier,
bapplicable4allproduct = p_bapplicable4allproduct,
szborrowchargecalcid = p_szborrowchargecalcid,
ballowzeroprice = p_ballowzeroprice,
szreturpurchaseitemtypeid = p_szreturpurchaseitemtypeid,
gdaudittrailid = p_gdaudittrailid,
ballowmanualprice = p_ballowmanualprice,
ballowmanualdiscount = p_ballowmanualdiscount

where 
szpurchaseitemtypeid = p_szpurchaseitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetype(
p_szpurchasetypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid,
p_szapprovalid bos_dt_szid,
p_ballowmanualprice smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_bapplicable4allpurchaseitemtype smallint,
p_szreturpurchasetypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_pur_purchasetype
(
szpurchasetypeid,
szdescription,
szflexikeyid,
szapprovalid,
ballowmanualprice,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
bapplicable4allpurchaseitemtype,
szreturpurchasetypeid,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szpurchasetypeid,
p_szdescription,
p_szflexikeyid,
p_szapprovalid,
p_ballowmanualprice,
p_bapplicable4allpurchorg,
p_bapplicable4allsupplier,
p_bapplicable4allproduct,
p_bapplicable4allpurchaseitemtype,
p_szreturpurchasetypeid,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetype_013(
p_szpurchasetypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid,
p_szapprovalid bos_dt_szid,
p_ballowmanualprice smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_bapplicable4allpurchaseitemtype smallint,
p_szreturpurchasetypeid bos_dt_szid,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_pur_purchasetype
(
szpurchasetypeid,
szdescription,
szflexikeyid,
szapprovalid,
ballowmanualprice,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
bapplicable4allpurchaseitemtype,
szreturpurchasetypeid,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szpurchasetypeid,
p_szdescription,
p_szflexikeyid,
p_szapprovalid,
p_ballowmanualprice,
p_bapplicable4allpurchorg,
p_bapplicable4allsupplier,
p_bapplicable4allproduct,
p_bapplicable4allpurchaseitemtype,
p_szreturpurchasetypeid,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetypeproduct(
p_szpurchasetypeid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchasetypeproduct
(
szpurchasetypeid,
szproductid
)
values
(
p_szpurchasetypeid,
p_szproductid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetypepurchaseitemtype(
p_szpurchasetypeid bos_dt_szid,
p_szpurchaseitemtypeid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchasetypepurchaseitemtype
(
szpurchasetypeid,
szpurchaseitemtypeid
)
values
(
p_szpurchasetypeid,
p_szpurchaseitemtypeid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetypepurchorg(
p_szpurchasetypeid bos_dt_szid,
p_szpurchorgid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchasetypepurchorg
(
szpurchasetypeid,
szpurchorgid
)
values
(
p_szpurchasetypeid,
p_szpurchorgid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_createpurchasetypesupplier(
p_szpurchasetypeid bos_dt_szid,
p_szsupplierid bos_dt_szid)
returns void as
$body$
begin
insert into bos_pur_purchasetypesupplier
(
szpurchasetypeid,
szsupplierid
)
values
(
p_szpurchasetypeid,
p_szsupplierid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_deletepurchasetype(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchasetype
where
szpurchasetypeid = p_szpurchasetypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_deletepurchasetypeproduct(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchasetypeproduct
where
szpurchasetypeid = p_szpurchasetypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_deletepurchasetypepurchaseitemtype(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchasetypepurchaseitemtype
where
szpurchasetypeid = p_szpurchasetypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_deletepurchasetypepurchorg(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchasetypepurchorg
where
szpurchasetypeid = p_szpurchasetypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_deletepurchasetypesupplier(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_pur_purchasetypesupplier
where
szpurchasetypeid = p_szpurchasetypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getlistofpurchasetype()
returns void as
$body$
begin
select 
szpurchasetypeid,
szdescription

from 
bos_pur_purchasetype;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetype(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
szflexikeyid,
szapprovalid,
ballowmanualprice,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
bapplicable4allpurchaseitemtype,
szreturpurchasetypeid,
gdaudittrailid,
dtmlastupdated,
balreadytransferred

from 
bos_pur_purchasetype
where 
szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetype_013(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
szflexikeyid,
szapprovalid,
ballowmanualprice,
bapplicable4allpurchorg,
bapplicable4allsupplier,
bapplicable4allproduct,
bapplicable4allpurchaseitemtype,
szreturpurchasetypeid,
gdaudittrailid,
dtmlastupdated,
balreadytransferred

from 
bos_pur_purchasetype
where 
szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetypeproduct(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchasetypeproduct.szproductid,
bos_inv_product.szname as szproductnm

from 
bos_pur_purchasetypeproduct 
left join bos_inv_product

on bos_pur_purchasetypeproduct.szproductid = bos_inv_product.szproductid
where 
bos_pur_purchasetypeproduct.szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetypepurchaseitemtype(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchasetypepurchaseitemtype.szpurchaseitemtypeid,
bos_pur_purchaseitemtype.szdescription as szpurchaseitemtypedesc

from 
bos_pur_purchasetypepurchaseitemtype 
left join bos_pur_purchaseitemtype

on bos_pur_purchasetypepurchaseitemtype.szpurchaseitemtypeid = bos_pur_purchaseitemtype.szpurchaseitemtypeid
where 
bos_pur_purchasetypepurchaseitemtype.szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetypepurchorg(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchasetypepurchorg.szpurchorgid,
bos_scm_purchorg.szdescription as szpurchorgdesc

from 
bos_pur_purchasetypepurchorg
left join bos_scm_purchorg on bos_pur_purchasetypepurchorg.szpurchorgid = bos_scm_purchorg.szpurchorgid

where 
bos_pur_purchasetypepurchorg.szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_getpurchasetypesupplier(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_pur_purchasetypesupplier.szsupplierid,
bos_ap_supplier.szname as szsuppliernm

from 
bos_pur_purchasetypesupplier 
left join bos_ap_supplier

on bos_pur_purchasetypesupplier.szsupplierid = bos_ap_supplier.szsuppid
where 
bos_pur_purchasetypesupplier.szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_ispurchasetypeexist(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
select 
szpurchasetypeid

from 
bos_pur_purchasetype
where 
szpurchasetypeid = p_szpurchasetypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_lockpurchasetype(
p_szpurchasetypeid bos_dt_szid)
returns void as
$body$
begin
update bos_pur_purchasetype
set 
ballowmanualprice = ballowmanualprice
where 
szpurchasetypeid = p_szpurchasetypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_updatepurchasetype(
p_szpurchasetypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid,
p_szapprovalid bos_dt_szid,
p_ballowmanualprice smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_bapplicable4allpurchaseitemtype smallint,
p_szreturpurchasetypeid bos_dt_szid,
p_gdaudittrailid bytea)
returns void as
$body$
begin
update bos_pur_purchasetype
set 
szdescription = p_szdescription,
szflexikeyid = p_szflexikeyid,
szapprovalid = p_szapprovalid,
ballowmanualprice = p_ballowmanualprice,
bapplicable4allpurchorg = p_bapplicable4allpurchorg,
bapplicable4allsupplier = p_bapplicable4allsupplier,
bapplicable4allproduct = p_bapplicable4allproduct,
bapplicable4allpurchaseitemtype = p_bapplicable4allpurchaseitemtype,
szreturpurchasetypeid = p_szreturpurchasetypeid,
gdaudittrailid = p_gdaudittrailid

where 
szpurchasetypeid = p_szpurchasetypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_pur_purchasetype_updatepurchasetype_013(
p_szpurchasetypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szflexikeyid bos_dt_szid,
p_szapprovalid bos_dt_szid,
p_ballowmanualprice smallint,
p_bapplicable4allpurchorg smallint,
p_bapplicable4allsupplier smallint,
p_bapplicable4allproduct smallint,
p_bapplicable4allpurchaseitemtype smallint,
p_szreturpurchasetypeid bos_dt_szid,
p_gdaudittrailid bytea)
returns void as
$body$
begin
update bos_pur_purchasetype
set 
szdescription = p_szdescription,
szflexikeyid = p_szflexikeyid,
szapprovalid = p_szapprovalid,
ballowmanualprice = p_ballowmanualprice,
bapplicable4allpurchorg = p_bapplicable4allpurchorg,
bapplicable4allsupplier = p_bapplicable4allsupplier,
bapplicable4allproduct = p_bapplicable4allproduct,
bapplicable4allpurchaseitemtype = p_bapplicable4allpurchaseitemtype,
szreturpurchasetypeid = p_szreturpurchasetypeid,
gdaudittrailid = p_gdaudittrailid

where 
szpurchasetypeid = p_szpurchasetypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_createcustcollroutine(
p_szcustid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_szdefaultrouteid bos_dt_szbigid,
p_dtmcollection timestamp,
p_dtmlastcollection timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_gdaudittrailid bytea)
returns void as
$body$
begin
insert into bos_sd_custcollroutine
(
szcustid,
szscheduleid,
szdefaultrouteid,
dtmcollection,
dtmlastcollection,
dtmlastupdated,
balreadytransferred,
gdaudittrailid
)
values
(
p_szcustid,
p_szscheduleid,
p_szdefaultrouteid,
p_dtmcollection,
p_dtmlastcollection,
p_dtmlastupdated,
p_balreadytransferred,
p_gdaudittrailid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_createcustcollroutine_draft(
p_szcustid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_szdefaultrouteid bos_dt_szbigid,
p_dtmcollection timestamp,
p_dtmlastcollection timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint,
p_gdaudittrailid bytea)
returns void as
$body$
begin
insert into bos_sd_custcollroutine_draft
(
szcustid,
szscheduleid,
szdefaultrouteid,
dtmcollection,
dtmlastcollection,
dtmlastupdated,
balreadytransferred,
gdaudittrailid
)
values
(
p_szcustid,
p_szscheduleid,
p_szdefaultrouteid,
p_dtmcollection,
p_dtmlastcollection,
p_dtmlastupdated,
p_balreadytransferred,
p_gdaudittrailid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_deletecustcollroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custcollroutine
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_deletecustcollroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custcollroutine_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getcustcollroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
coalesce(bos_ar_customer.szname, '') as szcustnm,

ccr.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,
bgrsi.decvalue as decschedulevalue_j,

ccr.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescr_j,
bos_sd_route.szopuserid as szdefaultcollectorid,
bos_pi_employee.szname as szdefaultcollectornm,
bos_pi_employee.szteamid as szdefaultcollectorteamid_j,

ccr.dtmcollection,
ccr.dtmlastcollection,
ccr.dtmlastupdated,
ccr.balreadytransferred,
ccr.gdaudittrailid

from
bos_sd_custcollroutine as ccr
left join bos_ar_customer on ccr.szcustid=bos_ar_customer.szcustid
left join bos_sd_route on bos_sd_route.szrouteid = ccr.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ccr.szscheduleid
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and
bgrsi.shscheduleitem = 0
where
ccr.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getcustcollroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
coalesce(bos_ar_customer.szname, '') as szcustnm,

ccr.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,
bgrsi.decvalue as decschedulevalue_j,

ccr.szdefaultrouteid,
bos_sd_route_draft.szdescription as szdefaultroutedescr_j,
bos_sd_route_draft.szopuserid as szdefaultcollectorid,
bos_pi_employee.szname as szdefaultcollectornm,
bos_pi_employee.szteamid as szdefaultcollectorteamid_j,

ccr.dtmcollection,
ccr.dtmlastcollection,
ccr.dtmlastupdated,
ccr.balreadytransferred,
ccr.gdaudittrailid

from
bos_sd_custcollroutine_draft as ccr
left join bos_ar_customer on ccr.szcustid=bos_ar_customer.szcustid
left join bos_sd_route_draft on bos_sd_route_draft.szrouteid = ccr.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route_draft.szopuserid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ccr.szscheduleid
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and
bgrsi.shscheduleitem = 0
where
ccr.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getdefaultcollector(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szcollectorid


from 
bos_sd_custcollroutine as bsc
left join bos_sd_route as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getdefaultcollector_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szcollectorid


from 
bos_sd_custcollroutine_draft as bsc
left join bos_sd_route_draft as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getguid(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sd_custcollroutine
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getguid_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sd_custcollroutine_draft
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getlistofcustcollroutine()
returns void as
$body$
begin
select 
szcustid,
szscheduleid,
dtmcollection

from 
bos_sd_custcollroutine;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_getlistofcustcollroutine_draft()
returns void as
$body$
begin
select 
szcustid,
szscheduleid,
dtmcollection

from 
bos_sd_custcollroutine_draft;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_iscustcollroutineexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custcollroutine
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_iscustcollroutineexist_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custcollroutine_draft
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_lockcustcollroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custcollroutine
set 
dtmcollection = dtmcollection
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_lockcustcollroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custcollroutine_draft
set 
dtmcollection = dtmcollection
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_updatecustcollroutine(
p_szcustid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_szdefaultrouteid bos_dt_szbigid,
p_dtmcollection timestamp)
returns void as
$body$
begin
update bos_sd_custcollroutine
set 
szscheduleid = p_szscheduleid,
szdefaultrouteid = p_szdefaultrouteid,
dtmcollection = p_dtmcollection
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custcollroutine_updatecustcollroutine_draft(
p_szcustid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_szdefaultrouteid bos_dt_szbigid,
p_dtmcollection timestamp)
returns void as
$body$
begin
update bos_sd_custcollroutine_draft
set 
szscheduleid = p_szscheduleid,
szdefaultrouteid = p_szdefaultrouteid,
dtmcollection = p_dtmcollection
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_createcustfoc(
p_szcustid bos_dt_szid,
p_szfocid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_custfoc
(
szcustid,
szfocid,
dtmstart,
dtmend,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szfocid,
p_dtmstart,
p_dtmend,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_createcustfocitem(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szfoctype varchar,
p_bunlimitedqty bit,
p_decqtyremain bos_dt_decamount,
p_szuomid bos_dt_szid,
p_dtmlastreset timestamp)
returns void as
$body$
begin
insert into bos_sd_custfocitem
(
szcustid,
szproductid,
szfoctype,
bunlimitedqty,
decqtyremain,
szuomid,
dtmlastreset
)
values
(
p_szcustid,
p_szproductid,
p_szfoctype,
p_bunlimitedqty,
p_decqtyremain,
p_szuomid,
p_dtmlastreset
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_decrfocqty(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_custfocitem
set 
 decqtyremain = decqtyremain - p_decqty
where 
 szcustid = p_szcustid and szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_deletecustfoc(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_custfoc
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_deletecustfocitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_custfocitem
where
szcustid = p_szcustid; 

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getcustfoc(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_custfoc.szfocid,
coalesce(bos_ar_customer.szname,'') as szcustname,
bos_sd_custfoc.dtmstart,
bos_sd_custfoc.dtmend,

-- data status.
bos_sd_custfoc.dtmlastupdated,
bos_sd_custfoc.balreadytransferred

from 
bos_sd_custfoc left join bos_ar_customer on bos_sd_custfoc.szcustid=bos_ar_customer.szcustid
where 
bos_sd_custfoc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getcustfoc_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_custfoc.szfocid,
coalesce(bos_ar_customer.szname,'') as szcustname,
bos_sd_custfoc.dtmstart,
bos_sd_custfoc.dtmend,

-- data status.
bos_sd_custfoc.dtmlastupdated,
bos_sd_custfoc.balreadytransferred

from 
bos_sd_custfoc left join bos_ar_customer on bos_sd_custfoc.szcustid=bos_ar_customer.szcustid
where 
bos_sd_custfoc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getcustfocitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_custfocitem.szproductid,
coalesce(bos_inv_product.szname, '') as szname,
coalesce(bos_inv_product.szqtyformat, '') as szproductqtyformat,
bos_sd_custfocitem.szfoctype,
bos_sd_custfocitem.bunlimitedqty,
bos_sd_custfocitem.decqtyremain,
bos_sd_custfocitem.szuomid,
bos_sd_custfocitem.dtmlastreset

from 
bos_sd_custfocitem 
left join bos_inv_product on 
bos_sd_custfocitem.szproductid = bos_inv_product.szproductid

where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getlistofcustfoc()
returns void as
$body$
begin
select 
szcustid,
szfocid

from 
bos_sd_custfoc;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getlistoffocthatneedtobereset(
p_dtmtransaction timestamp)
returns void as
$body$
begin
select 
szcustid,szfocid

from 
bos_sd_custfoc
where 
p_dtmtransaction >= dtmstart and p_dtmtransaction < interval '1 day' + p_dtmend ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_getonecustfocitem(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_custfocitem.szproductid,
coalesce(bos_inv_product.szname, '') as szname,
bos_sd_custfocitem.szfoctype,
bos_sd_custfocitem.bunlimitedqty,
bos_sd_custfocitem.decqtyremain,
bos_sd_custfocitem.szuomid,
bos_sd_custfocitem.dtmlastreset,
bos_sd_custfoc.dtmstart,
bos_sd_custfoc.dtmend
from
bos_sd_custfocitem
left join
bos_inv_product on bos_sd_custfocitem.szproductid = bos_inv_product.szproductid
left join
bos_sd_custfoc on bos_sd_custfocitem.szcustid = bos_sd_custfoc.szcustid
where
bos_sd_custfocitem.szcustid = p_szcustid and
bos_sd_custfocitem.szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_iscustfocexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custfoc
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_iscustfocitemexist(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custfocitem
where 
szcustid=p_szcustid and szproductid=p_szproductid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_lockcustfoc(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custfoc
set 
szfocid = szfocid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_updatecustfoc(
p_szcustid bos_dt_szid,
p_szfocid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
update bos_sd_custfoc
set 
szfocid = p_szfocid,
dtmstart = p_dtmstart,
dtmend = p_dtmend
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_updatecustfocitembyusage(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqtyremain bos_dt_decamount,
p_szuomid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custfocitem
set 
decqtyremain=p_decqtyremain,
szuomid=p_szuomid
where 
szcustid=p_szcustid and szproductid=p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_updatefocqty(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_custfocitem
set 
 decqtyremain = p_decqty
where 
 szcustid = p_szcustid and szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfoc_updateonecustfocitem(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szfoctype varchar,
p_bunlimitedqty bit,
p_decqtyremain bos_dt_decamount,
p_szuomid bos_dt_szid,
p_dtmlastreset timestamp)
returns void as
$body$
begin
update bos_sd_custfocitem
set 
szfoctype = p_szfoctype,
bunlimitedqty = p_bunlimitedqty,
decqtyremain = p_decqtyremain,
szuomid = p_szuomid,
dtmlastreset = p_dtmlastreset
where 
szcustid = p_szcustid and
szproductid = p_szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfochistory_createcustfochistory(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szfoctype varchar,
p_dtmfoc timestamp,
p_decadd bos_dt_decamount,
p_decuse bos_dt_decamount,
p_decremain bos_dt_decamount,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szurl varchar,
p_szdescription varchar)
returns void as
$body$
begin
insert into bos_sd_custfochistory
(
szcustid,
szproductid,
szfoctype,
dtmfoc,
decadd,
decuse,
decremain,
sztrnid,
szdocid,
szurl,
szdescription
)
values
(
p_szcustid,
p_szproductid,
p_szfoctype,
p_dtmfoc,
p_decadd,
p_decuse,
p_decremain,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfochistory_createcustfochistory_013(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szfoctype varchar,
p_dtmfoc timestamp,
p_decadd bos_dt_decamount,
p_decuse bos_dt_decamount,
p_decremain bos_dt_decamount,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szurl varchar,
p_szdescription varchar)
returns void as
$body$
begin
insert into bos_sd_custfochistory
(
szcustid,
szproductid,
szfoctype,
dtmfoc,
decadd,
decuse,
decremain,
sztrnid,
szdocid,
szurl,
szdescription
)
values
(
p_szcustid,
p_szproductid,
p_szfoctype,
p_dtmfoc,
p_decadd,
p_decuse,
p_decremain,
p_sztrnid,
p_szdocid,
p_szurl,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfochistory_getlistofcustfochistory(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_dtmstartdate timestamp,
p_dtmenddate timestamp)
returns void as
$body$
begin
select 
bos_sd_custfochistory.szcustid,
bos_sd_custfochistory.szproductid,
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat,
bos_sd_custfochistory.szfoctype,
bos_sd_custfochistory.dtmfoc,
bos_sd_custfochistory.decadd,
bos_sd_custfochistory.decuse,
bos_sd_custfochistory.decremain,
bos_sd_custfochistory.sztrnid,
bos_sd_custfochistory.szdocid,
bos_sd_custfochistory.szurl,
bos_sd_custfochistory.szdescription


from 
bos_sd_custfochistory
left join bos_inv_product on bos_sd_custfochistory.szproductid=bos_inv_product.szproductid
where 
bos_sd_custfochistory.szcustid like p_szcustid and bos_sd_custfochistory.szproductid like p_szproductid and (bos_sd_custfochistory.dtmfoc >= p_dtmstartdate and bos_sd_custfochistory.dtmfoc < interval '1 day' + p_dtmenddate ) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custfochistory_getlistofproductofcustfochistory(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_sd_custfochistory.szproductid,
coalesce(bos_inv_product.szname, '') as szname

from 
bos_sd_custfochistory
left join bos_inv_product on bos_sd_custfochistory.szproductid = bos_inv_product.szproductid

where 
bos_sd_custfochistory.szcustid like p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutine(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_szlastfdoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custroutine
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmdelivery,
szlastfdoid,
sznote,
szdoprintpapertype,
szdoprinttype,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmdelivery,
p_szlastfdoid,
p_sznote,
p_szdoprintpapertype,
p_szdoprinttype,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutine_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_szlastfdoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custroutine
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmdelivery,
szlastfdoid,
sznote,
szdoprintpapertype,
szdoprinttype,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmdelivery,
p_szlastfdoid,
p_sznote,
p_szdoprintpapertype,
p_szdoprinttype,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutine_013_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_szlastfdoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmdelivery,
szlastfdoid,
sznote,
szdoprintpapertype,
szdoprinttype,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmdelivery,
p_szlastfdoid,
p_sznote,
p_szdoprintpapertype,
p_szdoprinttype,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutine_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_szlastfdoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmdelivery,
szlastfdoid,
sznote,
szdoprintpapertype,
szdoprinttype,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmdelivery,
p_szlastfdoid,
p_sznote,
p_szdoprintpapertype,
p_szdoprinttype,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutine_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_szlastfdoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmdelivery,
szlastfdoid,
sznote,
szdoprintpapertype,
szdoprinttype,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmdelivery,
p_szlastfdoid,
p_sznote,
p_szdoprintpapertype,
p_szdoprinttype,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutineitem(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_szparentid bos_dt_szid,
p_szparentnm bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_custroutineitem
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
szparentid,
szparentnm
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_szparentid,
p_szparentnm
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutineitem_013(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_szparentid bos_dt_szid,
p_szparentnm bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_custroutineitem
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
szparentid,
szparentnm
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_szparentid,
p_szparentnm
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutineitem_013_draft(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_szparentid bos_dt_szid,
p_szparentnm bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_custroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
szparentid,
szparentnm
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_szparentid,
p_szparentnm
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutineitem_draft(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_szparentid bos_dt_szid,
p_szparentnm bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_custroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
szparentid,
szparentnm
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_szparentid,
p_szparentnm
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_createcustroutineitem_draft_013(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_szparentid bos_dt_szid,
p_szparentnm bos_dt_szname)
returns void as
$body$
begin
insert into bos_sd_custroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
szparentid,
szparentnm
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_szparentid,
p_szparentnm
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_deletecustroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custroutine
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_deletecustroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custroutine_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_deletecustroutineitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custroutineitem
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_deletecustroutineitem_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custroutineitem_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_custroutine.szdefaultteamid,
bos_sd_custroutine.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

bos_sd_custroutine.decdefaultschedulevalue,

bos_sd_custroutine.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescription,
bos_sd_route.szopuserid as szdefaultdriverid,
bos_pi_employee.szname as szdefaultdrivernm,
bos_pi_employee.szteamid as szdefaultdriverteamid_j,

bos_sd_custroutine.szdefaultordertypeid,
bos_sd_custroutine.dtmdelivery,
bos_sd_custroutine.szlastfdoid,
bos_sd_custroutine.sznote,
bos_sd_custroutine.szdoprintpapertype,
bos_sd_custroutine.szdoprinttype,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
bos_sd_custroutine.gdaudittrailid,
bos_sd_custroutine.dtmlastupdated,
bos_sd_custroutine.balreadytransferred
from
bos_sd_custroutine
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_custroutine.szcustid
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custroutine.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutine.szdefaultscheduleid
where
bos_sd_custroutine.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutine_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_custroutine.szdefaultteamid,
bos_sd_custroutine.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

bos_sd_custroutine.decdefaultschedulevalue,

bos_sd_custroutine.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescription,
bos_sd_route.szopuserid as szdefaultdriverid,
bos_pi_employee.szname as szdefaultdrivernm,
bos_pi_employee.szteamid as szdefaultdriverteamid_j,

bos_sd_custroutine.szdefaultordertypeid,
bos_sd_custroutine.dtmdelivery,
bos_sd_custroutine.szlastfdoid,
bos_sd_custroutine.sznote,
bos_sd_custroutine.szdoprintpapertype,
bos_sd_custroutine.szdoprinttype,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
bos_sd_custroutine.gdaudittrailid,
bos_sd_custroutine.dtmlastupdated,
bos_sd_custroutine.balreadytransferred
from
bos_sd_custroutine
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_custroutine.szcustid
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custroutine.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutine.szdefaultscheduleid
where
bos_sd_custroutine.szcustid = p_szcustid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutine_014_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_custroutine_draft.szdefaultteamid,
bos_sd_custroutine_draft.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

bos_sd_custroutine_draft.decdefaultschedulevalue,

bos_sd_custroutine_draft.szdefaultrouteid,
bos_sd_route_draft.szdescription as szdefaultroutedescription,
bos_sd_route_draft.szopuserid as szdefaultdriverid,
bos_pi_employee.szname as szdefaultdrivernm,
bos_pi_employee.szteamid as szdefaultdriverteamid_j,

bos_sd_custroutine_draft.szdefaultordertypeid,
bos_sd_custroutine_draft.dtmdelivery,
bos_sd_custroutine_draft.szlastfdoid,
bos_sd_custroutine_draft.sznote,
bos_sd_custroutine_draft.szdoprintpapertype,
bos_sd_custroutine_draft.szdoprinttype,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
bos_sd_custroutine_draft.gdaudittrailid,
bos_sd_custroutine_draft.dtmlastupdated,
bos_sd_custroutine_draft.balreadytransferred

from
bos_sd_custroutine_draft
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_custroutine_draft.szcustid
left join bos_sd_route_draft on bos_sd_route_draft.szrouteid = bos_sd_custroutine_draft.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route_draft.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutine_draft.szdefaultscheduleid

where
bos_sd_custroutine_draft.szcustid = p_szcustid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_custroutine_draft.szdefaultteamid,
bos_sd_custroutine_draft.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

bos_sd_custroutine_draft.decdefaultschedulevalue,

bos_sd_custroutine_draft.szdefaultrouteid,
bos_sd_route_draft.szdescription as szdefaultroutedescription,
bos_sd_route_draft.szopuserid as szdefaultdriverid,
bos_pi_employee.szname as szdefaultdrivernm,
bos_pi_employee.szteamid as szdefaultdriverteamid_j,

bos_sd_custroutine_draft.szdefaultordertypeid,
bos_sd_custroutine_draft.dtmdelivery,
bos_sd_custroutine_draft.szlastfdoid,
bos_sd_custroutine_draft.sznote,
bos_sd_custroutine_draft.szdoprintpapertype,
bos_sd_custroutine_draft.szdoprinttype,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
bos_sd_custroutine_draft.gdaudittrailid,
bos_sd_custroutine_draft.dtmlastupdated,
bos_sd_custroutine_draft.balreadytransferred

from
bos_sd_custroutine_draft
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_custroutine_draft.szcustid
left join bos_sd_route_draft on bos_sd_route_draft.szrouteid = bos_sd_custroutine_draft.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route_draft.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutine_draft.szdefaultscheduleid

where
bos_sd_custroutine_draft.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutineitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_custroutineitem.shitemnumber,
bos_sd_custroutineitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_custroutineitem.decqty,
bos_sd_custroutineitem.szuomid,
bos_sd_custroutineitem.bprintprice,

bos_sd_custroutineitem.szteamid,
bos_sd_custroutineitem.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

bos_sd_custroutineitem.decvalue,

bos_sd_custroutineitem.decavgorder,

bos_sd_custroutineitem.decmaxdropsize,
bos_sd_custroutineitem.szparentid,
bos_sd_custroutineitem.szparentnm

from
bos_sd_custroutineitem 
left join bos_inv_product on bos_sd_custroutineitem.szproductid = bos_inv_product.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutineitem.szscheduleid

where
szcustid = p_szcustid

order by
bos_sd_custroutineitem.szscheduleid,
bos_sd_custroutineitem.shitemnumber,
bos_sd_custroutineitem.decvalue,
bos_sd_custroutineitem.szproductid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutineitem_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_custroutineitem.shitemnumber,
bos_sd_custroutineitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_custroutineitem.decqty,
bos_sd_custroutineitem.szuomid,
bos_sd_custroutineitem.bprintprice,

bos_sd_custroutineitem.szteamid,
bos_sd_custroutineitem.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

bos_sd_custroutineitem.decvalue,

bos_sd_custroutineitem.decavgorder,

bos_sd_custroutineitem.decmaxdropsize,
bos_sd_custroutineitem.szparentid,
bos_sd_custroutineitem.szparentnm

from
bos_sd_custroutineitem 
left join bos_inv_product on bos_sd_custroutineitem.szproductid = bos_inv_product.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutineitem.szscheduleid

where
szcustid = p_szcustid

order by
bos_sd_custroutineitem.szscheduleid,
bos_sd_custroutineitem.shitemnumber,
bos_sd_custroutineitem.decvalue,
bos_sd_custroutineitem.szproductid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutineitem_014_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_custroutineitem_draft.shitemnumber,
bos_sd_custroutineitem_draft.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_custroutineitem_draft.decqty,
bos_sd_custroutineitem_draft.szuomid,
bos_sd_custroutineitem_draft.bprintprice,

bos_sd_custroutineitem_draft.szteamid,
bos_sd_custroutineitem_draft.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

bos_sd_custroutineitem_draft.decvalue,

bos_sd_custroutineitem_draft.decavgorder,

bos_sd_custroutineitem_draft.decmaxdropsize,
bos_sd_custroutineitem_draft.szparentid,
--bos_sd_custroutineitem_draft.szparentnm
bip2.szname as szparentnm

from
bos_sd_custroutineitem_draft
left join bos_inv_product on bos_sd_custroutineitem_draft.szproductid = bos_inv_product.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutineitem_draft.szscheduleid
left join bos_inv_product as bip2 on bip2.szproductid = bos_sd_custroutineitem_draft.szparentid

where
szcustid = p_szcustid

order by
bos_sd_custroutineitem_draft.szscheduleid,
bos_sd_custroutineitem_draft.shitemnumber,
bos_sd_custroutineitem_draft.decvalue,
bos_sd_custroutineitem_draft.szproductid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getcustroutineitem_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_custroutineitem_draft.shitemnumber,
bos_sd_custroutineitem_draft.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_custroutineitem_draft.decqty,
bos_sd_custroutineitem_draft.szuomid,
bos_sd_custroutineitem_draft.bprintprice,

bos_sd_custroutineitem_draft.szteamid,
bos_sd_custroutineitem_draft.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

bos_sd_custroutineitem_draft.decvalue,

bos_sd_custroutineitem_draft.decavgorder,

bos_sd_custroutineitem_draft.decmaxdropsize,
bos_sd_custroutineitem_draft.szparentid,
--bos_sd_custroutineitem_draft.szparentnm
bip2.szname as szparentnm

from
bos_sd_custroutineitem_draft
left join bos_inv_product on bos_sd_custroutineitem_draft.szproductid = bos_inv_product.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_custroutineitem_draft.szscheduleid
left join bos_inv_product as bip2 on bip2.szproductid = bos_sd_custroutineitem_draft.szparentid

where
szcustid = p_szcustid

order by
bos_sd_custroutineitem_draft.szscheduleid,
bos_sd_custroutineitem_draft.shitemnumber,
bos_sd_custroutineitem_draft.decvalue,
bos_sd_custroutineitem_draft.szproductid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getdefaultdriver(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szdriverid


from 
bos_sd_custroutine as bsc left join bos_sd_route as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getdefaultdriver_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szdriverid


from 
bos_sd_custroutine_draft as bsc
left join bos_sd_route_draft as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getguid(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sd_custroutine
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getguid_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sd_custroutine_draft
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofaverageorder(
p_szcustid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select 
bsdi.szproductid,
bsdi.szuomid,
--nice finding :) count of product id cannot be zero becoz if it is,
--there will be no quantity to be summed up too.
cast(sum(bsdi.decqty) / count(bsdi.szproductid) as decimal(18, 2)) as decqty

from 
bos_sd_fdo as bsd
inner join bos_sd_fdoitem as bsdi on bsd.szdoid = bsdi.szdoid
where 
bsd.dtmdelivery >= p_dtmfrom and bsd.dtmdelivery < interval '1 day' + p_dtmto and bsd.szcustid = p_szcustid and bapplied = 1 and bsdi.szproductid <> ''	--discount and alike have no product id, and should not be calculated. group by bsdi.szproductid, bsdi.szuomid 
order by 
bsdi.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofaverageorderallcustomer(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

select
bsc.szcustid,
bac.szname as szcustname,
bsdi.szproductid,
bip.szname as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bsdi.szuomid,
bscri.szteamid,
bscri.szscheduleid,
bscri.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscri.bprintprice,
bscri.decqty,
cast(sum(bsdi.decqty) / count(bsdi.szproductid)as decimal(18, 2)) as decavgorder

from
bos_sd_custroutine as bsc
left join bos_ar_customer as bac on bac.szcustid = bsc.szcustid
left join bos_sd_fdo as bsd on bsd.szcustid = bsc.szcustid
left join bos_sd_fdoitem as bsdi on bsdi.szdoid = bsd.szdoid
left join bos_inv_product as bip on bip.szproductid = bsdi.szproductid
left join bos_sd_custroutineitem as bscri on bscri.szcustid = bsc.szcustid
and bscri.szproductid = bsdi.szproductid and bscri.szuomid = bsdi.szuomid

where
bac.szdlvworkplaceid like p_szworkplaceid
and bsd.bapplied = 1
and bsd.dtmdelivery >= p_dtmfrom 
and bsd.dtmdelivery < interval '1 day' + p_dtmto
and bsdi.szproductid <> ''	--discount and alike have no product id, and should not be calculated.

group by
bsc.szcustid,
bac.szname,
bsdi.szproductid,
bip.szname,
bip.szqtyformat,
bsdi.szuomid,
bscri.szteamid,
bscri.szscheduleid,
bscri.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscri.bprintprice,
bscri.decqty

order by
bsc.szcustid,
bsdi.szproductid,
bsdi.szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofaverageorderallcustomer_draft(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

select
bsc.szcustid,
bac.szname as szcustname,
bsdi.szproductid,
bip.szname as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bsdi.szuomid,
bscri.szteamid,
bscri.szscheduleid,
bscri.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscri.bprintprice,
bscri.decqty,
cast(sum(bsdi.decqty) / count(bsdi.szproductid) as decimal(18, 2)) as decavgorder

from
bos_sd_custroutine_draft as bsc
left join bos_ar_customer as bac on bac.szcustid = bsc.szcustid
left join bos_sd_fdo as bsd on bsd.szcustid = bsc.szcustid
left join bos_sd_fdoitem as bsdi on bsdi.szdoid = bsd.szdoid
left join bos_inv_product as bip on bip.szproductid = bsdi.szproductid
left join bos_sd_custroutineitem_draft as bscri on bscri.szcustid = bsc.szcustid
and bscri.szproductid = bsdi.szproductid and bscri.szuomid = bsdi.szuomid

where
bac.szdlvworkplaceid like p_szworkplaceid
and bsd.bapplied = 1
and bsd.dtmdelivery >= p_dtmfrom 
and bsd.dtmdelivery < interval '1 day' + p_dtmto
and bsdi.szproductid <> ''	--discount and alike have no product id, and should not be calculated.

group by
bsc.szcustid,
bac.szname,
bsdi.szproductid,
bip.szname,
bip.szqtyformat,
bsdi.szuomid,
bscri.szteamid,
bscri.szscheduleid,
bscri.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscri.bprintprice,
bscri.decqty

order by
bsc.szcustid,
bsdi.szproductid,
bsdi.szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofcustroutine()
returns void as
$body$
begin
select 
szcustid,
dtmdelivery

from 
bos_sd_custroutine;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofcustroutine_draft()
returns void as
$body$
begin
select 
szcustid,
dtmdelivery

from 
bos_sd_custroutine_draft;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofproductonday(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custroutine as bsc
inner join bos_sd_custroutineitem as bsci on bsc.szcustid = bsci.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofproductonday_013(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custroutine as bsc
inner join bos_sd_custroutineitem as bsci on bsc.szcustid = bsci.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofproductonday_draft(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custroutine_draft as bsc
inner join bos_sd_custroutineitem_draft as bsci on bsc.szcustid = bsci.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_getlistofproductonday_draft_013(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custroutine_draft as bsc
inner join bos_sd_custroutineitem_draft as bsci on bsc.szcustid = bsci.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_iscustroutineexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custroutine
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_iscustroutineexist_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custroutine_draft
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_lockcustroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custroutine
set 
dtmdelivery = dtmdelivery
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_lockcustroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
dtmdelivery = dtmdelivery
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutine(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar)
returns void as
$body$
begin
update bos_sd_custroutine
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmdelivery = p_dtmdelivery,
sznote = p_sznote,
szdoprintpapertype = p_szdoprintpapertype,
szdoprinttype = p_szdoprinttype
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutine_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar)
returns void as
$body$
begin
update bos_sd_custroutine
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmdelivery = p_dtmdelivery,
sznote = p_sznote,
szdoprintpapertype = p_szdoprintpapertype,
szdoprinttype = p_szdoprinttype
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutine_013_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmdelivery = p_dtmdelivery,
sznote = p_sznote,
szdoprintpapertype = p_szdoprintpapertype,
szdoprinttype = p_szdoprinttype
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutine_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmdelivery = p_dtmdelivery,
sznote = p_sznote,
szdoprintpapertype = p_szdoprintpapertype,
szdoprinttype = p_szdoprinttype
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutine_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_sznote bos_dt_szdescription,
p_szdoprintpapertype varchar,
p_szdoprinttype varchar)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmdelivery = p_dtmdelivery,
sznote = p_sznote,
szdoprintpapertype = p_szdoprintpapertype,
szdoprinttype = p_szdoprinttype
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutinelastfdoid(
p_szcustid bos_dt_szid,
p_szlastfdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
szlastfdoid = p_szlastfdoid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custroutine_updatecustroutinelastfdoid_draft(
p_szcustid bos_dt_szid,
p_szlastfdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custroutine_draft
set 
szlastfdoid = p_szlastfdoid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutine(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutine_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutine_013_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutine_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutine_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_szlastfsoid bos_dt_szid,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_custtoroutine_draft
(
szcustid,
szdefaultteamid,
szdefaultscheduleid,
decdefaultschedulevalue,
szdefaultrouteid,
szdefaultordertypeid,
dtmtakingorder,
szlastfsoid,
sznote,
szsoprintpapertype,
szsoprinttype,
szdeliverygroupid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_szdefaultteamid,
p_szdefaultscheduleid,
p_decdefaultschedulevalue,
p_szdefaultrouteid,
p_szdefaultordertypeid,
p_dtmtakingorder,
p_szlastfsoid,
p_sznote,
p_szsoprintpapertype,
p_szsoprinttype,
p_szdeliverygroupid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutineitem(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_decmindropsize bos_dt_decqty,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_custtoroutineitem
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
decmindropsize,
szparentid
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_decmindropsize,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutineitem_013(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_decmindropsize bos_dt_decqty,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_custtoroutineitem
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
decmindropsize,
szparentid
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_decmindropsize,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutineitem_013_draft_013(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_decmindropsize bos_dt_decqty,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_custtoroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
decmindropsize,
szparentid
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_decmindropsize,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutineitem_draft(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_decmindropsize bos_dt_decqty,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_custtoroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
decmindropsize,
szparentid
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_decmindropsize,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_createcusttoroutineitem_draft_013(
p_szcustid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_bprintprice bit,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_decavgorder bos_dt_decamount,
p_decmaxdropsize bos_dt_decqty,
p_decmindropsize bos_dt_decqty,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_custtoroutineitem_draft
(
szcustid,
shitemnumber,
szproductid,
decqty,
szuomid,
bprintprice,
szteamid,
szscheduleid,
decvalue,
decavgorder,
decmaxdropsize,
decmindropsize,
szparentid
)
values
(
p_szcustid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_bprintprice,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_decavgorder,
p_decmaxdropsize,
p_decmindropsize,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutine
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutine_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutine_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutine_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutineitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutineitem
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutineitem_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutineitem_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_deletecusttoroutineitem_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_custtoroutineitem_draft
where
szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
coalesce(bos_ar_customer.szname, '') as szcustnm,

ctor.szdefaultteamid,
ctor.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

ctor.decdefaultschedulevalue,

ctor.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescription,
bos_sd_route.szopuserid as szdefaultsalesid_j,
bos_pi_employee.szname as szdefaultsalesnm_j,
bos_pi_employee.szteamid as szdefaultsalesteamid_j,

ctor.szdefaultordertypeid,
ctor.dtmtakingorder,
ctor.szlastfsoid,
ctor.sznote,
ctor.szsoprintpapertype,
ctor.szsoprinttype,
ctor.szdeliverygroupid,
delg.szdesc as szdeliverygroupnm_j,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
ctor.dtmlastupdated,
ctor.balreadytransferred
from
bos_sd_custtoroutine as ctor	
left join bos_ar_customer on bos_ar_customer.szcustid = ctor.szcustid
left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = ctor.szdeliverygroupid
left join bos_sd_route on bos_sd_route.szrouteid = ctor.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctor.szdefaultscheduleid

where
ctor.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutine_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
coalesce(bos_ar_customer.szname, '') as szcustnm,

ctor.szdefaultteamid,
ctor.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

ctor.decdefaultschedulevalue,

ctor.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescription,
bos_sd_route.szopuserid as szdefaultsalesid_j,
bos_pi_employee.szname as szdefaultsalesnm_j,
bos_pi_employee.szteamid as szdefaultsalesteamid_j,

ctor.szdefaultordertypeid,
ctor.dtmtakingorder,
ctor.szlastfsoid,
ctor.sznote,
ctor.szsoprintpapertype,
ctor.szsoprinttype,
ctor.szdeliverygroupid,
delg.szdesc as szdeliverygroupnm_j,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
ctor.dtmlastupdated,
ctor.balreadytransferred
from
bos_sd_custtoroutine as ctor    
left join bos_ar_customer on bos_ar_customer.szcustid = ctor.szcustid
left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = ctor.szdeliverygroupid
left join bos_sd_route on bos_sd_route.szrouteid = ctor.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctor.szdefaultscheduleid

where
ctor.szcustid = p_szcustid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select
coalesce(bos_ar_customer.szname, '') as szcustnm,

ctor.szdefaultteamid,
ctor.szdefaultscheduleid,
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,

ctor.decdefaultschedulevalue,

ctor.szdefaultrouteid,
bos_sd_route.szdescription as szdefaultroutedescription,
bos_sd_route.szopuserid as szdefaultsalesid_j,
bos_pi_employee.szname as szdefaultsalesnm_j,
bos_pi_employee.szteamid as szdefaultsalesteamid_j,

ctor.szdefaultordertypeid,
ctor.dtmtakingorder,
ctor.szlastfsoid,
ctor.sznote,
ctor.szsoprintpapertype,
ctor.szsoprinttype,
ctor.szdeliverygroupid,
delg.szdesc as szdeliverygroupnm_j,
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,
ctor.dtmlastupdated,
ctor.balreadytransferred
from
bos_sd_custtoroutine_draft as ctor
left join bos_ar_customer on bos_ar_customer.szcustid = ctor.szcustid
left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = ctor.szdeliverygroupid
left join bos_sd_route on bos_sd_route.szrouteid = ctor.szdefaultrouteid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctor.szdefaultscheduleid

where
ctor.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutine_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select  
coalesce(bos_ar_customer.szname, '') as szcustnm,  

ctor.szdefaultteamid,  
ctor.szdefaultscheduleid,  
bos_gen_routineschedule.szdescription as szdefaultscheduledesc_j,  

ctor.decdefaultschedulevalue,  

ctor.szdefaultrouteid,  
bos_sd_route.szdescription as szdefaultroutedescription,  
bos_sd_route.szopuserid as szdefaultsalesid_j,  
bos_pi_employee.szname as szdefaultsalesnm_j,  
bos_pi_employee.szteamid as szdefaultsalesteamid_j,  

ctor.szdefaultordertypeid,  
ctor.dtmtakingorder,  
ctor.szlastfsoid,  
ctor.sznote,  
ctor.szsoprintpapertype,  
ctor.szsoprinttype,  
ctor.szdeliverygroupid,  
delg.szdesc as szdeliverygroupnm_j,  
coalesce(bos_ar_customer.szdistrchannelid, '') as szcustdistrchannelid_j,  
coalesce(bos_sd_distrchannel.szname, '') as szcustdistrchannelnm_j,  
ctor.dtmlastupdated,  
ctor.balreadytransferred  
from  
bos_sd_custtoroutine_draft as ctor  
left join bos_ar_customer on bos_ar_customer.szcustid = ctor.szcustid  
left join bos_sd_deliverygroup as delg on delg.szdeliverygroupid = ctor.szdeliverygroupid  
left join bos_sd_route on bos_sd_route.szrouteid = ctor.szdefaultrouteid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_route.szopuserid  
left join bos_sd_distrchannel on bos_ar_customer.szdistrchannelid = bos_sd_distrchannel.szdistrchannelid  
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctor.szdefaultscheduleid  

where  
ctor.szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutineitem(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
ctori.shitemnumber,
ctori.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

ctori.decqty,
ctori.szuomid,
ctori.bprintprice,

ctori.szteamid,
ctori.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

ctori.decvalue,

ctori.decavgorder,
ctori.decmaxdropsize,
ctori.decmindropsize,

ctori.szparentid,
(case when ctori.szparentid = '' then '' else i.szname end ) as szparentnm

from
bos_sd_custtoroutineitem as ctori
left join bos_inv_product on bos_inv_product.szproductid = ctori.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctori.szscheduleid
left join dbo.bos_inv_product as i on i.szproductid = ctori.szproductid

where
szcustid=p_szcustid

order by
--it would be less headache for user if it is sorted this way.
ctori.szteamid,
ctori.shitemnumber,
ctori.szscheduleid,
ctori.decvalue,
ctori.szproductid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutineitem_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
ctori.shitemnumber,
ctori.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

ctori.decqty,
ctori.szuomid,
ctori.bprintprice,

ctori.szteamid,
ctori.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

ctori.decvalue,

ctori.decavgorder,
ctori.decmaxdropsize,
ctori.decmindropsize,

ctori.szparentid,
(case when ctori.szparentid = '' then '' else i.szname end ) as szparentnm

from
bos_sd_custtoroutineitem as ctori
left join bos_inv_product on bos_inv_product.szproductid = ctori.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctori.szscheduleid
left join dbo.bos_inv_product as i on i.szproductid = ctori.szproductid

where
szcustid=p_szcustid

order by
--it would be less headache for user if it is sorted this way.
ctori.szteamid,
ctori.shitemnumber,
ctori.szscheduleid,
ctori.decvalue,
ctori.szproductid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutineitem_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
ctori.shitemnumber,
ctori.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

ctori.decqty,
ctori.szuomid,
ctori.bprintprice,

ctori.szteamid,
ctori.szscheduleid,
bos_gen_routineschedule.szdescription as szscheduledesc_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,

ctori.decvalue,

ctori.decavgorder,
ctori.decmaxdropsize,
ctori.decmindropsize,

ctori.szparentid,
(case when ctori.szparentid = '' then '' else i.szname end ) as szparentnm
from
bos_sd_custtoroutineitem_draft as ctori
left join bos_inv_product on bos_inv_product.szproductid = ctori.szproductid
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctori.szscheduleid
left join bos_inv_product as i on i.szproductid = ctori.szproductid

where
szcustid=p_szcustid

order by
--it would be less headache for user if it is sorted this way.
ctori.szteamid,
ctori.shitemnumber,
ctori.szscheduleid,
ctori.decvalue,
ctori.szproductid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getcusttoroutineitem_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select  
ctori.shitemnumber,  
ctori.szproductid,  

bos_inv_product.szname as szproductname_j,  
bos_inv_product.szqtyformat as szproductqtyformat_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_product.sztrackingtype as szproducttrackingtype_j,  

ctori.decqty,  
ctori.szuomid,  
ctori.bprintprice,  

ctori.szteamid,  
ctori.szscheduleid,  
bos_gen_routineschedule.szdescription as szscheduledesc_j,  
bos_gen_routineschedule.szscheduletype as szscheduletype_j,  

ctori.decvalue,  

ctori.decavgorder,  
ctori.decmaxdropsize,  
ctori.decmindropsize,  

ctori.szparentid,  
(case when ctori.szparentid = '' then '' else i.szname end ) as szparentnm  
from  
bos_sd_custtoroutineitem_draft as ctori  
left join bos_inv_product on bos_inv_product.szproductid = ctori.szproductid  
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = ctori.szscheduleid  
left join bos_inv_product as i on i.szproductid = ctori.szproductid  

where  
szcustid=p_szcustid  

order by  
--it would be less headache for user if it is sorted this way.  
ctori.szteamid,  
ctori.shitemnumber,  
ctori.szscheduleid,  
ctori.decvalue,  
ctori.szproductid; 

-- ==================================================================  

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getdefaultsales(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szsalesid


from 
bos_sd_custtoroutine as bsc
left join bos_sd_route as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getdefaultsales_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szsalesid


from 
bos_sd_custtoroutine_draft as bsc
left join bos_sd_route as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getdefaultsales_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bsr.szopuserid, '') as szsalesid


from 
bos_sd_custtoroutine_draft as bsc
left join bos_sd_route as bsr on bsc.szdefaultrouteid = bsr.szrouteid

where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofaverageorder(
p_szcustid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select 
bsdi.szproductid,
bsdi.szuomid,
--nice finding :) count of product id cannot be zero becoz if it is,
--there will be no quantity to be summed up too.
cast( sum(bsdi.decqty) / count(bsdi.szproductid) as decimal(18, 2)) as decqty

from 
bos_sd_fso as bsd
inner join bos_sd_fsoitem as bsdi on bsd.szfsoid = bsdi.szfsoid
where 
bsd.dtmorder >= p_dtmfrom and bsd.dtmorder < interval '1 day' + p_dtmto and bsd.szcustid = p_szcustid and bsd.bapplied = 1 and bsdi.szproductid <> ''	--discount and alike have no product id, and should not be calculated. group by bsdi.szproductid, bsdi.szuomid 
order by 
bsdi.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofaverageorderallcustomer(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

select
bsc.szcustid,
bac.szname as szcustname,
bssi.szproductid,
bip.szname as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bssi.szuomid,
bscti.szteamid,
bscti.szscheduleid,
bscti.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscti.bprintprice,
bscti.decqty,
cast((sum(bssi.decqty) / count(bssi.szproductid)) as decimal(18, 2)) as decavgorder

from
bos_sd_custtoroutine as bsc
left join bos_ar_customer as bac on bac.szcustid = bsc.szcustid
left join bos_sd_fso as bss on bss.szcustid = bsc.szcustid
left join bos_sd_fsoitem as bssi on bssi.szfsoid = bss.szfsoid
left join bos_inv_product as bip on bip.szproductid = bssi.szproductid
left join bos_sd_custtoroutineitem as bscti on bscti.szcustid = bsc.szcustid
and bscti.szproductid = bssi.szproductid and bscti.szuomid = bssi.szuomid

where
bac.szdlvworkplaceid like p_szworkplaceid
and bss.bapplied = 1
and bss.dtmorder >= p_dtmfrom 
and bss.dtmorder < interval '1 day' + p_dtmto
and bssi.szproductid <> ''	--discount and alike have no product id, and should not be calculated.

group by
bsc.szcustid,
bac.szname,
bssi.szproductid,
bip.szname,
bip.szqtyformat,
bssi.szuomid,
bscti.szteamid,
bscti.szscheduleid,
bscti.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscti.bprintprice,
bscti.decqty

order by
bsc.szcustid,
bssi.szproductid,
bssi.szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofaverageorderallcustomer_draft(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

select
bsc.szcustid,
bac.szname as szcustname,
bssi.szproductid,
bip.szname as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bssi.szuomid,
bscti.szteamid,
bscti.szscheduleid,
bscti.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscti.bprintprice,
bscti.decqty,
cast((sum(bssi.decqty) / count(bssi.szproductid))as decimal(18, 2)) as decavgorder

from
bos_sd_custtoroutine_draft as bsc
left join bos_ar_customer as bac on bac.szcustid = bsc.szcustid
left join bos_sd_fso as bss on bss.szcustid = bsc.szcustid
left join bos_sd_fsoitem as bssi on bssi.szfsoid = bss.szfsoid
left join bos_inv_product as bip on bip.szproductid = bssi.szproductid
left join bos_sd_custtoroutineitem_draft as bscti on bscti.szcustid = bsc.szcustid 
and bscti.szproductid = bssi.szproductid and bscti.szuomid = bssi.szuomid

where
bac.szdlvworkplaceid like p_szworkplaceid
and bss.bapplied = 1
and bss.dtmorder >= p_dtmfrom 
and bss.dtmorder < interval '1 day' + p_dtmto
and bssi.szproductid <> ''	--discount and alike have no product id, and should not be calculated.

group by
bsc.szcustid,
bac.szname,
bssi.szproductid,
bip.szname,
bip.szqtyformat,
bssi.szuomid,
bscti.szteamid,
bscti.szscheduleid,
bscti.decvalue,
bsc.szdefaultteamid,
bsc.szdefaultscheduleid,
bsc.decdefaultschedulevalue,
bscti.bprintprice,
bscti.decqty

order by
bsc.szcustid,
bssi.szproductid,
bssi.szuomid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofcusttoroutine()
returns void as
$body$
begin
select 
szcustid,
dtmtakingorder

from 
bos_sd_custtoroutine;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofcusttoroutine_draft()
returns void as
$body$
begin
select 
szcustid,
dtmtakingorder

from 
bos_sd_custtoroutine_draft;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofproductonday(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custtoroutine as bsc
inner join bos_sd_custtoroutineitem as bsci on bsci.szcustid = bsc.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofproductonday_013(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custtoroutine as bsc
inner join bos_sd_custtoroutineitem as bsci on bsci.szcustid = bsc.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofproductonday_draft(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custtoroutine_draft as bsc
inner join bos_sd_custtoroutineitem_draft as bsci on bsci.szcustid = bsc.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_getlistofproductonday_draft_013(
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount)
returns void as
$body$
begin
select 
bsci.szproductid, coalesce(bip.szname, '') as szproductname, bsci.decqty

from 
bos_sd_custtoroutine_draft as bsc
inner join bos_sd_custtoroutineitem_draft as bsci on bsci.szcustid = bsc.szcustid
left join bos_gen_routineschedule bgrs on bgrs.szscheduleid = bsci.szscheduleid

left join bos_inv_product as bip on bsci.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid and bgrs.szscheduletype = p_szscheduletype and bsci.decvalue = p_decvalue and bsci.szteamid = p_szteamid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_iscusttoroutineexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custtoroutine
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_iscusttoroutineexist_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custtoroutine_draft
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_iscusttoroutineexist_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_custtoroutine_draft
where 
szcustid=p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_lockcusttoroutine(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine
set 
dtmtakingorder = dtmtakingorder
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_lockcusttoroutine_draft(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
dtmtakingorder = dtmtakingorder
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_lockcusttoroutine_draft_013(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
dtmtakingorder = dtmtakingorder
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutine(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid=p_szdeliverygroupid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutine_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid=p_szdeliverygroupid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutine_013_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid = p_szdeliverygroupid

where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutine_draft(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid = p_szdeliverygroupid

where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutine_draft_013(
p_szcustid bos_dt_szid,
p_szdefaultteamid bos_dt_szid,
p_szdefaultscheduleid bos_dt_szid,
p_decdefaultschedulevalue bos_dt_decamount,
p_szdefaultrouteid bos_dt_szbigid,
p_szdefaultordertypeid bos_dt_szid,
p_dtmtakingorder timestamp,
p_sznote bos_dt_szdescription,
p_szsoprintpapertype varchar,
p_szsoprinttype varchar,
p_szdeliverygroupid varchar)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szdefaultteamid = p_szdefaultteamid,
szdefaultscheduleid = p_szdefaultscheduleid,
decdefaultschedulevalue = p_decdefaultschedulevalue,
szdefaultrouteid = p_szdefaultrouteid,
szdefaultordertypeid = p_szdefaultordertypeid,
dtmtakingorder = p_dtmtakingorder,
sznote = p_sznote,
szsoprintpapertype = p_szsoprintpapertype,
szsoprinttype = p_szsoprinttype,
szdeliverygroupid = p_szdeliverygroupid

where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutinelastfsoid(
p_szcustid bos_dt_szid,
p_szlastfsoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine
set 
szlastfsoid = p_szlastfsoid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutinelastfsoid_draft(
p_szcustid bos_dt_szid,
p_szlastfsoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szlastfsoid = p_szlastfsoid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_custtoroutine_updatecusttoroutinelastfsoid_draft_013(
p_szcustid bos_dt_szid,
p_szlastfsoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_custtoroutine_draft
set 
szlastfsoid = p_szlastfsoid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_createdistrchannel(
p_szdistrchannelid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_distrchannel
(
szdistrchannelid,
szname,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szdistrchannelid,
p_szname,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_createdistrchannel_014(
p_szdistrchannelid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_distrchannel
(
szdistrchannelid,
szname,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szdistrchannelid,
p_szname,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_deletedistrchannel(
p_szdistrchannelid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_distrchannel
where
szdistrchannelid=p_szdistrchannelid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_getdistrchannel(
p_szdistrchannelid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_sd_distrchannel
where 
szdistrchannelid=p_szdistrchannelid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_getdistrchannel_014(
p_szdistrchannelid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
szdescription,
dtmlastupdated,
balreadytransferred

from 
bos_sd_distrchannel
where 
szdistrchannelid=p_szdistrchannelid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_getlistofdistrchannel()
returns void as
$body$
begin
select 
szdistrchannelid,
szname

from 
bos_sd_distrchannel;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_isdistrchannelexist(
p_szdistrchannelid bos_dt_szid)
returns void as
$body$
begin
select 
szdistrchannelid

from 
bos_sd_distrchannel
where 
szdistrchannelid=p_szdistrchannelid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_lockdistrchannel(
p_szdistrchannelid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_distrchannel
set 
szname=szname
where 
szdistrchannelid=p_szdistrchannelid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_distrchannel_updatedistrchannel(
p_szdistrchannelid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_distrchannel
set 
szname=p_szname,
szdescription=p_szdescription
where 
szdistrchannelid=p_szdistrchannelid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_employeesalestarget_createemployeesalestarget(
p_szemployeeid bos_dt_szid,
p_szperiodtype bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_dectargetamount bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_employeesalestarget
(
szemployeeid,
szperiodtype,
dtmstart,
dtmend,
dectargetamount,
dtmlastupdated,
balreadytransferred
)
values
(p_szemployeeid,
p_szperiodtype,
p_dtmstart,
p_dtmend,
p_dectargetamount, 
p_dtmlastupdated, 
p_balreadytransferred);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_employeesalestarget_deleteemployeesalestarget(
p_szemployeeid bos_dt_szid,
p_szperiodtype bos_dt_szid,
p_dtmstart timestamp)
returns void as
$body$
begin
delete 
 from bos_sd_employeesalestarget
where
 szemployeeid=p_szemployeeid and szperiodtype=p_szperiodtype and dtmstart=p_dtmstart;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_employeesalestarget_getemployeesalestarget(
p_szemployeeid bos_dt_szid,
p_szperiodtype bos_dt_szid,
p_dtmstart timestamp)
returns void as
$body$
begin
select 
* 

from 
bos_sd_employeesalestarget 
where 
 szemployeeid=p_szemployeeid and szperiodtype=p_szperiodtype and dtmstart=p_dtmstart;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_employeesalestarget_isemployeesalestargetexist(
p_szemployeeid bos_dt_szid,
p_szperiodtype bos_dt_szid,
p_dtmstart timestamp)
returns void as
$body$
begin
select 
szemployeeid 

from 
bos_sd_employeesalestarget 
where 
 szemployeeid=p_szemployeeid and szperiodtype=p_szperiodtype and dtmstart=p_dtmstart;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_employeesalestarget_lockemployeesalestarget(
p_szemployeeid bos_dt_szid,
p_szperiodtype bos_dt_szid,
p_dtmstart timestamp)
returns void as
$body$
begin
update bos_sd_employeesalestarget
set 
 dtmend = dtmend
where 
 szemployeeid=p_szemployeeid and szperiodtype=p_szperiodtype and dtmstart=p_dtmstart;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_createcjrtracking(
p_szcjrtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szchangenote varchar,
p_dtminvoiceexchangedate timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_cjrtracking
(
szcjrtrackingid,
szcustid,
sztrnid,
szdocid,
szcollectorid,
szfcjrid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szchangenote,
dtminvoiceexchangedate,
 dtmlastupdated
)
values
(
p_szcjrtrackingid,
p_szcustid,
p_sztrnid,
p_szdocid,
p_szcollectorid,
p_szfcjrid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szchangenote,
p_dtminvoiceexchangedate,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_createcjrtracking_013(
p_szcjrtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szchangenote varchar,
p_dtminvoiceexchangedate timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_cjrtracking
(
szcjrtrackingid,
szcustid,
sztrnid,
szdocid,
szcollectorid,
szfcjrid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szchangenote,
dtminvoiceexchangedate,
 dtmlastupdated
)
values
(
p_szcjrtrackingid,
p_szcustid,
p_sztrnid,
p_szdocid,
p_szcollectorid,
p_szfcjrid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szchangenote,
p_dtminvoiceexchangedate,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_createfcjr(
p_szfcjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfcjr timestamp,
p_szcollectorid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fcjr
(
szfcjrid,
szsalesorgid,
szbaserouteid,
dtmfcjr,
szcollectorid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfcjrid,
p_szsalesorgid,
p_szbaserouteid,
p_dtmfcjr,
p_szcollectorid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_createfcjritem(
p_szfcjrid bos_dt_szid,
p_shitemnumber smallint,
p_szcjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bsuccess bit,
p_szcollrefno bos_dt_szdescription,
p_szcolltasktype bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sd_fcjritem
(
szfcjrid,
shitemnumber,
szcjrtrackingid,
szreasonid,
szdescription,
bsuccess,
szcollrefno,
szcolltasktype
)
values
(
p_szfcjrid,
p_shitemnumber,
p_szcjrtrackingid,
p_szreasonid,
p_szdescription,
p_bsuccess,
p_szcollrefno,
p_szcolltasktype
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_deletecjrtracking(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_cjrtracking
where
szcjrtrackingid = p_szcjrtrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_deletefcjr(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fcjr
where
szfcjrid = p_szfcjrid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_deletefcjritem(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fcjritem
where
szfcjrid = p_szfcjrid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getcjrtracking(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_cjrtracking.szcjrtrackingid,
bos_sd_cjrtracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_cjrtracking.sztrnid,
bos_sd_cjrtracking.szdocid,
bos_ar_artrans.bclosed as bdocclosed_j,

bos_sd_cjrtracking.szcollectorid,
coalesce(bos_pi_employee.szname, '') as szcollectornm,
bos_sd_cjrtracking.szfcjrid,
bos_sd_cjrtracking.bfinished,
bos_sd_cjrtracking.bsuccess,
bos_sd_cjrtracking.btasked,
bos_sd_cjrtracking.dtmnext,
bos_sd_cjrtracking.bttrialcount,
coalesce(bos_sd_fcjritem.szreasonid, '') as szreasonid,
coalesce(bos_sd_fcjritem.szdescription, '') as szdescription,
bos_sd_cjrtracking.szchangenote,
bos_sd_cjrtracking.dtminvoiceexchangedate

from
bos_sd_cjrtracking left join bos_ar_customer on bos_sd_cjrtracking.szcustid = bos_ar_customer.szcustid
left join bos_pi_employee on bos_sd_cjrtracking.szcollectorid = bos_pi_employee.szemployeeid
left join bos_sd_fcjritem on bos_sd_cjrtracking.szfcjrid = bos_sd_fcjritem.szfcjrid and bos_sd_cjrtracking.szcjrtrackingid = bos_sd_fcjritem.szcjrtrackingid
left join bos_ar_artrans on bos_ar_artrans.sztrnid = bos_sd_cjrtracking.sztrnid
and bos_ar_artrans.szdocid = bos_sd_cjrtracking.szdocid

where
bos_sd_cjrtracking.szcjrtrackingid = p_szcjrtrackingid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getcjrtracking_013(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select    
bos_sd_cjrtracking.szcjrtrackingid,    
bos_sd_cjrtracking.szcustid,    
coalesce(bos_ar_customer.szname, '') as szcustnm,    

bos_sd_cjrtracking.sztrnid,    
bos_sd_cjrtracking.szdocid,    
bos_ar_artrans.bclosed as bdocclosed_j,    

bos_sd_cjrtracking.szcollectorid,    
coalesce(bos_pi_employee.szname, '') as szcollectornm,    
bos_sd_cjrtracking.szfcjrid,    
bos_sd_cjrtracking.bfinished,    
bos_sd_cjrtracking.bsuccess,    
bos_sd_cjrtracking.btasked,    
bos_sd_cjrtracking.dtmnext,    
bos_sd_cjrtracking.bttrialcount,    
coalesce(bos_sd_fcjritem.szreasonid, '') as szreasonid,    
coalesce(bos_sd_fcjritem.szdescription, '') as szdescription,    
bos_sd_cjrtracking.szchangenote,    
bos_sd_cjrtracking.dtminvoiceexchangedate,
bos_sd_cjrtracking.dtmlastupdated      

from    
bos_sd_cjrtracking left join bos_ar_customer on bos_sd_cjrtracking.szcustid = bos_ar_customer.szcustid    
left join bos_pi_employee on bos_sd_cjrtracking.szcollectorid = bos_pi_employee.szemployeeid    
left join bos_sd_fcjritem on bos_sd_cjrtracking.szfcjrid = bos_sd_fcjritem.szfcjrid and bos_sd_cjrtracking.szcjrtrackingid = bos_sd_fcjritem.szcjrtrackingid    
left join bos_ar_artrans on bos_ar_artrans.sztrnid = bos_sd_cjrtracking.sztrnid    
and bos_ar_artrans.szdocid = bos_sd_cjrtracking.szdocid    

where    
bos_sd_cjrtracking.szcjrtrackingid = p_szcjrtrackingid;  

-- ==================================================================    

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getfcjr(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fcjr.szsalesorgid,
bos_sd_fcjr.szbaserouteid,
bos_sd_fcjr.dtmfcjr,
bos_sd_fcjr.szcollectorid,
bos_pi_employee.szname as szcollectornm,
bos_sd_fcjr.bresultfrtransfer,
bos_sd_fcjr.bvoid,
bos_gen_approved.bapproved,
bos_sd_fcjr.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fcjr.btprintedcount,
bos_sd_fcjr.btransferred,

bos_sd_fcjr.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_sd_fcjr.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fcjr.sztaxentityid,
bos_sd_fcjr.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_sd_fcjr.dtmcreated,
bos_sd_fcjr.bsystemcreated,
bos_sd_fcjr.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_sd_fcjr.dtmlastupdated,
bos_sd_fcjr.balreadytransferred

from
bos_sd_fcjr 
left join bos_gen_approved on bos_sd_fcjr.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_fcjr.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_pi_employee on bos_sd_fcjr.szcollectorid = bos_pi_employee.szemployeeid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fcjr.szuserid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fcjr.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fcjr.szworkplaceid

where
bos_sd_fcjr.szfcjrid = p_szfcjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getfcjritem(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
szcjrtrackingid,
szreasonid,
szdescription,
szcollrefno,
szcolltasktype,
bsuccess

from 
bos_sd_fcjritem
where 
szfcjrid = p_szfcjrid 
order by 
shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofactivecjrtracking(
p_szcollectorid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szstatustrouble varchar)
returns void as
$body$
begin
select 
bos_sd_cjrtracking.szcjrtrackingid,
bos_sd_cjrtracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,
bos_sd_cjrtracking.sztrnid,
bos_sd_cjrtracking.szdocid

from 
bos_sd_cjrtracking 
inner join bos_ar_customer on 
bos_sd_cjrtracking.szcustid = bos_ar_customer.szcustid

where 
bos_ar_customer.szstatus <> p_szstatustrouble and 
bos_sd_cjrtracking.bfinished = 0 and 
bos_sd_cjrtracking.btasked = 0 and 
bos_sd_cjrtracking.szcollectorid like p_szcollectorid and 
bos_sd_cjrtracking.szcustid like p_szcustid and 
(dtmnext  >= p_dtmstart and dtmnext < p_dtmend + 1) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofcjrtracking()
returns void as
$body$
begin
select 
szcjrtrackingid

from 
bos_sd_cjrtracking;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofcjrtrackingtobereschedule(
p_szcollectorid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szcollectorid = '%'  
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szcollectorid,  
coalesce(bpe.szname, '') as szcollectorname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastcollectiondate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szcjrtrackingid,  
coalesce(bsd.szfcjrid, '') as szfcjrid,  
coalesce(bsc.szscheduleid, '') as szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szdocid,  
bsd.szchangenote,  
bsd.sztrnid,  
bsd.dtminvoiceexchangedate  

from  
bos_sd_cjrtracking as bsd left join bos_pi_employee as bpe on bsd.szcollectorid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fcjritem as bsf on bsd.szfcjrid = bsf.szfcjrid and bsd.szcjrtrackingid = bsf.szcjrtrackingid  
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bsd.szcustid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsc.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
--bsd.szcollectorid like p_szcollectorid and  
bsd.bfinished = p_bfinished;   

else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szcollectorid,  
coalesce(bpe.szname, '') as szcollectorname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastcollectiondate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szcjrtrackingid,  
coalesce(bsd.szfcjrid, '') as szfcjrid,  
coalesce(bsc.szscheduleid, '') as szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szdocid,  
bsd.szchangenote,  
bsd.sztrnid,  
bsd.dtminvoiceexchangedate  

from  
bos_sd_cjrtracking as bsd left join bos_pi_employee as bpe on bsd.szcollectorid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fcjritem as bsf on bsd.szfcjrid = bsf.szfcjrid and bsd.szcjrtrackingid = bsf.szcjrtrackingid  
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bsd.szcustid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsc.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
bsd.szcollectorid = p_szcollectorid and  
bsd.bfinished = p_bfinished;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofcjrtrackingtobereschedule_014(
p_szcollectorid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szcollectorid = '%'  
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szcollectorid,  
coalesce(bpe.szname, '') as szcollectorname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastcollectiondate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szcjrtrackingid,  
coalesce(bsd.szfcjrid, '') as szfcjrid,  
coalesce(bsc.szscheduleid, '') as szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szdocid,  
bsd.szchangenote,  
bsd.sztrnid,  
bsd.dtminvoiceexchangedate  

from  
bos_sd_cjrtracking as bsd left join bos_pi_employee as bpe on bsd.szcollectorid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fcjritem as bsf on bsd.szfcjrid = bsf.szfcjrid and bsd.szcjrtrackingid = bsf.szcjrtrackingid  
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bsd.szcustid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsc.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
--bsd.szcollectorid like p_szcollectorid and  
bsd.bfinished = p_bfinished;   

else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szcollectorid,  
coalesce(bpe.szname, '') as szcollectorname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastcollectiondate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szcjrtrackingid,  
coalesce(bsd.szfcjrid, '') as szfcjrid,  
coalesce(bsc.szscheduleid, '') as szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szdocid,  
bsd.szchangenote,  
bsd.sztrnid,  
bsd.dtminvoiceexchangedate  

from  
bos_sd_cjrtracking as bsd left join bos_pi_employee as bpe on bsd.szcollectorid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fcjritem as bsf on bsd.szfcjrid = bsf.szfcjrid and bsd.szcjrtrackingid = bsf.szcjrtrackingid  
left join bos_sd_custcollroutine as bsc on bsc.szcustid = bsd.szcustid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsc.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
bsd.szcollectorid = p_szcollectorid and  
bsd.bfinished = p_bfinished;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistoffcjr()
returns void as
$body$
begin
select 
szfcjrid,
dtmfcjr

from 
bos_sd_fcjr;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofrangefcjr(
p_szfcjrid_from varchar,
p_szfcjrid_to varchar)
returns void as
$body$
begin
select 
szfcjrid

from 
bos_sd_fcjr
where 
szfcjrid >= p_szfcjrid_from and szfcjrid <= p_szfcjrid_to and bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofreportfcj(
p_szfcjrid bos_dt_szid,
p_szfinvoicetrnid bos_dt_szmediumid,
p_szpdrtrnid bos_dt_szmediumid)
returns void as
$body$
begin
select 
bsfi.szcjrtrackingid,
coalesce(bsc.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
bsc.sztrnid,
bsc.szdocid,
bat.dtmperiode,
coalesce(bat.decremain, 0) as decinvamount,
bat.dtmdue as dtmdue,
coalesce(bac.szcategory_3, '') as szcustcategory_3,
coalesce(bsfdo.szmanualno, '') as szdomanual

from 
bos_sd_fcjr as bsf
inner join bos_sd_fcjritem as bsfi on bsf.szfcjrid = bsfi.szfcjrid
left join bos_sd_cjrtracking as bsc on bsfi.szcjrtrackingid = bsc.szcjrtrackingid
left join bos_ar_customer as bac on bsc.szcustid = bac.szcustid
left join bos_ar_artrans as bat on bsc.sztrnid = bat.sztrnid and bsc.szdocid = bat.szdocid and
bsc.szcustid = bat.szcustid and bat.bclosed = 0
left join bos_sd_fdo as bsfdo on bsc.szdocid = bsfdo.szfirstfinvoiceid
where 
bsf.szfcjrid = p_szfcjrid 
order by 
bsfi.szfcjrid,
bsfi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofreportfcj_014(
p_szfcjrid bos_dt_szid,
p_szfinvoicetrnid bos_dt_szmediumid,
p_szpdrtrnid bos_dt_szmediumid)
returns void as
$body$
begin
select 
bsfi.szcjrtrackingid,
coalesce(bsc.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
bsc.sztrnid,
bsc.szdocid,
bat.dtmperiode,
coalesce(bat.decremain, 0) as decinvamount,
bat.dtmdue as dtmdue,
coalesce(bac.szcategory_3, '') as szcustcategory_3,
coalesce(bsfdo.szmanualno, '') as szdomanual

from 
bos_sd_fcjr as bsf
inner join bos_sd_fcjritem as bsfi on bsf.szfcjrid = bsfi.szfcjrid
left join bos_sd_cjrtracking as bsc on bsfi.szcjrtrackingid = bsc.szcjrtrackingid
left join bos_ar_customer as bac on bsc.szcustid = bac.szcustid
left join bos_ar_artrans as bat on bsc.sztrnid = bat.sztrnid and bsc.szdocid = bat.szdocid and
bsc.szcustid = bat.szcustid and bat.bclosed = 0
left join bos_sd_fdo as bsfdo on bsc.szdocid = bsfdo.szfirstfinvoiceid
where 
bsf.szfcjrid = p_szfcjrid 
order by 
bsfi.szfcjrid,
bsfi.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofreportfcj_015(
p_szfcjrid bos_dt_szid,
p_szfinvoicetrnid bos_dt_szmediumid,
p_szpdrtrnid bos_dt_szmediumid)
returns void as
$body$
begin
select 
bsfi.szcjrtrackingid,
coalesce(bsc.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
bsfi.szcolltasktype as szcolltasktype,
coalesce(bsfi.szcollrefno,'') as szcollrefno,
finvoice.szfakturpajakid,
coalesce(fdo.szcustreceiptno,'') as szcustreceiptno ,
bsc.sztrnid,
bsc.szdocid,
bat.dtmperiode,
coalesce(bat.decremain, 0) as decinvamount,
bat.dtmdue as dtmdue,
coalesce(bac.szcategory_3, '') as szcustcategory_3,
coalesce(bsfdo.szmanualno, '') as szdomanual

from 
bos_sd_fcjr as bsf
where 
bsf.szfcjrid = p_szfcjrid 

order by 
bsfi.szfcjrid,
bsfi.shitemnumber;




end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofreportfcj_016(
p_szfcjrid bos_dt_szid,
p_szfinvoicetrnid bos_dt_szmediumid,
p_szpdrtrnid bos_dt_szmediumid)
returns void as
$body$
begin
select 
bsfi.szcjrtrackingid,
coalesce(bsc.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
bsfi.szcolltasktype as szcolltasktype,
coalesce(bsfi.szcollrefno,'') as szcollrefno,
finvoice.szfakturpajakid,
coalesce(fdo.szcustreceiptno,'') as szcustreceiptno ,
bsc.sztrnid,
bsc.szdocid,
bat.dtmperiode,
coalesce(bat.decremain, 0) as decotamount,
bat.dtmdue as dtmdue,
coalesce(bac.szcategory_3, '') as szcustcategory_3,
coalesce(bsfdo.szmanualno, '') as szdomanual,
coalesce(emp.szname, '') as szsalesname ,
coalesce(bsc.szchangenote,'') as szchangenote,
coalesce(bat.decamount, 0) as decinvamount

from 
bos_sd_fcjr as bsf
where 
bsf.szfcjrid = p_szfcjrid 
order by 
bsfi.szfcjrid,
bsfi.shitemnumber;






end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofunclosedinvoicetobecollected(
p_sztrnidinvoice varchar,
p_sztrnidpdr varchar,
p_szcustid bos_dt_szid,
p_dtmcollected timestamp)
returns void as
$body$
begin

select  
bat.sztrnid,  
bat.szdocid,  
coalesce(bsc.szcjrtrackingid, '') as szcjrtrackingid  

from  
bos_ar_artrans as bat  
left join bos_sd_cjrtracking as bsc on bat.sztrnid = bsc.sztrnid and bat.szdocid = bsc.szdocid  and bsc.bfinished=0
left join bos_ar_custsales as bac on bac.szcustid = bat.szcustid  
left join bos_ar_paymentterm as bap on bap.szpaymenttermid = bac.szpaymenttermid  

where  
(bat.sztrnid = p_sztrnidinvoice or bat.sztrnid = p_sztrnidpdr) and  
bat.bclosed = 0 and  
bat.szcustid = p_szcustid and  
--when collecting payment, we want customer to pay at least on the due date printed in the invoice.  
--that's why we have to send invoice several days customer need to process the invoice, before the printed due date.  
bat.dtmdue_printed < interval 'coalesce(bap.intdaybeforeduedatetosendinvoice, 0) + 1 day' + p_dtmcollected



order by  
bat.sztrnid, bat.szdocid, bsc.szcjrtrackingid, bat.szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_getlistofunclosedinvoicetobecollected_014(
p_sztrnidinvoice varchar,
p_sztrnidpdr varchar,
p_szcustid bos_dt_szid,
p_dtmcollected timestamp)
returns void as
$body$
begin

select  
bat.sztrnid,  
bat.szdocid,  
coalesce(bsc.szcjrtrackingid, '') as szcjrtrackingid  

from  
bos_ar_artrans as bat  
left join bos_sd_cjrtracking as bsc on bat.sztrnid = bsc.sztrnid and bat.szdocid = bsc.szdocid  and bsc.bfinished=0
left join bos_ar_custsales as bac on bac.szcustid = bat.szcustid  
left join bos_ar_paymentterm as bap on bap.szpaymenttermid = bac.szpaymenttermid  

where  
(bat.sztrnid = p_sztrnidinvoice or bat.sztrnid = p_sztrnidpdr) and  
bat.bclosed = 0 and  
bat.szcustid = p_szcustid and  
--when collecting payment, we want customer to pay at least on the due date printed in the invoice.  
--that's why we have to send invoice several days customer need to process the invoice, before the printed due date.  
bat.dtmdue_printed < interval 'coalesce(bap.intdaybeforeduedatetosendinvoice, 0) + 1 day' + p_dtmcollected


order by  
bat.sztrnid, bat.szdocid, bsc.szcjrtrackingid, bat.szcustid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_increasecjrtrackingtrialcount(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
bttrialcount = bttrialcount + 1
where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_isassignedtotracking(
p_szinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
szcjrtrackingid

from 
bos_sd_cjrtracking
where 
 szdocid = p_szinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_iscjrtrackingexist(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select 
szcjrtrackingid

from 
bos_sd_cjrtracking
where 
szcjrtrackingid = p_szcjrtrackingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_isfcjrcreated(
p_szcollectorid bos_dt_szid,
p_dtmfromdate timestamp,
p_dtmtodate timestamp)
returns void as
$body$
begin
select 
szfcjrid

from 
bos_sd_fcjr
where 
bvoid = 0 and szcollectorid = p_szcollectorid and (dtmfcjr >= p_dtmfromdate and dtmfcjr < p_dtmtodate + 1) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_isfcjrexist(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
select 
szfcjrid

from 
bos_sd_fcjr
where 
szfcjrid = p_szfcjrid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_lockcjrtracking(
p_szcjrtrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
bttrialcount = bttrialcount
where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_lockfcjr(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fcjr
set 
btransferred = btransferred
where 
szfcjrid = p_szfcjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_markcjrtracking(
p_szcjrtrackingid bos_dt_szid,
p_btasked bit,
p_bfinished bit,
p_dtmnext timestamp,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
btasked = p_btasked,
bfinished = p_bfinished,
dtmnext = p_dtmnext,
szcollectorid = p_szcollectorid,
szfcjrid = p_szfcjrid

where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_markcjrtrackingtasked(
p_szcjrtrackingid bos_dt_szid,
p_btasked bit,
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
btasked = p_btasked,
szfcjrid = p_szfcjrid

where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_markfcjrvoid(
p_szfcjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fcjr
set 
bvoid = 1,
bapplied = 0

where 
szfcjrid = p_szfcjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatecjrtracking(
p_szcjrtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szchangenote varchar,
p_dtminvoiceexchangedate timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
szcustid = p_szcustid,
sztrnid = p_sztrnid,
szdocid = p_szdocid,
szcollectorid = p_szcollectorid,
szfcjrid = p_szfcjrid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount,
szchangenote = p_szchangenote,
dtminvoiceexchangedate = p_dtminvoiceexchangedate
, dtmlastupdated = p_dtmlastupdated
where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatecjrtracking_013(
p_szcjrtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szchangenote varchar,
p_dtminvoiceexchangedate timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
szcustid = p_szcustid,
sztrnid = p_sztrnid,
szdocid = p_szdocid,
szcollectorid = p_szcollectorid,
szfcjrid = p_szfcjrid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount,
szchangenote = p_szchangenote,

dtminvoiceexchangedate = p_dtminvoiceexchangedate,
dtmlastupdated = p_dtmlastupdated

where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatecjrtracking_014(
p_szcjrtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szcollectorid bos_dt_szid,
p_szfcjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szchangenote varchar,
p_szpaymentrefno varchar,
p_dtminvoiceexchangedate timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
szcustid = p_szcustid,
sztrnid = p_sztrnid,
szdocid = p_szdocid,
szcollectorid = p_szcollectorid,
szfcjrid = p_szfcjrid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount,
szchangenote = p_szchangenote,
szpaymentrefno = p_szpaymentrefno,
dtminvoiceexchangedate = p_dtminvoiceexchangedate,
dtmlastupdated = p_dtmlastupdated

where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatecjrtrackingnextschedule(
p_szcjrtrackingid bos_dt_szid,
p_dtmnext timestamp)
returns void as
$body$
begin
update bos_sd_cjrtracking
set 
dtmnext = p_dtmnext
where 
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatefcjr(
p_szfcjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfcjr timestamp,
p_szcollectorid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_fcjr
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfcjr = p_dtmfcjr,
szcollectorid = p_szcollectorid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

, dtmlastupdated = p_dtmlastupdated

where 
szfcjrid = p_szfcjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatefcjr_014(
p_szfcjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfcjr timestamp,
p_szcollectorid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_fcjr
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfcjr = p_dtmfcjr,
szcollectorid = p_szcollectorid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

, dtmlastupdated = p_dtmlastupdated

where 
szfcjrid = p_szfcjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatefcjritemreason(
p_szfcjrid bos_dt_szid,
p_szcjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_fcjritem
set 
szreasonid = p_szreasonid,
szdescription = p_szdescription
where 
szfcjrid = p_szfcjrid and
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcjr_updatefcjritemsuccess(
p_szfcjrid bos_dt_szid,
p_szcjrtrackingid bos_dt_szid,
p_bsuccess bit)
returns void as
$body$
begin
update bos_sd_fcjritem
set 
bsuccess = p_bsuccess
where 
szfcjrid = p_szfcjrid and
szcjrtrackingid = p_szcjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_createfcustfoc(
p_szfcustfocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szfocid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_boverride bit,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fcustfoc
(
szfcustfocid,
szcustid,
szfocid,
dtmstart,
dtmend,
boverride,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
szuserid,
-- data status.,
dtmlastupdated ,
balreadytransferred
)
values
(
p_szfcustfocid,
p_szcustid,
p_szfocid,
p_dtmstart,
p_dtmend,
p_boverride,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_deletefcustfoc(
p_szfcustfocid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fcustfoc
where
szfcustfocid=p_szfcustfocid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_getfcustfoc(
p_szfcustfocid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fcustfoc.szcustid,
bos_ar_customer.szname as szcustnm,
bos_sd_fcustfoc.szfocid,
bos_sd_fcustfoc.dtmstart,
bos_sd_fcustfoc.dtmend,
bos_sd_fcustfoc.boverride,

bos_sd_fcustfoc.bresultfrtransfer,
bos_sd_fcustfoc.bvoid,
bos_gen_approved.bapproved,
bos_sd_fcustfoc.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fcustfoc.btprintedcount,
bos_sd_fcustfoc.btransferred,

bos_sd_fcustfoc.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_sd_fcustfoc.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fcustfoc.sztaxentityid,
bos_sd_fcustfoc.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_sd_fcustfoc.dtmcreated,
cast(0 as tinyint) as bsystemcreated,

bos_sd_fcustfoc.szuserid,
bos_sm_user.szname as szusernm_j,

bos_sd_fcustfoc.dtmlastupdated,
bos_sd_fcustfoc.balreadytransferred
from
((bos_sd_fcustfoc left join bos_gen_approved on bos_sd_fcustfoc.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_sd_fcustfoc.szfjournalid = bos_gl_fjournaltrans.szfjournalid)
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fcustfoc.szcustid

left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fcustfoc.szuserid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fcustfoc.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fcustfoc.szworkplaceid

where
szfcustfocid = p_szfcustfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_getlistoffcustfoc()
returns void as
$body$
begin
select 
szfcustfocid,
szcustid,
szfocid

from 
bos_sd_fcustfoc;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_isfcustfocexist(
p_szfcustfocid bos_dt_szid)
returns void as
$body$
begin
select 
szfcustfocid

from 
bos_sd_fcustfoc
where 
szfcustfocid=p_szfcustfocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_lockfcustfoc(
p_szfcustfocid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fcustfoc
set 
szcustid=szcustid
where 
szfcustfocid=p_szfcustfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_markfcustfocapplied(
p_szfcustfocid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fcustfoc
set 
bapplied = 1
where 
szfcustfocid = p_szfcustfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_markfcustfocvoid(
p_szfcustfocid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_sd_fcustfoc
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfcustfocid = p_szfcustfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fcustfoc_updatefcustfoc(
p_szfcustfocid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szfocid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_boverride bit,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fcustfoc
set 
szcustid = p_szcustid,
szfocid = p_szfocid,
dtmstart = p_dtmstart,
dtmend = p_dtmend,
boverride = p_boverride,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfcustfocid = p_szfcustfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createdjrtracking(
p_szdjrtrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfdjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_bdonotincrstocktodeliver smallint,
p_deccustsalestarget bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_djrtracking
(
szdjrtrackingid,
sztype,
szcustid,
szfdoid,
szdriverid,
szfdjrid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szteamid,
szscheduleid,
decvalue,
szfcallid,
szworkplaceid,
bdonotincrstocktodeliver,
deccustsalestarget,
 dtmlastupdated
)
values
(
p_szdjrtrackingid,
p_sztype,
p_szcustid,
p_szfdoid,
p_szdriverid,
p_szfdjrid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_szfcallid,
p_szworkplaceid,
p_bdonotincrstocktodeliver,
p_deccustsalestarget,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createdjrtracking_013(
p_szdjrtrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfdjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_bdonotincrstocktodeliver smallint,
p_deccustsalestarget bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_djrtracking
(
szdjrtrackingid,
sztype,
szcustid,
szfdoid,
szdriverid,
szfdjrid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szteamid,
szscheduleid,
decvalue,
szfcallid,
szworkplaceid,
bdonotincrstocktodeliver,
deccustsalestarget,
 dtmlastupdated
)
values
(
p_szdjrtrackingid,
p_sztype,
p_szcustid,
p_szfdoid,
p_szdriverid,
p_szfdjrid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_szfcallid,
p_szworkplaceid,
p_bdonotincrstocktodeliver,
p_deccustsalestarget,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createdjrtrackingproduct(
p_szdjrtrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_djrtrackingproduct
(
szdjrtrackingid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
szparentid
)
values
(
p_szdjrtrackingid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createdjrtrackingproduct_014(
p_szdjrtrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_djrtrackingproduct
(
szdjrtrackingid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
szparentid
)
values
(
p_szdjrtrackingid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjr(
p_szfdjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfdjr timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_decvehicleusagevolume bos_dt_decamount,
p_decvehicleusageweight bos_dt_decamount,
p_szdeliverygroupid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_decrit bos_dt_decdecimal,
p_dectonase numeric,
p_deccubication numeric)
returns void as
$body$
begin
insert into bos_sd_fdjr
(
szfdjrid,
szsalesorgid,
szbaserouteid,
dtmfdjr,
szdriverid,
szvehicleid,
decstartkm,
decendkm,
dtmstarttime,
dtmendtime,
decvehicleusagevolume,
decvehicleusageweight,
szdeliverygroupid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- helper 123 and rit,
szhelperid,
szhelperid_2,
szhelperid_3,
decrit,
-- weight and volume,
dectonase,
deccubication
)
values
(
p_szfdjrid,
p_szsalesorgid,
p_szbaserouteid,
p_dtmfdjr,
p_szdriverid,
p_szvehicleid,
p_decstartkm,
p_decendkm,
p_dtmstarttime,
p_dtmendtime,
p_decvehicleusagevolume,
p_decvehicleusageweight,
p_szdeliverygroupid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- helper 123 and rit,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_decrit,
-- weight and volume,
p_dectonase,
p_deccubication
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjr_014(
p_szfdjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfdjr timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_decvehicleusagevolume bos_dt_decamount,
p_decvehicleusageweight bos_dt_decamount,
p_szdeliverygroupid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_decrit bos_dt_decdecimal,
p_dectonase numeric,
p_deccubication numeric)
returns void as
$body$
begin
insert into bos_sd_fdjr
(
szfdjrid,
szsalesorgid,
szbaserouteid,
dtmfdjr,
szdriverid,
szvehicleid,
decstartkm,
decendkm,
dtmstarttime,
dtmendtime,
decvehicleusagevolume,
decvehicleusageweight,
szdeliverygroupid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
-- helper 123 and rit,
szhelperid,
szhelperid_2,
szhelperid_3,
decrit,
-- weight and volume,
dectonase,
deccubication
)
values
(
p_szfdjrid,
p_szsalesorgid,
p_szbaserouteid,
p_dtmfdjr,
p_szdriverid,
p_szvehicleid,
p_decstartkm,
p_decendkm,
p_dtmstarttime,
p_dtmendtime,
p_decvehicleusagevolume,
p_decvehicleusageweight,
p_szdeliverygroupid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- helper 123 and rit,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_decrit,
-- weight and volume,
p_dectonase,
p_deccubication
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjritem(
p_szfdjrid bos_dt_szid,
p_shitemnumber smallint,
p_szdjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdesciption varchar,
p_bsuccess bit,
p_bstarted bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime numeric,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bscanbarcodesuccess smallint,
p_szbarcodescanfailreasonid bos_dt_szid,
p_bscangpssuccess smallint,
p_szgpsscanfailreasonid bos_dt_szid,
p_decjourneyspendtime numeric)
returns void as
$body$
begin
insert into bos_sd_fdjritem
(
szfdjrid,
shitemnumber,
szdjrtrackingid,
szreasonid,
szdescription,
bsuccess,
bstarted,
dtmstartvisit,
dtmendvisit,
decvisitspendtime,
szlatitude,
szlongitude,
szbarcodescanfailreasonid,
szgpsscanfailreasonid,
bscangpssuccess,
bscanbarcodesuccess,
decjourneyspendtime
)
values
(
p_szfdjrid,
p_shitemnumber,
p_szdjrtrackingid,
p_szreasonid,
p_szdesciption,
p_bsuccess,
p_bstarted,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_szlatitude,
p_szlongitude,
p_szbarcodescanfailreasonid,
p_szgpsscanfailreasonid,
p_bscangpssuccess,
p_bscanbarcodesuccess,
p_decjourneyspendtime
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjritem_014(
p_szfdjrid bos_dt_szid,
p_shitemnumber smallint,
p_szdjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdesciption varchar,
p_bsuccess bit,
p_bstarted bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime numeric,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_bscanbarcodesuccess smallint,
p_szbarcodescanfailreasonid bos_dt_szid,
p_bscangpssuccess smallint,
p_szgpsscanfailreasonid bos_dt_szid,
p_decjourneyspendtime numeric)
returns void as
$body$
begin
insert into bos_sd_fdjritem
(
szfdjrid,
shitemnumber,
szdjrtrackingid,
szreasonid,
szdescription,
bsuccess,
bstarted,
dtmstartvisit,
dtmendvisit,
decvisitspendtime,
szlatitude,
szlongitude,
szbarcodescanfailreasonid,
szgpsscanfailreasonid,
bscangpssuccess,
bscanbarcodesuccess,
decjourneyspendtime
)
values
(
p_szfdjrid,
p_shitemnumber,
p_szdjrtrackingid,
p_szreasonid,
p_szdesciption,
p_bsuccess,
p_bstarted,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_szlatitude,
p_szlongitude,
p_szbarcodescanfailreasonid,
p_szgpsscanfailreasonid,
p_bscangpssuccess,
p_bscanbarcodesuccess,
p_decjourneyspendtime
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjrproductrequest(
p_szfdjrid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szwpid1 bos_dt_szid,
p_szwhid1 bos_dt_szid,
p_szfprid1 bos_dt_szid,
p_decqty1 bos_dt_decamount,
p_szwpid2 bos_dt_szid,
p_szwhid2 bos_dt_szid,
p_szfprid2 bos_dt_szid,
p_decqty2 bos_dt_decamount,
p_szwpid3 bos_dt_szid,
p_szwhid3 bos_dt_szid,
p_szfprid3 bos_dt_szid,
p_decqty3 bos_dt_decamount,
p_szwpid4 bos_dt_szid,
p_szwhid4 bos_dt_szid,
p_szfprid4 bos_dt_szid,
p_decqty4 bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdjrproductrequest
(
szfdjrid,
shitemnumber,
szproductid,
decqty,
szuomid,
szwpid1,
szwhid1,
szfprid1,
decqty1,
szwpid2,
szwhid2,
szfprid2,
decqty2,
szwpid3,
szwhid3,
szfprid3,
decqty3,
szwpid4,
szwhid4,
szfprid4,
decqty4,
szparentid
)
values
(
p_szfdjrid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szwpid1,
p_szwhid1,
p_szfprid1,
p_decqty1,
p_szwpid2,
p_szwhid2,
p_szfprid2,
p_decqty2,
p_szwpid3,
p_szwhid3,
p_szfprid3,
p_decqty3,
p_szwpid4,
p_szwhid4,
p_szfprid4,
p_decqty4,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_createfdjrproductrequest_014(
p_szfdjrid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szwpid1 bos_dt_szid,
p_szwhid1 bos_dt_szid,
p_szfprid1 bos_dt_szid,
p_decqty1 bos_dt_decamount,
p_szwpid2 bos_dt_szid,
p_szwhid2 bos_dt_szid,
p_szfprid2 bos_dt_szid,
p_decqty2 bos_dt_decamount,
p_szwpid3 bos_dt_szid,
p_szwhid3 bos_dt_szid,
p_szfprid3 bos_dt_szid,
p_decqty3 bos_dt_decamount,
p_szwpid4 bos_dt_szid,
p_szwhid4 bos_dt_szid,
p_szfprid4 bos_dt_szid,
p_decqty4 bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdjrproductrequest
(
szfdjrid,
shitemnumber,
szproductid,
decqty,
szuomid,
szwpid1,
szwhid1,
szfprid1,
decqty1,
szwpid2,
szwhid2,
szfprid2,
decqty2,
szwpid3,
szwhid3,
szfprid3,
decqty3,
szwpid4,
szwhid4,
szfprid4,
decqty4,
szparentid
)
values
(
p_szfdjrid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szwpid1,
p_szwhid1,
p_szfprid1,
p_decqty1,
p_szwpid2,
p_szwhid2,
p_szfprid2,
p_decqty2,
p_szwpid3,
p_szwhid3,
p_szfprid3,
p_decqty3,
p_szwpid4,
p_szwhid4,
p_szfprid4,
p_decqty4,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_deletedjrtrackingproduct(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_djrtrackingproduct
where
szdjrtrackingid = p_szdjrtrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_deletedjrtrackingproduct_byitem(
p_szdjrtrackingid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_djrtrackingproduct
where
szdjrtrackingid = p_szdjrtrackingid and 
shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_deletefdjr(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdjr
where
szfdjrid = p_szfdjrid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_deletefdjritem(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdjritem
where
szfdjrid = p_szfdjrid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_deletefdjrproductrequest(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdjrproductrequest
where
szfdjrid = p_szfdjrid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtracking(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_sd_djrtracking.szdjrtrackingid,
bos_sd_djrtracking.sztype,
bos_sd_djrtracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_djrtracking.szfdoid,
bos_sd_fdo.szfsoid as szfdofsoid_j,
bos_sd_fdo.bapplied as bfdoapplied_j,

bos_sd_djrtracking.szdriverid,
coalesce(bos_pi_employee.szname, '') as szdrivernm,
bos_sd_djrtracking.szfdjrid,
bos_sd_djrtracking.bfinished,
bos_sd_djrtracking.bsuccess,
bos_sd_djrtracking.btasked,
bos_sd_djrtracking.dtmnext,
bos_sd_djrtracking.bttrialcount,

bos_sd_djrtracking.szteamid,
bos_sd_djrtracking.szscheduleid,
bos_sd_djrtracking.decvalue,

coalesce(bos_sd_fdjritem.szreasonid, '') as szreasonid,
coalesce(bos_sd_fdjritem.szdescription, '') as szdescription,
bos_sd_djrtracking.szfcallid,
coalesce(bos_crl_fcall.szcalltype, '') as szcalltype,
bos_sd_djrtracking.szworkplaceid,
bos_sd_djrtracking.bdonotincrstocktodeliver

--new
, bos_sd_djrtracking.deccustsalestarget

from
bos_sd_djrtracking left join bos_ar_customer on bos_sd_djrtracking.szcustid = bos_ar_customer.szcustid
left join bos_pi_employee on bos_sd_djrtracking.szdriverid = bos_pi_employee.szemployeeid
left join bos_sd_fdjritem on bos_sd_fdjritem.szfdjrid = bos_sd_djrtracking.szfdjrid and 
bos_sd_fdjritem.szdjrtrackingid = bos_sd_djrtracking.szdjrtrackingid
left join bos_crl_fcall on bos_crl_fcall.szfcallid = bos_sd_djrtracking.szfcallid
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_djrtracking.szfdoid

where
bos_sd_djrtracking.szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtracking_013(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select distinct      
bos_sd_djrtracking.szdjrtrackingid,      
bos_sd_djrtracking.sztype,      
bos_sd_djrtracking.szcustid,      
coalesce(bos_ar_customer.szname, '') as szcustnm,      

bos_sd_djrtracking.szfdoid,      
bos_sd_fdo.szfsoid as szfdofsoid_j,      
bos_sd_fdo.bapplied as bfdoapplied_j,      

bos_sd_djrtracking.szdriverid,      
coalesce(bos_pi_employee.szname, '') as szdrivernm,      
bos_sd_djrtracking.szfdjrid,      
bos_sd_djrtracking.bfinished,      
bos_sd_djrtracking.bsuccess,      
bos_sd_djrtracking.btasked,      
bos_sd_djrtracking.dtmnext,      
bos_sd_djrtracking.bttrialcount,      

bos_sd_djrtracking.szteamid,      
bos_sd_djrtracking.szscheduleid,      
bos_sd_djrtracking.decvalue,      

coalesce(bos_sd_fdjritem.szreasonid, '') as szreasonid,      
coalesce(bos_sd_fdjritem.szdescription, '') as szdescription,      
bos_sd_djrtracking.szfcallid,      
coalesce(bos_crl_fcall.szcalltype, '') as szcalltype,      
bos_sd_djrtracking.szworkplaceid,      
bos_sd_djrtracking.bdonotincrstocktodeliver      

--new      
, bos_sd_djrtracking.deccustsalestarget      
, bos_sd_djrtracking.dtmlastupdated           
from      
bos_sd_djrtracking left join bos_ar_customer on bos_sd_djrtracking.szcustid = bos_ar_customer.szcustid      
left join bos_pi_employee on bos_sd_djrtracking.szdriverid = bos_pi_employee.szemployeeid      
left join bos_sd_fdjritem on bos_sd_fdjritem.szfdjrid = bos_sd_djrtracking.szfdjrid and       
bos_sd_fdjritem.szdjrtrackingid = bos_sd_djrtracking.szdjrtrackingid      
left join bos_crl_fcall on bos_crl_fcall.szfcallid = bos_sd_djrtracking.szfcallid      
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_djrtracking.szfdoid      

where      
bos_sd_djrtracking.szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtrackingoffdo(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdjrtrackingid


from 
bos_sd_djrtracking

where 
szfdoid = p_szfdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtrackingoffdo_013(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdjrtrackingid


from 
bos_sd_djrtracking

where 
szfdoid = p_szfdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtrackingproduct(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getdjrtrackingproduct_014(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_djrtrackingproduct.shitemnumber,
bos_sd_djrtrackingproduct.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,

bos_inv_product.bkit as bproductkit_j,
bos_inv_product.bexplodekit as bproductexplodekit_j,
bos_inv_product.bbreaknonexplodekit as bproductbreaknonexplodekit_j,

bos_sd_djrtrackingproduct.decqty,
bos_sd_djrtrackingproduct.szuomid,

bos_sd_djrtrackingproduct.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as 

szorderitemtyperentchargecalcid_j,
bos_sd_djrtrackingproduct.szparentid

from
bos_sd_djrtrackingproduct
left join bos_inv_product on bos_sd_djrtrackingproduct.szproductid = 

bos_inv_product.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = 

bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = 

bos_sd_djrtrackingproduct.szorderitemtypeid

where
bos_sd_djrtrackingproduct.szdjrtrackingid = p_szdjrtrackingid
order by
bos_sd_djrtrackingproduct.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjr(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fdjr.szsalesorgid,
bos_sd_fdjr.szbaserouteid,
bos_sd_fdjr.dtmfdjr,

bos_sd_fdjr.szdriverid,
coalesce(bos_pi_employee.szname, '') as szdrivernm,
bos_pi_employee.szteamid as szdriverteamid_j,

bos_sd_fdjr.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehiclenumber_j,
bos_inv_vehiclecapacity.decmaxvolume as decvehiclemaxvolume_j,
bos_inv_vehiclecapacity.decmaxweight as decvehiclemaxweight_j,
bos_sd_fdjr.decvehicleusagevolume,
bos_sd_fdjr.decvehicleusageweight,
bos_inv_vehiclecapacity.szvolumeuomid as szvehiclevolumeuomid_j,
bos_inv_vehiclecapacity.szweightuomid as szvehicleweightuomid_j,

bos_sd_fdjr.decstartkm,
bos_sd_fdjr.decendkm,
bos_sd_fdjr.dtmstarttime,
bos_sd_fdjr.dtmendtime,
bos_sd_fdjr.szdeliverygroupid,
bos_sd_deliverygroup.szdesc as szdeliverygroupnm_j,

bos_sd_fdjr.bresultfrtransfer,
bos_sd_fdjr.bvoid,
bos_gen_approved.bapproved,
bos_sd_fdjr.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fdjr.btprintedcount,
bos_sd_fdjr.btransferred,

bos_sd_fdjr.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_sd_fdjr.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fdjr.sztaxentityid,
bos_sd_fdjr.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_sd_fdjr.dtmcreated,
bos_sd_fdjr.bsystemcreated,
bos_sd_fdjr.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_sd_fdjr.dtmlastupdated,
bos_sd_fdjr.balreadytransferred,

bos_sd_fdjr.szhelperid,
coalesce(e1.szname, '') as szhelpernm,
bos_sd_fdjr.szhelperid_2,
coalesce(e2.szname, '') as szhelpernm_2,
bos_sd_fdjr.szhelperid_3,
coalesce(e3.szname, '') as szhelpernm_3,
bos_sd_fdjr.decrit,

-- weight and volume
bos_sd_fdjr.dectonase,
bos_sd_fdjr.deccubication
from
((bos_sd_fdjr left join bos_gen_approved on bos_sd_fdjr.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_sd_fdjr.szfjournalid = bos_gl_fjournaltrans.szfjournalid)
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdjr.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdjr.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdjr.szuserid
left join bos_pi_employee on bos_sd_fdjr.szdriverid = bos_pi_employee.szemployeeid
left join bos_pi_employee e1 on bos_sd_fdjr.szhelperid = e1.szemployeeid
left join bos_pi_employee e2 on bos_sd_fdjr.szhelperid_2 = e2.szemployeeid
left join bos_pi_employee e3 on bos_sd_fdjr.szhelperid_3 = e3.szemployeeid	

left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_sd_fdjr.szvehicleid
left join bos_inv_vehiclecapacity on bos_inv_vehiclecapacity.szvehiclecapacityid = bos_inv_vehicle.szvehiclecapacityid
left join bos_sd_deliverygroup on bos_sd_deliverygroup.szdeliverygroupid = bos_sd_fdjr.szdeliverygroupid
where
bos_sd_fdjr.szfdjrid = p_szfdjrid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjr_014(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fdjr.szsalesorgid,
bos_sd_fdjr.szbaserouteid,
bos_sd_fdjr.dtmfdjr,

bos_sd_fdjr.szdriverid,
coalesce(bos_pi_employee.szname, '') as szdrivernm,
bos_pi_employee.szteamid as szdriverteamid_j,

bos_sd_fdjr.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehiclenumber_j,
bos_inv_vehiclecapacity.decmaxvolume as decvehiclemaxvolume_j,
bos_inv_vehiclecapacity.decmaxweight as decvehiclemaxweight_j,
bos_sd_fdjr.decvehicleusagevolume,
bos_sd_fdjr.decvehicleusageweight,
bos_inv_vehiclecapacity.szvolumeuomid as szvehiclevolumeuomid_j,
bos_inv_vehiclecapacity.szweightuomid as szvehicleweightuomid_j,

bos_sd_fdjr.decstartkm,
bos_sd_fdjr.decendkm,
bos_sd_fdjr.dtmstarttime,
bos_sd_fdjr.dtmendtime,
bos_sd_fdjr.szdeliverygroupid,
bos_sd_deliverygroup.szdesc as szdeliverygroupnm_j,

bos_sd_fdjr.bresultfrtransfer,
bos_sd_fdjr.bvoid,
bos_gen_approved.bapproved,
bos_sd_fdjr.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fdjr.btprintedcount,
bos_sd_fdjr.btransferred,

bos_sd_fdjr.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_sd_fdjr.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fdjr.sztaxentityid,
bos_sd_fdjr.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_sd_fdjr.dtmcreated,
bos_sd_fdjr.bsystemcreated,
bos_sd_fdjr.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_sd_fdjr.dtmlastupdated,
bos_sd_fdjr.balreadytransferred,

bos_sd_fdjr.szhelperid,
coalesce(e1.szname, '') as szhelpernm,
bos_sd_fdjr.szhelperid_2,
coalesce(e2.szname, '') as szhelpernm_2,
bos_sd_fdjr.szhelperid_3,
coalesce(e3.szname, '') as szhelpernm_3,
bos_sd_fdjr.decrit,

-- weight and volume
bos_sd_fdjr.dectonase,
bos_sd_fdjr.deccubication
from
((bos_sd_fdjr left join bos_gen_approved on bos_sd_fdjr.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_sd_fdjr.szfjournalid = bos_gl_fjournaltrans.szfjournalid)
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdjr.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdjr.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdjr.szuserid
left join bos_pi_employee on bos_sd_fdjr.szdriverid = bos_pi_employee.szemployeeid
left join bos_pi_employee e1 on bos_sd_fdjr.szhelperid = e1.szemployeeid
left join bos_pi_employee e2 on bos_sd_fdjr.szhelperid_2 = e2.szemployeeid
left join bos_pi_employee e3 on bos_sd_fdjr.szhelperid_3 = e3.szemployeeid    

left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_sd_fdjr.szvehicleid
left join bos_inv_vehiclecapacity on bos_inv_vehiclecapacity.szvehiclecapacityid = bos_inv_vehicle.szvehiclecapacityid
left join bos_sd_deliverygroup on bos_sd_deliverygroup.szdeliverygroupid = bos_sd_fdjr.szdeliverygroupid
where
bos_sd_fdjr.szfdjrid = p_szfdjrid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjritem(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdjritem.shitemnumber,
bos_sd_fdjritem.szdjrtrackingid,
bos_sd_fdjritem.szreasonid,
bos_sd_fdjritem.szdescription,
bos_sd_fdjritem.bsuccess,
coalesce(bos_sd_djrtracking.szcustid, '') as szcustid,
bos_sd_fdjritem.bstarted,
bos_sd_fdjritem.dtmstartvisit,
bos_sd_fdjritem.dtmendvisit,
bos_sd_fdjritem.decvisitspendtime,
bos_sd_fdjritem.szlatitude,
bos_sd_fdjritem.szlongitude,
bos_sd_fdjritem.szbarcodescanfailreasonid,
bos_sd_fdjritem.szgpsscanfailreasonid,
bos_sd_fdjritem.bscangpssuccess,
bos_sd_fdjritem.bscanbarcodesuccess,
coalesce(bos_ar_customer.szname, '') as szcustname,
bos_sd_fdjritem.decjourneyspendtime


from 
bos_sd_fdjritem
left join bos_sd_djrtracking on bos_sd_fdjritem.szdjrtrackingid = bos_sd_djrtracking.szdjrtrackingid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_djrtracking.szcustid

where 
bos_sd_fdjritem.szfdjrid = p_szfdjrid 
order by 
bos_sd_fdjritem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjritem_014(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdjritem.shitemnumber,
bos_sd_fdjritem.szdjrtrackingid,
bos_sd_fdjritem.szreasonid,
bos_sd_fdjritem.szdescription,
bos_sd_fdjritem.bsuccess,
coalesce(bos_sd_djrtracking.szcustid, '') as szcustid,
bos_sd_fdjritem.bstarted,
bos_sd_fdjritem.dtmstartvisit,
bos_sd_fdjritem.dtmendvisit,
bos_sd_fdjritem.decvisitspendtime,
bos_sd_fdjritem.szlatitude,
bos_sd_fdjritem.szlongitude,
bos_sd_fdjritem.szbarcodescanfailreasonid,
bos_sd_fdjritem.szgpsscanfailreasonid,
bos_sd_fdjritem.bscangpssuccess,
bos_sd_fdjritem.bscanbarcodesuccess,
coalesce(bos_ar_customer.szname, '') as szcustname,
bos_sd_fdjritem.decjourneyspendtime


from 
bos_sd_fdjritem
left join bos_sd_djrtracking on bos_sd_fdjritem.szdjrtrackingid = bos_sd_djrtracking.szdjrtrackingid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_djrtracking.szcustid

where 
bos_sd_fdjritem.szfdjrid = p_szfdjrid 
order by 
bos_sd_fdjritem.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjrproductrequest(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select  
bsf.szfdjrid,  
bsf.shitemnumber,  
bsf.szproductid,  
bip.sznickname as szproductnickname_j,  
bip.szcompuomid as szproductcompuomid_j,  
bip.szuomclassid as szproductuomclassid_j,  
bip.szname as szproductnm_j,  
bip.szqtyformat as szproductqtyformat_j,  
bip.szuomid as szproductuomid_j,  
bsf.decqty,  
bsf.szuomid,  
bsf.szwpid1,  
bsf.szwhid1,  
bsf.szfprid1,  
bsf.decqty1,  
bsf.szwpid2,  
bsf.szwhid2,  
bsf.szfprid2,  
bsf.decqty2,  
bsf.szwpid3,  
bsf.szwhid3,  
bsf.szfprid3,  
bsf.decqty3,  
bsf.szwpid4,  
bsf.szwhid4,  
bsf.szfprid4,  
bsf.decqty4,  
cast (coalesce(bsp1.bapplied, 0) as bit) as bapplied1,
cast (coalesce(bsp2.bapplied, 0) as bit) as bapplied2,
cast (coalesce(bsp3.bapplied, 0) as bit) as bapplied3,
cast (coalesce(bsp4.bapplied, 0) as bit) as bapplied4,

 

bipt.decvolume as decproductvolume_j,  
bipt.szuomvolume as szproductvolumeuomid_j,  
bipt.decweight as decproductweight_j,  
bipt.szuomweight as szproductweightuomid_j,  
bsf.szparentid as szparentid,  
bip2.szname as szparentnm_j  

from  
bos_sd_fdjrproductrequest as bsf   
left join bos_sd_fpr as bsp1 on bsp1.szfprid = bsf.szfprid1  
left join bos_sd_fpr as bsp2 on bsp2.szfprid = bsf.szfprid2  
left join bos_sd_fpr as bsp3 on bsp3.szfprid = bsf.szfprid3  
left join bos_sd_fpr as bsp4 on bsp4.szfprid = bsf.szfprid4  
left join bos_inv_product as bip on bip.szproductid = bsf.szproductid  
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bsf.szproductid  
left join bos_inv_product as bip2 on bip2.szproductid = bsf.szparentid  
where  
szfdjrid = p_szfdjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getfdjrproductrequest_014(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select  
bsf.szfdjrid,  
bsf.shitemnumber,  
bsf.szproductid,  
bip.sznickname as szproductnickname_j,  
bip.szcompuomid as szproductcompuomid_j,  
bip.szuomclassid as szproductuomclassid_j,  
bip.szname as szproductnm_j,  
bip.szqtyformat as szproductqtyformat_j,  
bip.szuomid as szproductuomid_j,  
bsf.decqty,  
bsf.szuomid,  
bsf.szwpid1,  
bsf.szwhid1,  
bsf.szfprid1,  
bsf.decqty1,  
bsf.szwpid2,  
bsf.szwhid2,  
bsf.szfprid2,  
bsf.decqty2,  
bsf.szwpid3,  
bsf.szwhid3,  
bsf.szfprid3,  
bsf.decqty3,  
bsf.szwpid4,  
bsf.szwhid4,  
bsf.szfprid4,  
bsf.decqty4,  
cast (coalesce(bsp1.bapplied, 0) as bit) as bapplied1,
cast (coalesce(bsp2.bapplied, 0) as bit) as bapplied2,
cast (coalesce(bsp3.bapplied, 0) as bit) as bapplied3,
cast (coalesce(bsp4.bapplied, 0) as bit) as bapplied4,
bipt.decvolume as decproductvolume_j,  
bipt.szuomvolume as szproductvolumeuomid_j,  
bipt.decweight as decproductweight_j,  
bipt.szuomweight as szproductweightuomid_j,  
bsf.szparentid as szparentid,  
bip2.szname as szparentnm_j  

from  
bos_sd_fdjrproductrequest as bsf   
left join bos_sd_fpr as bsp1 on bsp1.szfprid = bsf.szfprid1  
left join bos_sd_fpr as bsp2 on bsp2.szfprid = bsf.szfprid2  
left join bos_sd_fpr as bsp3 on bsp3.szfprid = bsf.szfprid3  
left join bos_sd_fpr as bsp4 on bsp4.szfprid = bsf.szfprid4  
left join bos_inv_product as bip on bip.szproductid = bsf.szproductid  
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bsf.szproductid  
left join bos_inv_product as bip2 on bip2.szproductid = bsf.szparentid  
where  
szfdjrid = p_szfdjrid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofactivedjrtrackingid(
p_sztype bos_dt_szsmallid,
p_szdriverid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szscheduletype = ''
  then

select
szdjrtrackingid

from
bos_sd_djrtracking

where
bfinished = 0 and
sztype = p_sztype and
szdriverid = p_szdriverid and
szcustid = p_szcustid and
szteamid like p_szteamid and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' + p_dtmend);

else

select
szdjrtrackingid

from
bos_sd_djrtracking
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_djrtracking.szscheduleid

where
bfinished = 0 and
sztype = p_sztype and
szdriverid = p_szdriverid and
szcustid = p_szcustid and
szteamid like p_szteamid and
bos_gen_routineschedule.szscheduletype = p_szscheduletype and
decvalue = p_decvalue and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' + p_dtmend);

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofactivedjrtrackingid_013(
p_sztype bos_dt_szsmallid,
p_szdriverid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szscheduletype = ''  
  then

select  
szdjrtrackingid  

from  
bos_sd_djrtracking  

where  
bfinished = 0 and  
sztype = p_sztype and  
szdriverid = p_szdriverid and  
szcustid = p_szcustid and  
szteamid like p_szteamid and  
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' + p_dtmend);  

else  

select  
szdjrtrackingid  

from  
bos_sd_djrtracking  
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_djrtracking.szscheduleid  

where  
bfinished = 0 and  
sztype = p_sztype and  
szdriverid = p_szdriverid and  
szcustid = p_szcustid and  
szteamid like p_szteamid and  
bos_gen_routineschedule.szscheduletype = p_szscheduletype and  
decvalue = p_decvalue and  
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' + p_dtmend);

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofdjrtracking()
returns void as
$body$
begin
select 
szdjrtrackingid


from 
bos_sd_djrtracking;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofdjrtrackingtobereschedule(
p_szdriverid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szdriverid = '%'  
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szdriverid,  
coalesce(bpe.szname, '') as szdrivername,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastdeliverydate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szdjrtrackingid,  
coalesce(bsd.szfdjrid, '') as szfdjrid,  
bsd.szteamid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfdoid,  
bsd.decvalue  
from  
bos_sd_djrtracking as bsd left join bos_pi_employee as bpe on bsd.szdriverid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fdjritem as bsf on bsd.szfdjrid = bsf.szfdjrid and bsd.szdjrtrackingid = bsf.szdjrtrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  
where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
--bsd.szdriverid like p_szdriverid and  
bsd.bfinished = p_bfinished  

order by  
bsd.szdriverid;
  
else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szdriverid,  
coalesce(bpe.szname, '') as szdrivername,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastdeliverydate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szdjrtrackingid,  
coalesce(bsd.szfdjrid, '') as szfdjrid,  
bsd.szteamid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfdoid,  
bsd.decvalue  
from  
bos_sd_djrtracking as bsd left join bos_pi_employee as bpe on bsd.szdriverid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fdjritem as bsf on bsd.szfdjrid = bsf.szfdjrid and bsd.szdjrtrackingid = bsf.szdjrtrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  
where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
bsd.szdriverid = p_szdriverid and  
bsd.bfinished = p_bfinished  

order by  
bsd.szdriverid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofdjrtrackingtobereschedule_014(
p_szdriverid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szdriverid = '%'  
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szdriverid,  
coalesce(bpe.szname, '') as szdrivername,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastdeliverydate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szdjrtrackingid,  
coalesce(bsd.szfdjrid, '') as szfdjrid,  
bsd.szteamid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfdoid,  
bsd.decvalue  
from  
bos_sd_djrtracking as bsd left join bos_pi_employee as bpe on bsd.szdriverid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fdjritem as bsf on bsd.szfdjrid = bsf.szfdjrid and bsd.szdjrtrackingid = bsf.szdjrtrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  
where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
--bsd.szdriverid like p_szdriverid and  
bsd.bfinished = p_bfinished  

order by  
bsd.szdriverid;  
else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szdriverid,  
coalesce(bpe.szname, '') as szdrivername,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastdeliverydate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.szdjrtrackingid,  
coalesce(bsd.szfdjrid, '') as szfdjrid,  
bsd.szteamid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfdoid,  
bsd.decvalue  
from  
bos_sd_djrtracking as bsd left join bos_pi_employee as bpe on bsd.szdriverid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_fdjritem as bsf on bsd.szfdjrid = bsf.szfdjrid and bsd.szdjrtrackingid = bsf.szdjrtrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  
where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' + p_dtmto and
bsd.szdriverid = p_szdriverid and  
bsd.bfinished = p_bfinished  

order by  
bsd.szdriverid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistoffdjr()
returns void as
$body$
begin
select 
szfdjrid,
dtmfdjr

from 
bos_sd_fdjr;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofnottaskeddjrtracking(
p_sztype bos_dt_szsmallid,
p_szdriverid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szstatusact varchar,
p_szstatusfde varchar)
returns void as
$body$
begin
select 
bos_sd_djrtracking.szdjrtrackingid,
bos_sd_djrtracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,
bos_sd_djrtracking.szfdoid


from 
bos_sd_djrtracking
left join bos_ar_customer on bos_sd_djrtracking.szcustid = bos_ar_customer.szcustid


where 
(bos_ar_customer.szstatus = p_szstatusact or bos_ar_customer.szstatus = p_szstatusfde) and bos_sd_djrtracking.bfinished = 0 and bos_sd_djrtracking.btasked = 0 and bos_sd_djrtracking.sztype like p_sztype and bos_sd_djrtracking.szdriverid like p_szdriverid and bos_sd_djrtracking.szcustid like p_szcustid and bos_sd_djrtracking.szteamid like p_szteamid and (bos_sd_djrtracking.dtmnext  >= p_dtmstart and bos_sd_djrtracking.dtmnext < interval '1 day' + p_dtmend) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofnottaskeddjrtracking_013(
p_sztype bos_dt_szsmallid,
p_szdriverid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szstatusact varchar,
p_szstatusfde varchar)
returns void as
$body$
begin
select 
bos_sd_djrtracking.szdjrtrackingid,
bos_sd_djrtracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,
bos_sd_djrtracking.szfdoid


from 
bos_sd_djrtracking
left join bos_ar_customer on bos_sd_djrtracking.szcustid = bos_ar_customer.szcustid


where 
(bos_ar_customer.szstatus = p_szstatusact or bos_ar_customer.szstatus = p_szstatusfde) and bos_sd_djrtracking.bfinished = 0 and bos_sd_djrtracking.btasked = 0 and bos_sd_djrtracking.sztype like p_sztype and bos_sd_djrtracking.szdriverid like p_szdriverid and bos_sd_djrtracking.szcustid like p_szcustid and bos_sd_djrtracking.szteamid like p_szteamid and (bos_sd_djrtracking.dtmnext  >= p_dtmstart and bos_sd_djrtracking.dtmnext < interval '1 day' + p_dtmend) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofproductrequestcalculation(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin

select
bsdp.szproductid,
coalesce(bip.szname, '') as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bip.szuomclassid as szproductuomclassid_j,
bip.szcompuomid as szproductcompuomid_j,

bip.bkit,
bip.bexplodekit,
bip.bbreaknonexplodekit as bproductbreaknonexplodekit_j,
bsdp.decqty,
bsdp.szuomid,

bipt.decvolume as decproductvolume_j,
bipt.szuomvolume as szproductvolumeuomid_j,
bipt.decweight as decproductweight_j,
bipt.szuomweight as szproductweightuomid_j,
bsdp.szparentid as szparentid

from
bos_sd_djrtracking as bsd 
inner join bos_sd_djrtrackingproduct as bsdp on bsdp.szdjrtrackingid = bsd.szdjrtrackingid
left join bos_inv_product as bip on bip.szproductid = bsdp.szproductid
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bsdp.szproductid

where
bsd.szdjrtrackingid = p_szdjrtrackingid;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofproductrequestcalculation_014(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin

select
bsdp.szproductid,
coalesce(bip.szname, '') as szproductname,
bip.szqtyformat as szproductqtyformat_j,
bip.szuomclassid as szproductuomclassid_j,
bip.szcompuomid as szproductcompuomid_j,

bip.bkit,
bip.bexplodekit,
bip.bbreaknonexplodekit as bproductbreaknonexplodekit_j,
bsdp.decqty,
bsdp.szuomid,

bipt.decvolume as decproductvolume_j,
bipt.szuomvolume as szproductvolumeuomid_j,
bipt.decweight as decproductweight_j,
bipt.szuomweight as szproductweightuomid_j,
bsdp.szparentid as szparentid

from
bos_sd_djrtracking as bsd 
inner join bos_sd_djrtrackingproduct as bsdp on bsdp.szdjrtrackingid = bsd.szdjrtrackingid
left join bos_inv_product as bip on bip.szproductid = bsdp.szproductid
left join bos_inv_producttechnicalspecinfo as bipt on bipt.szproductid = bsdp.szproductid

where
bsd.szdjrtrackingid = p_szdjrtrackingid;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofrangefdjr(
p_szfdjrid_from varchar,
p_szfdjrid_to varchar)
returns void as
$body$
begin
select 
szfdjrid

from 
bos_sd_fdjr
where 
 szfdjrid >= p_szfdjrid_from and szfdjrid <= p_szfdjrid_to and bvoid = 0;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdj(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szdjrtrackingid,
bsd.szcustid,
coalesce(bac.szname, '') as szcustname,
bsd.szfdoid,
bacs.ballowtocredit as ballowtocredit, /*check null or !null in .net code*/
bsd.szscheduleid,
baam.decamount as decoutstanding, /*check null or !null in .net code*/
bsfdlast.dtmdelivery,	/*check null or !null in .net code*/
bac.szcategory_3 as szcustcategory_3

from 
bos_sd_fdjr as bsf
inner join bos_sd_fdjritem as bsfi on bsfi.szfdjrid = bsf.szfdjrid
inner join bos_sd_djrtracking as bsd on bsd.szdjrtrackingid = bsfi.szdjrtrackingid
left join bos_ar_customer as bac on bac.szcustid = bsd.szcustid
left join bos_ar_custsales as bacs on bacs.szcustid = bsd.szcustid
left join bos_sd_custroutine as bsc on bsc.szcustid = bsd.szcustid
left join bos_sd_fdo as bsfdlast on bsfdlast.szdoid = bsc.szlastfdoid
left join bos_sd_fdo as bsfd on bsfd.szdoid = bsd.szfdoid
left join bos_ar_armaster as baam on baam.szcustid = bsd.szcustid and baam.szccyid = bsfd.szccyid
where 
bsf.szfdjrid = p_szfdjrid 
order by 
bsfi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdj_013(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szdjrtrackingid,
bsd.szcustid,
coalesce(bac.szname, '') as szcustname,
bsd.szfdoid,
bacs.ballowtocredit as ballowtocredit, /*check null or !null in .net code*/
bsd.szscheduleid,
coalesce(baam.decamount, 0) as decoutstanding, /*check null or !null in .net code*/
coalesce(bsfdlast.dtmdelivery, 0) as dtmdelivery, /*check null or !null in .net code*/
bac.szcategory_3 as szcustcategory_3,
coalesce(baam.intnumberofopeninvoice, 0) as intnumberofopeninvoice,
coalesce(bsfd.szfsoid, '') as szfsoid

from 
bos_sd_fdjr as bsf
inner join bos_sd_fdjritem as bsfi on bsfi.szfdjrid = bsf.szfdjrid
inner join bos_sd_djrtracking as bsd on bsd.szdjrtrackingid = bsfi.szdjrtrackingid
left join bos_ar_customer as bac on bac.szcustid = bsd.szcustid
left join bos_ar_custsales as bacs on bacs.szcustid = bsd.szcustid
left join bos_sd_custroutine as bsc on bsc.szcustid = bsd.szcustid
left join bos_sd_fdo as bsfdlast on bsfdlast.szdoid = bsc.szlastfdoid
left join bos_sd_fdo as bsfd on bsfd.szdoid = bsd.szfdoid
left join bos_ar_armaster as baam on baam.szcustid = bsd.szcustid and baam.szccyid = bsfd.szccyid
where 
bsf.szfdjrid = p_szfdjrid 
order by 
bsfi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdjfordepositremain(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bacpd.szproductid,
coalesce(bip.szname, '') as szproductname,
bacpd.decqty


from 
bos_ar_custproductdeposit as bacpd
left join bos_inv_product as bip on bacpd.szproductid = bip.szproductid

where 
bacpd.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdjforfocremain(
p_szcustid varchar)
returns void as
$body$
begin
select 
bscfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bscfi.decqtyremain


from 
bos_sd_custfocitem as bscfi
left join bos_inv_product as bip on bscfi.szproductid = bip.szproductid

where 
bscfi.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdjforlastsentfdo(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bsfi.decqty,
bsfi.szparentid,
bsfi.szuomid

from 
bos_sd_fdo as bsf
where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_getlistofreportfdjforlastsentfdo_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bsfi.decqty,
bsfi.szparentid,
bsfi.szuomid

from 
bos_sd_fdo as bsf
where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_isassignedtotracking(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdjrtrackingid

from 
bos_sd_djrtracking
where 
 szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_isassignedtotracking_013(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdjrtrackingid

from 
bos_sd_djrtracking
where 
 szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_isdjrtrackingexist(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
select 
szdjrtrackingid

from 
bos_sd_djrtracking
where 
szdjrtrackingid = p_szdjrtrackingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_isfdjrcreated(
p_szdriverid bos_dt_szid,
p_dtmfromdate timestamp,
p_dtmtodate timestamp)
returns void as
$body$
begin
select 
szfdjrid

from 
bos_sd_fdjr
where 
bvoid = 0 and szdriverid = p_szdriverid and (dtmfdjr >= p_dtmfromdate and dtmfdjr < p_dtmtodate + 1) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_isfdjrexist(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
select 
szfdjrid

from 
bos_sd_fdjr
where 
szfdjrid = p_szfdjrid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_lockdjrtracking(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_djrtracking
set 
decvalue = decvalue
where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_lockfdjr(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdjr
set 
btransferred = btransferred
where 
szfdjrid = p_szfdjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_markdjrtrackingtasked(
p_szdjrtrackingid bos_dt_szid,
p_dtmnext timestamp,
p_szdriverid bos_dt_szid,
p_szdocid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_djrtracking
set 
btasked = 1,
bfinished = 0,
dtmnext = p_dtmnext,
szdriverid = p_szdriverid,
szfdjrid = p_szdocid

where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_markdjrtrackingtasked_013(
p_szdjrtrackingid bos_dt_szid,
p_dtmnext timestamp,
p_szdriverid bos_dt_szid,
p_szdocid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_djrtracking
set 
btasked = 1,
bfinished = 0,
dtmnext = p_dtmnext,
szdriverid = p_szdriverid,
szfdjrid = p_szdocid

where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_markdjrtrackinguntasked(
p_szdjrtrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_djrtracking
set 
btasked = 0,
szfdjrid = ''

where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_markfdjrvoid(
p_szfdjrid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdjr
set 
bvoid = 1,
bapplied = 0

where 
szfdjrid=p_szfdjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatedjrtracking(
p_szdjrtrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfdjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_bdonotincrstocktodeliver smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
-- ### 2 update #####
update
	bos_sd_djrtracking

set
	--do not update do id as once tracking is created for certain do id, it cannot be changed
	--(if it can, it will only make things more clutter, without obvious use).
	sztype = p_sztype,
	szcustid = p_szcustid,
	szdriverid = p_szdriverid,
	szfdjrid = p_szfdjrid,
	bfinished = p_bfinished,
	bsuccess = p_bsuccess,
	btasked = p_btasked,
	dtmnext = p_dtmnext,
	bttrialcount = p_bttrialcount,
	szteamid = p_szteamid,
	szscheduleid = p_szscheduleid,
	decvalue = p_decvalue,
	szfcallid = p_szfcallid,
	szworkplaceid = p_szworkplaceid,
	bdonotincrstocktodeliver = p_bdonotincrstocktodeliver
	, dtmlastupdated = p_dtmlastupdated

where
	szdjrtrackingid = p_szdjrtrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatedjrtracking_013(
p_szdjrtrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szfdjrid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_bdonotincrstocktodeliver smallint,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
-- ### 2 update #####
update  
 bos_sd_djrtracking  
  
set  
 --do not update do id as once tracking is created for certain do id, it cannot be changed  
 --(if it can, it will only make things more clutter, without obvious use).  
 sztype = p_sztype,  
 szcustid = p_szcustid,  
 szdriverid = p_szdriverid,  
 szfdjrid = p_szfdjrid,  
 bfinished = p_bfinished,  
 bsuccess = p_bsuccess,  
 btasked = p_btasked,  
 dtmnext = p_dtmnext,  
 bttrialcount = p_bttrialcount,  
 szteamid = p_szteamid,  
 szscheduleid = p_szscheduleid,  
 decvalue = p_decvalue,  
 szfcallid = p_szfcallid,  
 szworkplaceid = p_szworkplaceid,  
 bdonotincrstocktodeliver = p_bdonotincrstocktodeliver  
 , dtmlastupdated = p_dtmlastupdated  
  
where  
 szdjrtrackingid = p_szdjrtrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatedjrtrackingnextschedule(
p_szdjrtrackingid bos_dt_szid,
p_dtmnext timestamp)
returns void as
$body$
begin
update bos_sd_djrtracking
set 
dtmnext = p_dtmnext

where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatedjrtrackingproduct_byitem(
p_szdjrtrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_djrtrackingproduct
set 
szproductid = p_szproductid,
decqty = p_decqty,
szuomid = p_szuomid,
szorderitemtypeid = p_szorderitemtypeid
where 
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatefdjr(
p_szfdjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfdjr timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_decvehicleusagevolume bos_dt_decamount,
p_decvehicleusageweight bos_dt_decamount,
p_szdeliverygroupid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_decrit bos_dt_decdecimal,
p_dectonase numeric,
p_deccubication numeric)
returns void as
$body$
begin
update bos_sd_fdjr
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfdjr = p_dtmfdjr,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
decstartkm = p_decstartkm,
decendkm = p_decendkm,
dtmstarttime = p_dtmstarttime,
dtmendtime = p_dtmendtime,

decvehicleusagevolume = p_decvehicleusagevolume,
decvehicleusageweight = p_decvehicleusageweight,
szdeliverygroupid = p_szdeliverygroupid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

-- helper 1,2,3 and rit
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,
decrit = p_decrit,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication
where 
szfdjrid = p_szfdjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatefdjr_014(
p_szfdjrid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfdjr timestamp,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_decvehicleusagevolume bos_dt_decamount,
p_decvehicleusageweight bos_dt_decamount,
p_szdeliverygroupid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_decrit bos_dt_decdecimal,
p_dectonase numeric,
p_deccubication numeric)
returns void as
$body$
begin
update bos_sd_fdjr
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfdjr = p_dtmfdjr,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
decstartkm = p_decstartkm,
decendkm = p_decendkm,
dtmstarttime = p_dtmstarttime,
dtmendtime = p_dtmendtime,

decvehicleusagevolume = p_decvehicleusagevolume,
decvehicleusageweight = p_decvehicleusageweight,
szdeliverygroupid = p_szdeliverygroupid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

-- helper 1,2,3 and rit
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,
decrit = p_decrit,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication
where 
szfdjrid = p_szfdjrid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatefdjritemreason(
p_szfdjrid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_fdjritem
set 
szreasonid = p_szreasonid,
szdescription = p_szdescription
where 
szfdjrid = p_szfdjrid and
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdjr_updatefdjritemsuccess(
p_szfdjrid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_bsuccess bit)
returns void as
$body$
begin
update bos_sd_fdjritem
set 
bsuccess = p_bsuccess
where 
szfdjrid = p_szfdjrid and
szdjrtrackingid = p_szdjrtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_countunappliedfdo(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(distinct bos_sd_fdo.szdoid) as idocount

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

where
bos_sd_fdo.bvoid = 0 and bos_sd_fdo.bapplied = 0 and
bos_sd_fdo.dtmdelivery >= p_dtmfrom and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmto
--and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szworkplaceid = p_szworkplaceid;
else
select
count(distinct bos_sd_fdo.szdoid) as idocount

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

where
bos_sd_fdo.bvoid = 0 and bos_sd_fdo.bapplied = 0 and
bos_sd_fdo.dtmdelivery >= p_dtmfrom and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmto
and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szworkplaceid = p_szworkplaceid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_countunappliedfdo_014(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(distinct bos_sd_fdo.szdoid) as idocount

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

where
bos_sd_fdo.bvoid = 0 and bos_sd_fdo.bapplied = 0 and
bos_sd_fdo.dtmdelivery >= p_dtmfrom and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmto
--and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szworkplaceid = p_szworkplaceid;
else
select
count(distinct bos_sd_fdo.szdoid) as idocount

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

where
bos_sd_fdo.bvoid = 0 and bos_sd_fdo.bapplied = 0 and
bos_sd_fdo.dtmdelivery >= p_dtmfrom and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmto
and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szworkplaceid = p_szworkplaceid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdo(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_szfdnid bos_dt_szid,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szname,
p_deliveryszaddress_2 bos_dt_szname,
p_deliveryszdistrict bos_dt_szmediumname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdo
(
szdoid,
szapplyno,
szfsoid,
szlogistictype,
szfdnid,
breturntowarehouse,
szreturnfdoid,
szreturnwarehouseid,
szreturnstocktypeid,
szsalesorgid,
szordertypeid,
dtmdelivery,
dtmprice,
szcustid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szfinvoiceid,
szfirstfinvoiceid,
bdropship,
busethirdpartycarrier,
szvehicleid,
szdriverid,
szhelperid,
szhelperid_2,
szhelperid_3,
szsalesid,
szsalessupervisorid,
szsalessupervisorid_2,
szsalessupervisorid_3,
szsalesdivisionid,
szsalesdepartmentid,
szsalesteamid,
szcarrierid,
szvehiclenumber,
szdrivername,
szremark,
szlatitude,
szlongitude,
szcustpoid,
dtmcustpo,
szwarehouseid,
szstocktypeid,
bcash,
gdcreditlimitapprovedid,
szpaymenttermid,
deliveryszcontactperson,
deliveryszroomno,
deliveryszfloor,
deliveryszbuilding,
deliveryszaddress_1,
deliveryszaddress_2,
deliveryszdistrict,
deliveryszcity,
deliveryszzipcode,
deliveryszstate,
deliveryszcountry,
deliveryszphoneno_1,
deliveryszphoneno_2,
deliveryszfaxno,
deliveryszmobileno,
deliveryszemail,
deliveryszwebsite,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szmanualno,
szfcustbiid,
dtmmobiletransaction,
-- volume and weight,
dectonase,
deccubication,
buploadedfrommodis,
dtmstartvisit	,
dtmendvisit	,
decvisitspendtime,
bscansuccess	,
szscanfailreason
)
values
(
p_szdoid,
p_szapplyno,
p_szfsoid,
p_szlogistictype,
p_szfdnid,
p_breturntowarehouse,
p_szreturnfdoid,
p_szreturnwarehouseid,
p_szreturnstocktypeid,
p_szsalesorgid,
p_szordertypeid,
p_dtmdelivery,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szfirstfinvoiceid,
p_bdropship,
p_busethirdpartycarrier,
p_szvehicleid,
p_szdriverid,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_szwarehouseid,
p_szstocktypeid,
p_bcash,
p_gdcreditlimitapprovedid,
p_szpaymenttermid,
p_deliveryszcontactperson,
p_deliveryszroomno,
p_deliveryszfloor,
p_deliveryszbuilding,
p_deliveryszaddress_1,
p_deliveryszaddress_2,
p_deliveryszdistrict,
p_deliveryszcity,
p_deliveryszzipcode,
p_deliveryszstate,
p_deliveryszcountry,
p_deliveryszphoneno_1,
p_deliveryszphoneno_2,
p_deliveryszfaxno,
p_deliveryszmobileno,
p_deliveryszemail,
p_deliveryszwebsite,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szmanualno,
p_szfcustbiid,
p_dtmmobiletransaction,
-- volume and weight,
p_dectonase,
p_deccubication,
p_buploadedfrommodis ,
p_dtmstartvisit	,
p_dtmendvisit	,
p_decvisitspendtime	,
p_bscansuccess	,
p_szscanfailreason
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdo_013(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_szfdnid bos_dt_szid,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdo
(
szdoid,
szapplyno,
szfsoid,
szlogistictype,
szfdnid,
breturntowarehouse,
szreturnfdoid,
szreturnwarehouseid,
szreturnstocktypeid,
szsalesorgid,
szordertypeid,
dtmdelivery,
dtmprice,
szcustid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szfinvoiceid,
szfirstfinvoiceid,
bdropship,
busethirdpartycarrier,
szvehicleid,
szdriverid,
szhelperid,
szhelperid_2,
szhelperid_3,
szsalesid,
szsalessupervisorid,
szsalessupervisorid_2,
szsalessupervisorid_3,
szsalesdivisionid,
szsalesdepartmentid,
szsalesteamid,
szcarrierid,
szvehiclenumber,
szdrivername,
szremark,
szlatitude,
szlongitude,
szcustpoid,
dtmcustpo,
szwarehouseid,
szstocktypeid,
bcash,
gdcreditlimitapprovedid,
szpaymenttermid,
deliveryszcontactperson,
deliveryszroomno,
deliveryszfloor,
deliveryszbuilding,
deliveryszaddress_1,
deliveryszaddress_2,
deliveryszdistrict,
deliveryszcity,
deliveryszzipcode,
deliveryszstate,
deliveryszcountry,
deliveryszphoneno_1,
deliveryszphoneno_2,
deliveryszfaxno,
deliveryszmobileno,
deliveryszemail,
deliveryszwebsite,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szmanualno,
szfcustbiid,
dtmmobiletransaction,
-- volume and weight,
dectonase,
deccubication,
buploadedfrommodis,
dtmstartvisit ,
dtmendvisit ,
decvisitspendtime ,
bscansuccess ,
szscanfailreason,
szbarcodescanfailreason,
bscanbarcodesuccess,
decjourneyspendtime,
adcid,
szcustreceiptno
)
values
(
p_szdoid,
p_szapplyno,
p_szfsoid,
p_szlogistictype,
p_szfdnid,
p_breturntowarehouse,
p_szreturnfdoid,
p_szreturnwarehouseid,
p_szreturnstocktypeid,
p_szsalesorgid,
p_szordertypeid,
p_dtmdelivery,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szfirstfinvoiceid,
p_bdropship,
p_busethirdpartycarrier,
p_szvehicleid,
p_szdriverid,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_szwarehouseid,
p_szstocktypeid,
p_bcash,
p_gdcreditlimitapprovedid,
p_szpaymenttermid,
p_deliveryszcontactperson,
p_deliveryszroomno,
p_deliveryszfloor,
p_deliveryszbuilding,
p_deliveryszaddress_1,
p_deliveryszaddress_2,
p_deliveryszdistrict,
p_deliveryszcity,
p_deliveryszzipcode,
p_deliveryszstate,
p_deliveryszcountry,
p_deliveryszphoneno_1,
p_deliveryszphoneno_2,
p_deliveryszfaxno,
p_deliveryszmobileno,
p_deliveryszemail,
p_deliveryszwebsite,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szmanualno,
p_szfcustbiid,
p_dtmmobiletransaction,
-- volume and weight,
p_dectonase,
p_deccubication,
p_buploadedfrommodis ,
p_dtmstartvisit ,
p_dtmendvisit ,
p_decvisitspendtime ,
p_bscansuccess ,
p_szscanfailreason,
p_szbarcodescanfailreason,
p_bscanbarcodesuccess,
p_decjourneyspendtime,
p_adcid,
p_szcustreceiptno
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdo_015(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_szfdnid bos_dt_szid,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdo
(
szdoid,
szapplyno,
szfsoid,
szlogistictype,
szfdnid,
breturntowarehouse,
szreturnfdoid,
szreturnwarehouseid,
szreturnstocktypeid,
szsalesorgid,
szordertypeid,
dtmdelivery,
dtmprice,
szcustid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szfinvoiceid,
szfirstfinvoiceid,
bdropship,
busethirdpartycarrier,
szvehicleid,
szdriverid,
szhelperid,
szhelperid_2,
szhelperid_3,
szsalesid,
szsalessupervisorid,
szsalessupervisorid_2,
szsalessupervisorid_3,
szsalesdivisionid,
szsalesdepartmentid,
szsalesteamid,
szcarrierid,
szvehiclenumber,
szdrivername,
szremark,
szlatitude,
szlongitude,
szcustpoid,
dtmcustpo,
szwarehouseid,
szstocktypeid,
bcash,
gdcreditlimitapprovedid,
szpaymenttermid,
deliveryszcontactperson,
deliveryszroomno,
deliveryszfloor,
deliveryszbuilding,
deliveryszaddress_1,
deliveryszaddress_2,
deliveryszdistrict,
deliveryszcity,
deliveryszzipcode,
deliveryszstate,
deliveryszcountry,
deliveryszphoneno_1,
deliveryszphoneno_2,
deliveryszfaxno,
deliveryszmobileno,
deliveryszemail,
deliveryszwebsite,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szmanualno,
szfcustbiid,
dtmmobiletransaction,
-- volume and weight,
dectonase,
deccubication,
buploadedfrommodis,
dtmstartvisit ,
dtmendvisit ,
decvisitspendtime ,
bscansuccess ,
szscanfailreason,
szbarcodescanfailreason,
bscanbarcodesuccess,
decjourneyspendtime,
adcid,
szcustreceiptno
)
values
(
p_szdoid,
p_szapplyno,
p_szfsoid,
p_szlogistictype,
p_szfdnid,
p_breturntowarehouse,
p_szreturnfdoid,
p_szreturnwarehouseid,
p_szreturnstocktypeid,
p_szsalesorgid,
p_szordertypeid,
p_dtmdelivery,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szfirstfinvoiceid,
p_bdropship,
p_busethirdpartycarrier,
p_szvehicleid,
p_szdriverid,
p_szhelperid,
p_szhelperid_2,
p_szhelperid_3,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szcarrierid,
p_szvehiclenumber,
p_szdrivername,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_szwarehouseid,
p_szstocktypeid,
p_bcash,
p_gdcreditlimitapprovedid,
p_szpaymenttermid,
p_deliveryszcontactperson,
p_deliveryszroomno,
p_deliveryszfloor,
p_deliveryszbuilding,
p_deliveryszaddress_1,
p_deliveryszaddress_2,
p_deliveryszdistrict,
p_deliveryszcity,
p_deliveryszzipcode,
p_deliveryszstate,
p_deliveryszcountry,
p_deliveryszphoneno_1,
p_deliveryszphoneno_2,
p_deliveryszfaxno,
p_deliveryszmobileno,
p_deliveryszemail,
p_deliveryszwebsite,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szmanualno,
p_szfcustbiid,
p_dtmmobiletransaction,
-- volume and weight,
p_dectonase,
p_deccubication,
p_buploadedfrommodis ,
p_dtmstartvisit ,
p_dtmendvisit ,
p_decvisitspendtime ,
p_bscansuccess ,
p_szscanfailreason,
p_szbarcodescanfailreason,
p_bscanbarcodesuccess,
p_decjourneyspendtime,
p_adcid,
p_szcustreceiptno
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitem(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdoitem
(
szdoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
deccogs,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- for cubication and tonase,
dectonase,
deccubication,
szparentid
)
values
(
p_szdoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_deccogs,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- for cubication and tonase,
p_dectonase,
p_deccubication,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitem_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdoitem
(
szdoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
deccogs,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- for cubication and tonase,
dectonase,
deccubication,
szparentid
)
values
(
p_szdoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_deccogs,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- for cubication and tonase,
p_dectonase,
p_deccubication,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitem_014(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
insert into bos_sd_fdoitem
(
szdoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
deccogs,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- for cubication and tonase,
dectonase,
deccubication,
szparentid,
szdistproductid,
decdistqty,
decdistprice
)
values
(
p_szdoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_deccogs,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- for cubication and tonase,
p_dectonase,
p_deccubication,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitem_015(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_fdoitem
(
szdoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
deccogs,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- for cubication and tonase,
dectonase,
deccubication,
szparentid,
szdistproductid,
decdistqty,
decdistprice,
szbudgetid,
decprincipalcostamount,
decprincipalcostqty,
bbudgettransferred
)
values
(
p_szdoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_deccogs,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- for cubication and tonase,
p_dectonase,
p_deccubication,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice,
p_szbudgetid,
p_decprincipalcostamount,
p_decprincipalcostqty,
p_bbudgettransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitembonussource(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdoitembonussource
(
szfdoid,
shitemnumber,
szproductid,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfdoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitembonussource_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdoitembonussource
(

szfdoid  ,
shitemnumber  ,
szproductid  ,
szorderitemtypeid  ,
szpaymenttype  ,
decbonusamount  ,
decbonusqty  ,
szparentid  

)
values
(
p_szfdoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitemlotqty(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fdoitemlotqty
(
szfdoid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfdoid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitemlotqty_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fdoitemlotqty
(
szfdoid,
shitemnumber,
szlotid,
decqty
)
values
(
p_szfdoid,
p_shitemnumber,
p_szlotid,
p_decqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitemsn(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_sd_fdoitemsn
(
szdoid,
shitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szdoid,
p_shitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoitemsn_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
insert into bos_sd_fdoitemsn
(
szdoid,
shitemnumber,
shitemsnnumber,
szproductsn
)
values
(
p_szdoid,
p_shitemnumber,
p_shitemsnnumber,
p_szproductsn
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoproductdepositbonusitem(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szorderitemtypeid bos_dt_szid,
p_bgenbytotal smallint)
returns void as
$body$
begin
insert into bos_sd_fdoproductdepositbonusitem
(
szdoid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
bgenbytotal
)
values
(
p_szdoid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_bgenbytotal
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoproductdepositbonusitem_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szorderitemtypeid bos_dt_szid,
p_bgenbytotal smallint)
returns void as
$body$
begin
insert into bos_sd_fdoproductdepositbonusitem
(
  
szdoid  ,
shitemnumber  ,
szproductid  ,
decqty  ,
szuomid  ,
szorderitemtypeid  ,
bgenbytotal  

)
values
(
p_szdoid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_bgenbytotal
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoproductdepositbonusitembonussource(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fdoproductdepositbonusitembonussource
(
szfdoid,
shitemnumber,
szproductid,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty
)
values
(
p_szfdoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_createfdoproductdepositbonusitembonussource_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fdoproductdepositbonusitembonussource
(
  
szfdoid  ,
shitemnumber  ,
szproductid  ,
szorderitemtypeid  ,
szpaymenttype  ,
decbonusamount  ,
decbonusqty  

)
values
(
p_szfdoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdo(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM bos_sd_fdo
where
	szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdo_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM bos_sd_fdo
where
	szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitem(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fdoitem
where
szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitem_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fdoitem
where
szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitem_byitem(
p_szdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_fdoitem
where
szdoid = p_szdoid and 
shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitem_byitem_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_fdoitem
where
szdoid = p_szdoid and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitembonussource(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fdoitembonussource
where
szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitembonussource_013(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fdoitembonussource
where
szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitembonussource_byitem(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdoitembonussource
where
szfdoid = p_szfdoid and 
shitemnumber = p_shitemnumber and 
szproductid = p_szproductid and 
szorderitemtypeid = p_szorderitemtypeid and 
szpaymenttype = p_szpaymenttype and 
szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitembonussource_byitem_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdoitembonussource
where
szfdoid = p_szfdoid and 
shitemnumber = p_shitemnumber and 
szproductid = p_szproductid and 
szorderitemtypeid = p_szorderitemtypeid and 
szpaymenttype = p_szpaymenttype and 
szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemlotqty(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_sd_fdoitemlotqty
where
szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemlotqty_013(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
delete
from  bos_sd_fdoitemlotqty
where
szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemlotqty_byitem(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdoitemlotqty
where
szfdoid = p_szfdoid
and shitemnumber = p_shitemnumber
and szlotid = p_szlotid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemlotqty_byitem_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdoitemlotqty
where
szfdoid = p_szfdoid
and shitemnumber = p_shitemnumber
and szlotid = p_szlotid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemsn(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_sd_fdoitemsn
WHERE
	szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemsn_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_sd_fdoitemsn
WHERE
	szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemsn_byitem(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_fdoitemsn
where
szdoid = p_szdoid
and shitemnumber = p_shitemnumber
and shitemsnnumber = p_shitemsnnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoitemsn_byitem_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_fdoitemsn
where
szdoid = p_szdoid
and shitemnumber = p_shitemnumber
and shitemsnnumber = p_shitemsnnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoproductdepositbonusitem(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fdoproductdepositbonusitem
where
szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoproductdepositbonusitem_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fdoproductdepositbonusitem
where
szdoid = p_szdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoproductdepositbonusitembonussource(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_sd_fdoproductdepositbonusitembonussource
where
	szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_deletefdoproductdepositbonusitembonussource_013(
p_szfdoid bos_dt_szid)
returns void as
$body$
begin
DELETE FROM  bos_sd_fdoproductdepositbonusitembonussource
where
	szfdoid = p_szfdoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdo(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fdo.szdoid,  
bos_sd_fdo.szapplyno,  
bos_sd_fdo.szfsoid,  

bos_sd_fdo.szlogistictype,  
bos_sd_fdo.szfdnid,  

bos_sd_fdo.breturntowarehouse,  
bos_sd_fdo.szreturnfdoid,  
bos_sd_fdo.szreturnwarehouseid,  
bos_sd_fdo.szreturnstocktypeid,  

bos_sd_fdo.szsalesorgid,  

bos_sd_fdo.szordertypeid,  
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,  
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,  

bos_sd_fdo.dtmdelivery,  
bos_sd_fdo.dtmprice,  

bos_sd_fdo.szcustid,  
bos_ar_customer.szname as szcustnm_j,  
custsales.ballowtocredit as bcustallowtocredit_j,  

bos_sd_fdo.decamount,  
bos_sd_fdo.dectax,  

bos_sd_fdo.szccyid,  
bos_cu_currency.szamountformat as szccyamountformat_j,  

bos_sd_fdo.szccyrateid,  
bos_sd_fdo.decccyrate,  
bos_sd_fdo.szfinvoiceid,  
bos_sd_fdo.szfirstfinvoiceid,  
bos_sd_fdo.bdropship,  
bos_sd_fdo.busethirdpartycarrier,  

bos_sd_fdo.szvehicleid,  
bos_sd_fdo.szvehiclenumber,  

bos_sd_fdo.szdriverid,  
bos_sd_fdo.szdrivername,  

bos_sd_fdo.szhelperid,  
helper1.szname as szhelpernm,  

bos_sd_fdo.szhelperid_2,  
helper2.szname as szhelpernm_2,  

bos_sd_fdo.szhelperid_3,  
helper3.szname as szhelpernm_3,  

bos_sd_fdo.szsalesid,  
sales.szname as szsalesnm_j,  

bos_sd_fdo.szsalessupervisorid,  
bos_sd_fdo.szsalessupervisorid_2,  
bos_sd_fdo.szsalessupervisorid_3,  
bos_sd_fdo.szsalesdivisionid,  
bos_sd_fdo.szsalesdepartmentid,  
bos_sd_fdo.szsalesteamid,  

bos_sd_fdo.szcarrierid,  
bos_inv_carrier.szname as szcarriernm,  

bos_sd_fdo.szremark,  
bos_sd_fdo.szlatitude,  
bos_sd_fdo.szlongitude,  

bos_sd_fdo.szcustpoid,  
bos_sd_fdo.dtmcustpo,  

bos_sd_fdo.szwarehouseid,  
bos_inv_warehouse.szname as szwarehousenm,  

bos_sd_fdo.szstocktypeid,  
bos_sd_fdo.bcash,  

bos_sd_fdo.gdcreditlimitapprovedid,  
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,  
creditlimitapproved.bapproved as bcreditlimitapproved_j,  

bos_sd_djrtracking.szdjrtrackingid as szdjrtrackingid_j,  
bos_sd_djrtracking.szfdjrid as szdjrtrackingfdjrid_j,  

bos_sd_fdo.szpaymenttermid,  

bos_sd_fdo.deliveryszcontactperson,  
bos_sd_fdo.deliveryszroomno,  
bos_sd_fdo.deliveryszfloor,  
bos_sd_fdo.deliveryszbuilding,  
bos_sd_fdo.deliveryszaddress_1,  
bos_sd_fdo.deliveryszaddress_2,  
bos_sd_fdo.deliveryszdistrict,  
bos_sd_fdo.deliveryszcity,  
bos_sd_fdo.deliveryszzipcode,  
bos_sd_fdo.deliveryszstate,  
bos_sd_fdo.deliveryszcountry,  
bos_sd_fdo.deliveryszphoneno_1,  
bos_sd_fdo.deliveryszphoneno_2,  
bos_sd_fdo.deliveryszfaxno,  
bos_sd_fdo.deliveryszmobileno,  
bos_sd_fdo.deliveryszemail,  
bos_sd_fdo.deliveryszwebsite,  

--customer's collection info  
bsr.szrouteid as szcollrouteid,  
bsr.szdescription as szcollroutedescription,  
bsr.szopuserid as szcollectorid,  
bpe.szname as szcollectornm,  

bos_sd_fdo.bresultfrtransfer,  
bos_sd_fdo.bvoid,  
bos_gen_approved.bapproved,  
bos_sd_fdo.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_sd_fdo.btprintedcount,  
bos_sd_fdo.btransferred,  

bos_sd_fdo.szcompanyid,  
bos_gl_company.szname as szcompanynm,  

bos_sd_fdo.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  

bos_sd_fdo.sztaxentityid,  

bos_sd_fdo.bneedapproval,  
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  

bos_gl_fjournaltrans.szfjournalid,  

bos_sd_fdo.dtmcreated,  
bos_sd_fdo.bsystemcreated,  

bos_sd_fdo.szuserid,  
bos_sm_user.szname as szusernm_j,  

-- data status.  
bos_sd_fdo.dtmlastupdated,  
bos_sd_fdo.balreadytransferred,  
bos_sd_fdo.szmanualno,  
bos_sd_fdo.szfcustbiid,  
bos_sd_fdo.dtmmobiletransaction,  

-- weight and volume  
bos_sd_fdo.dectonase,  
bos_sd_fdo.deccubication,  
bos_sd_fdo.buploadedfrommodis,  
bos_sd_fdo.dtmstartvisit,	
bos_sd_fdo.dtmendvisit,	
bos_sd_fdo.decvisitspendtime,	
bos_sd_fdo.bscansuccess,	
bos_sd_fdo.szscanfailreason	 
from  
bos_sd_fdo   
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fdo.gdcreditlimitapprovedid  
left join bos_gen_approved on bos_sd_fdo.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_sd_fdo.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_pi_employee as helper1 on bos_sd_fdo.szhelperid = helper1.szemployeeid  
left join bos_pi_employee as helper2 on bos_sd_fdo.szhelperid_2 = helper2.szemployeeid  
left join bos_pi_employee as helper3 on bos_sd_fdo.szhelperid_3 = helper3.szemployeeid  

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fdo.szsalesid  

--  these join fields are not really needed. but to retrieve them makes  
--  to do join to six different tables.  
--  so just de-activate it temporarily and activate it when it is absolutely  
--  necessary (and the processing power has increased).  
--left join bos_pi_employee as sup on sup.szemployeeid = bos_sd_fdo.szsalessupervisorid  
--left join bos_pi_employee as sup2 on sup2.szemployeeid = bos_sd_fdo.szsalessupervisorid_2  
--left join bos_pi_employee as sup3 on sup3.szemployeeid = bos_sd_fdo.szsalessupervisorid_3  
--left join bos_pi_division as div on div.szdivisionid = bos_sd_fdo.szsalesdivisionid  
--left join bos_pi_department as dep on dep.szdepartmentid = bos_sd_fdo.szsalesdepartmentid  
--left join bos_pi_team as tea on tea.szteamid = bos_sd_fdo.szsalesteamid  

left join bos_ar_customer on bos_sd_fdo.szcustid = bos_ar_customer.szcustid  

left join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid  
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_sd_fdo.szcarrierid  

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdo.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid  
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdo.szuserid  

left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_sd_fdo.szwarehouseid  

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid  

--allow to credit is based on original customer, not from invoice-to customer.  
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid  

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid  
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid  
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid  
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid  

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fdo.szordertypeid  

where  
bos_sd_fdo.szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdo_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select      
bos_sd_fdo.szdoid,      
bos_sd_fdo.szapplyno,      
bos_sd_fdo.szfsoid,      

bos_sd_fdo.szlogistictype,      
bos_sd_fdo.szfdnid,      

bos_sd_fdo.breturntowarehouse,      
bos_sd_fdo.szreturnfdoid,      
bos_sd_fdo.szreturnwarehouseid,      
bos_sd_fdo.szreturnstocktypeid,      

bos_sd_fdo.szsalesorgid,      

bos_sd_fdo.szordertypeid,      
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,      
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,      

bos_sd_fdo.dtmdelivery,      
bos_sd_fdo.dtmprice,      

bos_sd_fdo.szcustid,      
bos_ar_customer.szname as szcustnm_j,      
custsales.ballowtocredit as bcustallowtocredit_j,      

bos_sd_fdo.decamount,      
bos_sd_fdo.dectax,      

bos_sd_fdo.szccyid,      
bos_cu_currency.szamountformat as szccyamountformat_j,      

bos_sd_fdo.szccyrateid,      
bos_sd_fdo.decccyrate,      
bos_sd_fdo.szfinvoiceid,      
bos_sd_fdo.szfirstfinvoiceid,      
bos_sd_fdo.bdropship,      
bos_sd_fdo.busethirdpartycarrier,      

bos_sd_fdo.szvehicleid,      
bos_sd_fdo.szvehiclenumber,      

bos_sd_fdo.szdriverid,      
bos_sd_fdo.szdrivername,      

bos_sd_fdo.szhelperid,      
helper1.szname as szhelpernm,      

bos_sd_fdo.szhelperid_2,      
helper2.szname as szhelpernm_2,      

bos_sd_fdo.szhelperid_3,      
helper3.szname as szhelpernm_3,      

bos_sd_fdo.szsalesid,      
sales.szname as szsalesnm_j,      

bos_sd_fdo.szsalessupervisorid,      
bos_sd_fdo.szsalessupervisorid_2,      
bos_sd_fdo.szsalessupervisorid_3,      
bos_sd_fdo.szsalesdivisionid,      
bos_sd_fdo.szsalesdepartmentid,      
bos_sd_fdo.szsalesteamid,      

bos_sd_fdo.szcarrierid,      
bos_inv_carrier.szname as szcarriernm,      

bos_sd_fdo.szremark,      
bos_sd_fdo.szlatitude,      
bos_sd_fdo.szlongitude,      

bos_sd_fdo.szcustpoid,      
bos_sd_fdo.dtmcustpo,      

bos_sd_fdo.szwarehouseid,      
bos_inv_warehouse.szname as szwarehousenm,      

bos_sd_fdo.szstocktypeid,      
bos_sd_fdo.bcash,      

bos_sd_fdo.gdcreditlimitapprovedid,      
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,      
creditlimitapproved.bapproved as bcreditlimitapproved_j,      

bos_sd_djrtracking.szdjrtrackingid as szdjrtrackingid_j,      
bos_sd_djrtracking.szfdjrid as szdjrtrackingfdjrid_j,      

bos_sd_fdo.szpaymenttermid,      

bos_sd_fdo.deliveryszcontactperson,      
bos_sd_fdo.deliveryszroomno,      
bos_sd_fdo.deliveryszfloor,      
bos_sd_fdo.deliveryszbuilding,      
bos_sd_fdo.deliveryszaddress_1,      
bos_sd_fdo.deliveryszaddress_2,      
bos_sd_fdo.deliveryszdistrict,      
bos_sd_fdo.deliveryszcity,      
bos_sd_fdo.deliveryszzipcode,      
bos_sd_fdo.deliveryszstate,      
bos_sd_fdo.deliveryszcountry,      
bos_sd_fdo.deliveryszphoneno_1,      
bos_sd_fdo.deliveryszphoneno_2,      
bos_sd_fdo.deliveryszfaxno,      
bos_sd_fdo.deliveryszmobileno,      
bos_sd_fdo.deliveryszemail,      
bos_sd_fdo.deliveryszwebsite,      

--customer's collection info      
bsr.szrouteid as szcollrouteid,      
bsr.szdescription as szcollroutedescription,      
bsr.szopuserid as szcollectorid,      
bpe.szname as szcollectornm,      

bos_sd_fdo.bresultfrtransfer,      
bos_sd_fdo.bvoid,      
bos_gen_approved.bapproved,      
bos_sd_fdo.bapplied,      
bos_gl_fjournaltrans.szfjournalid as bjournal,      
bos_gl_fjournaltrans.bposted,      
bos_sd_fdo.btprintedcount,      
bos_sd_fdo.btransferred,      

bos_sd_fdo.szcompanyid,      
bos_gl_company.szname as szcompanynm,      

bos_sd_fdo.szworkplaceid,      
bos_gl_workplace.szname as szworkplacenm,      

bos_sd_fdo.sztaxentityid,      

bos_sd_fdo.bneedapproval,      
bos_gen_approved.gdapprovedid,      
bos_gen_approved.szapprovalid,      

bos_gl_fjournaltrans.szfjournalid,      

bos_sd_fdo.dtmcreated,      
bos_sd_fdo.bsystemcreated,      

bos_sd_fdo.szuserid,      
bos_sm_user.szname as szusernm_j,      

-- data status.      
bos_sd_fdo.dtmlastupdated,      
bos_sd_fdo.balreadytransferred,      
bos_sd_fdo.szmanualno,      
bos_sd_fdo.szfcustbiid,      
bos_sd_fdo.dtmmobiletransaction,      

-- weight and volume      
bos_sd_fdo.dectonase,      
bos_sd_fdo.deccubication,      
bos_sd_fdo.buploadedfrommodis,      
bos_sd_fdo.dtmstartvisit,     
bos_sd_fdo.dtmendvisit,     
bos_sd_fdo.decvisitspendtime,    
bos_sd_fdo.bscansuccess,     
bos_sd_fdo.szscanfailreason,
bos_sd_fdo.szbarcodescanfailreason,
bos_sd_fdo.bscanbarcodesuccess,
bos_sd_fdo.decjourneyspendtime,
bos_sd_fdo.adcid
from      
bos_sd_fdo       
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fdo.gdcreditlimitapprovedid      
left join bos_gen_approved on bos_sd_fdo.gdapprovedid = bos_gen_approved.gdapprovedid      
left join bos_gl_fjournaltrans on bos_sd_fdo.szfjournalid = bos_gl_fjournaltrans.szfjournalid      
left join bos_pi_employee as helper1 on bos_sd_fdo.szhelperid = helper1.szemployeeid      
left join bos_pi_employee as helper2 on bos_sd_fdo.szhelperid_2 = helper2.szemployeeid      
left join bos_pi_employee as helper3 on bos_sd_fdo.szhelperid_3 = helper3.szemployeeid      

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fdo.szsalesid      

--  these join fields are not really needed. but to retrieve them makes      
--  to do join to six different tables.      
--  so just de-activate it temporarily and activate it when it is absolutely      
--  necessary (and the processing power has increased).      
--left join bos_pi_employee as sup on sup.szemployeeid = bos_sd_fdo.szsalessupervisorid      
--left join bos_pi_employee as sup2 on sup2.szemployeeid = bos_sd_fdo.szsalessupervisorid_2      
--left join bos_pi_employee as sup3 on sup3.szemployeeid = bos_sd_fdo.szsalessupervisorid_3      
--left join bos_pi_division as div on div.szdivisionid = bos_sd_fdo.szsalesdivisionid      
--left join bos_pi_department as dep on dep.szdepartmentid = bos_sd_fdo.szsalesdepartmentid      
--left join bos_pi_team as tea on tea.szteamid = bos_sd_fdo.szsalesteamid      

left join bos_ar_customer on bos_sd_fdo.szcustid = bos_ar_customer.szcustid      

left join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid      
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_sd_fdo.szcarrierid      

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdo.szcompanyid      
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid      
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdo.szuserid      

left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_sd_fdo.szwarehouseid      

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid      

--allow to credit is based on original customer, not from invoice-to customer.      
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid      

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid      
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid      
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid      
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid      
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid      

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fdo.szordertypeid      

where      
bos_sd_fdo.szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdo_014(
p_szdoid bos_dt_szbigid)
returns void as
$body$
begin

select      
bos_sd_fdo.szdoid,      
bos_sd_fdo.szapplyno,      
bos_sd_fdo.szfsoid,      

bos_sd_fdo.szlogistictype,      
bos_sd_fdo.szfdnid,      

bos_sd_fdo.breturntowarehouse,      
bos_sd_fdo.szreturnfdoid,      
bos_sd_fdo.szreturnwarehouseid,      
bos_sd_fdo.szreturnstocktypeid,      

bos_sd_fdo.szsalesorgid,      

bos_sd_fdo.szordertypeid,      
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,      
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,      

bos_sd_fdo.dtmdelivery,      
bos_sd_fdo.dtmprice,      

bos_sd_fdo.szcustid,      
bos_ar_customer.szname as szcustnm_j,      
custsales.ballowtocredit as bcustallowtocredit_j,      

bos_sd_fdo.decamount,      
bos_sd_fdo.dectax,      

bos_sd_fdo.szccyid,      
bos_cu_currency.szamountformat as szccyamountformat_j,      

bos_sd_fdo.szccyrateid,      
bos_sd_fdo.decccyrate,      
bos_sd_fdo.szfinvoiceid,      
bos_sd_fdo.szfirstfinvoiceid,      
bos_sd_fdo.bdropship,      
bos_sd_fdo.busethirdpartycarrier,      

bos_sd_fdo.szvehicleid,      
bos_sd_fdo.szvehiclenumber,      

bos_sd_fdo.szdriverid,      
bos_sd_fdo.szdrivername,      

bos_sd_fdo.szhelperid,      
helper1.szname as szhelpernm,      

bos_sd_fdo.szhelperid_2,      
helper2.szname as szhelpernm_2,      

bos_sd_fdo.szhelperid_3,      
helper3.szname as szhelpernm_3,      

bos_sd_fdo.szsalesid,      
sales.szname as szsalesnm_j,      

bos_sd_fdo.szsalessupervisorid,      
bos_sd_fdo.szsalessupervisorid_2,      
bos_sd_fdo.szsalessupervisorid_3,      
bos_sd_fdo.szsalesdivisionid,      
bos_sd_fdo.szsalesdepartmentid,      
bos_sd_fdo.szsalesteamid,      

bos_sd_fdo.szcarrierid,      
bos_inv_carrier.szname as szcarriernm,      

bos_sd_fdo.szremark,      
bos_sd_fdo.szlatitude,      
bos_sd_fdo.szlongitude,      

bos_sd_fdo.szcustpoid,      
bos_sd_fdo.dtmcustpo,      

bos_sd_fdo.szwarehouseid,      
bos_inv_warehouse.szname as szwarehousenm,      

bos_sd_fdo.szstocktypeid,      
bos_sd_fdo.bcash,      

bos_sd_fdo.gdcreditlimitapprovedid,      
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,      
creditlimitapproved.bapproved as bcreditlimitapproved_j,      

bos_sd_djrtracking.szdjrtrackingid as szdjrtrackingid_j,      
bos_sd_djrtracking.szfdjrid as szdjrtrackingfdjrid_j,      

bos_sd_fdo.szpaymenttermid,      

bos_sd_fdo.deliveryszcontactperson,      
bos_sd_fdo.deliveryszroomno,      
bos_sd_fdo.deliveryszfloor,      
bos_sd_fdo.deliveryszbuilding,      
bos_sd_fdo.deliveryszaddress_1,      
bos_sd_fdo.deliveryszaddress_2,      
bos_sd_fdo.deliveryszdistrict,      
bos_sd_fdo.deliveryszcity,      
bos_sd_fdo.deliveryszzipcode,      
bos_sd_fdo.deliveryszstate,      
bos_sd_fdo.deliveryszcountry,      
bos_sd_fdo.deliveryszphoneno_1,      
bos_sd_fdo.deliveryszphoneno_2,      
bos_sd_fdo.deliveryszfaxno,      
bos_sd_fdo.deliveryszmobileno,      
bos_sd_fdo.deliveryszemail,      
bos_sd_fdo.deliveryszwebsite,      

--customer's collection info      
bsr.szrouteid as szcollrouteid,      
bsr.szdescription as szcollroutedescription,      
bsr.szopuserid as szcollectorid,      
bpe.szname as szcollectornm,      

bos_sd_fdo.bresultfrtransfer,      
bos_sd_fdo.bvoid,      
bos_gen_approved.bapproved,      
bos_sd_fdo.bapplied,      
bos_gl_fjournaltrans.szfjournalid as bjournal,      
bos_gl_fjournaltrans.bposted,      
bos_sd_fdo.btprintedcount,      
bos_sd_fdo.btransferred,      

bos_sd_fdo.szcompanyid,      
bos_gl_company.szname as szcompanynm,      

bos_sd_fdo.szworkplaceid,      
bos_gl_workplace.szname as szworkplacenm,      

bos_sd_fdo.sztaxentityid,      

bos_sd_fdo.bneedapproval,      
bos_gen_approved.gdapprovedid,      
bos_gen_approved.szapprovalid,      

bos_gl_fjournaltrans.szfjournalid,      

bos_sd_fdo.dtmcreated,      
bos_sd_fdo.bsystemcreated,      

bos_sd_fdo.szuserid,      
bos_sm_user.szname as szusernm_j,      

-- data status.      
bos_sd_fdo.dtmlastupdated,      
bos_sd_fdo.balreadytransferred,      
bos_sd_fdo.szmanualno,      
bos_sd_fdo.szfcustbiid,      
bos_sd_fdo.dtmmobiletransaction,      

-- weight and volume      
bos_sd_fdo.dectonase,      
bos_sd_fdo.deccubication,      
bos_sd_fdo.buploadedfrommodis,      
bos_sd_fdo.dtmstartvisit,     
bos_sd_fdo.dtmendvisit,     
bos_sd_fdo.decvisitspendtime,     
bos_sd_fdo.bscansuccess,     
bos_sd_fdo.szscanfailreason,
bos_sd_fdo.szbarcodescanfailreason,
bos_sd_fdo.bscanbarcodesuccess,
bos_sd_fdo.decjourneyspendtime,
bos_sd_fdo.szcustreturntaxrefnote
from      
bos_sd_fdo       
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fdo.gdcreditlimitapprovedid      
left join bos_gen_approved on bos_sd_fdo.gdapprovedid = bos_gen_approved.gdapprovedid      
left join bos_gl_fjournaltrans on bos_sd_fdo.szfjournalid = bos_gl_fjournaltrans.szfjournalid      
left join bos_pi_employee as helper1 on bos_sd_fdo.szhelperid = helper1.szemployeeid      
left join bos_pi_employee as helper2 on bos_sd_fdo.szhelperid_2 = helper2.szemployeeid      
left join bos_pi_employee as helper3 on bos_sd_fdo.szhelperid_3 = helper3.szemployeeid      

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fdo.szsalesid      

--  these join fields are not really needed. but to retrieve them makes      
--  to do join to six different tables.      
--  so just de-activate it temporarily and activate it when it is absolutely      
--  necessary (and the processing power has increased).      
--left join bos_pi_employee as sup on sup.szemployeeid = bos_sd_fdo.szsalessupervisorid      
--left join bos_pi_employee as sup2 on sup2.szemployeeid = bos_sd_fdo.szsalessupervisorid_2      
--left join bos_pi_employee as sup3 on sup3.szemployeeid = bos_sd_fdo.szsalessupervisorid_3      
--left join bos_pi_division as div on div.szdivisionid = bos_sd_fdo.szsalesdivisionid      
--left join bos_pi_department as dep on dep.szdepartmentid = bos_sd_fdo.szsalesdepartmentid      
--left join bos_pi_team as tea on tea.szteamid = bos_sd_fdo.szsalesteamid      

left join bos_ar_customer on bos_sd_fdo.szcustid = bos_ar_customer.szcustid      

left join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid      
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_sd_fdo.szcarrierid      

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdo.szcompanyid      
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid      
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdo.szuserid      

left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_sd_fdo.szwarehouseid      

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid      

--allow to credit is based on original customer, not from invoice-to customer.      
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid      

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid      
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid      
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid      
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid      
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid      

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fdo.szordertypeid      

where      
bos_sd_fdo.szdoid = p_szdoid ; 





end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdo_015(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select      
bos_sd_fdo.szdoid,      
bos_sd_fdo.szapplyno,      
bos_sd_fdo.szfsoid,      

bos_sd_fdo.szlogistictype,      
bos_sd_fdo.szfdnid,      

bos_sd_fdo.breturntowarehouse,      
bos_sd_fdo.szreturnfdoid,      
bos_sd_fdo.szreturnwarehouseid,      
bos_sd_fdo.szreturnstocktypeid,      

bos_sd_fdo.szsalesorgid,      

bos_sd_fdo.szordertypeid,      
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,      
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,      

bos_sd_fdo.dtmdelivery,      
bos_sd_fdo.dtmprice,      

bos_sd_fdo.szcustid,      
bos_ar_customer.szname as szcustnm_j,      
custsales.ballowtocredit as bcustallowtocredit_j,      

bos_sd_fdo.decamount,      
bos_sd_fdo.dectax,      

bos_sd_fdo.szccyid,      
bos_cu_currency.szamountformat as szccyamountformat_j,      

bos_sd_fdo.szccyrateid,      
bos_sd_fdo.decccyrate,      
bos_sd_fdo.szfinvoiceid,      
bos_sd_fdo.szfirstfinvoiceid,      
bos_sd_fdo.bdropship,      
bos_sd_fdo.busethirdpartycarrier,      

bos_sd_fdo.szvehicleid,      
bos_sd_fdo.szvehiclenumber,      

bos_sd_fdo.szdriverid,      
bos_sd_fdo.szdrivername,      

bos_sd_fdo.szhelperid,      
helper1.szname as szhelpernm,      

bos_sd_fdo.szhelperid_2,      
helper2.szname as szhelpernm_2,      

bos_sd_fdo.szhelperid_3,      
helper3.szname as szhelpernm_3,      

bos_sd_fdo.szsalesid,      
sales.szname as szsalesnm_j,      

bos_sd_fdo.szsalessupervisorid,      
bos_sd_fdo.szsalessupervisorid_2,      
bos_sd_fdo.szsalessupervisorid_3,      
bos_sd_fdo.szsalesdivisionid,      
bos_sd_fdo.szsalesdepartmentid,      
bos_sd_fdo.szsalesteamid,      

bos_sd_fdo.szcarrierid,      
bos_inv_carrier.szname as szcarriernm,      

bos_sd_fdo.szremark,      
bos_sd_fdo.szlatitude,      
bos_sd_fdo.szlongitude,      

bos_sd_fdo.szcustpoid,      
bos_sd_fdo.dtmcustpo,      

bos_sd_fdo.szwarehouseid,      
bos_inv_warehouse.szname as szwarehousenm,      

bos_sd_fdo.szstocktypeid,      
bos_sd_fdo.bcash,      

bos_sd_fdo.gdcreditlimitapprovedid,      
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,      
creditlimitapproved.bapproved as bcreditlimitapproved_j,      

bos_sd_djrtracking.szdjrtrackingid as szdjrtrackingid_j,      
bos_sd_djrtracking.szfdjrid as szdjrtrackingfdjrid_j,      

bos_sd_fdo.szpaymenttermid,      

bos_sd_fdo.deliveryszcontactperson,      
bos_sd_fdo.deliveryszroomno,      
bos_sd_fdo.deliveryszfloor,      
bos_sd_fdo.deliveryszbuilding,      
bos_sd_fdo.deliveryszaddress_1,      
bos_sd_fdo.deliveryszaddress_2,      
bos_sd_fdo.deliveryszdistrict,      
bos_sd_fdo.deliveryszcity,      
bos_sd_fdo.deliveryszzipcode,      
bos_sd_fdo.deliveryszstate,      
bos_sd_fdo.deliveryszcountry,      
bos_sd_fdo.deliveryszphoneno_1,      
bos_sd_fdo.deliveryszphoneno_2,      
bos_sd_fdo.deliveryszfaxno,      
bos_sd_fdo.deliveryszmobileno,      
bos_sd_fdo.deliveryszemail,      
bos_sd_fdo.deliveryszwebsite,      

--customer's collection info      
bsr.szrouteid as szcollrouteid,      
bsr.szdescription as szcollroutedescription,      
bsr.szopuserid as szcollectorid,      
bpe.szname as szcollectornm,      

bos_sd_fdo.bresultfrtransfer,      
bos_sd_fdo.bvoid,      
bos_gen_approved.bapproved,      
bos_sd_fdo.bapplied,      
bos_gl_fjournaltrans.szfjournalid as bjournal,      
bos_gl_fjournaltrans.bposted,      
bos_sd_fdo.btprintedcount,      
bos_sd_fdo.btransferred,      

bos_sd_fdo.szcompanyid,      
bos_gl_company.szname as szcompanynm,      

bos_sd_fdo.szworkplaceid,      
bos_gl_workplace.szname as szworkplacenm,      

bos_sd_fdo.sztaxentityid,      

bos_sd_fdo.bneedapproval,      
bos_gen_approved.gdapprovedid,      
bos_gen_approved.szapprovalid,      

bos_gl_fjournaltrans.szfjournalid,      

bos_sd_fdo.dtmcreated,      
bos_sd_fdo.bsystemcreated,      

bos_sd_fdo.szuserid,      
bos_sm_user.szname as szusernm_j,      

-- data status.      
bos_sd_fdo.dtmlastupdated,      
bos_sd_fdo.balreadytransferred,      
bos_sd_fdo.szmanualno,      
bos_sd_fdo.szfcustbiid,      
bos_sd_fdo.dtmmobiletransaction,      

-- weight and volume      
bos_sd_fdo.dectonase,      
bos_sd_fdo.deccubication,      
bos_sd_fdo.buploadedfrommodis,      
bos_sd_fdo.dtmstartvisit,     
bos_sd_fdo.dtmendvisit,     
bos_sd_fdo.decvisitspendtime,    
bos_sd_fdo.bscansuccess,     
bos_sd_fdo.szscanfailreason,
bos_sd_fdo.szbarcodescanfailreason,
bos_sd_fdo.bscanbarcodesuccess,
bos_sd_fdo.decjourneyspendtime,
bos_sd_fdo.adcid,
bos_sd_fdo.szcustreturntaxrefnote,
bos_sd_fdo.szcustreceiptno  
from      
bos_sd_fdo       
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fdo.gdcreditlimitapprovedid      
left join bos_gen_approved on bos_sd_fdo.gdapprovedid = bos_gen_approved.gdapprovedid      
left join bos_gl_fjournaltrans on bos_sd_fdo.szfjournalid = bos_gl_fjournaltrans.szfjournalid      
left join bos_pi_employee as helper1 on bos_sd_fdo.szhelperid = helper1.szemployeeid      
left join bos_pi_employee as helper2 on bos_sd_fdo.szhelperid_2 = helper2.szemployeeid      
left join bos_pi_employee as helper3 on bos_sd_fdo.szhelperid_3 = helper3.szemployeeid      

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fdo.szsalesid      

--  these join fields are not really needed. but to retrieve them makes      
--  to do join to six different tables.      
--  so just de-activate it temporarily and activate it when it is absolutely      
--  necessary (and the processing power has increased).      
--left join bos_pi_employee as sup on sup.szemployeeid = bos_sd_fdo.szsalessupervisorid      
--left join bos_pi_employee as sup2 on sup2.szemployeeid = bos_sd_fdo.szsalessupervisorid_2      
--left join bos_pi_employee as sup3 on sup3.szemployeeid = bos_sd_fdo.szsalessupervisorid_3      
--left join bos_pi_division as div on div.szdivisionid = bos_sd_fdo.szsalesdivisionid      
--left join bos_pi_department as dep on dep.szdepartmentid = bos_sd_fdo.szsalesdepartmentid      
--left join bos_pi_team as tea on tea.szteamid = bos_sd_fdo.szsalesteamid      

left join bos_ar_customer on bos_sd_fdo.szcustid = bos_ar_customer.szcustid      

left join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid      
left join bos_inv_carrier on bos_inv_carrier.szcarrierid = bos_sd_fdo.szcarrierid      

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fdo.szcompanyid      
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid      
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fdo.szuserid      

left join bos_inv_warehouse on bos_inv_warehouse.szwarehouseid = bos_sd_fdo.szwarehouseid      

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid      

--allow to credit is based on original customer, not from invoice-to customer.      
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid      

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid      
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid      
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid      
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid      
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid      

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fdo.szordertypeid      

where      
bos_sd_fdo.szdoid = p_szdoid;



end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitem(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fdoitem.szdoid,
bos_sd_fdoitem.shitemnumber,

bos_sd_fdoitem.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,
bos_inv_orderitemtype.szreturnorderitemtypeid as szorderitemtypereturnorderitemtypeid_j,

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,

bos_sd_fdoitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j

, bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp

, bos_sd_fdoitem.szpriceid,
bos_sd_fdoitem.szpriceorderid,
bos_sd_fdoitem.decdiscprocent,

bos_sd_fdoitem.dtmpricedate,

bos_sd_fdoitem.decqty,
bos_sd_fdoitem.decuomqty,

bos_sd_fdoitem.szuomid,
bos_sd_fdoitem.decprice,
bos_sd_fdoitem.decdiscount,
bos_sd_fdoitem.btaxable,
bos_sd_fdoitem.dectax,
bos_sd_fdoitem.decamount,
bos_sd_fdoitem.decdpp,
bos_sd_fdoitem.szpaymenttype,

bos_sd_fdoitem.deccogs,
bos_sd_fdoitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j,

-- weight and volume
bos_sd_fdoitem.dectonase,
bos_sd_fdoitem.deccubication,

dbo.bos_sd_fdoitem.szparentid,
parent.szname as szparentnm_j,

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j

from 
bos_sd_fdoitem 
left join bos_sd_fdo as bsf on bsf.szdoid = bos_sd_fdoitem.szdoid
left join bos_inv_product on bos_sd_fdoitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_fdoitem.szparentid = parent.szproductid
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fdoitem.szorderitemtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_fdoitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid	
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fdo.szcustid 
and bos_ar_customerproductitem.szproductid = bos_sd_fdoitem.szproductid
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid
and bgwp.szproductid = bos_sd_fdoitem.szproductid

where 
bos_sd_fdoitem.szdoid = p_szdoid
order by
bos_sd_fdoitem.shitemnumber;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitem_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fdoitem.szdoid,  
bos_sd_fdoitem.shitemnumber,  

bos_sd_fdoitem.szorderitemtypeid,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,  
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,  
bos_inv_orderitemtype.szreturnorderitemtypeid as szorderitemtypereturnorderitemtypeid_j,  

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,  
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,  
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,  

bos_sd_fdoitem.szproductid,  

bos_inv_product.szname as szproductname_j,  
bos_inv_product.sznickname as szproductnickname_j,  
bos_inv_product.szqtyformat as szproductqtyformat_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_product.sztrackingtype as szproducttrackingtype_j,  
bos_gl_taxtype.decrate as decproducttaxrate_j  

, bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j  
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp  

, bos_sd_fdoitem.szpriceid,  
bos_sd_fdoitem.szpriceorderid,  
bos_sd_fdoitem.decdiscprocent,  

bos_sd_fdoitem.dtmpricedate,  

bos_sd_fdoitem.decqty,  
bos_sd_fdoitem.decuomqty,  

bos_sd_fdoitem.szuomid,  
bos_sd_fdoitem.decprice,  
bos_sd_fdoitem.decdiscount,  
bos_sd_fdoitem.btaxable,  
bos_sd_fdoitem.dectax,  
bos_sd_fdoitem.decamount,  
bos_sd_fdoitem.decdpp,  
bos_sd_fdoitem.szpaymenttype,  

bos_sd_fdoitem.deccogs,  
bos_sd_fdoitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

-- weight and volume  
bos_sd_fdoitem.dectonase,  
bos_sd_fdoitem.deccubication,  

dbo.bos_sd_fdoitem.szparentid,  
parent.szname as szparentnm_j,  

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,  
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j  

from   
bos_sd_fdoitem   
left join bos_sd_fdo as bsf on bsf.szdoid = bos_sd_fdoitem.szdoid  
left join bos_inv_product on bos_sd_fdoitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_fdoitem.szparentid = parent.szproductid  
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid  
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fdoitem.szorderitemtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_fdoitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid   
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fdo.szcustid   
and bos_ar_customerproductitem.szproductid = bos_sd_fdoitem.szproductid  
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid  
and bgwp.szproductid = bos_sd_fdoitem.szproductid  

where   
bos_sd_fdoitem.szdoid = p_szdoid  
order by  
bos_sd_fdoitem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitem_014(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fdoitem.szdoid,  
bos_sd_fdoitem.shitemnumber,  

bos_sd_fdoitem.szorderitemtypeid,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,  
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,  
bos_inv_orderitemtype.szreturnorderitemtypeid as szorderitemtypereturnorderitemtypeid_j,  

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,  
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,  
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,  

bos_sd_fdoitem.szproductid,  

bos_inv_product.szname as szproductname_j,  
bos_inv_product.sznickname as szproductnickname_j,  
bos_inv_product.szqtyformat as szproductqtyformat_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_product.sztrackingtype as szproducttrackingtype_j,  
bos_gl_taxtype.decrate as decproducttaxrate_j  

, bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j  
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp  

, bos_sd_fdoitem.szpriceid,  
bos_sd_fdoitem.szpriceorderid,  
bos_sd_fdoitem.decdiscprocent,  

bos_sd_fdoitem.dtmpricedate,  

bos_sd_fdoitem.decqty,  
bos_sd_fdoitem.decuomqty,  

bos_sd_fdoitem.szuomid,  
bos_sd_fdoitem.decprice,  
bos_sd_fdoitem.decdiscount,  
bos_sd_fdoitem.btaxable,  
bos_sd_fdoitem.dectax,  
bos_sd_fdoitem.decamount,  
bos_sd_fdoitem.decdpp,  
bos_sd_fdoitem.szpaymenttype,  

bos_sd_fdoitem.deccogs,  
bos_sd_fdoitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

-- weight and volume  
bos_sd_fdoitem.dectonase,  
bos_sd_fdoitem.deccubication,  

dbo.bos_sd_fdoitem.szparentid,  
parent.szname as szparentnm_j,  

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,  
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j,

bos_sd_fdoitem.szdistproductid,  
bos_sd_fdoitem.decdistqty,  
bos_sd_fdoitem.decdistprice     

from   
bos_sd_fdoitem   
left join bos_sd_fdo as bsf on bsf.szdoid = bos_sd_fdoitem.szdoid  
left join bos_inv_product on bos_sd_fdoitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_fdoitem.szparentid = parent.szproductid  
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid  
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fdoitem.szorderitemtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_fdoitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid   
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fdo.szcustid   
and bos_ar_customerproductitem.szproductid = bos_sd_fdoitem.szproductid  
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid  
and bgwp.szproductid = bos_sd_fdoitem.szproductid  

where   
bos_sd_fdoitem.szdoid = p_szdoid  
order by  
bos_sd_fdoitem.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitem_015(
p_szdoid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fdoitem.szdoid,  
bos_sd_fdoitem.shitemnumber,  

bos_sd_fdoitem.szorderitemtypeid,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,  
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,  
bos_inv_orderitemtype.szreturnorderitemtypeid as szorderitemtypereturnorderitemtypeid_j,  

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,  
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,  
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,  

bos_sd_fdoitem.szproductid,  

bos_inv_product.szname as szproductname_j,  
bos_inv_product.sznickname as szproductnickname_j,  
bos_inv_product.szqtyformat as szproductqtyformat_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  
bos_inv_product.sztrackingtype as szproducttrackingtype_j,  
bos_gl_taxtype.decrate as decproducttaxrate_j  

, bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j  
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp  

, bos_sd_fdoitem.szpriceid,  
bos_sd_fdoitem.szpriceorderid,  
bos_sd_fdoitem.decdiscprocent,  

bos_sd_fdoitem.dtmpricedate,  

bos_sd_fdoitem.decqty,  
bos_sd_fdoitem.decuomqty,  

bos_sd_fdoitem.szuomid,  
bos_sd_fdoitem.decprice,  
bos_sd_fdoitem.decdiscount,  
bos_sd_fdoitem.btaxable,  
bos_sd_fdoitem.dectax,  
bos_sd_fdoitem.decamount,  
bos_sd_fdoitem.decdpp,  
bos_sd_fdoitem.szpaymenttype,  

bos_sd_fdoitem.deccogs,  
bos_sd_fdoitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

-- weight and volume  
bos_sd_fdoitem.dectonase,  
bos_sd_fdoitem.deccubication,  

dbo.bos_sd_fdoitem.szparentid,  
parent.szname as szparentnm_j,  

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,  
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j,

bos_sd_fdoitem.szdistproductid,  
bos_sd_fdoitem.decdistqty,  
bos_sd_fdoitem.decdistprice,     

bos_sd_fdoitem.szbudgetid,  
bos_sd_fdoitem.decprincipalcostamount,
bos_sd_fdoitem.decprincipalcostqty,
bos_sd_fdoitem.bbudgettransferred

from   
bos_sd_fdoitem   
left join bos_sd_fdo as bsf on bsf.szdoid = bos_sd_fdoitem.szdoid  
left join bos_inv_product on bos_sd_fdoitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_fdoitem.szparentid = parent.szproductid  
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid  
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fdoitem.szorderitemtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_fdoitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid   
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fdo.szcustid   
and bos_ar_customerproductitem.szproductid = bos_sd_fdoitem.szproductid  
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid  
and bgwp.szproductid = bos_sd_fdoitem.szproductid  

where   
bos_sd_fdoitem.szdoid = p_szdoid  
order by  
bos_sd_fdoitem.shitemnumber;



end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitembonussource(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
	szorderitemtypeid,
	szpaymenttype,
	decbonusamount,
	decbonusqty,
	szparentid
	
from 
bos_sd_fdoitembonussource
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitembonussource_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
 szorderitemtypeid,  
 szpaymenttype,  
 decbonusamount,  
 decbonusqty,  
 szparentid  
from 
bos_sd_fdoitembonussource
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitemlotqty(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_sd_fdoitemlotqty
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitemlotqty_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szlotid,
decqty

from 
bos_sd_fdoitemlotqty
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitemsn(
p_szdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
	szproductsn
from 
bos_sd_fdoitemsn
where 
szdoid = p_szdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoitemsn_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
shitemsnnumber,
 szproductsn  
 
from 
bos_sd_fdoitemsn
where 
szdoid = p_szdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoproductdepositbonusitem(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdoproductdepositbonusitem.szdoid,
bos_sd_fdoproductdepositbonusitem.shitemnumber,

bos_sd_fdoproductdepositbonusitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_fdoproductdepositbonusitem.decqty,
bos_sd_fdoproductdepositbonusitem.szuomid,
bos_sd_fdoproductdepositbonusitem.szorderitemtypeid,

bos_sd_fdoproductdepositbonusitem.bgenbytotal


from 
bos_sd_fdoproductdepositbonusitem
left join bos_inv_product on bos_sd_fdoproductdepositbonusitem.szproductid = bos_inv_product.szproductid

where 
bos_sd_fdoproductdepositbonusitem.szdoid = p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoproductdepositbonusitem_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdoproductdepositbonusitem.szdoid,
bos_sd_fdoproductdepositbonusitem.shitemnumber,

bos_sd_fdoproductdepositbonusitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_fdoproductdepositbonusitem.decqty,
bos_sd_fdoproductdepositbonusitem.szuomid,
bos_sd_fdoproductdepositbonusitem.szorderitemtypeid,

bos_sd_fdoproductdepositbonusitem.bgenbytotal


from 
bos_sd_fdoproductdepositbonusitem
left join bos_inv_product on bos_sd_fdoproductdepositbonusitem.szproductid = bos_inv_product.szproductid

where 
bos_sd_fdoproductdepositbonusitem.szdoid = p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoproductdepositbonusitembonussource(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
	szorderitemtypeid,
	szpaymenttype,
	decbonusamount,
	decbonusqty

from 
bos_sd_fdoproductdepositbonusitembonussource
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getfdoproductdepositbonusitembonussource_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
 szorderitemtypeid,  
 szpaymenttype,  
 decbonusamount,  
 decbonusqty  
 
from 
bos_sd_fdoproductdepositbonusitembonussource
where 
szfdoid = p_szfdoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistoffcalloffdo(
p_szfdoid bos_dt_szid,
p_szcalltype bos_dt_szsmallid)
returns void as
$body$
begin
select 
fcall.szfcallid

from 
bos_crl_fcall as fcall
left join bos_sd_djrtracking as djrtracking

on djrtracking.szdjrtrackingid = fcall.sztrackingid and szcalltype = p_szcalltype
where 
djrtracking.szfdoid = p_szfdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistoffcalloffdo_013(
p_szfdoid bos_dt_szid,
p_szcalltype bos_dt_szsmallid)
returns void as
$body$
begin
select 
fcall.szfcallid

from 
bos_crl_fcall as fcall
left join bos_sd_djrtracking as djrtracking

on djrtracking.szdjrtrackingid = fcall.sztrackingid and szcalltype = p_szcalltype
where 
djrtracking.szfdoid = p_szfdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistoffdo()
returns void as
$body$
begin
select 
szdoid,
dtmdelivery,
szcustid

from 
bos_sd_fdo;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistoffdowhereworkplaceanddate(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select 
szdoid


from 
bos_sd_fdo

where 
szworkplaceid like p_szworkplaceid and dtmdelivery >= p_dtmfrom and dtmdelivery < interval '1 day' + p_dtmto
order by 
szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistofpendingfdo(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fdo.szdoid, 
coalesce(bos_sd_djrtracking.szdjrtrackingid, '') as szdjrtrackingid,
bos_sd_fdo.dtmdelivery as dtmdo,
coalesce(bos_sd_djrtracking.szdriverid, '') as szdriverid,
bos_sd_fdo.szcustid,
coalesce(bos_pi_employee.szname,'') as szdrivernm,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_sd_fdo.bapplied

from
bos_sd_fdo
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fdo.szcustid
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid
--use inner join so only do that has tracking will be returned.
inner join bos_sd_djrtracking on bos_sd_djrtracking.szfdoid = bos_sd_fdo.szdoid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_djrtracking.szdriverid

where 
invcust.szcustid = p_szcustid and
bos_sd_fdo.bapplied = 0 and
bos_sd_fdo.bvoid = 0;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistofunappliedfdo(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
select szdoid from
(
select 
bos_sd_fdo.szdoid, bos_sd_fdo.decamount 
from bos_sd_fdo
where
bos_sd_fdo.szworkplaceid like p_szworkplaceid 
and bos_sd_fdo.bvoid = 0 
and bos_sd_fdo.bapplied = 0 
and dtmdelivery >= p_dtmfrom 
and dtmdelivery < interval '1 day' + p_dtmto
and bos_sd_fdo.szdriverid like p_szopuserid
and (select count(szdoid) from bos_sd_fdoitem where bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid) > 0  
) as summary
order by summary.decamount;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getlistofunappliedfdo_013(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select szdoid from  
(  
select   
bos_sd_fdo.szdoid, bos_sd_fdo.decamount   
from bos_sd_fdo  
where  
bos_sd_fdo.szworkplaceid = p_szworkplaceid   
and bos_sd_fdo.bvoid = 0   
and bos_sd_fdo.bapplied = 0   
and dtmdelivery >= p_dtmfrom   
and dtmdelivery < interval '1 day' + p_dtmto
--and bos_sd_fdo.szdriverid = p_szopuserid  
and (select count(szdoid) from bos_sd_fdoitem where bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid) > 0    
) as summary  
order by summary.decamount;
else
select szdoid from  
(  
select   
bos_sd_fdo.szdoid, bos_sd_fdo.decamount   
from bos_sd_fdo  
where  
bos_sd_fdo.szworkplaceid = p_szworkplaceid   
and bos_sd_fdo.bvoid = 0   
and bos_sd_fdo.bapplied = 0   
and dtmdelivery >= p_dtmfrom   
and dtmdelivery < interval '1 day' + p_dtmto
and bos_sd_fdo.szdriverid = p_szopuserid  
and (select count(szdoid) from bos_sd_fdoitem where bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid) > 0    
) as summary  
order by summary.decamount;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getselectlistoffdowheremanualno(
p_szmanualno bos_dt_szid,
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdoid

from 
bos_sd_fdo
where 
szmanualno = p_szmanualno and szdoid <> p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_getselectlistoffdowheremanualno_013(
p_szmanualno bos_dt_szid,
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdoid

from 
bos_sd_fdo
where 
szmanualno = p_szmanualno and szdoid <> p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_isfdoexist(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdoid

from 
bos_sd_fdo
where 
szdoid = p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_isfdoexist_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
select 
szdoid

from 
bos_sd_fdo
where 
szdoid = p_szdoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_lockfdo(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
dtmprice = dtmprice
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_lockfdo_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
dtmprice = dtmprice
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdodelivered(
p_szfdoid bos_dt_szid,
p_szfdnid bos_dt_szid,
p_szfdndriverid bos_dt_szid,
p_szfdnvehicleid bos_dt_szid,
p_szfdncarrierid bos_dt_szid,
p_szfdndrivername bos_dt_szid,
p_szfdnvehiclenumber bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfdnid = p_szfdnid,
szdriverid = p_szfdndriverid,
szvehicleid = p_szfdnvehicleid,
szcarrierid = p_szfdncarrierid,
szdrivername = p_szfdndrivername,
szvehiclenumber = p_szfdnvehiclenumber

where 
szdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdodelivered_013(
p_szfdoid bos_dt_szid,
p_szfdnid bos_dt_szid,
p_szfdndriverid bos_dt_szid,
p_szfdnvehicleid bos_dt_szid,
p_szfdncarrierid bos_dt_szid,
p_szfdndrivername bos_dt_szid,
p_szfdnvehiclenumber bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfdnid = p_szfdnid,
szdriverid = p_szfdndriverid,
szvehicleid = p_szfdnvehicleid,
szcarrierid = p_szfdncarrierid,
szdrivername = p_szfdndrivername,
szvehiclenumber = p_szfdnvehiclenumber

where 
szdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdofirstinvoiced(
p_szdoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfirstfinvoiceid = p_szfinvoiceid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdofirstinvoiced_013(
p_szdoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfirstfinvoiceid = p_szfinvoiceid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdoinvoiced(
p_szdoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfinvoiceid = p_szfinvoiceid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_markfdoinvoiced_013(
p_szdoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfinvoiceid = p_szfinvoiceid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_unmarkfdoinvoiced(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfinvoiceid = ''
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_unmarkfdoinvoiced_013(
p_szdoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szfinvoiceid = ''
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatecustidoffdo(
p_szdoid bos_dt_szid,
p_sznewcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szcustid = p_sznewcustid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatecustidoffdo_013(
p_szdoid bos_dt_szid,
p_sznewcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szcustid = p_sznewcustid
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdo(
p_szdoid bos_dt_szbigid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szbigid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szbigid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szname,
p_deliveryszaddress_2 bos_dt_szname,
p_deliveryszdistrict bos_dt_szmediumname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfinvoiceid bos_dt_szbigid,
p_szfirstfinvoiceid bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szapplyno = p_szapplyno,
szfsoid = p_szfsoid,

szlogistictype = p_szlogistictype,
--fdn field can not be updated.

breturntowarehouse = p_breturntowarehouse,
szreturnfdoid = p_szreturnfdoid,
szreturnwarehouseid = p_szreturnwarehouseid,
szreturnstocktypeid = p_szreturnstocktypeid,

szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmdelivery = p_dtmdelivery,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,
busethirdpartycarrier = p_busethirdpartycarrier,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szcarrierid = p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

szpaymenttermid = p_szpaymenttermid,

deliveryszcontactperson = p_deliveryszcontactperson,
deliveryszroomno = p_deliveryszroomno,
deliveryszfloor = p_deliveryszfloor,
deliveryszbuilding = p_deliveryszbuilding,
deliveryszaddress_1 = p_deliveryszaddress_1,
deliveryszaddress_2 = p_deliveryszaddress_2,
deliveryszdistrict = p_deliveryszdistrict,
deliveryszcity = p_deliveryszcity,
deliveryszzipcode = p_deliveryszzipcode,
deliveryszstate = p_deliveryszstate,
deliveryszcountry = p_deliveryszcountry,
deliveryszphoneno_1 = p_deliveryszphoneno_1,
deliveryszphoneno_2 = p_deliveryszphoneno_2,
deliveryszfaxno = p_deliveryszfaxno,
deliveryszmobileno = p_deliveryszmobileno,
deliveryszemail = p_deliveryszemail,
deliveryszwebsite = p_deliveryszwebsite,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,
szmanualno = p_szmanualno,
szfcustbiid = p_szfcustbiid,
dtmmobiletransaction = p_dtmmobiletransaction,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,

szfinvoiceid = p_szfinvoiceid,
szfirstfinvoiceid = p_szfirstfinvoiceid

, dtmlastupdated = p_dtmlastupdated
,  dtmstartvisit= p_dtmstartvisit,
dtmendvisit=p_dtmendvisit,
decvisitspendtime=p_decvisitspendtime,
bscansuccess=p_bscansuccess,
szscanfailreason=p_szscanfailreason

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdo_013(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szapplyno = p_szapplyno,
szfsoid = p_szfsoid,

szlogistictype = p_szlogistictype,
--fdn field can not be updated.

breturntowarehouse = p_breturntowarehouse,
szreturnfdoid = p_szreturnfdoid,
szreturnwarehouseid = p_szreturnwarehouseid,
szreturnstocktypeid = p_szreturnstocktypeid,

szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmdelivery = p_dtmdelivery,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,
busethirdpartycarrier = p_busethirdpartycarrier,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szcarrierid = p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

szpaymenttermid = p_szpaymenttermid,

deliveryszcontactperson = p_deliveryszcontactperson,
deliveryszroomno = p_deliveryszroomno,
deliveryszfloor = p_deliveryszfloor,
deliveryszbuilding = p_deliveryszbuilding,
deliveryszaddress_1 = p_deliveryszaddress_1,
deliveryszaddress_2 = p_deliveryszaddress_2,
deliveryszdistrict = p_deliveryszdistrict,
deliveryszcity = p_deliveryszcity,
deliveryszzipcode = p_deliveryszzipcode,
deliveryszstate = p_deliveryszstate,
deliveryszcountry = p_deliveryszcountry,
deliveryszphoneno_1 = p_deliveryszphoneno_1,
deliveryszphoneno_2 = p_deliveryszphoneno_2,
deliveryszfaxno = p_deliveryszfaxno,
deliveryszmobileno = p_deliveryszmobileno,
deliveryszemail = p_deliveryszemail,
deliveryszwebsite = p_deliveryszwebsite,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,
szmanualno = p_szmanualno,
szfcustbiid = p_szfcustbiid,
dtmmobiletransaction = p_dtmmobiletransaction,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,

szfinvoiceid = p_szfinvoiceid,
szfirstfinvoiceid = p_szfirstfinvoiceid,

dtmlastupdated = p_dtmlastupdated,
dtmstartvisit= p_dtmstartvisit,
dtmendvisit=p_dtmendvisit,
decvisitspendtime=p_decvisitspendtime ,
bscansuccess=p_bscansuccess,
szscanfailreason=p_szscanfailreason,
szbarcodescanfailreason=p_szbarcodescanfailreason,
bscanbarcodesuccess=p_bscanbarcodesuccess,
decjourneyspendtime=p_decjourneyspendtime,
adcid=p_adcid,
szcustreceiptno=p_szcustreceiptno
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdo_015(
p_szdoid bos_dt_szid,
p_szapplyno bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szlogistictype varchar,
p_breturntowarehouse smallint,
p_szreturnfdoid bos_dt_szid,
p_szreturnwarehouseid bos_dt_szid,
p_szreturnstocktypeid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmdelivery timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_busethirdpartycarrier bit,
p_szvehicleid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szhelperid bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szcarrierid bos_dt_szid,
p_szvehiclenumber varchar,
p_szdrivername bos_dt_szname,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_szwarehouseid bos_dt_szid,
p_szstocktypeid bos_dt_szid,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_szpaymenttermid bos_dt_szid,
p_deliveryszcontactperson bos_dt_szname,
p_deliveryszroomno bos_dt_szsmallname,
p_deliveryszfloor bos_dt_szsmallname,
p_deliveryszbuilding bos_dt_szname,
p_deliveryszaddress_1 bos_dt_szbigdescription,
p_deliveryszaddress_2 bos_dt_szbigdescription,
p_deliveryszdistrict bos_dt_szname,
p_deliveryszcity bos_dt_szmediumname,
p_deliveryszzipcode bos_dt_szsmallname,
p_deliveryszstate bos_dt_szmediumname,
p_deliveryszcountry bos_dt_szmediumname,
p_deliveryszphoneno_1 bos_dt_szmediumname,
p_deliveryszphoneno_2 bos_dt_szmediumname,
p_deliveryszfaxno bos_dt_szmediumname,
p_deliveryszmobileno bos_dt_szmediumname,
p_deliveryszemail bos_dt_szmediumname,
p_deliveryszwebsite bos_dt_szmediumname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szmanualno bos_dt_szid,
p_szfcustbiid bos_dt_szid,
p_dtmmobiletransaction timestamp,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfinvoiceid bos_dt_szid,
p_szfirstfinvoiceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_bscanbarcodesuccess smallint,
p_decjourneyspendtime bos_dt_decamount,
p_adcid bos_dt_szid,
p_szcustreceiptno bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdo
set 
szapplyno = p_szapplyno,
szfsoid = p_szfsoid,

szlogistictype = p_szlogistictype,
--fdn field can not be updated.

breturntowarehouse = p_breturntowarehouse,
szreturnfdoid = p_szreturnfdoid,
szreturnwarehouseid = p_szreturnwarehouseid,
szreturnstocktypeid = p_szreturnstocktypeid,

szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmdelivery = p_dtmdelivery,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,
busethirdpartycarrier = p_busethirdpartycarrier,
szvehicleid = p_szvehicleid,
szdriverid = p_szdriverid,
szhelperid = p_szhelperid,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szcarrierid = p_szcarrierid,
szvehiclenumber = p_szvehiclenumber,
szdrivername = p_szdrivername,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
szwarehouseid = p_szwarehouseid,
szstocktypeid = p_szstocktypeid,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

szpaymenttermid = p_szpaymenttermid,

deliveryszcontactperson = p_deliveryszcontactperson,
deliveryszroomno = p_deliveryszroomno,
deliveryszfloor = p_deliveryszfloor,
deliveryszbuilding = p_deliveryszbuilding,
deliveryszaddress_1 = p_deliveryszaddress_1,
deliveryszaddress_2 = p_deliveryszaddress_2,
deliveryszdistrict = p_deliveryszdistrict,
deliveryszcity = p_deliveryszcity,
deliveryszzipcode = p_deliveryszzipcode,
deliveryszstate = p_deliveryszstate,
deliveryszcountry = p_deliveryszcountry,
deliveryszphoneno_1 = p_deliveryszphoneno_1,
deliveryszphoneno_2 = p_deliveryszphoneno_2,
deliveryszfaxno = p_deliveryszfaxno,
deliveryszmobileno = p_deliveryszmobileno,
deliveryszemail = p_deliveryszemail,
deliveryszwebsite = p_deliveryszwebsite,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,
szmanualno = p_szmanualno,
szfcustbiid = p_szfcustbiid,
dtmmobiletransaction = p_dtmmobiletransaction,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,

szfinvoiceid = p_szfinvoiceid,
szfirstfinvoiceid = p_szfirstfinvoiceid,

dtmlastupdated = p_dtmlastupdated,
dtmstartvisit= p_dtmstartvisit,
dtmendvisit=p_dtmendvisit,
decvisitspendtime=p_decvisitspendtime ,
bscansuccess=p_bscansuccess,
szscanfailreason=p_szscanfailreason,
szbarcodescanfailreason=p_szbarcodescanfailreason,
bscanbarcodesuccess=p_bscanbarcodesuccess,
decjourneyspendtime=p_decjourneyspendtime,
adcid=p_adcid,
szcustreceiptno=p_szcustreceiptno
where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitem(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,
deccogs = p_deccogs,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- for cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitem_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,
deccogs = p_deccogs,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- for cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitem_014(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
update bos_sd_fdoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,
deccogs = p_deccogs,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- for cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitem_015(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_deccogs bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
update bos_sd_fdoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,
deccogs = p_deccogs,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- for cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice,

szbudgetid = p_szbudgetid,
decprincipalcostamount = p_decprincipalcostamount,
decprincipalcostqty = p_decprincipalcostqty,
bbudgettransferred = p_bbudgettransferred

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitembonussource(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fdoitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty

where 
szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitembonussource_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fdoitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty

where 
szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitemlotqty(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fdoitemlotqty
set 
decqty = p_decqty
where 
szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitemlotqty_013(
p_szfdoid bos_dt_szid,
p_shitemnumber smallint,
p_szlotid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fdoitemlotqty
set 
decqty = p_decqty
where 
szfdoid = p_szfdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitemsn(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
update bos_sd_fdoitemsn
set 
szproductsn = p_szproductsn

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdo_updatefdoitemsn_013(
p_szdoid bos_dt_szid,
p_shitemnumber smallint,
p_shitemsnnumber smallint,
p_szproductsn bos_dt_szsn)
returns void as
$body$
begin
update bos_sd_fdoitemsn
set 
szproductsn = p_szproductsn

where 
szdoid = p_szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_createfdocorrection(
p_szfdocorrectionid bos_dt_szid,
p_dtmdate timestamp,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fdocorrection
(
szfdocorrectionid,
dtmdate,
szdescription,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdocorrectionid,
p_dtmdate,
p_szdescription,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_createfdocorrectionitem(
p_szfdocorrectionid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szfdocustid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdocorrectionitem
(
szfdocorrectionid,
shitemnumber,
szfdoid,
szfdocustid,
szcustid
)
values
(
p_szfdocorrectionid,
p_shitemnumber,
p_szfdoid,
p_szfdocustid,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_createfdocorrectionitem_013(
p_szfdocorrectionid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szfdocustid bos_dt_szid,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fdocorrectionitem  
(
szfdocorrectionid,
shitemnumber,
szfdoid,
szfdocustid,
szcustid
)
values
(
p_szfdocorrectionid,
p_shitemnumber,
p_szfdoid,
p_szfdocustid,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_deletefdocorrection(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdocorrection
where
szfdocorrectionid = p_szfdocorrectionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_deletefdocorrectionitem(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fdocorrectionitem
where
szfdocorrectionid = p_szfdocorrectionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_getfdocorrection(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin

select
fdocorr.szfdocorrectionid,
fdocorr.dtmdate,
fdocorr.szdescription,

fdocorr.bresultfrtransfer,
fdocorr.bvoid,
bos_gen_approved.bapproved,
fdocorr.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
fdocorr.btprintedcount,
fdocorr.btransferred,
fdocorr.szcompanyid,
bos_gl_company.szname as szcompanynm,
fdocorr.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
fdocorr.sztaxentityid,
fdocorr.bneedapproval,
fdocorr.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
fdocorr.dtmcreated,
fdocorr.bsystemcreated,
fdocorr.dtmlastupdated,
fdocorr.balreadytransferred
from
bos_sd_fdocorrection as fdocorr 
left join bos_gen_approved on fdocorr.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on fdocorr.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = fdocorr.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = fdocorr.szworkplaceid
where
fdocorr.szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_getfdocorrectionitem(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
select

bos_sd_fdocorrectionitem.shitemnumber,
bos_sd_fdocorrectionitem.szfdoid,
bos_sd_fdocorrectionitem.szfdocustid,
custfdo.szname as szfdocustnm,
bos_sd_fdocorrectionitem.szcustid,
cust.szname as szcustnm

from
bos_sd_fdocorrectionitem
left join bos_ar_customer as custfdo on custfdo.szcustid = bos_sd_fdocorrectionitem.szfdocustid
left join bos_ar_customer as cust on cust.szcustid = bos_sd_fdocorrectionitem.szcustid
where
szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_getlistoffdocorrection()
returns void as
$body$
begin
select 
szfdocorrectionid,
szdescription,
dtmdate

from 
bos_sd_fdocorrection;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_isfdocorrectionexist(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
select 
szfdocorrectionid

from 
bos_sd_fdocorrection
where 
szfdocorrectionid = p_szfdocorrectionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_lockfdocorrection(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdocorrection
set 
dtmdate = dtmdate
where 
szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_markfdocorrectionapplied(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdocorrection
set 
bapplied = 1
where 
szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_markfdocorrectionvoid(
p_szfdocorrectionid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdocorrection
set 
bvoid = 1
where 
szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdocorrection_updatefdocorrection(
p_szfdocorrectionid bos_dt_szid,
p_dtmdate timestamp,
p_szdescription bos_dt_szdescription,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit)
returns void as
$body$
begin
update bos_sd_fdocorrection
set 
dtmdate = p_dtmdate,
szdescription = p_szdescription,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid
where 
szfdocorrectionid = p_szfdocorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_createfdoprintingtype(
p_szfdoprintingtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szproductdefault varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fdoprintingtype
(
szfdoprintingtypeid,
szdescription,
szproductdefault,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdoprintingtypeid,
p_szdescription,
p_szproductdefault,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_createfdoprintingtype_014(
p_szfdoprintingtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szproductdefault varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fdoprintingtype
(
szfdoprintingtypeid,
szdescription,
szproductdefault,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfdoprintingtypeid,
p_szdescription,
p_szproductdefault,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_deletefdoprintingtype(
p_szfdoprintingtypeid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fdoprintingtype
where
 szfdoprintingtypeid = p_szfdoprintingtypeid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_getfdoprintingtype(
p_szfdoprintingtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdoprintingtype.szdescription,
bos_sd_fdoprintingtype.szproductdefault,
bos_inv_product.szname as szdefaultproductnm_j,
bos_sd_fdoprintingtype.dtmlastupdated,
bos_sd_fdoprintingtype.balreadytransferred

from 
bos_sd_fdoprintingtype
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoprintingtype.szproductdefault


where 
szfdoprintingtypeid = p_szfdoprintingtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_getfdoprintingtype_014(
p_szfdoprintingtypeid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fdoprintingtype.szdescription,
bos_sd_fdoprintingtype.szproductdefault,
bos_inv_product.szname as szdefaultproductnm_j,
bos_sd_fdoprintingtype.dtmlastupdated,
bos_sd_fdoprintingtype.balreadytransferred

from 
bos_sd_fdoprintingtype
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoprintingtype.szproductdefault

where 
szfdoprintingtypeid = p_szfdoprintingtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_getlistoffdoprintingtype()
returns void as
$body$
begin
select 
szfdoprintingtypeid, szdescription

from 
bos_sd_fdoprintingtype;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_isfdoprintingtypeexist(
p_szfdoprintingtypeid bos_dt_szid)
returns void as
$body$
begin
select 
szfdoprintingtypeid 

from 
bos_sd_fdoprintingtype 
where 
 szfdoprintingtypeid = p_szfdoprintingtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_lockfdoprintingtype(
p_szfdoprintingtypeid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fdoprintingtype
set 
 szdescription = szdescription
where 
 szfdoprintingtypeid = p_szfdoprintingtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fdoprintingtype_updatefdoprintingtype(
p_szfdoprintingtypeid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szproductdefault varchar)
returns void as
$body$
begin
update bos_sd_fdoprintingtype
set 
szdescription = p_szdescription,
szproductdefault=p_szproductdefault
where 
 szfdoprintingtypeid = p_szfdoprintingtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_createfinvhandover(
p_szfinvhandoverid bos_dt_szid,
p_dtmhandover timestamp,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_finvhandover
(
szfinvhandoverid,
dtmhandover,
szfropuserid,
sztoopuserid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfinvhandoverid,
p_dtmhandover,
p_szfropuserid,
p_sztoopuserid ,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_createfinvhandoveritem(
p_szfinvhandoverid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvhandoveritem
(
szfinvhandoverid,
szfinvoiceid
)
values
(
p_szfinvhandoverid,
p_szfinvoiceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_createfinvhandoveritem_013(
p_szfinvhandoverid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvhandoveritem
(
szfinvhandoverid,
szfinvoiceid
)
values
(
p_szfinvhandoverid,
p_szfinvoiceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_deletefinvhandover(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvhandover
where
szfinvhandoverid = p_szfinvhandoverid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_deletefinvhandoveritem(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvhandoveritem
where
szfinvhandoverid = p_szfinvhandoverid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_getfinvhandover(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_finvhandover.dtmhandover,
bos_sd_finvhandover.szfropuserid,
fr_emp.szname as szfropusernm,
bos_sd_finvhandover.sztoopuserid,
to_emp.szname as sztoopusernm,

bos_sd_finvhandover.bresultfrtransfer,
bos_sd_finvhandover.bvoid,
bos_gen_approved.bapproved,
bos_sd_finvhandover.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_finvhandover.btprintedcount,
bos_sd_finvhandover.btransferred,
bos_sd_finvhandover.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_finvhandover.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_sd_finvhandover.sztaxentityid,
bos_sd_finvhandover.bneedapproval,
bos_sd_finvhandover.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_finvhandover.dtmcreated,
bos_sd_finvhandover.bsystemcreated,
bos_sd_finvhandover.szuserid,
bos_sm_user.szname as szusernm_j,

bos_sd_finvhandover.dtmlastupdated,
bos_sd_finvhandover.balreadytransferred
from
bos_sd_finvhandover
left join bos_gen_approved on bos_sd_finvhandover.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_finvhandover.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvhandover.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvhandover.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvhandover.szuserid
left join bos_pi_employee as fr_emp on fr_emp.szemployeeid = bos_sd_finvhandover.szfropuserid
left join bos_pi_employee as to_emp on to_emp.szemployeeid = bos_sd_finvhandover.sztoopuserid
where
bos_sd_finvhandover.szfinvhandoverid = p_szfinvhandoverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_getfinvhandoveritem(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_finvhandoveritem.szfinvoiceid,
bos_ar_customer.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_cu_currency.szamountformat,
bos_sd_finvoice.szkeptbyopuserid,
bos_pi_employee.szname as szkeptbyopusernm,
bos_sd_finvoice.szlastfinvhandoverid

from
bos_sd_finvhandoveritem 
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvhandoveritem.szfinvoiceid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_ar_artrans  on bos_ar_artrans.szdocid = bos_sd_finvhandoveritem.szfinvoiceid and bos_ar_artrans.sztrnid = 'finv'
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_finvoice.szkeptbyopuserid
where
bos_sd_finvhandoveritem.szfinvhandoverid = p_szfinvhandoverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_isfinvhandoverexist(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvhandoverid

from 
bos_sd_finvhandover
where 
szfinvhandoverid = p_szfinvhandoverid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_lockfinvhandover(
p_szfinvhandoverid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvhandover
set 
dtmhandover = dtmhandover
where 
szfinvhandoverid = p_szfinvhandoverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_markfinvhandoverapplied(
p_szfinvhandoverid bos_dt_szid,
p_bapplied bit)
returns void as
$body$
begin
update bos_sd_finvhandover
set 
bapplied = p_bapplied
where 
szfinvhandoverid = p_szfinvhandoverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvhandover_updatefinvhandover(
p_szfinvhandoverid bos_dt_szid,
p_dtmhandover timestamp,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvhandover
set 
dtmhandover = p_dtmhandover,
szfropuserid = p_szfropuserid,
sztoopuserid = p_sztoopuserid,
bvoid = p_bvoid,
bapplied = p_bapplied,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
szuserid = p_szuserid,
dtmcreated = p_dtmcreated

where 
szfinvhandoverid = p_szfinvhandoverid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_createfinvmovein(
p_szfinvmoveinid bos_dt_szid,
p_dtmfinvmovein timestamp,
p_szfinvmoveoutid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvmovein
(
szfinvmoveinid,
dtmfinvmovein,
szfinvmoveoutid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szfropuserid,
sztoopuserid
)
values
(
p_szfinvmoveinid,
p_dtmfinvmovein,
p_szfinvmoveoutid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szfropuserid,
p_sztoopuserid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_deletefinvmovein(
p_szfinvmoveinid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvmovein
where
szfinvmoveinid = p_szfinvmoveinid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_getfinvmovein(
p_szfinvmoveinid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_finvmovein.dtmfinvmovein,
bos_sd_finvmovein.szfinvmoveoutid,
bos_sd_finvmoveout.szworkplaceid as szfrworkplaceid,
fr_wp.szname as szfrworkplacenm,

bos_sd_finvmovein.bresultfrtransfer,
bos_sd_finvmovein.bvoid,
bos_gen_approved.bapproved,
bos_sd_finvmovein.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_finvmovein.btprintedcount,
bos_sd_finvmovein.btransferred,
bos_sd_finvmovein.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_finvmovein.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_sd_finvmovein.sztaxentityid,
bos_sd_finvmovein.bneedapproval,
bos_sd_finvmovein.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_finvmovein.dtmcreated,
bos_sd_finvmovein.bsystemcreated,
bos_sd_finvmovein.szuserid,
bos_sm_user.szname as szusernm_j,

bos_sd_finvmovein.dtmlastupdated,
bos_sd_finvmovein.balreadytransferred,

bos_sd_finvmovein.szfropuserid,
fr_emp.szname as szfropusernm,

bos_sd_finvmovein.sztoopuserid,
to_emp.szname as sztoopusernm

from
bos_sd_finvmovein
left join bos_sd_finvmoveout on bos_sd_finvmoveout.szfinvmoveoutid = bos_sd_finvmovein.szfinvmoveoutid
left join bos_gl_workplace as fr_wp on fr_wp.szworkplaceid = bos_sd_finvmoveout.szworkplaceid
left join bos_gen_approved on bos_sd_finvmovein.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_finvmovein.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvmovein.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvmovein.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvmovein.szuserid
left join bos_pi_employee as fr_emp on fr_emp.szemployeeid = bos_sd_finvmovein.szfropuserid
left join bos_pi_employee as to_emp on to_emp.szemployeeid = bos_sd_finvmovein.sztoopuserid

where
bos_sd_finvmovein.szfinvmoveinid = p_szfinvmoveinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_getfinvmoveinitem(
p_szfinvmoveinid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_finvmoveoutitem.shitemnumber,
bos_sd_finvmoveoutitem.szfinvoiceid,
bos_sd_finvoice.dtmperiode,
bos_sd_finvoice.dtmcreated,
bos_ar_customer.szcustid,
bos_ar_customer.szname,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_cu_currency.szamountformat

from
bos_sd_finvmovein
--use inner join so that when there's no item there's no item returned.
inner join bos_sd_finvmoveoutitem on bos_sd_finvmoveoutitem.szfinvmoveoutid = bos_sd_finvmovein.szfinvmoveoutid
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvmoveoutitem.szfinvoiceid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_ar_artrans  on bos_ar_artrans.szdocid = bos_sd_finvmoveoutitem.szfinvoiceid and bos_ar_artrans.sztrnid = 'finv'
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid

where
bos_sd_finvmovein.szfinvmoveinid = p_szfinvmoveinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_isfinvmoveinexist(
p_szfinvmoveinid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvmoveinid

from 
bos_sd_finvmovein
where 
szfinvmoveinid = p_szfinvmoveinid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_lockfinvmovein(
p_szfinvmoveinid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvmovein
set 
dtmfinvmovein = dtmfinvmovein
where 
szfinvmoveinid = p_szfinvmoveinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_markfinvmoveinapplied(
p_szfinvmoveinid bos_dt_szid,
p_bapplied bit)
returns void as
$body$
begin
update bos_sd_finvmovein
set 
bapplied = p_bapplied
where 
szfinvmoveinid = p_szfinvmoveinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmovein_updatefinvmovein(
p_szfinvmoveinid bos_dt_szid,
p_dtmfinvmovein timestamp,
p_szfinvmoveoutid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvmovein
set 
dtmfinvmovein		= p_dtmfinvmovein,
szfinvmoveoutid	= p_szfinvmoveoutid,
bvoid			= p_bvoid,
bapplied		= p_bapplied,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szcompanyid		= p_szcompanyid,
szworkplaceid		= p_szworkplaceid,
sztaxentityid 		= p_sztaxentityid,
dtmcreated		= p_dtmcreated,
szuserid		= p_szuserid,
szfropuserid		= p_szfropuserid,
sztoopuserid		= p_sztoopuserid

where 
szfinvmoveinid 	= p_szfinvmoveinid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_createfinvmoveout(
p_szfinvmoveoutid bos_dt_szid,
p_dtmfinvmoveout timestamp,
p_sztoworkplaceid bos_dt_szid,
p_dtmstartinvcreated timestamp,
p_dtmendinvcreated timestamp,
p_szusedbyfinvmoveinid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvmoveout
(
szfinvmoveoutid,
dtmfinvmoveout,
sztoworkplaceid,
dtmstartinvcreated,
dtmendinvcreated,
szusedbyfinvmoveinid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szfropuserid,
sztoopuserid
)
values
(
p_szfinvmoveoutid,
p_dtmfinvmoveout,
p_sztoworkplaceid,
p_dtmstartinvcreated ,
p_dtmendinvcreated,
p_szusedbyfinvmoveinid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szfropuserid,
p_sztoopuserid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_createfinvmoveoutitem(
p_szfinvmoveoutid bos_dt_szid,
p_shitemnumber smallint,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvmoveoutitem
(
szfinvmoveoutid,
shitemnumber,
szfinvoiceid
)
values
(
p_szfinvmoveoutid,
p_shitemnumber,
p_szfinvoiceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_createfinvmoveoutitem_013(
p_szfinvmoveoutid bos_dt_szid,
p_shitemnumber smallint,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvmoveoutitem
(
szfinvmoveoutid,
shitemnumber,
szfinvoiceid
)
values
(
p_szfinvmoveoutid,
p_shitemnumber,
p_szfinvoiceid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_deletefinvmoveout(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvmoveout
where
szfinvmoveoutid = p_szfinvmoveoutid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_deletefinvmoveoutitem(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvmoveoutitem
where
szfinvmoveoutid = p_szfinvmoveoutid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_getfinvmoveout(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_finvmoveout.dtmfinvmoveout,
bos_sd_finvmoveout.sztoworkplaceid,
to_wp.szname as sztoworkplacenm_j,
bos_sd_finvmoveout.dtmstartinvcreated,
bos_sd_finvmoveout.dtmendinvcreated,
bos_sd_finvmoveout.szusedbyfinvmoveinid,

bos_sd_finvmoveout.bresultfrtransfer,
bos_sd_finvmoveout.bvoid,
bos_gen_approved.bapproved,
bos_sd_finvmoveout.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_finvmoveout.btprintedcount,
bos_sd_finvmoveout.btransferred,
bos_sd_finvmoveout.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_finvmoveout.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_sd_finvmoveout.sztaxentityid,
bos_sd_finvmoveout.bneedapproval,
bos_sd_finvmoveout.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_finvmoveout.dtmcreated,
bos_sd_finvmoveout.bsystemcreated,
bos_sd_finvmoveout.szuserid,
bos_sm_user.szname as szusernm_j,

bos_sd_finvmoveout.dtmlastupdated,
bos_sd_finvmoveout.balreadytransferred,

bos_sd_finvmoveout.szfropuserid,
fr_emp.szname as szfropusernm,

bos_sd_finvmoveout.sztoopuserid,
to_emp.szname as sztoopusernm

from
bos_sd_finvmoveout
left join bos_gen_approved on bos_sd_finvmoveout.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_finvmoveout.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvmoveout.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvmoveout.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvmoveout.szuserid
left join bos_gl_workplace as to_wp on to_wp.szworkplaceid = bos_sd_finvmoveout.sztoworkplaceid
left join bos_pi_employee as fr_emp on fr_emp.szemployeeid = bos_sd_finvmoveout.szfropuserid
left join bos_pi_employee as to_emp on to_emp.szemployeeid = bos_sd_finvmoveout.sztoopuserid

where
bos_sd_finvmoveout.szfinvmoveoutid = p_szfinvmoveoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_getfinvmoveoutitem(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_finvmoveoutitem.shitemnumber,
bos_sd_finvmoveoutitem.szfinvoiceid,
bos_sd_finvoice.dtmperiode,
bos_sd_finvoice.dtmcreated,
bos_ar_customer.szcustid,
bos_ar_customer.szname,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_cu_currency.szamountformat

from
bos_sd_finvmoveoutitem 
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvmoveoutitem.szfinvoiceid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_ar_artrans  on bos_ar_artrans.szdocid = bos_sd_finvmoveoutitem.szfinvoiceid and bos_ar_artrans.sztrnid = 'finv'
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid

where
bos_sd_finvmoveoutitem.szfinvmoveoutid = p_szfinvmoveoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_isfinvmoveoutexist(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvmoveoutid

from 
bos_sd_finvmoveout
where 
szfinvmoveoutid = p_szfinvmoveoutid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_lockfinvmoveout(
p_szfinvmoveoutid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvmoveout
set 
dtmfinvmoveout = dtmfinvmoveout
where 
szfinvmoveoutid = p_szfinvmoveoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_markfinvmoveoutapplied(
p_szfinvmoveoutid bos_dt_szid,
p_bapplied bit)
returns void as
$body$
begin
update bos_sd_finvmoveout
set 
bapplied = p_bapplied
where 
szfinvmoveoutid = p_szfinvmoveoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvmoveout_updatefinvmoveout(
p_szfinvmoveoutid bos_dt_szid,
p_dtmfinvmoveout timestamp,
p_sztoworkplaceid bos_dt_szid,
p_dtmstartinvcreated timestamp,
p_dtmendinvcreated timestamp,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szfropuserid bos_dt_szid,
p_sztoopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvmoveout
set 
dtmfinvmoveout 	= p_dtmfinvmoveout,
sztoworkplaceid 	= p_sztoworkplaceid,
dtmstartinvcreated	= p_dtmstartinvcreated,
dtmendinvcreated	= p_dtmendinvcreated,
bvoid 			= p_bvoid,
bapplied 		= p_bapplied,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szcompanyid 		= p_szcompanyid,
szworkplaceid 		= p_szworkplaceid,
sztaxentityid 		= p_sztaxentityid,
szuserid		= p_szuserid,
dtmcreated		= p_dtmcreated,

szfropuserid		= p_szfropuserid,
sztoopuserid		= p_sztoopuserid
where 
szfinvmoveoutid 	= p_szfinvmoveoutid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoice(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmbad timestamp,
p_dtmdoubt timestamp,
p_szfinvoiceusage varchar,
p_bcash bit,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_szfinvoicetype bos_dt_szsmallid,
p_szinvoicecollwpid bos_dt_szid,
p_szkeptbyopuserid bos_dt_szid,
p_szcurrentlocwpid bos_dt_szid,
p_sztransitlocwpid bos_dt_szid,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szlastfinvhandoverid bos_dt_szid,
p_szlastfinvmoveoutid bos_dt_szid,
p_szlastfinvmoveinid bos_dt_szid,
p_szlastfinvopnameid bos_dt_szid,
p_szrebatefinvoiceid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp)
returns void as
$body$
begin
insert into bos_sd_finvoice
(
szfinvoiceid,
szsalesorgid,
szcustid,
dtmperiode,
szcanceledbyinvid,
szcorrectedbyinvid,
szcanceltoinvid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szpaymenttermid,
szfinvoicestatus,
dtmbad,
dtmdoubt,
szfinvoiceusage,
bcash,
btaxreported,
szfakturpajakid,
szfinvoicetype,
szinvoicecollwpid,
szkeptbyopuserid,
szcurrentlocwpid,
sztransitlocwpid,
szchain_firstid,
szchain_nextid,
szlastfinvhandoverid,
szlastfinvmoveoutid,
szlastfinvmoveinid,
szlastfinvopnameid,
szrebatefinvoiceid,
szfirstfdoid_s,
szsalesid,
szreasonid,
szremark,
cntbonusitem,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,  --doc status 2,
bsystemcreated,  --doc status 2,
szuserid,  --doc status 3,
-- data status.,
dtmlastupdated,
balreadytransferred,
dtmfakturpajakcreated,
dtminvoicecorrected,
dtminvoicecanceled
)
values
(
p_szfinvoiceid,
p_szsalesorgid,
p_szcustid,
p_dtmperiode,
p_szcanceledbyinvid,
p_szcorrectedbyinvid,
p_szcanceltoinvid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szpaymenttermid,
p_szfinvoicestatus,
p_dtmbad,
p_dtmdoubt,
p_szfinvoiceusage,
p_bcash,
p_btaxreported,
p_szfakturpajakid,
p_szfinvoicetype,
p_szinvoicecollwpid,
p_szkeptbyopuserid,
p_szcurrentlocwpid,
p_sztransitlocwpid,
p_szchain_firstid,
p_szchain_nextid,
p_szlastfinvhandoverid,
p_szlastfinvmoveoutid,
p_szlastfinvmoveinid,
p_szlastfinvopnameid,
p_szrebatefinvoiceid,
p_szfirstfdoid_s,
p_szsalesid,
p_szreasonid,
p_szremark,
p_cntbonusitem,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmfakturpajakcreated,
p_dtminvoicecorrected,
p_dtminvoicecanceled
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoice_013(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmbad timestamp,
p_dtmdoubt timestamp,
p_szfinvoiceusage varchar,
p_bcash bit,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_szfinvoicetype bos_dt_szsmallid,
p_szinvoicecollwpid bos_dt_szid,
p_szkeptbyopuserid bos_dt_szid,
p_szcurrentlocwpid bos_dt_szid,
p_sztransitlocwpid bos_dt_szid,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szlastfinvhandoverid bos_dt_szid,
p_szlastfinvmoveoutid bos_dt_szid,
p_szlastfinvmoveinid bos_dt_szid,
p_szlastfinvopnameid bos_dt_szid,
p_szrebatefinvoiceid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp,
p_adcid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoice
(
szfinvoiceid,
szsalesorgid,
szcustid,
dtmperiode,
szcanceledbyinvid,
szcorrectedbyinvid,
szcanceltoinvid,
decamount,
dectax,
szccyid,
szccyrateid,
decccyrate,
szpaymenttermid,
szfinvoicestatus,
dtmbad,
dtmdoubt,
szfinvoiceusage,
bcash,
btaxreported,
szfakturpajakid,
szfinvoicetype,
szinvoicecollwpid,
szkeptbyopuserid,
szcurrentlocwpid,
sztransitlocwpid,
szchain_firstid,
szchain_nextid,
szlastfinvhandoverid,
szlastfinvmoveoutid,
szlastfinvmoveinid,
szlastfinvopnameid,
szrebatefinvoiceid,
szfirstfdoid_s,
szsalesid,
szreasonid,
szremark,
cntbonusitem,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,  --doc status 2,
bsystemcreated,  --doc status 2,
szuserid,  --doc status 3,
-- data status.,
dtmlastupdated,
balreadytransferred,
dtmfakturpajakcreated,
dtminvoicecorrected,
dtminvoicecanceled,
adcid
)
values
(
p_szfinvoiceid,
p_szsalesorgid,
p_szcustid,
p_dtmperiode,
p_szcanceledbyinvid,
p_szcorrectedbyinvid,
p_szcanceltoinvid,
p_decamount,
p_dectax,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szpaymenttermid,
p_szfinvoicestatus,
p_dtmbad,
p_dtmdoubt,
p_szfinvoiceusage,
p_bcash,
p_btaxreported,
p_szfakturpajakid,
p_szfinvoicetype,
p_szinvoicecollwpid,
p_szkeptbyopuserid,
p_szcurrentlocwpid,
p_sztransitlocwpid,
p_szchain_firstid,
p_szchain_nextid,
p_szlastfinvhandoverid,
p_szlastfinvmoveoutid,
p_szlastfinvmoveinid,
p_szlastfinvopnameid,
p_szrebatefinvoiceid,
p_szfirstfdoid_s,
p_szsalesid,
p_szreasonid,
p_szremark,
p_cntbonusitem,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmfakturpajakcreated,
p_dtminvoicecorrected,
p_dtminvoicecanceled,
p_adcid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoiceitem
(
szfinvoiceid,
shitemnumber,
szdoid,
szorderitemtypeid,
szproductid,
szproductsn,
szpriceid,
szpriceorderid,
decdiscprocent,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szinvitemtype,
szdescription,
szfinvoiceitemusage,
deccogs,
szprincipaldiscrefid,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szdoid,
p_szorderitemtypeid,
p_szproductid,
p_szproductsn,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szinvitemtype,
p_szdescription,
p_szfinvoiceitemusage,
p_deccogs,
p_szprincipaldiscrefid,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoiceitem
(
szfinvoiceid,
shitemnumber,
szdoid,
szorderitemtypeid,
szproductid,
szproductsn,
szpriceid,
szpriceorderid,
decdiscprocent,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szinvitemtype,
szdescription,
szfinvoiceitemusage,
deccogs,
szprincipaldiscrefid,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szdoid,
p_szorderitemtypeid,
p_szproductid,
p_szproductsn,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szinvitemtype,
p_szdescription,
p_szfinvoiceitemusage,
p_deccogs,
p_szprincipaldiscrefid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitem_014(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
insert into bos_sd_finvoiceitem
(
szfinvoiceid,
shitemnumber,
szdoid,
szorderitemtypeid,
szproductid,
szproductsn,
szpriceid,
szpriceorderid,
decdiscprocent,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szinvitemtype,
szdescription,
szfinvoiceitemusage,
deccogs,
szprincipaldiscrefid,
szparentid,
szdistproductid,
decdistqty,
decdistprice
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szdoid,
p_szorderitemtypeid,
p_szproductid,
p_szproductsn,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szinvitemtype,
p_szdescription,
p_szfinvoiceitemusage,
p_deccogs,
p_szprincipaldiscrefid,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitem_015(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_finvoiceitem
(
szfinvoiceid,
shitemnumber,
szdoid,
szorderitemtypeid,
szproductid,
szproductsn,
szpriceid,
szpriceorderid,
decdiscprocent,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szinvitemtype,
szdescription,
szfinvoiceitemusage,
deccogs,
szprincipaldiscrefid,
szparentid,
szdistproductid,
decdistqty,
decdistprice,
szbudgetid,
decprincipalcostamount,
decprincipalcostqty,
bbudgettransferred
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szdoid,
p_szorderitemtypeid,
p_szproductid,
p_szproductsn,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szinvitemtype,
p_szdescription,
p_szfinvoiceitemusage,
p_deccogs,
p_szprincipaldiscrefid,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice,
p_szbudgetid,
p_decprincipalcostamount,
p_decprincipalcostqty,
p_bbudgettransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitembonussource(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvitembonussource
(
szfinvoiceid,
shitemnumber,
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szfdoid,
p_szproductid,
p_szproductsn,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceitembonussource_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvitembonussource
(
szfinvoiceid,
shitemnumber,
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szfdoid,
p_szproductid,
p_szproductsn,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceproductbonusitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szproductbonustype bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_sd_finvoiceproductbonusitem
(
szfinvoiceid,
shitemnumber,
szproductid,
szorderitemtypeid,
decqty,
szuomid,
szproductbonustype
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_decqty,
p_szuomid,
p_szproductbonustype
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceproductbonusitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szproductbonustype bos_dt_szsmallid)
returns void as
$body$
begin
insert into bos_sd_finvoiceproductbonusitem
(
szfinvoiceid,
shitemnumber,
szproductid,
szorderitemtypeid,
decqty,
szuomid,
szproductbonustype
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_decqty,
p_szuomid,
p_szproductbonustype
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceproductbonusitembonussource(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvproductbonusitembonussource
(
szfinvoiceid,
shitemnumber,
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szfdoid,
p_szproductid,
p_szproductsn,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_createfinvoiceproductbonusitembonussource_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvproductbonusitembonussource
(
szfinvoiceid,
shitemnumber,
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfinvoiceid,
p_shitemnumber,
p_szfdoid,
p_szproductid,
p_szproductsn,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoice(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoice
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoice_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoice
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitem(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoiceitem
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitem_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoiceitem
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitem_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_finvoiceitem
where
szfinvoiceid = p_szfinvoiceid
and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitem_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_finvoiceitem
where
szfinvoiceid = p_szfinvoiceid
and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitembonussource(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvitembonussource
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitembonussource_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvitembonussource
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitembonussource_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvitembonussource
where
szfinvoiceid = p_szfinvoiceid
and shitemnumber = p_shitemnumber and szfdoid = p_szfdoid
and szproductid = p_szproductid
and szproductsn = p_szproductsn and szorderitemtypeid = p_szorderitemtypeid
and szpaymenttype = p_szpaymenttype
and szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceitembonussource_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvitembonussource
where
szfinvoiceid = p_szfinvoiceid and 
shitemnumber = p_shitemnumber and 
szfdoid = p_szfdoid and 
szproductid = p_szproductid and 
szproductsn = p_szproductsn and 
szorderitemtypeid = p_szorderitemtypeid and 
szpaymenttype = p_szpaymenttype and 
szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitem(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoiceproductbonusitem
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitem_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvoiceproductbonusitem
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitem_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_finvoiceproductbonusitem
where
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitem_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_finvoiceproductbonusitem
where
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitembonussource(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvproductbonusitembonussource
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitembonussource_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_finvproductbonusitembonussource
where
szfinvoiceid = p_szfinvoiceid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitembonussource_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvproductbonusitembonussource
where
szfinvoiceid = p_szfinvoiceid and 
shitemnumber = p_shitemnumber and 
szfdoid = p_szfdoid and 
szproductid = p_szproductid and 
szproductsn = p_szproductsn and 
szorderitemtypeid = p_szorderitemtypeid and 
szpaymenttype = p_szpaymenttype and 
szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_deletefinvoiceproductbonusitembonussource_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvproductbonusitembonussource
where
szfinvoiceid = p_szfinvoiceid and 
shitemnumber = p_shitemnumber and 
szfdoid = p_szfdoid and 
szproductid = p_szproductid and 
szproductsn = p_szproductsn and 
szorderitemtypeid = p_szorderitemtypeid and 
szpaymenttype = p_szpaymenttype and 
szparentid = p_szparentid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoice(
p_szfinvoiceid bos_dt_szid,
p_sztrnid bos_dt_szmediumid)
returns void as
$body$
begin

select  
bos_sd_finvoice.btaxreported,  
bos_sd_finvoice.szfakturpajakid,  
bos_sd_finvoice.szsalesorgid,  

bos_sd_finvoice.szcustid,  
invcust.szname as szcustnm_j,  

coll_to.szcollworkplaceid as szcustcollwpid_j,  
colltowp.szname as szcustcollwpnm_j,  

bos_sd_route.szopuserid as szcustcollid_j,  

bos_sd_finvoice.dtmperiode,  
bos_sd_finvoice.szcanceledbyinvid,  
cancelinv.dtmcreated as dtmcanceled_j,  
bos_sd_finvoice.szcorrectedbyinvid,  
correctinv.dtmcreated as dtmcorrected_j,  
bos_sd_finvoice.szcanceltoinvid,  
bos_sd_finvoice.decamount,  
bos_sd_finvoice.dectax,  

bos_sd_finvoice.szccyid,  
bos_cu_currency.szamountformat as szccyamountformat_j,  

bos_sd_finvoice.szccyrateid,  
bos_sd_finvoice.decccyrate,   
bos_sd_finvoice.szpaymenttermid,  
bos_sd_finvoice.szfinvoicestatus,  
bos_sd_finvoice.dtmbad,  
bos_sd_finvoice.dtmdoubt,  
bos_sd_finvoice.szfinvoiceusage,  
bos_sd_finvoice.bcash,  
bos_sd_finvoice.szfinvoicetype,  

bos_sd_finvoice.szinvoicecollwpid,  

bos_sd_finvoice.szkeptbyopuserid,  
keptbyemp.szname as szkeptbyopusernm_j,  

bos_sd_finvoice.szcurrentlocwpid,  
currlocwp.szname as szcurrentlocwpnm_j,  

bos_sd_finvoice.sztransitlocwpid,  
transitlocwp.szname as sztransitlocwpnm_j,  

bos_ar_artrans.dtmdue as dtmdue_j,  
bos_ar_artrans.dtmdue_printed as dtmdue_printed_j,  
bos_ar_artrans.bclosed as bpaid_j,  
bos_ar_artrans.dtmclosed as dtmclosed_j,  
bos_ar_artrans.decremain as decremain_j,  

bos_ar_artrans.szarclassid as szarclassid_j,  

bos_sd_cjrtracking.szcjrtrackingid as szcjrtrackingid_j,  
bos_sd_fcjr.szbaserouteid as szcjrtrackingrouteid_j,  

bos_sd_finvoice.szchain_firstid,  
bos_sd_finvoice.szchain_nextid,  
prevfinv.szfinvoiceid as szchain_previd_j,  

bos_sd_finvoice.szlastfinvhandoverid,  
bos_sd_finvoice.szlastfinvmoveoutid,  
bos_sd_finvoice.szlastfinvmoveinid,  

bos_sd_finvoice.szlastfinvopnameid,  
bos_sd_finvopname.dtmopname as dtmlastfinvopnamedate_j,  

bos_sd_finvoice.szrebatefinvoiceid,  

bos_sd_finvoice.szfirstfdoid_s,  
bos_sd_finvoice.szsalesid,  
bos_sd_finvoice.szreasonid,  
bos_sd_finvoice.szremark,  

bos_sd_finvoice.cntbonusitem,  

bos_sd_finvoice.bresultfrtransfer,  
bos_sd_finvoice.bvoid,  
bos_gen_approved.bapproved,  
bos_sd_finvoice.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_sd_finvoice.btprintedcount,  
bos_sd_finvoice.btransferred,  
bos_sd_finvoice.szcompanyid,  
bos_gl_company.szname as szcompanynm,  
bos_sd_finvoice.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  
bos_sd_finvoice.sztaxentityid,  
bos_sd_finvoice.bneedapproval,  
bos_gen_approved.szapprovalid,  
bos_sd_finvoice.gdapprovedid,  
bos_gl_fjournaltrans.szfjournalid,  
bos_sd_finvoice.dtmcreated,  
bos_sd_finvoice.bsystemcreated,  
bos_sd_finvoice.szuserid,  
bos_sm_user.szname as szusernm_j,  

-- data status.  
bos_sd_finvoice.dtmlastupdated,  
bos_sd_finvoice.balreadytransferred,  
bos_sd_finvoice.dtmfakturpajakcreated,
bos_sd_finvoice.dtminvoicecanceled,
bos_sd_finvoice.dtminvoicecorrected
from  
bos_sd_finvoice  
left join bos_ar_artrans on   
bos_sd_finvoice.szfinvoiceid = bos_ar_artrans.szdocid and   
bos_sd_finvoice.szcustid = bos_ar_artrans.szcustid and  
bos_ar_artrans.sztrnid = p_sztrnid  
left join bos_gen_approved on bos_sd_finvoice.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_sd_finvoice.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_sd_cjrtracking on bos_sd_cjrtracking.szdocid = bos_sd_finvoice.szfinvoiceid  
left join bos_sd_fcjr on bos_sd_fcjr.szfcjrid = bos_sd_cjrtracking.szfcjrid  
left join bos_sd_finvoice as cancelinv on cancelinv.szfinvoiceid = bos_sd_finvoice.szcanceledbyinvid  
left join bos_sd_finvoice as correctinv on correctinv.szfinvoiceid = bos_sd_finvoice.szcorrectedbyinvid  
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvoice.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvoice.szworkplaceid  
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvoice.szuserid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid  
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid  
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid  

left join bos_ar_customer as coll_to on coll_to.szcustid = invcust.szcollecttocustid  
left join bos_gl_workplace as colltowp on colltowp.szworkplaceid = coll_to.szcollworkplaceid  

left join bos_sd_custcollroutine on bos_sd_custcollroutine.szcustid = coll_to.szcustid  
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custcollroutine.szdefaultrouteid  

left join bos_gl_workplace as currlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.szcurrentlocwpid  
left join bos_gl_workplace as transitlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.sztransitlocwpid  

left join bos_sd_finvoice as prevfinv on prevfinv.szchain_nextid = bos_sd_finvoice.szfinvoiceid  

left join bos_sd_finvopname on bos_sd_finvopname.szfinvopnameid = bos_sd_finvoice.szlastfinvopnameid  
left join bos_pi_employee as keptbyemp on keptbyemp.szemployeeid = bos_sd_finvoice.szkeptbyopuserid  

where  
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoice_013(
p_szfinvoiceid bos_dt_szid,
p_sztrnid bos_dt_szmediumid)
returns void as
$body$
begin

select    
bos_sd_finvoice.btaxreported,    
bos_sd_finvoice.szfakturpajakid,    
bos_sd_finvoice.szsalesorgid,    

bos_sd_finvoice.szcustid,    
invcust.szname as szcustnm_j,    

coll_to.szcollworkplaceid as szcustcollwpid_j,    
colltowp.szname as szcustcollwpnm_j,    

bos_sd_route.szopuserid as szcustcollid_j,    

bos_sd_finvoice.dtmperiode,    
bos_sd_finvoice.szcanceledbyinvid,    
cancelinv.dtmcreated as dtmcanceled_j,    
bos_sd_finvoice.szcorrectedbyinvid,    
correctinv.dtmcreated as dtmcorrected_j,    
bos_sd_finvoice.szcanceltoinvid,    
bos_sd_finvoice.decamount,    
bos_sd_finvoice.dectax,    

bos_sd_finvoice.szccyid,    
bos_cu_currency.szamountformat as szccyamountformat_j,    

bos_sd_finvoice.szccyrateid,    
bos_sd_finvoice.decccyrate,     
bos_sd_finvoice.szpaymenttermid,    
bos_sd_finvoice.szfinvoicestatus,    
bos_sd_finvoice.dtmbad,    
bos_sd_finvoice.dtmdoubt,    
bos_sd_finvoice.szfinvoiceusage,    
bos_sd_finvoice.bcash,    
bos_sd_finvoice.szfinvoicetype,    

bos_sd_finvoice.szinvoicecollwpid,    

bos_sd_finvoice.szkeptbyopuserid,    
keptbyemp.szname as szkeptbyopusernm_j,    

bos_sd_finvoice.szcurrentlocwpid,    
currlocwp.szname as szcurrentlocwpnm_j,    

bos_sd_finvoice.sztransitlocwpid,    
transitlocwp.szname as sztransitlocwpnm_j,    

bos_ar_artrans.dtmdue as dtmdue_j,    
bos_ar_artrans.dtmdue_printed as dtmdue_printed_j,    
bos_ar_artrans.bclosed as bpaid_j,    
bos_ar_artrans.dtmclosed as dtmclosed_j,    
bos_ar_artrans.decremain as decremain_j,    

bos_ar_artrans.szarclassid as szarclassid_j,    

bos_sd_cjrtracking.szcjrtrackingid as szcjrtrackingid_j,    
bos_sd_fcjr.szbaserouteid as szcjrtrackingrouteid_j,    

bos_sd_finvoice.szchain_firstid,    
bos_sd_finvoice.szchain_nextid,    
prevfinv.szfinvoiceid as szchain_previd_j,    

bos_sd_finvoice.szlastfinvhandoverid,    
bos_sd_finvoice.szlastfinvmoveoutid,    
bos_sd_finvoice.szlastfinvmoveinid,    

bos_sd_finvoice.szlastfinvopnameid,    
bos_sd_finvopname.dtmopname as dtmlastfinvopnamedate_j,    

bos_sd_finvoice.szrebatefinvoiceid,    

bos_sd_finvoice.szfirstfdoid_s,    
bos_sd_finvoice.szsalesid,    
bos_sd_finvoice.szreasonid,    
bos_sd_finvoice.szremark,    

bos_sd_finvoice.cntbonusitem,    

bos_sd_finvoice.bresultfrtransfer,    
bos_sd_finvoice.bvoid,    
bos_gen_approved.bapproved,    
bos_sd_finvoice.bapplied,    
bos_gl_fjournaltrans.szfjournalid as bjournal,    
bos_gl_fjournaltrans.bposted,    
bos_sd_finvoice.btprintedcount,    
bos_sd_finvoice.btransferred,    
bos_sd_finvoice.szcompanyid,    
bos_gl_company.szname as szcompanynm,    
bos_sd_finvoice.szworkplaceid,    
bos_gl_workplace.szname as szworkplacenm,    
bos_sd_finvoice.sztaxentityid,    
bos_sd_finvoice.bneedapproval,    
bos_gen_approved.szapprovalid,    
bos_sd_finvoice.gdapprovedid,    
bos_gl_fjournaltrans.szfjournalid,    
bos_sd_finvoice.dtmcreated,    
bos_sd_finvoice.bsystemcreated,    
bos_sd_finvoice.szuserid,    
bos_sm_user.szname as szusernm_j,    

-- data status.    
bos_sd_finvoice.dtmlastupdated,    
bos_sd_finvoice.balreadytransferred,    
bos_sd_finvoice.dtmfakturpajakcreated,  
bos_sd_finvoice.dtminvoicecanceled,  
bos_sd_finvoice.dtminvoicecorrected,
bos_sd_finvoice.adcid  
from    
bos_sd_finvoice    
left join bos_ar_artrans on     
bos_sd_finvoice.szfinvoiceid = bos_ar_artrans.szdocid and     
bos_sd_finvoice.szcustid = bos_ar_artrans.szcustid and    
bos_ar_artrans.sztrnid = p_sztrnid    
left join bos_gen_approved on bos_sd_finvoice.gdapprovedid = bos_gen_approved.gdapprovedid    
left join bos_gl_fjournaltrans on bos_sd_finvoice.szfjournalid = bos_gl_fjournaltrans.szfjournalid    
left join bos_sd_cjrtracking on bos_sd_cjrtracking.szdocid = bos_sd_finvoice.szfinvoiceid    
left join bos_sd_fcjr on bos_sd_fcjr.szfcjrid = bos_sd_cjrtracking.szfcjrid    
left join bos_sd_finvoice as cancelinv on cancelinv.szfinvoiceid = bos_sd_finvoice.szcanceledbyinvid    
left join bos_sd_finvoice as correctinv on correctinv.szfinvoiceid = bos_sd_finvoice.szcorrectedbyinvid    
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvoice.szcompanyid    
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvoice.szworkplaceid    
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvoice.szuserid    
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid    
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid    
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid    

left join bos_ar_customer as coll_to on coll_to.szcustid = invcust.szcollecttocustid    
left join bos_gl_workplace as colltowp on colltowp.szworkplaceid = coll_to.szcollworkplaceid    

left join bos_sd_custcollroutine on bos_sd_custcollroutine.szcustid = coll_to.szcustid    
left join bos_sd_route on bos_sd_route.szrouteid = bos_sd_custcollroutine.szdefaultrouteid    

left join bos_gl_workplace as currlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.szcurrentlocwpid    
left join bos_gl_workplace as transitlocwp on currlocwp.szworkplaceid = bos_sd_finvoice.sztransitlocwpid    

left join bos_sd_finvoice as prevfinv on prevfinv.szchain_nextid = bos_sd_finvoice.szfinvoiceid    

left join bos_sd_finvopname on bos_sd_finvopname.szfinvopnameid = bos_sd_finvoice.szlastfinvopnameid    
left join bos_pi_employee as keptbyemp on keptbyemp.szemployeeid = bos_sd_finvoice.szkeptbyopuserid    

where    
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitem(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_finvoiceitem.shitemnumber,
bos_sd_finvoiceitem.szorderitemtypeid,

bos_inv_product.szname as szproductnm,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,

bos_sd_finvoiceitem.szdoid,
bos_sd_finvoiceitem.szproductid,
bos_sd_finvoiceitem.szproductsn,

bos_sd_finvoiceitem.szpriceid,
bos_sd_finvoiceitem.szpriceorderid,
bos_sd_finvoiceitem.decdiscprocent,

bos_sd_finvoiceitem.decqty,
bos_sd_finvoiceitem.decuomqty,

bos_sd_finvoiceitem.szuomid,
bos_sd_finvoiceitem.decprice,
bos_sd_finvoiceitem.decdiscount,
bos_sd_finvoiceitem.btaxable,
bos_sd_finvoiceitem.dectax,
bos_sd_finvoiceitem.decamount,
bos_sd_finvoiceitem.decdpp,
bos_sd_finvoiceitem.szpaymenttype,
bos_sd_finvoiceitem.szinvitemtype,
bos_sd_finvoiceitem.szdescription,
bos_sd_finvoiceitem.szfinvoiceitemusage,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
coalesce(bos_sd_fdo.dtmdelivery,bos_sd_finvoice.dtmperiode) as dtmdelivery,

bos_sd_finvoiceitem.deccogs,
bos_sd_finvoiceitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j,

dbo.bos_sd_finvoiceitem.szparentid,
parent.szname as szparentnm_j

from
bos_sd_finvoiceitem 
left join bos_inv_product on bos_sd_finvoiceitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_finvoiceitem.szparentid = parent.szproductid
left join bos_inv_orderitemtype on bos_sd_finvoiceitem.szorderitemtypeid = bos_inv_orderitemtype.szorderitemtypeid
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoiceitem.szdoid
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvoiceitem.szfinvoiceid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_finvoiceitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid
where
bos_sd_finvoiceitem.szfinvoiceid = p_szfinvoiceid

order by
bos_sd_finvoiceitem.shitemnumber;

/**
do not add any "order-by" clause, our updating function depends on item number to always be sorted.
**/

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitem_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select  
bos_sd_finvoiceitem.shitemnumber,  
bos_sd_finvoiceitem.szorderitemtypeid,  

bos_inv_product.szname as szproductnm,  
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_gl_taxtype.decrate as decproducttaxrate_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  

bos_sd_finvoiceitem.szdoid,  
bos_sd_finvoiceitem.szproductid,  
bos_sd_finvoiceitem.szproductsn,  

bos_sd_finvoiceitem.szpriceid,  
bos_sd_finvoiceitem.szpriceorderid,  
bos_sd_finvoiceitem.decdiscprocent,  

bos_sd_finvoiceitem.decqty,  
bos_sd_finvoiceitem.decuomqty,  

bos_sd_finvoiceitem.szuomid,  
bos_sd_finvoiceitem.decprice,  
bos_sd_finvoiceitem.decdiscount,  
bos_sd_finvoiceitem.btaxable,  
bos_sd_finvoiceitem.dectax,  
bos_sd_finvoiceitem.decamount,  
bos_sd_finvoiceitem.decdpp,  
bos_sd_finvoiceitem.szpaymenttype,  
bos_sd_finvoiceitem.szinvitemtype,  
bos_sd_finvoiceitem.szdescription,  
bos_sd_finvoiceitem.szfinvoiceitemusage,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
coalesce(bos_sd_fdo.dtmdelivery,bos_sd_finvoice.dtmperiode) as dtmdelivery,  

bos_sd_finvoiceitem.deccogs,  
bos_sd_finvoiceitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

dbo.bos_sd_finvoiceitem.szparentid,  
parent.szname as szparentnm_j  

from  
bos_sd_finvoiceitem   
left join bos_inv_product on bos_sd_finvoiceitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_finvoiceitem.szparentid = parent.szproductid  
left join bos_inv_orderitemtype on bos_sd_finvoiceitem.szorderitemtypeid = bos_inv_orderitemtype.szorderitemtypeid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoiceitem.szdoid  
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvoiceitem.szfinvoiceid  
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_finvoiceitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
where  
bos_sd_finvoiceitem.szfinvoiceid = p_szfinvoiceid  

order by  
bos_sd_finvoiceitem.shitemnumber;  

/**  
do not add any "order-by" clause, our updating function depends on item number to always be sorted.  
**/

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitem_014(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select  
bos_sd_finvoiceitem.shitemnumber,  
bos_sd_finvoiceitem.szorderitemtypeid,  

bos_inv_product.szname as szproductnm,  
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_gl_taxtype.decrate as decproducttaxrate_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  

bos_sd_finvoiceitem.szdoid,  
bos_sd_finvoiceitem.szproductid,  
bos_sd_finvoiceitem.szproductsn,  

bos_sd_finvoiceitem.szpriceid,  
bos_sd_finvoiceitem.szpriceorderid,  
bos_sd_finvoiceitem.decdiscprocent,  

bos_sd_finvoiceitem.decqty,  
bos_sd_finvoiceitem.decuomqty,  

bos_sd_finvoiceitem.szuomid,  
bos_sd_finvoiceitem.decprice,  
bos_sd_finvoiceitem.decdiscount,  
bos_sd_finvoiceitem.btaxable,  
bos_sd_finvoiceitem.dectax,  
bos_sd_finvoiceitem.decamount,  
bos_sd_finvoiceitem.decdpp,  
bos_sd_finvoiceitem.szpaymenttype,  
bos_sd_finvoiceitem.szinvitemtype,  
bos_sd_finvoiceitem.szdescription,  
bos_sd_finvoiceitem.szfinvoiceitemusage,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
coalesce(bos_sd_fdo.dtmdelivery,bos_sd_finvoice.dtmperiode) as dtmdelivery,  

bos_sd_finvoiceitem.deccogs,  
bos_sd_finvoiceitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

dbo.bos_sd_finvoiceitem.szparentid,  
parent.szname as szparentnm_j,

bos_sd_finvoiceitem.szdistproductid,  
bos_sd_finvoiceitem.decdistqty,  
bos_sd_finvoiceitem.decdistprice       

from  
bos_sd_finvoiceitem   
left join bos_inv_product on bos_sd_finvoiceitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_finvoiceitem.szparentid = parent.szproductid  
left join bos_inv_orderitemtype on bos_sd_finvoiceitem.szorderitemtypeid = bos_inv_orderitemtype.szorderitemtypeid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoiceitem.szdoid  
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvoiceitem.szfinvoiceid  
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_finvoiceitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
where  
bos_sd_finvoiceitem.szfinvoiceid = p_szfinvoiceid  

order by  
bos_sd_finvoiceitem.shitemnumber;  


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitem_015(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select  
bos_sd_finvoiceitem.shitemnumber,  
bos_sd_finvoiceitem.szorderitemtypeid,  

bos_inv_product.szname as szproductnm,  
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,  
bos_inv_product.szqtyformat as szproductqtyformat,  
bos_gl_taxtype.decrate as decproducttaxrate_j,  
bos_inv_product.szuomid as szproductuomid_j,  
bos_inv_product.szcompuomid as szproductcompuomid_j,  
bos_inv_product.szuomclassid as szproductuomclassid_j,  

bos_sd_finvoiceitem.szdoid,  
bos_sd_finvoiceitem.szproductid,  
bos_sd_finvoiceitem.szproductsn,  

bos_sd_finvoiceitem.szpriceid,  
bos_sd_finvoiceitem.szpriceorderid,  
bos_sd_finvoiceitem.decdiscprocent,  

bos_sd_finvoiceitem.decqty,  
bos_sd_finvoiceitem.decuomqty,  

bos_sd_finvoiceitem.szuomid,  
bos_sd_finvoiceitem.decprice,  
bos_sd_finvoiceitem.decdiscount,  
bos_sd_finvoiceitem.btaxable,  
bos_sd_finvoiceitem.dectax,  
bos_sd_finvoiceitem.decamount,  
bos_sd_finvoiceitem.decdpp,  
bos_sd_finvoiceitem.szpaymenttype,  
bos_sd_finvoiceitem.szinvitemtype,  
bos_sd_finvoiceitem.szdescription,  
bos_sd_finvoiceitem.szfinvoiceitemusage,  
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,  
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,  
coalesce(bos_sd_fdo.dtmdelivery,bos_sd_finvoice.dtmperiode) as dtmdelivery,  

bos_sd_finvoiceitem.deccogs,  
bos_sd_finvoiceitem.szprincipaldiscrefid,  
prdiscref.szdescription as szprincipaldiscrefdesc_j,  

dbo.bos_sd_finvoiceitem.szparentid,  
parent.szname as szparentnm_j,

bos_sd_finvoiceitem.szdistproductid,  
bos_sd_finvoiceitem.decdistqty,  
bos_sd_finvoiceitem.decdistprice,

bos_sd_finvoiceitem.szbudgetid,  
bos_sd_finvoiceitem.decprincipalcostamount,
bos_sd_finvoiceitem.decprincipalcostqty,
bos_sd_finvoiceitem.bbudgettransferred       

from  
bos_sd_finvoiceitem   
left join bos_inv_product on bos_sd_finvoiceitem.szproductid = bos_inv_product.szproductid  
left join bos_inv_product as parent on bos_sd_finvoiceitem.szparentid = parent.szproductid  
left join bos_inv_orderitemtype on bos_sd_finvoiceitem.szorderitemtypeid = bos_inv_orderitemtype.szorderitemtypeid  
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoiceitem.szdoid  
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvoiceitem.szfinvoiceid  
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid  
left join bos_sd_orgstru_principaldiscref as prdiscref on bos_sd_finvoiceitem.szprincipaldiscrefid = prdiscref.szprincipaldiscrefid  
where  
bos_sd_finvoiceitem.szfinvoiceid = p_szfinvoiceid  

order by  
bos_sd_finvoiceitem.shitemnumber;  



end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitembonussource(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid


from 
bos_sd_finvitembonussource

where 
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceitembonussource_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid


from 
bos_sd_finvitembonussource

where 
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoicelocation(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvoice.szcurrentlocwpid,
bos_sd_finvoice.sztransitlocwpid

from 
bos_sd_finvoice

where 
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoicelocation_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvoice.szcurrentlocwpid,
bos_sd_finvoice.sztransitlocwpid

from 
bos_sd_finvoice

where 
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceproductbonusitem(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvoiceproductbonusitem.shitemnumber,

bos_sd_finvoiceproductbonusitem.szproductid,
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,

bos_sd_finvoiceproductbonusitem.szorderitemtypeid,
bos_sd_finvoiceproductbonusitem.decqty,
bos_sd_finvoiceproductbonusitem.szuomid,
bos_sd_finvoiceproductbonusitem.szproductbonustype,
bos_sd_finvoiceproductbonusitem.szparentid

from 
bos_sd_finvoiceproductbonusitem left join bos_inv_product on bos_sd_finvoiceproductbonusitem.szproductid = bos_inv_product.szproductid
where 
bos_sd_finvoiceproductbonusitem.szfinvoiceid = p_szfinvoiceid 
order by 
bos_sd_finvoiceproductbonusitem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceproductbonusitem_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvoiceproductbonusitem.shitemnumber,

bos_sd_finvoiceproductbonusitem.szproductid,
bos_inv_product.szname as szproductnm_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,

bos_sd_finvoiceproductbonusitem.szorderitemtypeid,
bos_sd_finvoiceproductbonusitem.decqty,
bos_sd_finvoiceproductbonusitem.szuomid,
bos_sd_finvoiceproductbonusitem.szproductbonustype,
bos_sd_finvoiceproductbonusitem.szparentid

from 
bos_sd_finvoiceproductbonusitem left join bos_inv_product on bos_sd_finvoiceproductbonusitem.szproductid = bos_inv_product.szproductid
where 
bos_sd_finvoiceproductbonusitem.szfinvoiceid = p_szfinvoiceid 
order by 
bos_sd_finvoiceproductbonusitem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceproductbonusitembonussource(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid


from 
bos_sd_finvproductbonusitembonussource

where 
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getfinvoiceproductbonusitembonussource_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szfdoid,
szproductid,
szproductsn,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid


from 
bos_sd_finvproductbonusitembonussource

where 
szfinvoiceid = p_szfinvoiceid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistoffcalloffinvoice(
p_szfinvoiceid bos_dt_szid,
p_szcalltype bos_dt_szsmallid)
returns void as
$body$
begin
select 
fcall.szfcallid

from 
bos_crl_fcall as fcall
left join bos_sd_cjrtracking as cjrtracking

on cjrtracking.szcjrtrackingid = fcall.sztrackingid and szcalltype = p_szcalltype
where 
cjrtracking.szdocid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistoffcalloffinvoice_013(
p_szfinvoiceid bos_dt_szid,
p_szcalltype bos_dt_szsmallid)
returns void as
$body$
begin
select 
fcall.szfcallid

from 
bos_crl_fcall as fcall
left join bos_sd_cjrtracking as cjrtracking

on cjrtracking.szcjrtrackingid = fcall.sztrackingid and szcalltype = p_szcalltype
where 
cjrtracking.szdocid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistoffinvoice()
returns void as
$body$
begin
select 
szfinvoiceid,
dtmcreated,
szfinvoiceusage

from 
bos_sd_finvoice;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistoffinvoiceitemforfakturpajak(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
invitem.szproductid,
coalesce(prod.szname,'') as szproductnm,
invitem.decprice,
sum(invitem.decqty) as decqty,
invitem.szinvitemtype,
invitem.btaxable,
invitem.szpaymenttype,
invitem.decdiscount


from 
bos_sd_finvoiceitem as invitem
left join bos_inv_product as prod on prod.szproductid = invitem.szproductid


where 
invitem.szfinvoiceid=p_szfinvoiceid group by invitem.szproductid, prod.szname, invitem.decprice, invitem.szinvitemtype, invitem.btaxable, invitem.szpaymenttype, invitem.decdiscount 
order by 
invitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistoffinvoiceitemforfakturpajak_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
invitem.szproductid,
coalesce(prod.szname,'') as szproductnm,
invitem.decprice,
sum(invitem.decqty) as decqty,
invitem.szinvitemtype,
invitem.btaxable,
invitem.szpaymenttype,
invitem.decdiscount


from 
bos_sd_finvoiceitem as invitem
left join bos_inv_product as prod on prod.szproductid = invitem.szproductid

where 
invitem.szfinvoiceid=p_szfinvoiceid group by invitem.szproductid, prod.szname, invitem.decprice, invitem.szinvitemtype, invitem.btaxable, invitem.szpaymenttype, invitem.decdiscount 
order by 
invitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistofrentalproductwherecustomer(
p_szcustid bos_dt_szid,
p_dtmdate timestamp)
returns void as
$body$
begin

select
-- fields from stocksnproduct.
bos_inv_stocksnproduct.szproductid as szproductid,
bos_inv_stocksnproduct.dtmlastchecked as dtmlastchecked_j,
bos_inv_stocksnproduct.szsuppid as szsuppid_j,
bos_inv_stocksnproduct.szcheckerid as szcheckerid_j,
bos_inv_stocksnproduct.szchassisnumber as szchassisnumber_j,

bos_inv_product.szname as szproductnm_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,

bos_gl_taxtype.decrate as decproducttaxrate_j,

bos_sd_rentalproduct.szsernum,
bos_sd_rentalproduct.szcustid,

bos_sd_rentalproduct.szorderitemtype,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,

bos_sd_rentalproduct.btaxable,
bos_sd_rentalproduct.deccharge,
bos_sd_rentalproduct.szccyid,
bos_sd_rentalproduct.dtmlastinvoiced,
bos_sd_rentalproduct.dtmprevlastinvoiced,
bos_sd_rentalproduct.szstatusid,
bos_sd_rentalproduct.btrouble,
bos_sd_rentalproduct.sztroubledescr,
bos_sd_rentalproduct.szrentchargecalcid,
bos_sd_rentalproduct.szurl,
bos_sd_rentalproduct.sztrnid,
bos_sd_rentalproduct.szdocid,
bos_sd_rentalproduct.szreasonid,

-- data status.
bos_sd_rentalproduct.dtmlastupdated,
bos_sd_rentalproduct.balreadytransferred

from 
bos_sd_rentalproduct 
inner join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_rentalproduct.szcustid
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_sd_rentalproduct.szsernum
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnproduct.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_rentalproduct.szorderitemtype

where
bos_sd_rentalproduct.dtmlastinvoiced < p_dtmdate and 
bos_sd_rentalproduct.btrouble = 0 and
((bos_ar_customer.binvoicetocust = 1 and bos_ar_customer.szcustid = p_szcustid)  or  bos_ar_customer.szinvoicetocustid = p_szcustid)

order by
bos_sd_rentalproduct.szcustid, bos_inv_stocksnproduct.szproductid, bos_sd_rentalproduct.deccharge;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_getlistofuninvoicedfdo(
p_szinvtocustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
bos_ar_customer.szcustid,
bos_sd_fdo.szdoid,
	bos_sd_fdo.dtmdelivery,
	bos_sd_fdo.decamount

from 
bos_sd_fdo
inner join bos_ar_customer on 
bos_sd_fdo.szcustid = bos_ar_customer.szcustid

where 
bos_sd_fdo.szfinvoiceid = '' and 
bos_sd_fdo.bapplied = 1 and ( (bos_ar_customer.binvoicetocust = 1  and 
bos_ar_customer.szcustid = p_szinvtocustid)  or (bos_ar_customer.binvoicetocust = 0  and  
bos_ar_customer.szinvoicetocustid = p_szinvtocustid) ) and 
bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmend and 
bos_sd_fdo.dtmdelivery >= p_dtmstart and bos_sd_fdo.szccyid = p_szccyid 
order by 
bos_ar_customer.szcustid,
bos_sd_fdo.dtmdelivery,
bos_sd_fdo.szdoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_isfinvoiceexist(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvoiceid

from 
bos_sd_finvoice
where 
szfinvoiceid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_isfinvoiceexist_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvoiceid

from 
bos_sd_finvoice
where 
szfinvoiceid = p_szfinvoiceid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_lockfinvoice(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
decamount = decamount
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_lockfinvoice_013(
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
decamount = decamount
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_markfinvoiceapplied(
p_szfinvoiceid bos_dt_szid,
p_dtmcreated timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
bapplied = 1,
dtmcreated = p_dtmcreated			--yes, created date of invoice is the date when it is applied.

where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_markfinvoiceapplied_013(
p_szfinvoiceid bos_dt_szid,
p_dtmcreated timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
bapplied = 1,
dtmcreated = p_dtmcreated   --yes, created date of invoice is the date when it is applied.

where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoice(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoiceusage varchar,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szsalesorgid = p_szsalesorgid,
szcustid = p_szcustid,
dtmperiode = p_dtmperiode,
szcanceltoinvid = p_szcanceltoinvid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
szpaymenttermid = p_szpaymenttermid,
szfinvoiceusage = p_szfinvoiceusage,
szchain_firstid = p_szchain_firstid,
szchain_nextid = p_szchain_nextid,
szfirstfdoid_s = p_szfirstfdoid_s,
szsalesid = p_szsalesid,
szreasonid = p_szreasonid,
szremark = p_szremark,
cntbonusitem = p_cntbonusitem,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szuserid = p_szuserid,
dtmcreated = p_dtmcreated,
dtmlastupdated = p_dtmlastupdated,
btaxreported = p_btaxreported,
szfakturpajakid = p_szfakturpajakid,
dtmfakturpajakcreated = p_dtmfakturpajakcreated,
dtminvoicecorrected = p_dtminvoicecorrected,
dtminvoicecanceled = p_dtminvoicecanceled,
szcanceledbyinvid = p_szcanceledbyinvid,
szcorrectedbyinvid = p_szcorrectedbyinvid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoice_013(
p_szfinvoiceid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmperiode timestamp,
p_szcanceltoinvid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szpaymenttermid bos_dt_szid,
p_szfinvoiceusage varchar,
p_szchain_firstid bos_dt_szid,
p_szchain_nextid bos_dt_szid,
p_szfirstfdoid_s bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szremark bos_dt_szdescription,
p_cntbonusitem smallint,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_btaxreported bit,
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajakcreated timestamp,
p_dtminvoicecorrected timestamp,
p_dtminvoicecanceled timestamp,
p_szcanceledbyinvid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_adcid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szsalesorgid = p_szsalesorgid,
szcustid = p_szcustid,
dtmperiode = p_dtmperiode,
szcanceltoinvid = p_szcanceltoinvid,
decamount = p_decamount,
dectax = p_dectax,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
szpaymenttermid = p_szpaymenttermid,
szfinvoiceusage = p_szfinvoiceusage,
szchain_firstid = p_szchain_firstid,
szchain_nextid = p_szchain_nextid,
szfirstfdoid_s = p_szfirstfdoid_s,
szsalesid = p_szsalesid,
szreasonid = p_szreasonid,
szremark = p_szremark,
cntbonusitem = p_cntbonusitem,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
--it is better to use these fields as the information of its last updated (or applied), rather than its data creation.
szuserid = p_szuserid,
dtmcreated = p_dtmcreated,
dtmlastupdated = p_dtmlastupdated,
btaxreported = p_btaxreported,
szfakturpajakid = p_szfakturpajakid,
dtmfakturpajakcreated = p_dtmfakturpajakcreated,
dtminvoicecorrected = p_dtminvoicecorrected,
dtminvoicecanceled = p_dtminvoicecanceled,
szcanceledbyinvid = p_szcanceledbyinvid,
szcorrectedbyinvid = p_szcorrectedbyinvid,
adcid=p_adcid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicecancel(
p_szfinvoiceid bos_dt_szid,
p_szcanceledbyinvid bos_dt_szid,
p_dtminvoicecanceled timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcanceledbyinvid = p_szcanceledbyinvid,
dtminvoicecanceled = p_dtminvoicecanceled
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicecancel_013(
p_szfinvoiceid bos_dt_szid,
p_szcanceledbyinvid bos_dt_szid,
p_dtminvoicecanceled timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcanceledbyinvid = p_szcanceledbyinvid,
dtminvoicecanceled = p_dtminvoicecanceled
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicecorrect(
p_szfinvoiceid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_dtminvoicecorrected timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcorrectedbyinvid = p_szcorrectedbyinvid,
dtminvoicecorrected = p_dtminvoicecorrected
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicecorrect_013(
p_szfinvoiceid bos_dt_szid,
p_szcorrectedbyinvid bos_dt_szid,
p_dtminvoicecorrected timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcorrectedbyinvid = p_szcorrectedbyinvid,
dtminvoicecorrected = p_dtminvoicecorrected
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitem_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceitem
set 
szdoid = p_szdoid,
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,
szproductsn = p_szproductsn,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szinvitemtype = p_szinvitemtype,
szdescription = p_szdescription,
szfinvoiceitemusage = p_szfinvoiceitemusage,

deccogs = p_deccogs,
szprincipaldiscrefid = p_szprincipaldiscrefid,
szparentid = p_szparentid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitem_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceitem
set 
szdoid = p_szdoid,
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,
szproductsn = p_szproductsn,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szinvitemtype = p_szinvitemtype,
szdescription = p_szdescription,
szfinvoiceitemusage = p_szfinvoiceitemusage,

deccogs = p_deccogs,
szprincipaldiscrefid = p_szprincipaldiscrefid,
szparentid = p_szparentid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitem_byitem_014(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
update bos_sd_finvoiceitem
set 
szdoid = p_szdoid,
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,
szproductsn = p_szproductsn,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szinvitemtype = p_szinvitemtype,
szdescription = p_szdescription,
szfinvoiceitemusage = p_szfinvoiceitemusage,

deccogs = p_deccogs,
szprincipaldiscrefid = p_szprincipaldiscrefid,
szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitem_byitem_015(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szdoid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szinvitemtype bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szfinvoiceitemusage varchar,
p_deccogs bos_dt_decamount,
p_szprincipaldiscrefid bos_dt_szid,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
update bos_sd_finvoiceitem
set 
szdoid = p_szdoid,
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,
szproductsn = p_szproductsn,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szinvitemtype = p_szinvitemtype,
szdescription = p_szdescription,
szfinvoiceitemusage = p_szfinvoiceitemusage,

deccogs = p_deccogs,
szprincipaldiscrefid = p_szprincipaldiscrefid,
szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice,

szbudgetid = p_szbudgetid,
decprincipalcostamount = p_decprincipalcostamount,
decprincipalcostqty = p_decprincipalcostqty,
bbudgettransferred = p_bbudgettransferred

where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitembonussource_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceitembonussource_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicelocation(
p_szfinvoiceid bos_dt_szid,
p_szcurrentlocwpid varchar,
p_sztransitlocwpid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcurrentlocwpid = p_szcurrentlocwpid,
sztransitlocwpid = p_sztransitlocwpid


where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicelocation_013(
p_szfinvoiceid bos_dt_szid,
p_szcurrentlocwpid varchar,
p_sztransitlocwpid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szcurrentlocwpid = p_szcurrentlocwpid,
sztransitlocwpid = p_sztransitlocwpid


where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceproductbonusitem_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szproductbonustype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceproductbonusitem
set 
szproductid = p_szproductid,
szorderitemtypeid = p_szorderitemtypeid,
decqty = p_decqty,
szuomid = p_szuomid,
szproductbonustype = p_szproductbonustype,
szparentid = p_szparentid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceproductbonusitem_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szproductbonustype bos_dt_szsmallid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceproductbonusitem
set 
szproductid = p_szproductid,
szorderitemtypeid = p_szorderitemtypeid,
decqty = p_decqty,
szuomid = p_szuomid,
szproductbonustype = p_szproductbonustype,
szparentid = p_szparentid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceproductbonusitembonussource_byitem(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvproductbonusitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoiceproductbonusitembonussource_byitem_013(
p_szfinvoiceid bos_dt_szid,
p_shitemnumber smallint,
p_szfdoid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn bos_dt_szsn,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvproductbonusitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusbad(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmbad timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus,
dtmbad = p_dtmbad
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusbad_013(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmbad timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus,
dtmbad = p_dtmbad
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusdoubt(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmdoubt timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus,
dtmdoubt = p_dtmdoubt
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusdoubt_013(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar,
p_dtmdoubt timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus,
dtmdoubt = p_dtmdoubt
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusnormal(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatefinvoicestatusnormal_013(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szfinvoicestatus = p_szfinvoicestatus
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatenextinvoicechain(
p_szfinvoiceid bos_dt_szid,
p_szchain_nextid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szchain_nextid = p_szchain_nextid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatenextinvoicechain_013(
p_szfinvoiceid bos_dt_szid,
p_szchain_nextid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoice
set 
szchain_nextid = p_szchain_nextid
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatetaxreported(
p_szfinvoiceid bos_dt_szid,
p_szfakturpajakid bos_dt_szid,
p_btaxreported bit,
p_dtmfakturpajakcreated timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
btaxreported = p_btaxreported,
szfakturpajakid = dbo.kgenfinvoicetobefaktured(p_btaxreported, p_szfakturpajakid),
dtmfakturpajakcreated = p_dtmfakturpajakcreated
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoice_updatetaxreported_013(
p_szfinvoiceid bos_dt_szid,
p_szfakturpajakid bos_dt_szid,
p_btaxreported bit,
p_dtmfakturpajakcreated timestamp)
returns void as
$body$
begin
update bos_sd_finvoice
set 
btaxreported = p_btaxreported,
szfakturpajakid = dbo.kgenfinvoicetobefaktured(p_btaxreported, p_szfakturpajakid),
dtmfakturpajakcreated = p_dtmfakturpajakcreated
where 
szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_createfinvoiceconvert(
p_szfinvoiceconvid bos_dt_szid,
p_dtmdoc timestamp,
p_szfinvoicestatus varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_finvoiceconvert
(
szfinvoiceconvid,
dtmdoc,
szfinvoicestatus,
bresultfrtransfer,
bvoid,
bapproved,
bapplied,
bjournal,
bposted,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szapprovalid,
szfjournalid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfinvoiceconvid,
p_dtmdoc,
p_szfinvoicestatus,
p_bresultfrtransfer,
p_bvoid,
p_bapproved,
p_bapplied,
p_bjournal,
p_bposted,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szapprovalid,
p_szfjournalid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_createfinvoiceconvertitem(
p_szfinvoiceconvid bos_dt_szid,
p_shitemnumber smallint,
p_szfinvoiceid bos_dt_szid,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoiceconvertitem
(
szfinvoiceconvid,
shitemnumber,
szfinvoiceid,
szreasonid
)
values
(
p_szfinvoiceconvid,
p_shitemnumber,
p_szfinvoiceid,
p_szreasonid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_createfinvoiceconvertitem_013(
p_szfinvoiceconvid bos_dt_szid,
p_shitemnumber smallint,
p_szfinvoiceid bos_dt_szid,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_finvoiceconvertitem
(
szfinvoiceconvid,
shitemnumber,
szfinvoiceid,
szreasonid
)
values
(
p_szfinvoiceconvid,
p_shitemnumber,
p_szfinvoiceid,
p_szreasonid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_deletefinvoiceconvert(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_finvoiceconvert
where
szfinvoiceconvid = p_szfinvoiceconvid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_deletefinvoiceconvertitem(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_finvoiceconvertitem
where
szfinvoiceconvid = p_szfinvoiceconvid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_getfinvoiceconvert(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
select

bos_sd_finvoiceconvert.szfinvoiceconvid,
bos_sd_finvoiceconvert.dtmdoc,
bos_sd_finvoiceconvert.szfinvoicestatus,
bos_sd_finvoiceconvert.bresultfrtransfer,
bos_sd_finvoiceconvert.bvoid,
bos_gen_approved.bapproved,
bos_sd_finvoiceconvert.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_finvoiceconvert.btprintedcount,
bos_sd_finvoiceconvert.btransferred,
bos_sd_finvoiceconvert.szcompanyid,
bos_sd_finvoiceconvert.szworkplaceid,
bos_sd_finvoiceconvert.sztaxentityid,
bos_sd_finvoiceconvert.bneedapproval,
bos_gen_approved.szapprovalid,
bos_sd_finvoiceconvert.gdapprovedid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_finvoiceconvert.dtmlastupdated,
bos_sd_finvoiceconvert.balreadytransferred


from
bos_sd_finvoiceconvert
left join bos_ar_artrans on 
bos_sd_finvoiceconvert.szfinvoiceconvid = bos_ar_artrans.szdocid
left join bos_gen_approved on 
bos_sd_finvoiceconvert.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on 
bos_sd_finvoiceconvert.szfjournalid = bos_gl_fjournaltrans.szfjournalid

where
bos_sd_finvoiceconvert.szfinvoiceconvid = p_szfinvoiceconvid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_getfinvoiceconvertitem(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_finvoiceconvertitem.shitemnumber,
bos_sd_finvoiceconvertitem.szfinvoiceid,
bos_sd_finvoice.dtmperiode,
bos_sd_finvoice.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_sd_finvoice.szccyid,
bos_cu_currency.szamountformat,
bos_sd_finvoiceconvertitem.szreasonid,
coalesce(bos_gen_reason.szdescription, '') as szreasondescription
from
bos_sd_finvoiceconvertitem left join bos_sd_finvoice on 	bos_sd_finvoice.szfinvoiceid = bos_sd_finvoiceconvertitem.szfinvoiceid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid
left join bos_ar_artrans on bos_ar_artrans.sztrnid = 'finv'
left join bos_gen_reason on bos_gen_reason.szreasonid = bos_sd_finvoiceconvertitem.szreasonid
where
bos_sd_finvoiceconvertitem.szfinvoiceconvid = p_szfinvoiceconvid and
bos_ar_artrans.szdocid = bos_sd_finvoice.szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_getfinvoiceconvertitemwherefinvoiceid(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin

select
bos_sd_finvoice.dtmperiode,
bos_sd_finvoice.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_sd_finvoice.szccyid,
bos_cu_currency.szamountformat
from
bos_sd_finvoice left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid
left join bos_ar_artrans on bos_ar_artrans.sztrnid = 'finv'
where
bos_ar_artrans.szdocid = bos_sd_finvoice.szfinvoiceid and bos_ar_artrans.szcustid = bos_sd_finvoice.szcustid and
bos_ar_artrans.bclosed = 0 and
bos_sd_finvoice.szfinvoicestatus = p_szfinvoicestatus and
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_getfinvoiceconvertitemwherefinvoiceid_013(
p_szfinvoiceid bos_dt_szid,
p_szfinvoicestatus varchar)
returns void as
$body$
begin

select  
bos_sd_finvoice.dtmperiode,  
bos_sd_finvoice.szcustid,  
bos_ar_customer.szname as szcustnm,  
bos_ar_artrans.decamount,  
bos_ar_artrans.decremain,  
bos_sd_finvoice.szccyid,  
bos_cu_currency.szamountformat  
from  
bos_sd_finvoice left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid  
left join bos_ar_artrans on bos_ar_artrans.sztrnid = 'finv'  
where  
bos_ar_artrans.szdocid = bos_sd_finvoice.szfinvoiceid and bos_ar_artrans.szcustid = bos_sd_finvoice.szcustid and  
bos_ar_artrans.bclosed = 0 and  
bos_sd_finvoice.szfinvoicestatus = p_szfinvoicestatus and  
bos_sd_finvoice.szfinvoiceid = p_szfinvoiceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_getlistfinvoicewherestatus(
p_szfinvoicestatus varchar,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select
bos_sd_finvoice.szfinvoiceid,
bos_sd_finvoice.dtmperiode,
bos_sd_finvoice.szcustid,
bos_ar_customer.szname as szcustnm,
bos_ar_artrans.decamount,
bos_ar_artrans.decremain,
bos_sd_finvoice.szccyid,
bos_cu_currency.szamountformat
from
bos_ar_artrans inner join bos_sd_finvoice on bos_ar_artrans.szdocid = bos_sd_finvoice.szfinvoiceid and bos_ar_artrans.szcustid = bos_sd_finvoice.szcustid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_finvoice.szcustid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid
where
bos_ar_artrans.sztrnid = 'finv' and
bos_ar_artrans.bclosed = 0 and
bos_sd_finvoice.szfinvoicestatus = p_szfinvoicestatus and
(bos_sd_finvoice.dtmperiode >= p_dtmstart and bos_sd_finvoice.dtmperiode < interval '1 day' + p_dtmend);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_isfinvoiceconvertexist(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvoiceconvid

from 
bos_sd_finvoiceconvert
where 
szfinvoiceconvid = p_szfinvoiceconvid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_lockfinvoiceconvert(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceconvert
set 
szfinvoicestatus = szfinvoicestatus
where 
szfinvoiceconvid = p_szfinvoiceconvid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_markfinvoiceconvertapplied(
p_szfinvoiceconvid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceconvert
set 
bapplied = 1
where 
szfinvoiceconvid = p_szfinvoiceconvid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_markvoid(
p_szfinvoiceconvertid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_sd_finvoiceconvert
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfinvoiceconvid = p_szfinvoiceconvertid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvoiceconvert_updatefinvoiceconvert(
p_szfinvoiceconvid bos_dt_szid,
p_dtmdoc timestamp,
p_szfinvoicestatus varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvoiceconvert
set 
szfinvoiceconvid = p_szfinvoiceconvid,
dtmdoc = p_dtmdoc,
szfinvoicestatus = p_szfinvoicestatus,
bresultfrtransfer = p_bresultfrtransfer,
bvoid = p_bvoid,
bapproved = p_bapproved,
bapplied = p_bapplied,
bjournal = p_bjournal,
bposted = p_bposted,
btprintedcount = p_btprintedcount,
btransferred = p_btransferred,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szapprovalid = p_szapprovalid,
szfjournalid = p_szfjournalid
where 
szfinvoiceconvid = p_szfinvoiceconvid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_createfinvopname(
p_szfinvopnameid bos_dt_szid,
p_dtmopname timestamp,
p_szdescription bos_dt_szdescription,
p_szlocworkplaceid bos_dt_szid,
p_szkeptbyopuserid bos_dt_szid,
p_bonlyclosedinv smallint,
p_szopnamestatus bos_dt_szsmallname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_finvopname
(
szfinvopnameid,
dtmopname,
szdescription,
szlocworkplaceid,
szkeptbyopuserid,
bonlyclosedinv,
szopnamestatus,
--doc status.,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
--data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfinvopnameid,
p_dtmopname,
p_szdescription,
p_szlocworkplaceid,
p_szkeptbyopuserid,
p_bonlyclosedinv,
p_szopnamestatus,
--doc status.,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
--data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_createfinvopnameitem(
p_szfinvopnameid bos_dt_szid,
p_szfinvoiceid bos_dt_szid,
p_szstatus bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sd_finvopnameitem
(
szfinvopnameid,
szfinvoiceid,
szstatus,
szdescription
)
values
(
p_szfinvopnameid,
p_szfinvoiceid,
p_szstatus,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_createfinvopnameitem_013(
p_szfinvopnameid bos_dt_szid,
p_szfinvoiceid bos_dt_szid,
p_szstatus bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sd_finvopnameitem
(
szfinvopnameid,
szfinvoiceid,
szstatus,
szdescription
)
values
(
p_szfinvopnameid,
p_szfinvoiceid,
p_szstatus,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_deletefinvopname(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_finvopname
where
szfinvopnameid = p_szfinvopnameid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_deletefinvopnameitem(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_finvopnameitem
where
szfinvopnameid = p_szfinvopnameid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_getfinvopname(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvopname.szfinvopnameid,
bos_sd_finvopname.dtmopname,
bos_sd_finvopname.szdescription,
bos_sd_finvopname.szlocworkplaceid,
collwp.szname  as szlocworkplacenm_j,
bos_sd_finvopname.szkeptbyopuserid,
bos_pi_employee.szname  as szkeptbyusernm_j,
bos_sd_finvopname.bonlyclosedinv,
bos_sd_finvopname.szopnamestatus,		

bos_sd_finvopname.bresultfrtransfer,
bos_sd_finvopname.bvoid,
bos_gen_approved.bapproved,
bos_sd_finvopname.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_finvopname.btprintedcount,
bos_sd_finvopname.btransferred,
bos_sd_finvopname.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_finvopname.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,
bos_sd_finvopname.sztaxentityid,
bos_sd_finvopname.bneedapproval,
bos_sd_finvopname.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_finvopname.dtmcreated,
bos_sd_finvopname.bsystemcreated,
bos_sd_finvopname.szuserid,
bos_sm_user.szname as szusernm_j,

bos_sd_finvopname.dtmlastupdated,
bos_sd_finvopname.balreadytransferred
from
bos_sd_finvopname
left join bos_gen_approved on bos_sd_finvopname.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_finvopname.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_finvopname.szcompanyid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_finvopname.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_finvopname.szuserid
left join bos_gl_workplace as collwp on collwp.szworkplaceid = bos_sd_finvopname.szlocworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_finvopname.szkeptbyopuserid
where
szfinvopnameid = p_szfinvopnameid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_getfinvopnameitem(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_finvopnameitem.szfinvoiceid,
bos_sd_finvopnameitem.szstatus,
bos_sd_finvopnameitem.szdescription,
bos_ar_artrans.decamount as decinvamount_j,
bos_ar_artrans.decremain as decremain_j,
bos_sd_finvoice.szkeptbyopuserid,
bos_sd_finvoice.szlastfinvopnameid as szlastopnameid_j,
bos_sd_finvopname.dtmopname  as dtmlastopname_j,
bos_pi_employee.szname as szlastkeptbynm_j,
bos_cu_currency.szamountformat as szamountformat_j,
bos_sd_finvoice.szccyid as szamountccyid_j,
bos_sd_finvoice.btprintedcount as btprintedcount_j,
bos_sd_finvoice.szcurrentlocwpid as szcurrentlocwpid_j,
curr_loc.szname as szcurrentlocwpnm_j,
bos_sd_finvoice.sztransitlocwpid as sztransitlocwpid_j,
trn_loc.szname as sztransitlocwpnm_j,
bos_sd_finvopname.szkeptbyopuserid as szopnamedopuserid_j,
bpe.szname as szopnamedopusernm_j
from 
bos_sd_finvopnameitem
left join bos_ar_artrans on bos_ar_artrans.szdocid = bos_sd_finvopnameitem.szfinvoiceid
and bos_ar_artrans.sztrnid = 'finv' 
and bos_ar_artrans.shrevno = 0
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = bos_sd_finvopnameitem.szfinvoiceid
left join bos_sd_finvopname on bos_sd_finvopname.szfinvopnameid = bos_sd_finvoice.szlastfinvopnameid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_finvoice.szkeptbyopuserid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_finvoice.szccyid
left join bos_gl_workplace as curr_loc  on curr_loc.szworkplaceid = bos_sd_finvoice.szcurrentlocwpid
left join bos_gl_workplace as trn_loc  on trn_loc.szworkplaceid = bos_sd_finvoice.sztransitlocwpid
left join bos_pi_employee as bpe on bpe.szemployeeid = bos_sd_finvopname.szkeptbyopuserid

where
bos_sd_finvopnameitem.szfinvopnameid = p_szfinvopnameid

order by
bos_sd_finvopnameitem.szstatus;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_isexistfinvopname(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
select 
szfinvopnameid

from 
bos_sd_finvopname
where 
szfinvopnameid = p_szfinvopnameid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_lockfinvopname(
p_szfinvopnameid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_finvopname
set 
 dtmopname = dtmopname
where 
szfinvopnameid = p_szfinvopnameid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_finvopname_updatefinvopname(
p_szfinvopnameid bos_dt_szid,
p_dtmopname timestamp,
p_szdescription bos_dt_szdescription,
p_szlocworkplaceid bos_dt_szid,
p_szkeptbyopuserid bos_dt_szid,
p_bonlyclosedinv smallint,
p_szopnamestatus bos_dt_szsmallname,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
update bos_sd_finvopname
set 
dtmopname = p_dtmopname,
szdescription = p_szdescription,
szlocworkplaceid = p_szlocworkplaceid,
szkeptbyopuserid = p_szkeptbyopuserid,
bonlyclosedinv = p_bonlyclosedinv,
szopnamestatus = p_szopnamestatus,

bresultfrtransfer = p_bresultfrtransfer,
bvoid = p_bvoid,
bapplied = p_bapplied,
btprintedcount = p_btprintedcount,
btransferred = p_btransferred,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,
szfjournalid = p_szfjournalid,
dtmcreated = p_dtmcreated,
bsystemcreated = p_bsystemcreated,
szuserid = p_szuserid,
-- data status.
dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred
where 
szfinvopnameid = p_szfinvopnameid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_createfoc(
p_szfocid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_foc
(
szfocid,
szdescription,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfocid,
p_szdescription,
-- data status.,
p_dtmlastupdated ,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_createfocitem(
p_szfocid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szfoctype bos_dt_szsmallid,
p_bunlimitedqty bit,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid)
returns void as
$body$
begin
insert into bos_sd_focitem
(
szfocid,
szproductid,
szfoctype,
bunlimitedqty,
decqty,
szuomid
)
values
(
p_szfocid,
p_szproductid,
p_szfoctype,
p_bunlimitedqty,
p_decqty,
p_szuomid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_deletefoc(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_foc
where
szfocid = p_szfocid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_deletefocitem(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_focitem
where
szfocid = p_szfocid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_getfoc(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
select 
szfocid,
szdescription,
dtmlastupdated,
balreadytransferred


from 
bos_sd_foc
where 
szfocid = p_szfocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_getfocitem(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_focitem.szfocid,
bos_sd_focitem.szproductid,
bos_inv_product.szname as szproductname,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_sd_focitem.szfoctype,
bos_sd_focitem.bunlimitedqty,
bos_sd_focitem.decqty,
bos_sd_focitem.szuomid

from 
bos_sd_focitem left join bos_inv_product on bos_sd_focitem.szproductid = bos_inv_product.szproductid
where 
szfocid = p_szfocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_getlistoffoc()
returns void as
$body$
begin
select 
szfocid,
szdescription

from 
bos_sd_foc;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_isfocexist(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
select 
szfocid

from 
bos_sd_foc
where 
szfocid = p_szfocid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_lockfoc(
p_szfocid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_foc
set 
szdescription = szdescription
where 
szfocid = p_szfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_foc_updatefoc(
p_szfocid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_foc
set 
szdescription = p_szdescription
where 
szfocid = p_szfocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_createfpr(
p_szfprid bos_dt_szid,
p_dtmrequest timestamp,
p_szrequesttowpid bos_dt_szid,
p_szrequesttowhid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szhelperid_1 bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fpr
(
szfprid,
dtmrequest,
szrequesttowpid,
szrequesttowhid,
szdriverid,
szvehicleid,
szstatus,
szdescription,
szhelperid_1,
szhelperid_2,
szhelperid_3,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfprid,
p_dtmrequest,
p_szrequesttowpid,
p_szrequesttowhid,
p_szdriverid,
p_szvehicleid,
p_szstatus,
p_szdescription,
p_szhelperid_1,
p_szhelperid_2,
p_szhelperid_3,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_createfpr_014(
p_szfprid bos_dt_szid,
p_dtmrequest timestamp,
p_szrequesttowpid bos_dt_szid,
p_szrequesttowhid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szstatus bos_dt_szsmallid,
p_szdescription bos_dt_szdescription,
p_szhelperid_1 bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fpr
(
szfprid,
dtmrequest,
szrequesttowpid,
szrequesttowhid,
szdriverid,
szvehicleid,
szstatus,
szdescription,
szhelperid_1,
szhelperid_2,
szhelperid_3,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfprid,
p_dtmrequest,
p_szrequesttowpid,
p_szrequesttowhid,
p_szdriverid,
p_szvehicleid,
p_szstatus,
p_szdescription,
p_szhelperid_1,
p_szhelperid_2,
p_szhelperid_3,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_createfpritem(
p_szfprid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_decreleased bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fpritem
(
szfprid,
shitemnumber,
szproductid,
decqty,
decuomqty,
decreleased,
szuomid,
szparentid
)
values
(
p_szfprid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_decreleased,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_createfpritem_014(
p_szfprid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_decreleased bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fpritem
(
szfprid,
shitemnumber,
szproductid,
decqty,
decuomqty,
decreleased,
szuomid,
szparentid
)
values
(
p_szfprid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_decuomqty,
p_decreleased,
p_szuomid,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_deletefpr(
p_szfprid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fpr
where
szfprid = p_szfprid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_deletefpritem(
p_szfprid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fpritem
where
szfprid = p_szfprid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_getfpr(
p_szfprid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fpr.dtmrequest,  

bos_sd_fpr.szrequesttowpid,  
requestwp.szname as szrequesttowpnm_j,  

bos_sd_fpr.szrequesttowhid,  
requestwh.szname as szrequesttowhnm_j,  

bos_sd_fpr.szdriverid,  
e1.szname as szdrivernm_j,  

bos_sd_fpr.szvehicleid,  
bos_inv_vehicle.szpoliceno as szvehiclepoliceno_j,  

bos_sd_fpr.szstatus,  
bos_sd_fpr.szdescription,  

bos_sd_fpr.szhelperid_1,  
e2.szname as szhelpernm_1,  

bos_sd_fpr.szhelperid_2,  
e3.szname as szhelpernm_2,  

bos_sd_fpr.szhelperid_3,  
e4.szname as szhelpernm_3,  

bos_sd_fpr.bresultfrtransfer,  
bos_sd_fpr.bvoid,  
bos_gen_approved.bapproved,  
bos_sd_fpr.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_sd_fpr.btprintedcount,  
bos_sd_fpr.btransferred,  

bos_sd_fpr.szcompanyid,  
bos_gl_company.szname as szcompanynm,  

bos_sd_fpr.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  

bos_sd_fpr.sztaxentityid,  
bos_sd_fpr.bneedapproval,  
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  

bos_sd_fpr.dtmcreated,  
bos_sd_fpr.bsystemcreated,  

bos_sd_fpr.szuserid,  
bos_sm_user.szname as szusernm_j,  

bos_sd_fpr.dtmlastupdated,  
bos_sd_fpr.balreadytransferred  

from  
bos_sd_fpr left join bos_gen_approved on bos_sd_fpr.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_sd_fpr.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_pi_employee e1 on bos_sd_fpr.szdriverid =e1.szemployeeid  
left join bos_pi_employee e2 on bos_sd_fpr.szhelperid_1 =e2.szemployeeid  
left join bos_pi_employee e3 on bos_sd_fpr.szhelperid_2 =e3.szemployeeid  
left join bos_pi_employee e4 on bos_sd_fpr.szhelperid_3 =e4.szemployeeid  
left join bos_inv_vehicle on bos_sd_fpr.szvehicleid = bos_inv_vehicle.szvehicleid  
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fpr.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fpr.szworkplaceid  
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fpr.szuserid  
left join bos_gl_workplace as requestwp on requestwp.szworkplaceid = bos_sd_fpr.szrequesttowpid  
left join bos_inv_warehouse as requestwh on requestwh.szwarehouseid= bos_sd_fpr.szrequesttowhid  

where  
bos_sd_fpr.szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_getfpr_014(
p_szfprid bos_dt_szid)
returns void as
$body$
begin

select  
bos_sd_fpr.dtmrequest,  

bos_sd_fpr.szrequesttowpid,  
requestwp.szname as szrequesttowpnm_j,  

bos_sd_fpr.szrequesttowhid,  
requestwh.szname as szrequesttowhnm_j,  

bos_sd_fpr.szdriverid,  
e1.szname as szdrivernm_j,  

bos_sd_fpr.szvehicleid,  
bos_inv_vehicle.szpoliceno as szvehiclepoliceno_j,  

bos_sd_fpr.szstatus,  
bos_sd_fpr.szdescription,  

bos_sd_fpr.szhelperid_1,  
e2.szname as szhelpernm_1,  

bos_sd_fpr.szhelperid_2,  
e3.szname as szhelpernm_2,  

bos_sd_fpr.szhelperid_3,  
e4.szname as szhelpernm_3,  

bos_sd_fpr.bresultfrtransfer,  
bos_sd_fpr.bvoid,  
bos_gen_approved.bapproved,  
bos_sd_fpr.bapplied,  
bos_gl_fjournaltrans.szfjournalid as bjournal,  
bos_gl_fjournaltrans.bposted,  
bos_sd_fpr.btprintedcount,  
bos_sd_fpr.btransferred,  

bos_sd_fpr.szcompanyid,  
bos_gl_company.szname as szcompanynm,  

bos_sd_fpr.szworkplaceid,  
bos_gl_workplace.szname as szworkplacenm,  

bos_sd_fpr.sztaxentityid,  
bos_sd_fpr.bneedapproval,  
bos_gen_approved.gdapprovedid,  
bos_gen_approved.szapprovalid,  
bos_gl_fjournaltrans.szfjournalid,  

bos_sd_fpr.dtmcreated,  
bos_sd_fpr.bsystemcreated,  

bos_sd_fpr.szuserid,  
bos_sm_user.szname as szusernm_j,  

bos_sd_fpr.dtmlastupdated,  
bos_sd_fpr.balreadytransferred  

from  
bos_sd_fpr left join bos_gen_approved on bos_sd_fpr.gdapprovedid = bos_gen_approved.gdapprovedid  
left join bos_gl_fjournaltrans on bos_sd_fpr.szfjournalid = bos_gl_fjournaltrans.szfjournalid  
left join bos_pi_employee e1 on bos_sd_fpr.szdriverid =e1.szemployeeid  
left join bos_pi_employee e2 on bos_sd_fpr.szhelperid_1 =e2.szemployeeid  
left join bos_pi_employee e3 on bos_sd_fpr.szhelperid_2 =e3.szemployeeid  
left join bos_pi_employee e4 on bos_sd_fpr.szhelperid_3 =e4.szemployeeid  
left join bos_inv_vehicle on bos_sd_fpr.szvehicleid = bos_inv_vehicle.szvehicleid  
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fpr.szcompanyid  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fpr.szworkplaceid  
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fpr.szuserid  
left join bos_gl_workplace as requestwp on requestwp.szworkplaceid = bos_sd_fpr.szrequesttowpid  
left join bos_inv_warehouse as requestwh on requestwh.szwarehouseid= bos_sd_fpr.szrequesttowhid  

where  
bos_sd_fpr.szfprid = p_szfprid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_getlistoffpr()
returns void as
$body$
begin
select 
szfprid,
dtmrequest

from 
bos_sd_fpr;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_isfprexist(
p_szfprid bos_dt_szid)
returns void as
$body$
begin
select 
szfprid

from 
bos_sd_fpr
where 
szfprid = p_szfprid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_lockfpr(
p_szfprid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fpr
set 
szdescription = szdescription
where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_markfprapplied(
p_szfprid bos_dt_szid,
p_dtmrequest timestamp,
p_bapplied bit)
returns void as
$body$
begin
update bos_sd_fpr
set 
dtmrequest = p_dtmrequest,
bapplied = p_bapplied
where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_markfprvoid(
p_szfprid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_sd_fpr
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_updatefpr(
p_szfprid bos_dt_szid,
p_dtmrequest timestamp,
p_szrequesttowpid bos_dt_szid,
p_szrequesttowhid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid_1 bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fpr
set 
dtmrequest = p_dtmrequest,
szrequesttowpid = p_szrequesttowpid,
szrequesttowhid = p_szrequesttowhid,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
szdescription = p_szdescription,
szhelperid_1 = p_szhelperid_1,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,


bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_updatefpr_014(
p_szfprid bos_dt_szid,
p_dtmrequest timestamp,
p_szrequesttowpid bos_dt_szid,
p_szrequesttowhid bos_dt_szid,
p_szdriverid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_szhelperid_1 bos_dt_szid,
p_szhelperid_2 bos_dt_szid,
p_szhelperid_3 bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fpr
set 
dtmrequest = p_dtmrequest,
szrequesttowpid = p_szrequesttowpid,
szrequesttowhid = p_szrequesttowhid,
szdriverid = p_szdriverid,
szvehicleid = p_szvehicleid,
szdescription = p_szdescription,
szhelperid_1 = p_szhelperid_1,
szhelperid_2 = p_szhelperid_2,
szhelperid_3 = p_szhelperid_3,


bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fpr_updatestatus(
p_szfprid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_sd_fpr
set 
szstatus = p_szstatus
where 
szfprid = p_szfprid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_createfsettlement(
p_szfsettlementid bos_dt_szid,
p_dtmsettbegin timestamp,
p_dtmsettend timestamp,
p_szwptosettlement varchar,
p_bcloseinventory bos_dt_bboolean,
p_bclosecashier bos_dt_bboolean,
p_bclosedistribution bos_dt_bboolean,
p_bcloseentry bos_dt_bboolean,
p_bclosedaily bos_dt_bboolean,
p_szopuserid bos_dt_szid,
p_szsettlementtype bos_dt_szsmallid,
p_bresultfrtransfer bos_dt_bboolean,
p_bvoid bos_dt_bboolean,
p_bapproved bos_dt_bboolean,
p_bapplied bos_dt_bboolean,
p_bjournal bos_dt_bboolean,
p_bposted bos_dt_bboolean,
p_btprintedcount smallint,
p_btransferred bos_dt_bboolean,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bos_dt_bboolean,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bos_dt_bboolean,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_fsettlement
(
szfsettlementid,
dtmsettbegin,
dtmsettend,
szwptosettlement,
bcloseinventory,
bclosecashier,
bclosedistribution,
bcloseentry,
bclosedaily,
szopuserid,
szsettlementtype,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsettlementid,
p_dtmsettbegin,
p_dtmsettend,
p_szwptosettlement,
p_bcloseinventory,
p_bclosecashier,
p_bclosedistribution,
p_bcloseentry,
p_bclosedaily,
p_szopuserid,
p_szsettlementtype,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_createfsettlementitem(
p_szfsettlementid bos_dt_szid,
p_shitemnumber smallint,
p_szsettlementtype bos_dt_szsmallid,
p_szopuserid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szpartywpid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szproductsn varchar,
p_szdescription varchar,
p_decamount1 bos_dt_decamount,
p_decamount2 bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szccyid varchar,
p_szreasonid bos_dt_szid,
p_szreasondescription varchar,
p_bmatched smallint,
p_decvehicleqty bos_dt_decamount,
p_decbegqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fsettlementitem
(
szfsettlementid,
shitemnumber,
szsettlementtype,
szopuserid,
szworkplaceid,
szpartywpid,
szproductid,
szproductsn,
szdescription,
decamount1,
decamount2,
szuomid,
szccyid,
szreasonid,
szreasondescription,
bmatched,
decvehicleqty,
decbegqty
)
values
(
p_szfsettlementid,
p_shitemnumber,
p_szsettlementtype,
p_szopuserid,
p_szworkplaceid,
p_szpartywpid,
p_szproductid,
p_szproductsn,
p_szdescription,
p_decamount1,
p_decamount2,
p_szuomid,
p_szccyid,
p_szreasonid,
p_szreasondescription,
p_bmatched,
p_decvehicleqty,
p_decbegqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_deletefsettlement(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fsettlement
where
szfsettlementid = p_szfsettlementid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_deletefsettlementitem(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fsettlementitem
where
szfsettlementid = p_szfsettlementid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getfsettlement(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fsettlement.dtmsettbegin,
bos_sd_fsettlement.dtmsettend,

bos_sd_fsettlement.szwptosettlement,
bos_gl_workplace.szname as szwpnmtosettlement,

bos_sd_fsettlement.bcloseinventory,
bos_sd_fsettlement.bclosecashier,
bos_sd_fsettlement.bclosedistribution,
bos_sd_fsettlement.bcloseentry,

bos_sd_fsettlement.bclosedaily,

bos_sd_fsettlement.szopuserid,
bos_pi_employee.szname as szopusernm_j,

bos_sd_fsettlement.szsettlementtype,

bos_sd_fsettlement.bresultfrtransfer,
bos_sd_fsettlement.bvoid,
bos_gen_approved.bapproved,
bos_sd_fsettlement.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fsettlement.btprintedcount,
bos_sd_fsettlement.btransferred,
bos_sd_fsettlement.szcompanyid,
bos_gl_company.szname as szcompanynm,
bos_sd_fsettlement.szworkplaceid,
wpdoc.szname as szworkplacenm,
bos_sd_fsettlement.sztaxentityid,
bos_sd_fsettlement.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_sd_fsettlement.dtmcreated,
bos_sd_fsettlement.bsystemcreated,
bos_sd_fsettlement.dtmlastupdated,
bos_sd_fsettlement.balreadytransferred,
bos_sd_fsettlement.szuserid,
bos_sm_user.szname as szusernm_j

from
bos_sd_fsettlement 
left join bos_gen_approved on bos_sd_fsettlement.gdapprovedid = bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_fsettlement.szfjournalid = bos_gl_fjournaltrans.szfjournalid
left join bos_gl_workplace on bos_sd_fsettlement.szwptosettlement = bos_gl_workplace.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fsettlement.szcompanyid
left join bos_gl_workplace as wpdoc on wpdoc.szworkplaceid = bos_sd_fsettlement.szworkplaceid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fsettlement.szuserid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fsettlement.szopuserid

where
bos_sd_fsettlement.szfsettlementid = p_szfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getfsettlementitem(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsettlementitem.szfsettlementid,
bos_sd_fsettlementitem.shitemnumber,
bos_sd_fsettlementitem.szsettlementtype,
bos_sd_fsettlementitem.szopuserid,
bos_pi_employee.szname as szopusernm,
bos_sd_fsettlementitem.szworkplaceid,
wp1.szname as szwp1nm,
bos_sd_fsettlementitem.szpartywpid,
wp2.szname as szwp2nm,
bos_sd_fsettlementitem.szproductid,
bos_sd_fsettlementitem.szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_sd_fsettlementitem.szdescription,
bos_sd_fsettlementitem.decamount1,
bos_sd_fsettlementitem.decamount2,
bos_sd_fsettlementitem.szuomid,
bos_sd_fsettlementitem.szccyid,
bos_cu_currency.szamountformat,
bos_sd_fsettlementitem.szreasonid,
bos_sd_fsettlementitem.szreasondescription,
bos_sd_fsettlementitem.bmatched,
bos_sd_fsettlementitem.decvehicleqty,
bos_sd_fsettlementitem.decbegqty
from
bos_sd_fsettlementitem 
left join bos_gl_workplace as wp1 on bos_sd_fsettlementitem.szworkplaceid = wp1.szworkplaceid
left join bos_gl_workplace as wp2 on bos_sd_fsettlementitem.szpartywpid = wp2.szworkplaceid
left join bos_pi_employee on bos_sd_fsettlementitem.szopuserid = bos_pi_employee.szemployeeid
left join bos_inv_product on bos_sd_fsettlementitem.szproductid = bos_inv_product.szproductid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fsettlementitem.szccyid
where
szfsettlementid = p_szfsettlementid;

--do not order by, just let as it is.

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbycashtemp(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szaccountid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,					--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
--and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,					--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on 
bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on 
bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbycashtemp_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szaccountid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,                    --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
--and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

else

select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,                    --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szemployeeid,
bos_pi_employee.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbycashtempall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szaccountid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,	
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
--and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,	
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbycashtempall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szaccountid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,    
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
--and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_cas_fcashtemp.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_cas_fcashtemp.szccyid as szccyid,
bos_cu_currency.szamountformat,    
null as decamount1,
sum(-bos_cas_fcashtempitem.decamount) as decamount2

from
bos_cas_fcashtemp
inner join bos_cas_fcashtempitem on bos_cas_fcashtempitem.szfcashtempid = bos_cas_fcashtemp.szfcashtempid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_fcashtemp.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_fcashtemp.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_fcashtemp.szemployeeid

where
bos_cas_fcashtemp.dtmtransaction >= p_dtmfirstdate and bos_cas_fcashtemp.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_cas_fcashtemp.szworkplaceid = p_szworkplaceid and
bos_cas_fcashtempitem.szaccountid like p_szaccountid and
bos_cas_fcashtemp.bapplied = 1
and bos_cas_fcashtemp.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_cas_fcashtemp.szworkplaceid,
bos_gl_workplace.szname,
bos_cas_fcashtemp.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustdeposit(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustdeposit.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
--and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustdeposit.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustdeposit_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustdeposit.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
--and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustdeposit.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustdepositall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
--and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustdepositall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
--and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustdeposit.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustdeposit.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,
null as decamount2
from
bos_ar_fcustdeposit
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid
where
bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid
and bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate
and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate
and bos_ar_fcustdeposit.bvoid = 0
and bos_ar_fcustdeposit.szdeposanid = p_szopuserid
and bos_ar_fcustdeposit.bvalue = 1
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
group by
bos_ar_fcustdeposit.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustdeposit.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,					--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustpayment.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid like p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

and bos_ar_fcustpayment.szdeposanid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustpayment_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,					--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustpayment.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

--and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,					--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_ar_fcustpayment.szdeposanid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szdeposanid,
bos_pi_employee.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustpaymentall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,	
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid

where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid like p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

and bos_ar_fcustpayment.szdeposanid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfcustpaymentall_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,	
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid

where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

--and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
'' as szuomid,
bos_ar_fcustpayment.szccyid as szccyid,
bos_cu_currency.szamountformat,	
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,
null as decamount2

from
bos_ar_fcustpayment
inner join bos_ar_fcustpaymentitemdetail 
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid

where
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate and
bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid and
bos_ar_fcustpayment.bvoid=0

--filter to exclude payment by customer deposit.
and bos_ar_fcustpaymentitemdetail.bdeposit = 0
--filter to get only payment that has value (cash, valuable cheque, clearing cheque).
and bos_ar_fcustpaymentitemdetail.bvalue = 1

and bos_ar_fcustpaymentitemdetail.szbankid = '' 
and bos_ar_fcustpaymentitemdetail.szrefdocid = ''

and bos_ar_fcustpayment.szdeposanid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_ar_fcustpayment.szworkplaceid,
bos_gl_workplace.szname,
bos_ar_fcustpayment.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfdo(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid = 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid = 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfdo_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid = 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid = 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfdoall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,	
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid=0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,	
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid=0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfdoall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,    
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid=0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fdo.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fdo.szccyid as szccyid,
bos_cu_currency.szamountformat,    
'' as szuomid,
sum(bos_sd_fdo.decamount) as decamount1,
null as decamount2

from
bos_sd_fdo
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fdo.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bcash = 1 and
bos_sd_fdo.bvoid=0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfso(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fso.szsalesid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid = 0
--and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szsalesid,
bos_pi_employee.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fso.szsalesid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid = 0
and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szsalesid,
bos_pi_employee.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfso_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fso.szsalesid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid = 0
--and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szsalesid,
bos_pi_employee.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fso.szsalesid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid = 0
and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szsalesid,
bos_pi_employee.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfsoall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,	
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid=0
--and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,	
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid=0
and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofcashierbyfsoall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,    
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid=0
--and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;

else
select
bos_sd_fso.szworkplaceid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
'cash' as szproductid,
'' as szproductsn,
'' as szproductnm,
'' as szproductqtyformat,
bos_sd_fso.szccyid as szccyid,
bos_cu_currency.szamountformat,    
'' as szuomid,
sum(bos_sd_fso.decdownpayment) as decamount1,
null as decamount2

from
bos_sd_fso
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fso.szsalesid

where
bos_sd_fso.dtmorder >= p_dtmfirstdate and bos_sd_fso.dtmorder < interval '1 day' + p_dtmlastdate and
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bcash = 1 and
bos_sd_fso.bvoid=0
and bos_sd_fso.szsalesid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fso.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fso.szccyid,
bos_cu_currency.szamountformat;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistoffsettlement()
returns void as
$body$
begin
select 
szfsettlementid,
dtmsettbegin,
dtmsettend


from 
bos_sd_fsettlement;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbyfcustdeposit(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select  
bos_ar_fcustdeposit.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustdeposit.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustdeposit.szbankid as szproductid,  
bos_ar_fcustdeposit.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustdeposit.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,  
null as decamount2  

from  
bos_ar_fcustdeposit  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustdeposit.szbankid  
and pdr.szrefid = bos_ar_fcustdeposit.szrefid  

where  
bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustdeposit.szworkplaceid like p_szworkplaceid  
and bos_ar_fcustdeposit.bvoid = 0  
and bos_ar_fcustdeposit.szdeposanid like p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustdeposit.bsystemcreated = 0  
and bos_ar_fcustdeposit.szbankid <> '' and bos_ar_fcustdeposit.szrefid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl   
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustdeposit.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustdeposit.bapplied = 0)
)

group by  
bos_ar_fcustdeposit.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustdeposit.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustdeposit.szbankid,  
bos_ar_fcustdeposit.szrefid,  
bos_ar_fcustdeposit.szccyid,  
bos_cu_currency.szamountformat;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbyfcustdeposit_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select  
bos_ar_fcustdeposit.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustdeposit.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustdeposit.szbankid as szproductid,  
bos_ar_fcustdeposit.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustdeposit.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,  
null as decamount2  

from  
bos_ar_fcustdeposit  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustdeposit.szbankid  
and pdr.szrefid = bos_ar_fcustdeposit.szrefid  

where  
bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid  
and bos_ar_fcustdeposit.bvoid = 0  
--and bos_ar_fcustdeposit.szdeposanid = p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustdeposit.bsystemcreated = 0  
and bos_ar_fcustdeposit.szbankid <> '' and bos_ar_fcustdeposit.szrefid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl   
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustdeposit.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustdeposit.bapplied = 0)
)

group by  
bos_ar_fcustdeposit.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustdeposit.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustdeposit.szbankid,  
bos_ar_fcustdeposit.szrefid,  
bos_ar_fcustdeposit.szccyid,  
bos_cu_currency.szamountformat;

else
select  
bos_ar_fcustdeposit.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustdeposit.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustdeposit.szbankid as szproductid,  
bos_ar_fcustdeposit.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustdeposit.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustdeposit.decdeposit) as decamount1,  
null as decamount2  

from  
bos_ar_fcustdeposit  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustdeposit.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustdeposit.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustdeposit.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustdeposit.szbankid  
and pdr.szrefid = bos_ar_fcustdeposit.szrefid  

where  
bos_ar_fcustdeposit.dtmfcustdeposit >= p_dtmfirstdate and bos_ar_fcustdeposit.dtmfcustdeposit < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustdeposit.szworkplaceid = p_szworkplaceid  
and bos_ar_fcustdeposit.bvoid = 0  
and bos_ar_fcustdeposit.szdeposanid = p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustdeposit.bsystemcreated = 0  
and bos_ar_fcustdeposit.szbankid <> '' and bos_ar_fcustdeposit.szrefid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl   
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustdeposit.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustdeposit.bapplied = 0)
)

group by  
bos_ar_fcustdeposit.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustdeposit.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustdeposit.szbankid,  
bos_ar_fcustdeposit.szrefid,  
bos_ar_fcustdeposit.szccyid,  
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbyfcustpayment(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select  
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustpayment.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustpaymentitemdetail.szbankid as szproductid,  
bos_ar_fcustpaymentitemdetail.szrefdocid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustpayment.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,  
null as decamount2  

from  
bos_ar_fcustpayment  
inner join bos_ar_fcustpaymentitemdetail   
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid  

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustpaymentitemdetail.szbankid  
and pdr.szrefid = bos_ar_fcustpaymentitemdetail.szrefdocid  

where  
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustpayment.szworkplaceid like p_szworkplaceid  
and bos_ar_fcustpayment.bvoid = 0  
and bos_ar_fcustpayment.szdeposanid like p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustpayment.bsystemcreated = 0  
and bos_ar_fcustpaymentitemdetail.szbankid <> '' and bos_ar_fcustpaymentitemdetail.szrefdocid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustpayment.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustpayment.bapplied = 0)
)

group by  
bos_ar_fcustpayment.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustpayment.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustpaymentitemdetail.szbankid,  
bos_ar_fcustpaymentitemdetail.szrefdocid,  
bos_ar_fcustpayment.szccyid,  
bos_cu_currency.szamountformat;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbyfcustpayment_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select  
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustpayment.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustpaymentitemdetail.szbankid as szproductid,  
bos_ar_fcustpaymentitemdetail.szrefdocid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustpayment.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,  
null as decamount2  

from  
bos_ar_fcustpayment  
inner join bos_ar_fcustpaymentitemdetail   
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid  

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustpaymentitemdetail.szbankid  
and pdr.szrefid = bos_ar_fcustpaymentitemdetail.szrefdocid  

where  
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid  
and bos_ar_fcustpayment.bvoid = 0  
--and bos_ar_fcustpayment.szdeposanid = p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustpayment.bsystemcreated = 0  
and bos_ar_fcustpaymentitemdetail.szbankid <> '' and bos_ar_fcustpaymentitemdetail.szrefdocid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustpayment.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustpayment.bapplied = 0)
)

group by  
bos_ar_fcustpayment.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustpayment.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustpaymentitemdetail.szbankid,  
bos_ar_fcustpaymentitemdetail.szrefdocid,  
bos_ar_fcustpayment.szccyid,  
bos_cu_currency.szamountformat;

else
select  
bos_ar_fcustpayment.szworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_ar_fcustpayment.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_ar_fcustpaymentitemdetail.szbankid as szproductid,  
bos_ar_fcustpaymentitemdetail.szrefdocid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_ar_fcustpayment.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
sum(bos_ar_fcustpaymentitemdetail.decamount) as decamount1,  
null as decamount2  

from  
bos_ar_fcustpayment  
inner join bos_ar_fcustpaymentitemdetail   
on bos_ar_fcustpaymentitemdetail.szfcustpaymentid = bos_ar_fcustpayment.szfcustpaymentid  

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_ar_fcustpayment.szworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_ar_fcustpayment.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_ar_fcustpayment.szccyid  
left join bos_cas_pdr as pdr on pdr.szbankid = bos_ar_fcustpaymentitemdetail.szbankid  
and pdr.szrefid = bos_ar_fcustpaymentitemdetail.szrefdocid  

where  
bos_ar_fcustpayment.dtmfcustpayment >= p_dtmfirstdate and bos_ar_fcustpayment.dtmfcustpayment < interval '1 day' + p_dtmlastdate  
and bos_ar_fcustpayment.szworkplaceid = p_szworkplaceid  
and bos_ar_fcustpayment.bvoid = 0  
and bos_ar_fcustpayment.szdeposanid = p_szopuserid  
--this will prevent payment created by system to be calculated again as there will be no pdr receipt to match.  
and bos_ar_fcustpayment.bsystemcreated = 0  
and bos_ar_fcustpaymentitemdetail.szbankid <> '' and bos_ar_fcustpaymentitemdetail.szrefdocid <> ''  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
and (
--  if already applied, do not include rejected pdr becoz user cannot change it anymore.
(
bos_ar_fcustpayment.bapplied = 1 
and (pdr.szstatus <> 'rej' or (pdr.szstatus = 'rej' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate)) 
and (pdr.szstatus <> 'can' or (pdr.szstatus = 'can' and pdr.dtmclear >= interval '1 day' + p_dtmlastdate))
)
or 
--  if not applied, just show the pdr, including the rejected one, so user awares and can fix it.
(bos_ar_fcustpayment.bapplied = 0)
)

group by  
bos_ar_fcustpayment.szworkplaceid,  
bos_gl_workplace.szname,  
bos_ar_fcustpayment.szdeposanid,  
bos_pi_employee.szname,  
bos_ar_fcustpaymentitemdetail.szbankid,  
bos_ar_fcustpaymentitemdetail.szrefdocid,  
bos_ar_fcustpayment.szccyid,  
bos_cu_currency.szamountformat;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbypdr(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select  
bos_cas_pdr.szrecworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_cas_pdr.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_cas_pdr.szbankid as szproductid,  
bos_cas_pdr.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_cas_pdr.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
null as decamount1,  
bos_cas_pdr.decamount as decamount2  

from  
bos_cas_pdr  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_pdr.szrecworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_pdr.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_pdr.szccyid  

where  
bos_cas_pdr.dtmreceipt >= p_dtmfirstdate and bos_cas_pdr.dtmreceipt < interval '1 day' + p_dtmlastdate  
and bos_cas_pdr.szrecworkplaceid like p_szworkplaceid  
and bos_cas_pdr.szdeposanid like p_szopuserid  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
--do not included rejected and cancel pdr so user can fix error in pdr by simply rejecting it.  
and (bos_cas_pdr.szstatus <> 'rej' or (bos_cas_pdr.szstatus = 'rej' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate))  
and (bos_cas_pdr.szstatus <> 'can' or (bos_cas_pdr.szstatus = 'can' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate));

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofpdrbypdr_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select  
bos_cas_pdr.szrecworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_cas_pdr.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_cas_pdr.szbankid as szproductid,  
bos_cas_pdr.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_cas_pdr.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
null as decamount1,  
bos_cas_pdr.decamount as decamount2  

from  
bos_cas_pdr  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_pdr.szrecworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_pdr.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_pdr.szccyid  

where  
bos_cas_pdr.dtmreceipt >= p_dtmfirstdate and bos_cas_pdr.dtmreceipt < interval '1 day' + p_dtmlastdate  
and bos_cas_pdr.szrecworkplaceid = p_szworkplaceid  
--and bos_cas_pdr.szdeposanid = p_szopuserid  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
--do not included rejected and cancel pdr so user can fix error in pdr by simply rejecting it.  
and (bos_cas_pdr.szstatus <> 'rej' or (bos_cas_pdr.szstatus = 'rej' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate))  
and (bos_cas_pdr.szstatus <> 'can' or (bos_cas_pdr.szstatus = 'can' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate));

else
select  
bos_cas_pdr.szrecworkplaceid as szworkplaceid,  
'' as szpartywpid,    --only transfer between workplace that has entry for this field.  
bos_gl_workplace.szname as szwp1nm,  
'' as szwp2nm,  
bos_cas_pdr.szdeposanid as szemployeeid,  
bos_pi_employee.szname as szemployeenm,  
bos_cas_pdr.szbankid as szproductid,  
bos_cas_pdr.szrefid as szproductsn,  
'' as szproductnm,  
'' as szproductqtyformat,  
'' as szuomid,  
bos_cas_pdr.szccyid as szccyid,  
bos_cu_currency.szamountformat,  
null as decamount1,  
bos_cas_pdr.decamount as decamount2  

from  
bos_cas_pdr  
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_cas_pdr.szrecworkplaceid  
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_cas_pdr.szdeposanid  
left join bos_cu_currency on bos_cu_currency.szccyid = bos_cas_pdr.szccyid  

where  
bos_cas_pdr.dtmreceipt >= p_dtmfirstdate and bos_cas_pdr.dtmreceipt < interval '1 day' + p_dtmlastdate  
and bos_cas_pdr.szrecworkplaceid = p_szworkplaceid  
and bos_cas_pdr.szdeposanid = p_szopuserid  
and p_blowincl <= bos_pi_employee.bincludeindailysettlement  
and bos_pi_employee.bincludeindailysettlement <= p_btopincl  
--do not included rejected and cancel pdr so user can fix error in pdr by simply rejecting it.  
and (bos_cas_pdr.szstatus <> 'rej' or (bos_cas_pdr.szstatus = 'rej' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate))  
and (bos_cas_pdr.szstatus <> 'can' or (bos_cas_pdr.szstatus = 'can' and bos_cas_pdr.dtmclear >= interval '1 day' + p_dtmlastdate));

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductreturnedall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid like p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductreturnedall_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

else
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductreturnedbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid like p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid like p_szopuserid
and bos_sd_fdo.szlogistictype <> 'pos'
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductreturnedbyemployee_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szlogistictype <> 'pos'
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

else
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid = p_szopuserid
and bos_sd_fdo.szlogistictype <> 'pos'
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnreturnedbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid like p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnreturnedbyemployee_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

else
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--when directly return to warehouse, no fdn created, so it must be excluded from inventory settlement.
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnsoldbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid like p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'
order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnsoldbyemployee_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

else
select 
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_sd_fdoitemsn.szproductsn as szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,
dbo.kgenposnegdectofactor(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
inner join bos_sd_fdoitemsn 
on bos_sd_fdoitemsn.szdoid = bos_sd_fdoitem.szdoid and bos_sd_fdoitemsn.shitemnumber = bos_sd_fdoitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_sd_fdo.szlogistictype <> 'pos'

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsntakenbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stocksnhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stocksnhistory.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_stocksnhistory.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
cast(bos_inv_stocksnhistory.shqty as decimal(18, 2)) as decamount2
from
bos_inv_stockhistory
inner join bos_inv_stocksnhistory on bos_inv_stocksnhistory.gdstockhistoryid = bos_inv_stockhistory.gdhistoryid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksnhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stocksnhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stocksnhistory.szlocationtype = 'veh' 
or bos_inv_stocksnhistory.szlocationtype = 'car'
or bos_inv_stocksnhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_stocksnhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stocksnhistory.szproductid;

else
select
bos_inv_stocksnhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stocksnhistory.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_stocksnhistory.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
cast(bos_inv_stocksnhistory.shqty as decimal(18, 2)) as decamount2
from
bos_inv_stockhistory
inner join bos_inv_stocksnhistory on bos_inv_stocksnhistory.gdstockhistoryid = bos_inv_stockhistory.gdhistoryid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksnhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stocksnhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stocksnhistory.szlocationtype = 'veh' 
or bos_inv_stocksnhistory.szlocationtype = 'car'
or bos_inv_stocksnhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_stocksnhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stocksnhistory.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsntakenbyemployee_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stocksnhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stocksnhistory.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_stocksnhistory.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
cast(bos_inv_stocksnhistory.shqty as decimal(18, 2)) as decamount2
from
bos_inv_stockhistory
inner join bos_inv_stocksnhistory on bos_inv_stocksnhistory.gdstockhistoryid = bos_inv_stockhistory.gdhistoryid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksnhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stocksnhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stocksnhistory.szlocationtype = 'veh' 
or bos_inv_stocksnhistory.szlocationtype = 'car'
or bos_inv_stocksnhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_stocksnhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stocksnhistory.szproductid;

else
select
bos_inv_stocksnhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stocksnhistory.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_stocksnhistory.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
cast(bos_inv_stocksnhistory.shqty as decimal(18, 2)) as decamount2
from
bos_inv_stockhistory
inner join bos_inv_stocksnhistory on bos_inv_stocksnhistory.gdstockhistoryid = bos_inv_stockhistory.gdhistoryid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stocksnhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stocksnhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stocksnhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stocksnhistory.szlocationtype = 'veh' 
or bos_inv_stocksnhistory.szlocationtype = 'car'
or bos_inv_stocksnhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_stocksnhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stocksnhistory.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsntakenbyemployeefdn(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fdnitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
--adjustment fdn can have negative quantity.
cast(dbo.kgenposnegdectofactor(bos_inv_fdnitem.decqty)as decimal(18, 2)) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid
inner join bos_inv_fdnitemsn on bos_inv_fdnitemsn.szfdnid = bos_inv_fdnitem.szfdnid
and bos_inv_fdnitemsn.shitemnumber = bos_inv_fdnitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fdnitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
--adjustment fdn can have negative quantity.
cast(dbo.kgenposnegdectofactor(bos_inv_fdnitem.decqty)as decimal(18, 2)) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid
inner join bos_inv_fdnitemsn on bos_inv_fdnitemsn.szfdnid = bos_inv_fdnitem.szfdnid
and bos_inv_fdnitemsn.shitemnumber = bos_inv_fdnitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsntakenbyemployeefdn_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fdnitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
--adjustment fdn can have negative quantity.
cast(dbo.kgenposnegdectofactor(bos_inv_fdnitem.decqty)as decimal(18, 2)) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid
inner join bos_inv_fdnitemsn on bos_inv_fdnitemsn.szfdnid = bos_inv_fdnitem.szfdnid
and bos_inv_fdnitemsn.shitemnumber = bos_inv_fdnitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fdnitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
--adjustment fdn can have negative quantity.
cast(dbo.kgenposnegdectofactor(bos_inv_fdnitem.decqty)as decimal(18, 2)) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid
inner join bos_inv_fdnitemsn on bos_inv_fdnitemsn.szfdnid = bos_inv_fdnitem.szfdnid
and bos_inv_fdnitemsn.shitemnumber = bos_inv_fdnitem.shitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnvehicleremainingqtybyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fvremaitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
cast( dbo.kgenposnegdectofactor(bos_inv_fvremaitem.decqty)as decimal(18, 2)) as decvehicleqty
from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid
inner join bos_inv_fvremaitemsn on bos_inv_fvremaitemsn.szfvremaid = bos_inv_fvremaitem.szfvremaid
and bos_inv_fvremaitemsn.btitemnumber = bos_inv_fvremaitem.btitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fvremaitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
cast(dbo.kgenposnegdectofactor(bos_inv_fvremaitem.decqty)as decimal(18, 2)) as decvehicleqty
from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid
inner join bos_inv_fvremaitemsn on bos_inv_fvremaitemsn.szfvremaid = bos_inv_fvremaitem.szfvremaid
and bos_inv_fvremaitemsn.btitemnumber = bos_inv_fvremaitem.btitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsnvehicleremainingqtybyemployee_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fvremaitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
cast(dbo.kgenposnegdectofactor(bos_inv_fvremaitem.decqty)as decimal(18, 2)) as decvehicleqty
from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid
inner join bos_inv_fvremaitemsn on bos_inv_fvremaitemsn.szfvremaid = bos_inv_fvremaitem.szfvremaid
and bos_inv_fvremaitemsn.btitemnumber = bos_inv_fvremaitem.btitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_fvremaitemsn.szproductsn,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
cast( dbo.kgenposnegdectofactor(bos_inv_fvremaitem.decqty)as decimal(18, 2)) as decvehicleqty
from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid
inner join bos_inv_fvremaitemsn on bos_inv_fvremaitemsn.szfvremaid = bos_inv_fvremaitem.szfvremaid
and bos_inv_fvremaitemsn.btitemnumber = bos_inv_fvremaitem.btitemnumber

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsoldall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid like p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsoldall_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

else
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2
from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_sd_fdo.szworkplaceid = p_szworkplaceid and
bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsoldbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate 
and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate 
and bos_sd_fdo.szworkplaceid like p_szworkplaceid 
and bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid like p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'
group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproductsoldbyemployee_013(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate 
and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate 
and bos_sd_fdo.szworkplaceid = p_szworkplaceid 
and bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
--and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

else
select
bos_sd_fdo.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_sd_fdo.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_sd_fdoitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
bos_inv_product.szqtyformat as szamountformat,	
sum(bos_sd_fdoitem.decqty) as decamount1,
null as decamount2

from
bos_sd_fdo
inner join bos_sd_fdoitem on bos_sd_fdoitem.szdoid = bos_sd_fdo.szdoid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fdo.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_fdo.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid

where
bos_sd_fdo.dtmdelivery >= p_dtmfirstdate 
and bos_sd_fdo.dtmdelivery < interval '1 day' + p_dtmlastdate 
and bos_sd_fdo.szworkplaceid = p_szworkplaceid 
and bos_sd_fdo.bvoid = 0
--do is released from warehouse using fdn, and this fdn is already included in the settlement.
--this means it doesn't matter whether do released fr warehouse or not, all must be included into settlement.
--and bos_sd_fdo.ballocfrwarehouse = 0
and bos_sd_fdoitem.decqty > 0
and bos_sd_fdo.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl
and bos_inv_product.bservice = 0
and bos_sd_fdo.szlogistictype <> 'pos'

group by
bos_sd_fdo.szworkplaceid,
bos_gl_workplace.szname,
bos_sd_fdo.szdriverid,
bos_pi_employee.szname,
bos_sd_fdoitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_sd_fdo.szworkplaceid,
bos_sd_fdo.szdriverid,
bos_sd_fdoitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2
from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szlocationtype = 'veh' 
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis'
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2
from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szlocationtype = 'veh' 
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis'
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2
from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szlocationtype = 'veh' 
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis'
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2
from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szlocationtype = 'veh' 
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
)
and bos_inv_stockhistory.szstocktransferreason = 'dis'
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenallbyfdn(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdnitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenallbyfdn_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2
from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdnitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate 
and bos_inv_stockhistory.szreportedasid = p_szworkplaceid 
and 
(
bos_inv_stockhistory.szlocationtype = 'veh'  
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
) 
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate 
and bos_inv_stockhistory.szreportedasid = p_szworkplaceid 
and 
(
bos_inv_stockhistory.szlocationtype = 'veh'  
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
) 
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stockhistory.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenbyemployee_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate 
and bos_inv_stockhistory.szreportedasid = p_szworkplaceid 
and 
(
bos_inv_stockhistory.szlocationtype = 'veh'  
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
) 
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate 
and bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate 
and bos_inv_stockhistory.szreportedasid = p_szworkplaceid 
and 
(
bos_inv_stockhistory.szlocationtype = 'veh'  
or bos_inv_stockhistory.szlocationtype = 'car'
or bos_inv_stockhistory.szlocationtype = 'emp'
) 
and bos_inv_stockhistory.szstocktransferreason = 'dis' 
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_gl_workplace.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szemployeeid,
bos_inv_stockhistory.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenbyemployeefdn(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2

from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdn.szdriverid,
bos_pi_employee.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2

from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1		--yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdn.szdriverid,
bos_pi_employee.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttakenbyemployeefdn_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2

from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
--and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdn.szdriverid,
bos_pi_employee.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;

else
select
bos_inv_fdn.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fdn.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fdnitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
sum(bos_inv_fdnitem.decqty) as decamount2

from
bos_inv_fdn
inner join bos_inv_fdnitem on bos_inv_fdnitem.szfdnid = bos_inv_fdn.szfdnid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fdn.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fdn.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fdnitem.szproductid

where
bos_inv_fdn.dtmdelivery >= p_dtmfirstdate and bos_inv_fdn.dtmdelivery < interval '1 day' + p_dtmlastdate and
bos_inv_fdn.szworkplaceid = p_szworkplaceid 
and bos_inv_fdn.szdriverid = p_szopuserid 
and bos_inv_fdn.szfdoid <> '' 
and bos_inv_fdn.bapplied = 1        --yes, for inventory documents, get only applied documents.
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fdn.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fdn.szdriverid,
bos_pi_employee.szname,
bos_inv_fdnitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fdn.szworkplaceid,
bos_inv_fdn.szdriverid,
bos_inv_fdnitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttransfer(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
bos_inv_stockhistory.szpartyid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_inv_stockhistory.decqty) as decamount1,
null as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
bos_inv_stockhistory.szpartyid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
sum(bos_inv_stockhistory.decqty) as decamount1,
null as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttransfer_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
bos_inv_stockhistory.szpartyid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
sum(bos_inv_stockhistory.decqty) as decamount1,
null as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szreportedasid as szworkplaceid,
bos_inv_stockhistory.szpartyid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
sum(bos_inv_stockhistory.decqty) as decamount1,
null as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szreportedasid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttransferparty(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szpartyid as szworkplaceid,		--workplace id and party id of party transfer must be swapped so p_mergelist function can function correctly.
bos_inv_stockhistory.szreportedasid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szccysymbol,
'' as szamountformat,	
null as decamount1,
sum(-bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szpartyid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szpartyid as szworkplaceid,		--workplace id and party id of party transfer must be swapped so p_mergelist function can function correctly.
bos_inv_stockhistory.szreportedasid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szccysymbol,
'' as szamountformat,	
null as decamount1,
sum(-bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szpartyid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofproducttransferparty_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_stockhistory.szpartyid as szworkplaceid,        --workplace id and party id of party transfer must be swapped so p_mergelist function can function correctly.
bos_inv_stockhistory.szreportedasid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szccysymbol,
'' as szamountformat,    
null as decamount1,
sum(-bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szpartyid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
--and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;

else
select
bos_inv_stockhistory.szpartyid as szworkplaceid,        --workplace id and party id of party transfer must be swapped so p_mergelist function can function correctly.
bos_inv_stockhistory.szreportedasid as szpartywpid,
wp1.szname as szwp1nm,
wp2.szname as szwp2nm,

bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname as szemployeenm,

bos_inv_stockhistory.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szccysymbol,
'' as szamountformat,    
null as decamount1,
sum(-bos_inv_stockhistory.decqty) as decamount2

from
bos_inv_stockhistory
left join bos_gl_workplace as wp1 on wp1.szworkplaceid = bos_inv_stockhistory.szpartyid
left join bos_gl_workplace as wp2 on wp2.szworkplaceid = bos_inv_stockhistory.szreportedasid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_stockhistory.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_stockhistory.szemployeeid

where
bos_inv_stockhistory.dtmtransaction >= p_dtmfirstdate and 
bos_inv_stockhistory.dtmtransaction < interval '1 day' + p_dtmlastdate and
bos_inv_stockhistory.szpartyid = p_szworkplaceid and
(
bos_inv_stockhistory.szstocktransferreason = 'ict' or
bos_inv_stockhistory.szstocktransferreason = 'str' 
)
and bos_inv_stockhistory.szemployeeid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
wp1.szname,
wp2.szname,
bos_inv_stockhistory.szemployeeid,
bos_pi_employee.szname,
bos_inv_stockhistory.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_stockhistory.szreportedasid,
bos_inv_stockhistory.szpartyid,
bos_inv_stockhistory.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofstockreturnedall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
fsid.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
bos_pi_employee.szname as szemployeenm,
fsiditem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,	
'' as szccyid,
'' as szamountformat,	
null as decamount1,
-sum(fsiditem.decuomqty) as decamount2
from 
bos_inv_fsid as fsid
left join bos_inv_fsiditem as fsiditem on fsiditem.szfsidid = fsid.szfsidid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = fsid.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = fsid.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = fsiditem.szproductid

where
fsid.dtmin >= p_dtmfirstdate 
and fsid.dtmin < interval '1 day' + p_dtmlastdate 
and fsid.szworkplaceid = p_szworkplaceid 	
--and fsid.szdriverid = p_szopuserid
and fsid.bapplied = 0
and fsid.bvoid = 0
and fsid.btprintedcount > 0
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
fsid.szworkplaceid,
bos_gl_workplace.szname,
fsid.szdriverid,
bos_pi_employee.szname,
fsiditem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
fsid.szworkplaceid,
fsid.szdriverid,
fsiditem.szproductid;

else
select 
fsid.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
bos_pi_employee.szname as szemployeenm,
fsiditem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,	
'' as szccyid,
'' as szamountformat,	
null as decamount1,
-sum(fsiditem.decuomqty) as decamount2
from 
bos_inv_fsid as fsid
left join bos_inv_fsiditem as fsiditem on fsiditem.szfsidid = fsid.szfsidid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = fsid.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = fsid.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = fsiditem.szproductid

where
fsid.dtmin >= p_dtmfirstdate 
and fsid.dtmin < interval '1 day' + p_dtmlastdate 
and fsid.szworkplaceid = p_szworkplaceid 	
and fsid.szdriverid = p_szopuserid
and fsid.bapplied = 0
and fsid.bvoid = 0
and fsid.btprintedcount > 0
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
fsid.szworkplaceid,
bos_gl_workplace.szname,
fsid.szdriverid,
bos_pi_employee.szname,
fsiditem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
fsid.szworkplaceid,
fsid.szdriverid,
fsiditem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofstockreturnedbyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
fsid.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
fsid.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
fsiditem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,	
'' as szccyid,
'' as szamountformat,	
null as decamount1,
-sum(fsiditem.decuomqty) as decamount2
from 
bos_inv_fsid as fsid
left join bos_inv_fsiditem as fsiditem on fsiditem.szfsidid = fsid.szfsidid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = fsid.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = fsid.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = fsiditem.szproductid

where
fsid.dtmin >= p_dtmfirstdate 
and fsid.dtmin < interval '1 day' + p_dtmlastdate 
and fsid.szworkplaceid = p_szworkplaceid 	
--and fsid.szdriverid = p_szopuserid
and fsid.bapplied = 0
and fsid.bvoid = 0
and fsid.btprintedcount > 0
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
fsid.szworkplaceid,
bos_gl_workplace.szname,
fsid.szdriverid,
bos_pi_employee.szname,
fsiditem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
fsid.szworkplaceid,
fsid.szdriverid,
fsiditem.szproductid;

else
select 
fsid.szworkplaceid as szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
fsid.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
fsiditem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,	
'' as szccyid,
'' as szamountformat,	
null as decamount1,
-sum(fsiditem.decuomqty) as decamount2
from 
bos_inv_fsid as fsid
left join bos_inv_fsiditem as fsiditem on fsiditem.szfsidid = fsid.szfsidid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = fsid.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = fsid.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = fsiditem.szproductid

where
fsid.dtmin >= p_dtmfirstdate 
and fsid.dtmin < interval '1 day' + p_dtmlastdate 
and fsid.szworkplaceid = p_szworkplaceid 	
and fsid.szdriverid = p_szopuserid
and fsid.bapplied = 0
and fsid.bvoid = 0
and fsid.btprintedcount > 0
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
fsid.szworkplaceid,
bos_gl_workplace.szname,
fsid.szdriverid,
bos_pi_employee.szname,
fsiditem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
fsid.szworkplaceid,
fsid.szdriverid,
fsiditem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofvehicleremainingqtyall(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvremaitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofvehicleremainingqtyall_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
'all' as szemployeeid,
'' as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvremaitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofvehicleremainingqtybyemployee(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,				--only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,	
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_getlistofvehicleremainingqtybyemployee_014(
p_szworkplaceid bos_dt_szid,
p_dtmfirstdate timestamp,
p_dtmlastdate timestamp,
p_szopuserid bos_dt_szid,
p_blowincl bos_dt_bboolean,
p_btopincl bos_dt_bboolean)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
--and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;

else
select
bos_inv_fvrema.szworkplaceid,
'' as szpartywpid,                --only transfer between workplace that has entry for this field.
bos_gl_workplace.szname as szwp1nm,
'' as szwp2nm,
bos_inv_fvrema.szdriverid as szemployeeid,
bos_pi_employee.szname as szemployeenm,
bos_inv_fvremaitem.szproductid,
'' as szproductsn,
bos_inv_product.szname as szproductnm,
bos_inv_product.szqtyformat as szproductqtyformat,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szuomid,
'' as szccyid,
'' as szamountformat,    
null as decamount1,
null as decamount2,
sum(bos_inv_fvremaitem.decqty) as decvehicleqty

from
bos_inv_fvrema
inner join bos_inv_fvremaitem on bos_inv_fvremaitem.szfvremaid = bos_inv_fvrema.szfvremaid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_inv_fvrema.szworkplaceid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_inv_fvrema.szdriverid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fvremaitem.szproductid

where
bos_inv_fvrema.dtmremain >= p_dtmfirstdate 
and bos_inv_fvrema.dtmremain < interval '1 day' + p_dtmlastdate 
and bos_inv_fvrema.bapplied = 1
and bos_inv_fvrema.szworkplaceid = p_szworkplaceid 
and bos_inv_fvrema.szdriverid = p_szopuserid
and p_blowincl <= bos_pi_employee.bincludeindailysettlement
and bos_pi_employee.bincludeindailysettlement <= p_btopincl

group by
bos_inv_fvrema.szworkplaceid,
bos_gl_workplace.szname,
bos_inv_fvrema.szdriverid,
bos_pi_employee.szname,
bos_inv_fvremaitem.szproductid,
bos_inv_product.szname,
bos_inv_product.szqtyformat,
bos_inv_product.szcompuomid,
bos_inv_product.szuomclassid,
bos_inv_product.szuomid

order by
bos_inv_fvrema.szworkplaceid,
bos_inv_fvrema.szdriverid,
bos_inv_fvremaitem.szproductid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_isfsettlementexist(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin
select 
szfsettlementid

from 
bos_sd_fsettlement
where 
szfsettlementid = p_szfsettlementid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_lockfsettlement(
p_szfsettlementid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsettlement
set 
btransferred = btransferred
where 
szfsettlementid = p_szfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsettlement_updatefsettlement(
p_szfsettlementid bos_dt_szid,
p_dtmsettbegin timestamp,
p_dtmsettend timestamp,
p_szwptosettlement varchar,
p_bcloseinventory bos_dt_bboolean,
p_bclosecashier bos_dt_bboolean,
p_bclosedistribution bos_dt_bboolean,
p_bcloseentry bos_dt_bboolean,
p_bclosedaily bos_dt_bboolean,
p_szopuserid bos_dt_szid,
p_szsettlementtype bos_dt_szsmallid,
p_bresultfrtransfer bos_dt_bboolean,
p_bvoid bos_dt_bboolean,
p_bapproved bos_dt_bboolean,
p_bapplied bos_dt_bboolean,
p_bjournal bos_dt_bboolean,
p_bposted bos_dt_bboolean,
p_btprintedcount smallint,
p_btransferred bos_dt_bboolean,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bos_dt_bboolean,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bos_dt_bboolean,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsettlement
set 
dtmsettbegin = p_dtmsettbegin,
dtmsettend = p_dtmsettend,
szwptosettlement = p_szwptosettlement,

bcloseinventory = p_bcloseinventory,
bclosecashier = p_bclosecashier,
bclosedistribution = p_bclosedistribution,
bcloseentry = p_bcloseentry,

bclosedaily = p_bclosedaily,

szopuserid = p_szopuserid,
szsettlementtype = p_szsettlementtype,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid

where 
szfsettlementid = p_szfsettlementid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsid_countunappliedfsid(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
count(distinct szfsidid) as ifsidcount 
from 
bos_inv_fsid 
where 
szworkplaceid = p_szworkplaceid 
and dtmin >= p_dtmfrom 
and dtmin < interval '1 day' +  p_dtmto 
--and szdriverid = p_szopuserid 
and	bvoid = 0 
and bapplied = 0 
and btprintedcount > 0;

else
select 
count(distinct szfsidid) as ifsidcount 
from 
bos_inv_fsid 
where 
szworkplaceid = p_szworkplaceid 
and dtmin >= p_dtmfrom 
and dtmin < interval '1 day' +  p_dtmto 
and szdriverid = p_szopuserid 
and	bvoid = 0 
and bapplied = 0 
and btprintedcount > 0;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsid_getlistofunappliedfsid(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select 
szfsidid 
from 
bos_inv_fsid 
where 
szworkplaceid = p_szworkplaceid 
and dtmin >= p_dtmfrom 
and dtmin < interval '1 day' +  p_dtmto
--and szdriverid = p_szopuserid 
and	bvoid = 0 
and bapplied = 0 
and btprintedcount > 0;

else
select 
szfsidid 
from 
bos_inv_fsid 
where 
szworkplaceid = p_szworkplaceid 
and dtmin >= p_dtmfrom 
and dtmin < interval '1 day' +  p_dtmto
and szdriverid = p_szopuserid 
and	bvoid = 0 
and bapplied = 0 
and btprintedcount > 0;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_createfsj(
p_szfsjid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmfsj timestamp,
p_szsalesid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_fsj
(
szfsjid,
szsalesorgid,
dtmfsj,
szsalesid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsjid,
p_szsalesorgid,
p_dtmfsj,
p_szsalesid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_createfsjitem(
p_szfsjid bos_dt_szid,
p_shitemnumber smallint,
p_szsjtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bsuccess bit)
returns void as
$body$
begin
insert into bos_sd_fsjitem
(
szfsjid,
shitemnumber,
szsjtrackingid,
szreasonid,
szdescription,
bsuccess
)
values
(
p_szfsjid,
p_shitemnumber,
p_szsjtrackingid,
p_szreasonid,
p_szdescription,
p_bsuccess
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_createsjtracking(
p_szsjtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szfsjid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint)
returns void as
$body$
begin
insert into bos_sd_sjtracking
(
szsjtrackingid,
szcustid,
szfcallid,
szsalesid,
szfsjid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount
)
values
(
p_szsjtrackingid,
p_szcustid,
p_szfcallid,
p_szsalesid,
p_szfsjid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_deletefsj(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fsj
where
szfsjid = p_szfsjid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_deletefsjitem(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fsjitem
where
szfsjid = p_szfsjid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_deletesjtracking(
p_szsjtrackingid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_sjtracking
where
szsjtrackingid = p_szsjtrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getactivesjtrackingidifexist(
p_szcustid bos_dt_szid,
p_dtmnext timestamp)
returns void as
$body$
begin
select 
szsjtrackingid

from 
bos_sd_sjtracking
where 
 szcustid = p_szcustid and bfinished = 0 and (dtmnext >= p_dtmnext and dtmnext < interval '1 day' +   p_dtmnext);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getfsj(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsj.szsalesorgid,
bos_sd_fsj.dtmfsj,
bos_sd_fsj.szsalesid,
coalesce(bos_pi_employee.szname, '') as szsalesname,
bos_sd_fsj.bresultfrtransfer,
bos_sd_fsj.bvoid,
bos_gen_approved.bapproved,
bos_sd_fsj.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fsj.btprintedcount,
bos_sd_fsj.btransferred,
bos_sd_fsj.szcompanyid,
bos_sd_fsj.szworkplaceid,
bos_sd_fsj.sztaxentityid,
bos_sd_fsj.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
-- data status.
bos_sd_fsj.dtmlastupdated,
bos_sd_fsj.balreadytransferred

from
((bos_sd_fsj left join bos_gen_approved on bos_sd_fsj.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_sd_fsj.szfjournalid = bos_gl_fjournaltrans.szfjournalid)
left join bos_pi_employee on bos_sd_fsj.szsalesid = bos_pi_employee.szemployeeid
where
bos_sd_fsj.szfsjid = p_szfsjid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getfsjitem(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
select 
shitemnumber,
szsjtrackingid,
szreasonid,
szdescription,
bsuccess

from 
bos_sd_fsjitem
where 
szfsjid = p_szfsjid 
order by 
shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofactivesjtracking(
p_szsalesid bos_dt_szid,
p_szcustid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select
bos_sd_sjtracking.szsjtrackingid,
bos_sd_sjtracking.szcustid,
case when bos_sd_sjtracking.szcustid = '' then coalesce(bos_crl_fcall.szname, '') else coalesce(bos_ar_customer.szname, '') end as szcustname,
bos_crl_fcall.szcallreasonid,
bos_crl_fcall.szmessage
from
bos_sd_sjtracking left join bos_ar_customer on bos_sd_sjtracking.szcustid = bos_ar_customer.szcustid
left join bos_crl_fcall on bos_sd_sjtracking.szfcallid = bos_crl_fcall.szfcallid
where
bos_sd_sjtracking.bfinished = 0 and
bos_sd_sjtracking.btasked = 0 and
bos_sd_sjtracking.szsalesid like p_szsalesid and
bos_sd_sjtracking.szcustid like p_szcustid and
(bos_sd_sjtracking.dtmnext  >= p_dtmstart and bos_sd_sjtracking.dtmnext < p_dtmend + 1);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistoffsj()
returns void as
$body$
begin
select 
szfsjid,
dtmfsj

from 
bos_sd_fsj;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofreportfsj(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
select 
bssi.szsjtrackingid,
coalesce(bcc.szname, '') as szcustname,
coalesce(bcc.szaddress_1, '') as szaddress,
coalesce(bcc.szphoneno_1, '') as szphoneno,
bcc.dtmfollowup, --check null
coalesce(bcc.szcontactperson, '') as szcontactperson,
coalesce(bcc.szcallreasonid, '') as szcallreasonid

from 
bos_sd_fsj as bss
inner join bos_sd_fsjitem as bssi on bss.szfsjid = bssi.szfsjid
inner join bos_sd_sjtracking as bst on bssi.szsjtrackingid = bst.szsjtrackingid
left join bos_crl_fcall as bcc on bst.szfcallid = bcc.szfcallid
where 
bss.szfsjid = p_szfsjid 
order by 
bss.szfsjid,
bssi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofsalesforsjprocess(
p_szworkplaceid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin
select 
distinct bos_sd_sjtracking.szsalesid, 
coalesce(bos_pi_employee.szname, '') as szsalesname
--coalesce(nullif('foo' ,''),'0')  
from 
bos_sd_sjtracking left join bos_pi_employee on bos_sd_sjtracking.szsalesid = bos_pi_employee.szemployeeid
where 
bos_sd_sjtracking.dtmnext >= p_dtmstart and bos_sd_sjtracking.dtmnext < interval '1 day' +   p_dtmend and bos_sd_sjtracking.btasked = 0 and bos_sd_sjtracking.bfinished = 0 and bos_crl_fcall.szforwardtoworkplaceid like p_szworkplaceid 
order by 
bos_sd_sjtracking.szsalesid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofsjtracking()
returns void as
$body$
begin
select 
szsjtrackingid,
dtmnext

from 
bos_sd_sjtracking;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofsjtrackingtoberescheduled(
p_szsalesid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select
bss.bfinished,
bss.bsuccess,
bss.szsalesid,
coalesce(bpe.szname, '') as szsalesname,
bss.szcustid,
case when bss.szcustid = '' then coalesce(bcf.szname, '') else coalesce(bac.szname, '') end as szcustname,
bss.dtmnext as dtmlastsalesdate,
coalesce(bsf.szfsjid, '') as szfsjid,
bss.szsjtrackingid,
coalesce(bss.szfcallid, '') as szfcallid,
coalesce(bsf.szreasonid, '') as szreasonid,
coalesce(bsf.szdescription, '') as szdescription
from
bos_sd_sjtracking as bss left join bos_pi_employee as bpe on bss.szsalesid = bpe.szemployeeid
left join bos_ar_customer as bac on bss.szcustid = bac.szcustid
left join bos_sd_fsjitem as bsf on bss.szfsjid = bsf.szfsjid and bss.szsjtrackingid = bsf.szsjtrackingid
left join bos_crl_fcall as bcf on bss.szfcallid = bcf.szfcallid
where
bss.szsalesid like p_szsalesid and
bss.bfinished = p_bfinished and
bss.dtmnext >= p_dtmfrom and bss.dtmnext < interval '1 day' +  p_dtmto
order by
bss.szsalesid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getlistofworkplaceofsales(
p_dtmstart timestamp,
p_dtmend timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
select 
distinct bos_crl_fcall.szforwardtoworkplaceid, bos_gl_workplace.szname

from 
bos_sd_sjtracking inner join bos_crl_fcall on bos_sd_sjtracking.szfcallid = bos_crl_fcall.szfcallid
where 
 bos_sd_sjtracking.btasked = 0 and bos_sd_sjtracking.bfinished = 0;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_getsjtracking(
p_szsjtrackingid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_sd_sjtracking.szcustid,
case when bos_sd_sjtracking.szcustid = '' then coalesce(bos_crl_fcall.szname, '') else coalesce(bos_ar_customer.szname, '') end as szcustname,
	coalesce(bos_crl_fcall.szaddress_1, '') as szaddress1,
	coalesce(bos_crl_fcall.szaddress_2, '') as szaddress2,
	coalesce(bos_crl_fcall.szzipcode, '') as szzipcode,
	bos_sd_sjtracking.szfcallid,
	bos_sd_sjtracking.szsalesid,
	coalesce(bos_pi_employee.szname, '') as szsalesname,
	bos_sd_sjtracking.szfsjid,
	bos_sd_sjtracking.bfinished,
	bos_sd_sjtracking.bsuccess,
	bos_sd_sjtracking.btasked,
	bos_sd_sjtracking.dtmnext,
	bos_sd_sjtracking.bttrialcount,
	coalesce(bos_sd_fsjitem.szreasonid, '') as szreasonid,
	coalesce(bos_sd_fsjitem.szdescription, '') as szdescription,
	coalesce(bos_crl_fcall.szcalltype, '') as szcalltype

from 
bos_sd_sjtracking left join bos_pi_employee on bos_sd_sjtracking.szsalesid = bos_pi_employee.szemployeeid
left join bos_ar_customer on bos_sd_sjtracking.szcustid = bos_ar_customer.szcustid
left join bos_crl_fcall on bos_sd_sjtracking.szfcallid = bos_crl_fcall.szfcallid
left join bos_sd_fsjitem on bos_sd_fsjitem.szfsjid = bos_sd_sjtracking.szfsjid and bos_sd_fsjitem.szsjtrackingid = bos_sd_sjtracking.szsjtrackingid
where 
bos_sd_sjtracking.szsjtrackingid = p_szsjtrackingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_isfsjcreated(
p_szsalesid bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_dtmautofsj timestamp)
returns void as
$body$
begin
select 
szfsjid

from 
bos_sd_fsj
where 
bvoid = 0 and szsalesid = p_szsalesid and szworkplaceid = p_szworkplaceid and (dtmfsj >= p_dtmautofsj and dtmfsj < p_dtmautofsj + 1) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_isfsjexist(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
select 
szfsjid

from 
bos_sd_fsj
where 
szfsjid = p_szfsjid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_issjtrackingexist(
p_szsjtrackingid bos_dt_szid)
returns void as
$body$
begin
select 
szsjtrackingid

from 
bos_sd_sjtracking
where 
szsjtrackingid = p_szsjtrackingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_lockfsj(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsj
set 
btransferred = btransferred
where 
szfsjid = p_szfsjid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_locksjtracking(
p_szsjtrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_sjtracking
set 
bsuccess = bsuccess
where 
szsjtrackingid = p_szsjtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_markfsjapplied(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsj
set 
bapplied = 1
where 
szfsjid=p_szfsjid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_markfsjvoid(
p_szfsjid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsj
set 
bvoid = 1
where 
szfsjid = p_szfsjid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_marksjtracking(
p_szsjtrackingid bos_dt_szid,
p_btasked bit,
p_bfinished bit,
p_dtmnext timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_sjtracking
set 
btasked = p_btasked,
bfinished = p_bfinished,
dtmnext = p_dtmnext,
szsalesid = p_szsalesid
where 
szsjtrackingid = p_szsjtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_marksjtrackingtasked(
p_szsjtrackingid bos_dt_szid,
p_btasked bit)
returns void as
$body$
begin
update bos_sd_sjtracking
set 
btasked = p_btasked
where 
szsjtrackingid = p_szsjtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_updatefsj(
p_szfsjid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_dtmfsj timestamp,
p_szsalesid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsj
set 
szsalesorgid = p_szsalesorgid,
dtmfsj = p_dtmfsj,
szsalesid = p_szsalesid,
bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid
where 
szfsjid = p_szfsjid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_updatefsjitemreason(
p_szfsjid bos_dt_szid,
p_szsjtrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_fsjitem
set 
szreasonid = p_szreasonid,
szdescription = p_szdescription
where 
szfsjid = p_szfsjid and
szsjtrackingid = p_szsjtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsj_updatesjtracking(
p_szsjtrackingid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szfcallid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szfsjid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint)
returns void as
$body$
begin
update bos_sd_sjtracking
set 
szcustid = p_szcustid,
szfcallid = p_szfcallid,
szsalesid = p_szsalesid,
szfsjid = p_szfsjid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount
where 
szsjtrackingid = p_szsjtrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_createfsncorrection(
p_szfsncorrectionid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decaddqty bos_dt_decamount,
p_decdeleteqty bos_dt_decamount,
p_szremark varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_fsncorrection
(
szfsncorrectionid,
dtmdoc,
szcustid,
szproductid,
decaddqty,
decdeleteqty,
szremark,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szfsncorrectionid,
p_dtmdoc,
p_szcustid,
p_szproductid,
p_decaddqty,
p_decdeleteqty,
p_szremark,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_createfsncorrectionitem(
p_szfsncorrectionid bos_dt_szid,
p_shitemnumber smallint,
p_szproductsn bos_dt_szsn,
p_shstatussn smallint,
p_btrouble bit,
p_sztroubledesc varchar,
p_szstocktypeid bos_dt_szid,
p_dtmrentstartdate timestamp,
p_szrentchargecalcid bos_dt_szid,
p_decrentprice bos_dt_decamount,
p_szcurrencyid bos_dt_szid,
p_szorderitemtype varchar,
p_szstatusid varchar,
p_btaxable bit,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fsncorrectionitem
(
szfsncorrectionid,
shitemnumber,
szproductsn,
shstatussn,
btrouble,
sztroubledesc,
szstocktypeid,
dtmrentstartdate,
szrentchargecalcid,
decrentprice,
szcurrencyid,
szorderitemtype,
szstatusid,
btaxable,
szreasonid
)
values
(
p_szfsncorrectionid,
p_shitemnumber,
p_szproductsn,
p_shstatussn,
p_btrouble,
p_sztroubledesc,
p_szstocktypeid,
p_dtmrentstartdate,
p_szrentchargecalcid,
p_decrentprice,
p_szcurrencyid,
p_szorderitemtype,
p_szstatusid,
p_btaxable,
p_szreasonid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_deletefsncorrection(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fsncorrection
where
szfsncorrectionid = p_szfsncorrectionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_deletefsncorrectionitem(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fsncorrectionitem
where
szfsncorrectionid = p_szfsncorrectionid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_getfsncorrection(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fsncorrection.dtmdoc,
bos_sd_fsncorrection.szcustid,
bos_ar_customer.szname as szcustnm,

bos_sd_fsncorrection.szproductid,
bos_inv_product.szname as szproductnm,
bos_inv_product.szuomid as szproductuomid_j,

bos_sd_fsncorrection.decaddqty,
bos_sd_fsncorrection.decdeleteqty,
bos_sd_fsncorrection.szremark,
bos_sd_fsncorrection.bresultfrtransfer,
bos_sd_fsncorrection.bvoid,
bos_gen_approved.bapproved,
bos_sd_fsncorrection.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fsncorrection.btprintedcount,
bos_sd_fsncorrection.btransferred,
bos_sd_fsncorrection.szcompanyid,
bos_sd_fsncorrection.szworkplaceid,
bos_sd_fsncorrection.sztaxentityid,
bos_sd_fsncorrection.bneedapproval,
bos_sd_fsncorrection.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_gl_company.szname as szcompanynm,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fsncorrection.dtmcreated,
bos_sd_fsncorrection.bsystemcreated,
bos_sd_fsncorrection.szuserid,
coalesce(bos_sm_user.szname,'') as szusernm_j,

bos_sd_fsncorrection.dtmlastupdated,
bos_sd_fsncorrection.balreadytransferred

from
bos_sd_fsncorrection
left join bos_gen_approved on bos_sd_fsncorrection.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_sd_fsncorrection.szfjournalid=bos_gl_fjournaltrans.szfjournalid
left join bos_inv_product on bos_sd_fsncorrection.szproductid=bos_inv_product.szproductid
left join bos_ar_customer on bos_sd_fsncorrection.szcustid=bos_ar_customer.szcustid
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fsncorrection.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fsncorrection.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fsncorrection.szuserid

where
bos_sd_fsncorrection.szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_getfsncorrectionitem(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
select 
szfsncorrectionid,
shitemnumber,
szproductsn,
shstatussn,
btrouble,
sztroubledesc,
szstocktypeid,
dtmrentstartdate,
szrentchargecalcid,
decrentprice,
szcurrencyid,
szorderitemtype,
szstatusid,
btaxable,
szreasonid


from 
bos_sd_fsncorrectionitem
where 
szfsncorrectionid = p_szfsncorrectionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_getlistoffsncorrection()
returns void as
$body$
begin
select 
szfsncorrectionid,
dtmdoc

from 
bos_sd_fsncorrection;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_isfsncorrectionexist(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
select 
szfsncorrectionid

from 
bos_sd_fsncorrection
where 
szfsncorrectionid = p_szfsncorrectionid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_lockfsncorrection(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsncorrection
set 
btransferred = btransferred
where 
szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_markfsncorrectionapplied(
p_szfsncorrectionid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsncorrection
set 
bapplied=1
where 
szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_markfsncorrectiontransferred(
p_szfsncorrectionid bos_dt_szid,
p_btransferred bit)
returns void as
$body$
begin
update bos_sd_fsncorrection
set 
btransferred = p_btransferred
where 
szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_markfsncorrectionvoid(
p_szfsncorrectionid bos_dt_szid,
p_gdapprovedid bytea)
returns void as
$body$
begin
update bos_sd_fsncorrection
set 
bvoid = 1,
bneedapproval = 0,
gdapprovedid = p_gdapprovedid
where 
szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fsncorrection_updatefsncorrection(
p_szfsncorrectionid bos_dt_szid,
p_dtmdoc timestamp,
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_decaddqty bos_dt_decamount,
p_decdeleteqty bos_dt_decamount,
p_szremark varchar,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated smallint,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsncorrection
set 
dtmdoc = p_dtmdoc,
szcustid = p_szcustid,
szproductid = p_szproductid,
decaddqty = p_decaddqty,
decdeleteqty = p_decdeleteqty,
szremark = p_szremark,

bvoid=p_bvoid,
bapplied=p_bapplied,
szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid



where 
szfsncorrectionid = p_szfsncorrectionid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_countunappliedfso(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(distinct bos_sd_fso.szfsoid) as cntfsocount
from
bos_sd_fso
inner join bos_sd_fsoitem on bos_sd_fsoitem.szfsoid = bos_sd_fso.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid
and bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0
and bos_sd_fso.dtmorder >= p_dtmfrom and bos_sd_fso.dtmorder < interval '1 day' +  p_dtmto;
--and bos_sd_fso.szsalesid = p_szopuserid
else
select
count(distinct bos_sd_fso.szfsoid) as cntfsocount
from
bos_sd_fso
inner join bos_sd_fsoitem on bos_sd_fsoitem.szfsoid = bos_sd_fso.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid
and bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0
and bos_sd_fso.dtmorder >= p_dtmfrom and bos_sd_fso.dtmorder < interval '1 day' +  p_dtmto
and bos_sd_fso.szsalesid = p_szopuserid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_countunappliedfso_014(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
count(distinct bos_sd_fso.szfsoid) as cntfsocount
from
bos_sd_fso
inner join bos_sd_fsoitem on bos_sd_fsoitem.szfsoid = bos_sd_fso.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid
and bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0
and bos_sd_fso.dtmorder >= p_dtmfrom and bos_sd_fso.dtmorder < interval '1 day' +  p_dtmto;
--and bos_sd_fso.szsalesid = p_szopuserid
else
select
count(distinct bos_sd_fso.szfsoid) as cntfsocount
from
bos_sd_fso
inner join bos_sd_fsoitem on bos_sd_fsoitem.szfsoid = bos_sd_fso.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid
and bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0
and bos_sd_fso.dtmorder >= p_dtmfrom and bos_sd_fso.dtmorder < interval '1 day' +  p_dtmto
and bos_sd_fso.szsalesid = p_szopuserid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfso(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szcompletedfinvoiceid bos_dt_szid,
p_szfirstcompletedfinvoiceid bos_dt_szid,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fso
(
szfsoid      ,
szsalesorgid      ,
szordertypeid      ,
dtmorder      ,
dtmprice      ,
szcustid      ,
decamount      ,
dectax      ,
decdownpayment      ,
szstatus      ,
szccyid      ,
szccyrateid      ,
decccyrate      ,
szfinvoiceid      ,
szcompletedfinvoiceid      ,
szfirstcompletedfinvoiceid      ,
bdropship      ,
szsalesid      ,
szsalessupervisorid      ,
szsalessupervisorid_2      ,
szsalessupervisorid_3      ,
szsalesdivisionid      ,
szsalesdepartmentid      ,
szsalesteamid      ,
szremark      ,
szlatitude      ,
szlongitude      ,
szcustpoid      ,
dtmcustpo      ,
bcash      ,
gdcreditlimitapprovedid      ,
bneedfinvoice      ,
szpaymenttermid      ,
bresultfrtransfer      ,
bvoid      ,
bapplied      ,
btprintedcount      ,
btransferred      ,
szcompanyid      ,
szworkplaceid      ,
sztaxentityid      ,
bneedapproval      ,
gdapprovedid      ,
szfjournalid      ,
dtmcreated      ,
bsystemcreated      ,
szuserid      ,
-- data status.      ,
dtmlastupdated      ,
balreadytransferred      ,
-- weight and volume      ,
dectonase      ,
deccubication      ,
buploadedfrommodis      ,
szfdoreffid    ,
dtmstartvisit    ,
dtmendvisit    ,
decvisitspendtime  ,
bscansuccess  ,
szscanfailreason      
      
)
values
(
p_szfsoid,
p_szsalesorgid,
p_szordertypeid,
p_dtmorder,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_decdownpayment,
p_szstatus,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szcompletedfinvoiceid,
p_szfirstcompletedfinvoiceid,
p_bdropship,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_bcash,
p_gdcreditlimitapprovedid,
p_bneedfinvoice,
p_szpaymenttermid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- weight and volume,
p_dectonase,
p_deccubication,
p_buploadedfrommodis,
p_szfdoreffid,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_bscansuccess,
p_szscanfailreason
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfso_013(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_szfinvoiceid bos_dt_szid,
p_szcompletedfinvoiceid bos_dt_szid,
p_szfirstcompletedfinvoiceid bos_dt_szid,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_decjourneyspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_adcid bos_dt_szid,
p_dtmexpiration timestamp)
returns void as
$body$
begin
insert into bos_sd_fso
(
szfsoid        ,
szsalesorgid        ,
szordertypeid        ,
dtmorder        ,
dtmprice        ,
szcustid        ,
decamount        ,
dectax        ,
decdownpayment        ,
szstatus        ,
szccyid        ,
szccyrateid        ,
decccyrate        ,
szfinvoiceid        ,
szcompletedfinvoiceid        ,
szfirstcompletedfinvoiceid        ,
bdropship        ,
szsalesid        ,
szsalessupervisorid        ,
szsalessupervisorid_2        ,
szsalessupervisorid_3        ,
szsalesdivisionid        ,
szsalesdepartmentid        ,
szsalesteamid        ,
szremark        ,
szlatitude        ,
szlongitude        ,
szcustpoid        ,
dtmcustpo        ,
bcash        ,
gdcreditlimitapprovedid        ,
bneedfinvoice        ,
szpaymenttermid        ,
bresultfrtransfer        ,
bvoid        ,
bapplied        ,
btprintedcount        ,
btransferred        ,
szcompanyid        ,
szworkplaceid        ,
sztaxentityid        ,
bneedapproval        ,
gdapprovedid        ,
szfjournalid        ,
dtmcreated        ,
bsystemcreated        ,
szuserid        ,
-- data status.        ,
dtmlastupdated        ,
balreadytransferred        ,
-- weight and volume        ,
dectonase        ,
deccubication        ,
buploadedfrommodis        ,
szfdoreffid      ,
dtmstartvisit      ,
dtmendvisit      ,
decvisitspendtime,
decjourneyspendtime    ,
bscansuccess    ,
szscanfailreason,
szbarcodescanfailreason,
adcid,
dtmexpiration        
      
)
values
(
p_szfsoid,
p_szsalesorgid,
p_szordertypeid,
p_dtmorder,
p_dtmprice,
p_szcustid,
p_decamount,
p_dectax,
p_decdownpayment,
p_szstatus,
p_szccyid,
p_szccyrateid,
p_decccyrate,
p_szfinvoiceid,
p_szcompletedfinvoiceid,
p_szfirstcompletedfinvoiceid,
p_bdropship,
p_szsalesid,
p_szsalessupervisorid,
p_szsalessupervisorid_2,
p_szsalessupervisorid_3,
p_szsalesdivisionid,
p_szsalesdepartmentid,
p_szsalesteamid,
p_szremark,
p_szlatitude,
p_szlongitude,
p_szcustpoid,
p_dtmcustpo,
p_bcash,
p_gdcreditlimitapprovedid,
p_bneedfinvoice,
p_szpaymenttermid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
-- weight and volume,
p_dectonase,
p_deccubication,
p_buploadedfrommodis,
p_szfdoreffid,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_decjourneyspendtime,
p_bscansuccess,
p_szscanfailreason,
p_szbarcodescanfailreason,
p_adcid,
p_dtmexpiration
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fsoitem
(
szfsoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- cubication and tonase,
dectonase,
deccubication,
szparentid
)
values
(
p_szfsoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- tonase and cubication,
p_dectonase,
p_deccubication,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitem_013(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fsoitem
(
szfsoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- cubication and tonase,
dectonase,
deccubication,
szparentid
)
values
(
p_szfsoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- tonase and cubication,
p_dectonase,
p_deccubication,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitem_014(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
insert into bos_sd_fsoitem
(
szfsoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- cubication and tonase,
dectonase,
deccubication,
szparentid,
szdistproductid,
decdistqty,
decdistprice
)
values
(
p_szfsoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- tonase and cubication,
p_dectonase,
p_deccubication,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitem_015(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_fsoitem
(
szfsoid,
shitemnumber,
szorderitemtypeid,
szproductid,
szpriceid,
szpriceorderid,
decdiscprocent,
dtmpricedate,
decqty,
decuomqty,
szuomid,
decprice,
decdiscount,
btaxable,
dectax,
decamount,
decdpp,
szpaymenttype,
szprincipaldiscrefid,
-- cubication and tonase,
dectonase,
deccubication,
szparentid,
szdistproductid,
decdistqty,
decdistprice,
szbudgetid,
decprincipalcostamount,
decprincipalcostqty,
bbudgettransferred
)
values
(
p_szfsoid,
p_shitemnumber,
p_szorderitemtypeid,
p_szproductid,
p_szpriceid,
p_szpriceorderid,
p_decdiscprocent,
p_dtmpricedate,
p_decqty,
p_decuomqty,
p_szuomid,
p_decprice,
p_decdiscount,
p_btaxable,
p_dectax,
p_decamount,
p_decdpp,
p_szpaymenttype,
p_szprincipaldiscrefid,
-- tonase and cubication,
p_dectonase,
p_deccubication,
p_szparentid,
p_szdistproductid,
p_decdistqty,
p_decdistprice,
p_szbudgetid,
p_decprincipalcostamount,
p_decprincipalcostqty,
p_bbudgettransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitembonussource(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fsoitembonussource
(
szfsoid,
shitemnumber,
szproductid,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfsoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitembonussource_014(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_fsoitembonussource
(
szfsoid,
shitemnumber,
szproductid,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty,
szparentid
)
values
(
p_szfsoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty,
p_szparentid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitemdelivery(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmdelivery timestamp,
p_szcustid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szfromwpid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_decremainingqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fsoitemdelivery
(
szfsoid,
shitemnumber,
dtmdelivery,
szcustid,
decqty,
szfromwpid,
szdjrtrackingid,
szfdoid,
decremainingqty
)
values
(
p_szfsoid,
p_shitemnumber,
p_dtmdelivery,
p_szcustid,
p_decqty,
p_szfromwpid,
p_szdjrtrackingid,
p_szfdoid,
p_decremainingqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitemdelivery_013(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmdelivery timestamp,
p_szcustid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szfromwpid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_decremainingqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fsoitemdelivery
(
szfsoid,
shitemnumber,
dtmdelivery,
szcustid,
decqty,
szfromwpid,
szdjrtrackingid,
szfdoid,
decremainingqty
)
values
(
p_szfsoid,
p_shitemnumber,
p_dtmdelivery,
p_szcustid,
p_decqty,
p_szfromwpid,
p_szdjrtrackingid,
p_szfdoid,
p_decremainingqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoitemreason(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szreasonid bos_dt_szid,
p_decqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fsoitemreason
(
szfsoid,
shitemnumber,
szreasonid,
decqty
)
values
(
p_szfsoid,
p_shitemnumber,
p_szreasonid,
p_decqty
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoproductdepositbonusitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szorderitemtypeid bos_dt_szid,
p_bgenbytotal smallint)
returns void as
$body$
begin
insert into bos_sd_fsoproductdepositbonusitem
(
szfsoid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
bgenbytotal
)
values
(
p_szfsoid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_bgenbytotal
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_createfsoproductdepositbonusitembonussource(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
insert into bos_sd_fsoproductdepositbonusitembonussource
(
szfsoid,
shitemnumber,
szproductid,
szorderitemtypeid,
szpaymenttype,
decbonusamount,
decbonusqty
)
values
(
p_szfsoid,
p_shitemnumber,
p_szproductid,
p_szorderitemtypeid,
p_szpaymenttype,
p_decbonusamount,
p_decbonusqty
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefso(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete from bos_sd_fso
where
	szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitem(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fsoitem
where
szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitem_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_fsoitem
where
szfsoid = p_szfsoid and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitembonussource(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete from  bos_sd_fsoitembonussource
where
	szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitembonussource_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid)
returns void as
$body$
begin
delete from
bos_sd_fsoitembonussource
where
szfsoid = p_szfsoid and shitemnumber = p_shitemnumber 
and szproductid = p_szproductid 
and szorderitemtypeid = p_szorderitemtypeid 
and szpaymenttype = p_szpaymenttype;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitemdelivery(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_fsoitemdelivery
where
szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitemdelivery_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmdelivery timestamp,
p_szcustid bos_dt_szid,
p_szfromwpid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fsoitemdelivery
where
szfsoid = p_szfsoid 
and shitemnumber = p_shitemnumber 
and dtmdelivery = p_dtmdelivery 
and szcustid = p_szcustid 
and szfromwpid = p_szfromwpid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoitemreason(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fsoitemreason
where
 szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoproductdepositbonusitem(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_fsoproductdepositbonusitem
where
szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_deletefsoproductdepositbonusitembonussource(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
delete from  bos_sd_fsoproductdepositbonusitembonussource
where
	szfsoid = p_szfsoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfso(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin

select      
bos_sd_fso.szfsoid,      
bos_sd_fso.szsalesorgid,      

bos_sd_fso.szordertypeid,      
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,      
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,      

bos_sd_fso.dtmorder,      
bos_sd_fso.dtmprice,      

bos_sd_fso.szcustid,      
bos_ar_customer.szname as szcustnm_j,      
custsales.ballowtocredit as bcustallowtocredit_j,      

custloc.locationszcontactperson,      
custloc.locationszroomno,      
custloc.locationszfloor,      
custloc.locationszbuilding,      
custloc.locationszaddress_1,      
custloc.locationszaddress_2,      
custloc.locationszdistrict,      
custloc.locationszcity,      
custloc.locationszzipcode,      
custloc.locationszstate,      
custloc.locationszcountry,      
custloc.locationszphoneno_1,      
custloc.locationszphoneno_2,      
custloc.locationszfaxno,      
custloc.locationszmobileno,      
custloc.locationszemail,      
custloc.locationszwebsite,      

bos_sd_fso.decamount,      
bos_sd_fso.dectax,      

bos_sd_fso.szccyid,      
bos_cu_currency.szamountformat as szccyamountformat_j,      

bos_sd_fso.szccyrateid,      
bos_sd_fso.decccyrate,      

bos_sd_fso.szfinvoiceid,      
art.bclosed as bpaid_j,      

bos_sd_fso.szcompletedfinvoiceid,      
bos_sd_fso.szfirstcompletedfinvoiceid,      
completed_art.bclosed as bcompletedpaid_j,      

bos_sd_fso.bdropship,      

bos_sd_fso.szsalesid,      
sales.szname as szsalesnm_j,      

bos_sd_fso.szsalessupervisorid,      
bos_sd_fso.szsalessupervisorid_2,      
bos_sd_fso.szsalessupervisorid_3,      
bos_sd_fso.szsalesdivisionid,      
bos_sd_fso.szsalesdepartmentid,      
bos_sd_fso.szsalesteamid,      

bos_sd_fso.szstatus,      
bos_sd_fso.decdownpayment,      

bos_sd_fso.szremark,      
bos_sd_fso.szlatitude,      
bos_sd_fso.szlongitude,      

bos_sd_fso.szcustpoid,      
bos_sd_fso.dtmcustpo,      

bos_sd_fso.bcash,      

bos_sd_fso.gdcreditlimitapprovedid,      
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,      
creditlimitapproved.bapproved as bcreditlimitapproved_j,      

bos_sd_fso.bneedfinvoice,      

bos_sd_totracking.sztotrackingid as sztotrackingid_j,      

--customer's collection info      
bsr.szrouteid as szcollrouteid,      
bsr.szdescription as szcollroutedescription,      
bsr.szopuserid as szcollectorid,      
bpe.szname as szcollectornm,      

bos_sd_fso.szpaymenttermid,      

bos_sd_fso.bresultfrtransfer,      
bos_sd_fso.bvoid,      
bos_gen_approved.bapproved,      
bos_sd_fso.bapplied,      
bos_gl_fjournaltrans.szfjournalid as bjournal,      
bos_gl_fjournaltrans.bposted,      
bos_sd_fso.btprintedcount,      
bos_sd_fso.btransferred,      
bos_sd_fso.szcompanyid,      
bos_gl_company.szname as szcompanynm,      
bos_sd_fso.szworkplaceid,      
bos_gl_workplace.szname as szworkplacenm,      
bos_sd_fso.sztaxentityid,      
bos_sd_fso.bneedapproval,      
bos_gen_approved.gdapprovedid,      
bos_gen_approved.szapprovalid,      
bos_gl_fjournaltrans.szfjournalid,      

bos_sd_fso.dtmcreated,      
bos_sd_fso.bsystemcreated,      

bos_sd_fso.szuserid,      
bos_sm_user.szname as szusernm_j,      

-- data status.      
bos_sd_fso.dtmlastupdated,      
bos_sd_fso.balreadytransferred,      

-- weight and volume      
bos_sd_fso.dectonase,      
bos_sd_fso.deccubication,      
bos_sd_fso.buploadedfrommodis,      
bos_sd_fso.szfdoreffid,    
bos_sd_fso.dtmstartvisit,    
bos_sd_fso.dtmendvisit,    
bos_sd_fso.decvisitspendtime,  
bos_sd_fso.bscansuccess,  
bos_sd_fso.szscanfailreason  
from      
bos_sd_fso       
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fso.gdcreditlimitapprovedid      
left join bos_gen_approved on bos_sd_fso.gdapprovedid = bos_gen_approved.gdapprovedid      
left join bos_gl_fjournaltrans on bos_sd_fso.szfjournalid = bos_gl_fjournaltrans.szfjournalid      

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fso.szsalesid      

left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fso.szcustid      

left join bos_ar_custlocation custloc on custloc.szcustid = bos_ar_customer.szdelivertocustid      
and custloc.btlocid = 0      

left join bos_sd_totracking on bos_sd_totracking.szfsoid = bos_sd_fso.szfsoid      

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fso.szcompanyid      
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid      

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid      

--allow to credit or not is based on original customer, not from invoice to customer.      
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid      

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid      
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid      
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid      
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid      
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid      
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fso.szuserid      

left join bos_ar_artrans as art on art.sztrnid = 'finv' and art.szdocid = bos_sd_fso.szfinvoiceid      

left join bos_ar_artrans as completed_art on completed_art.sztrnid = 'finv'      
and completed_art.szdocid = bos_sd_fso.szcompletedfinvoiceid      

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fso.szordertypeid      

where      
bos_sd_fso.szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfso_013(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin

select        
bos_sd_fso.szfsoid,        
bos_sd_fso.szsalesorgid,        

bos_sd_fso.szordertypeid,        
bos_inv_ordertype.ballowmanualprice as bordertypeallowmanualprice_j,        
bos_inv_ordertype.ballowtochangelinepricedate as bordertypeallowtochangelinepricedate_j,        

bos_sd_fso.dtmorder,        
bos_sd_fso.dtmprice,        

bos_sd_fso.szcustid,        
bos_ar_customer.szname as szcustnm_j,        
custsales.ballowtocredit as bcustallowtocredit_j,        

custloc.locationszcontactperson,        
custloc.locationszroomno,        
custloc.locationszfloor,        
custloc.locationszbuilding,        
custloc.locationszaddress_1,        
custloc.locationszaddress_2,        
custloc.locationszdistrict,        
custloc.locationszcity,        
custloc.locationszzipcode,        
custloc.locationszstate,        
custloc.locationszcountry,        
custloc.locationszphoneno_1,        
custloc.locationszphoneno_2,        
custloc.locationszfaxno,        
custloc.locationszmobileno,        
custloc.locationszemail,        
custloc.locationszwebsite,        

bos_sd_fso.decamount,        
bos_sd_fso.dectax,        

bos_sd_fso.szccyid,        
bos_cu_currency.szamountformat as szccyamountformat_j,        

bos_sd_fso.szccyrateid,        
bos_sd_fso.decccyrate,        

bos_sd_fso.szfinvoiceid,        
art.bclosed as bpaid_j,        

bos_sd_fso.szcompletedfinvoiceid,        
bos_sd_fso.szfirstcompletedfinvoiceid,        
completed_art.bclosed as bcompletedpaid_j,        

bos_sd_fso.bdropship,        

bos_sd_fso.szsalesid,        
sales.szname as szsalesnm_j,        

bos_sd_fso.szsalessupervisorid,        
bos_sd_fso.szsalessupervisorid_2,        
bos_sd_fso.szsalessupervisorid_3,        
bos_sd_fso.szsalesdivisionid,        
bos_sd_fso.szsalesdepartmentid,        
bos_sd_fso.szsalesteamid,        

bos_sd_fso.szstatus,        
bos_sd_fso.decdownpayment,        

bos_sd_fso.szremark,        
bos_sd_fso.szlatitude,        
bos_sd_fso.szlongitude,        

bos_sd_fso.szcustpoid,        
bos_sd_fso.dtmcustpo,        

bos_sd_fso.bcash,        

bos_sd_fso.gdcreditlimitapprovedid,        
creditlimitapproved.szapprovalid as szcreditlimitapprovalid_j,        
creditlimitapproved.bapproved as bcreditlimitapproved_j,        

bos_sd_fso.bneedfinvoice,        

bos_sd_totracking.sztotrackingid as sztotrackingid_j,        

--customer's collection info        
bsr.szrouteid as szcollrouteid,        
bsr.szdescription as szcollroutedescription,        
bsr.szopuserid as szcollectorid,        
bpe.szname as szcollectornm,        

bos_sd_fso.szpaymenttermid,        

bos_sd_fso.bresultfrtransfer,        
bos_sd_fso.bvoid,        
bos_gen_approved.bapproved,        
bos_sd_fso.bapplied,        
bos_gl_fjournaltrans.szfjournalid as bjournal,        
bos_gl_fjournaltrans.bposted,        
bos_sd_fso.btprintedcount,        
bos_sd_fso.btransferred,        
bos_sd_fso.szcompanyid,        
bos_gl_company.szname as szcompanynm,        
bos_sd_fso.szworkplaceid,        
bos_gl_workplace.szname as szworkplacenm,        
bos_sd_fso.sztaxentityid,        
bos_sd_fso.bneedapproval,        
bos_gen_approved.gdapprovedid,        
bos_gen_approved.szapprovalid,        
bos_gl_fjournaltrans.szfjournalid,        

bos_sd_fso.dtmcreated,        
bos_sd_fso.bsystemcreated,        

bos_sd_fso.szuserid,        
bos_sm_user.szname as szusernm_j,        

-- data status.        
bos_sd_fso.dtmlastupdated,        
bos_sd_fso.balreadytransferred,        

-- weight and volume        
bos_sd_fso.dectonase,        
bos_sd_fso.deccubication,        
bos_sd_fso.buploadedfrommodis,        
bos_sd_fso.szfdoreffid,      
bos_sd_fso.dtmstartvisit,      
bos_sd_fso.dtmendvisit,      
bos_sd_fso.decvisitspendtime,
bos_sd_fso.decjourneyspendtime,    
bos_sd_fso.bscansuccess,    
bos_sd_fso.szscanfailreason,
bos_sd_fso.szbarcodescanfailreason,
bos_sd_fso.adcid,
bos_sd_fso.dtmexpiration
from        
bos_sd_fso         
left join bos_gen_approved as creditlimitapproved on creditlimitapproved.gdapprovedid = bos_sd_fso.gdcreditlimitapprovedid        
left join bos_gen_approved on bos_sd_fso.gdapprovedid = bos_gen_approved.gdapprovedid        
left join bos_gl_fjournaltrans on bos_sd_fso.szfjournalid = bos_gl_fjournaltrans.szfjournalid        

left join bos_pi_employee as sales on sales.szemployeeid = bos_sd_fso.szsalesid        

left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fso.szcustid        

left join bos_ar_custlocation custloc on custloc.szcustid = bos_ar_customer.szdelivertocustid        
and custloc.btlocid = 0        

left join bos_sd_totracking on bos_sd_totracking.szfsoid = bos_sd_fso.szfsoid        

left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fso.szcompanyid        
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fso.szworkplaceid        

left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid        

--allow to credit or not is based on original customer, not from invoice to customer.        
left join bos_ar_custsales as custsales on custsales.szcustid = bos_ar_customer.szcustid        

left join bos_ar_customer as collcust on collcust.szcustid = invcust.szcollecttocustid        
left join bos_sd_custcollroutine as bsccr on bsccr.szcustid = collcust.szcustid        
left join bos_sd_route as bsr on bsr.szrouteid = bsccr.szdefaultrouteid        
left join bos_pi_employee as bpe on bpe.szemployeeid = bsr.szopuserid        
left join bos_cu_currency on bos_cu_currency.szccyid = bos_sd_fso.szccyid        
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fso.szuserid        

left join bos_ar_artrans as art on art.sztrnid = 'finv' and art.szdocid = bos_sd_fso.szfinvoiceid        

left join bos_ar_artrans as completed_art on completed_art.sztrnid = 'finv'        
and completed_art.szdocid = bos_sd_fso.szcompletedfinvoiceid        

left join bos_inv_ordertype on bos_inv_ordertype.szordertypeid = bos_sd_fso.szordertypeid        

where        
bos_sd_fso.szfsoid = p_szfsoid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitem(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsoitem.shitemnumber,

bos_sd_fsoitem.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,

bos_sd_fsoitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp

, bos_sd_fsoitem.szpriceid,
bos_sd_fsoitem.szpriceorderid,
bos_sd_fsoitem.decdiscprocent,

bos_sd_fsoitem.dtmpricedate,

bos_sd_fsoitem.decqty,
bos_sd_fsoitem.decuomqty,

bos_sd_fsoitem.szuomid,
bos_sd_fsoitem.decprice,
bos_sd_fsoitem.decdiscount,
bos_sd_fsoitem.btaxable,
bos_sd_fsoitem.dectax,
bos_sd_fsoitem.decamount,
bos_sd_fsoitem.decdpp,
bos_sd_fsoitem.szpaymenttype,
bos_sd_fsoitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j,

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,

-- cubication and tonase
bos_sd_fsoitem.dectonase,
bos_sd_fsoitem.deccubication,

bos_sd_fsoitem.szparentid,
parent.szname as szparentnm_j,

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j


from 
bos_sd_fsoitem 
left join bos_sd_fso as bsf on bsf.szfsoid = bos_sd_fsoitem.szfsoid
left join bos_inv_product on bos_sd_fsoitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_fsoitem.szparentid = parent.szproductid
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fsoitem.szorderitemtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on prdiscref.szprincipaldiscrefid = bos_sd_fsoitem.szprincipaldiscrefid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid	
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fso.szcustid 
and bos_ar_customerproductitem.szproductid = bos_sd_fsoitem.szproductid
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid
and bgwp.szproductid = bos_sd_fsoitem.szproductid

where 
bos_sd_fsoitem.szfsoid = p_szfsoid

order by
bos_sd_fsoitem.shitemnumber;

-- ==================================================================

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitem_014(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsoitem.shitemnumber,

bos_sd_fsoitem.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,

bos_sd_fsoitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp

, bos_sd_fsoitem.szpriceid,
bos_sd_fsoitem.szpriceorderid,
bos_sd_fsoitem.decdiscprocent,

bos_sd_fsoitem.dtmpricedate,

bos_sd_fsoitem.decqty,
bos_sd_fsoitem.decuomqty,

bos_sd_fsoitem.szuomid,
bos_sd_fsoitem.decprice,
bos_sd_fsoitem.decdiscount,
bos_sd_fsoitem.btaxable,
bos_sd_fsoitem.dectax,
bos_sd_fsoitem.decamount,
bos_sd_fsoitem.decdpp,
bos_sd_fsoitem.szpaymenttype,
bos_sd_fsoitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j,

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,

-- cubication and tonase
bos_sd_fsoitem.dectonase,
bos_sd_fsoitem.deccubication,

bos_sd_fsoitem.szparentid,
parent.szname as szparentnm_j,

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j


from 
bos_sd_fsoitem 
left join bos_sd_fso as bsf on bsf.szfsoid = bos_sd_fsoitem.szfsoid
left join bos_inv_product on bos_sd_fsoitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_fsoitem.szparentid = parent.szproductid
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fsoitem.szorderitemtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on prdiscref.szprincipaldiscrefid = bos_sd_fsoitem.szprincipaldiscrefid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid    
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fso.szcustid 
and bos_ar_customerproductitem.szproductid = bos_sd_fsoitem.szproductid
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid
and bgwp.szproductid = bos_sd_fsoitem.szproductid

where 
bos_sd_fsoitem.szfsoid = p_szfsoid

order by
bos_sd_fsoitem.shitemnumber;

-- ==================================================================

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitem_015(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsoitem.shitemnumber,

bos_sd_fsoitem.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,

bos_sd_fsoitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp

, bos_sd_fsoitem.szpriceid,
bos_sd_fsoitem.szpriceorderid,
bos_sd_fsoitem.decdiscprocent,

bos_sd_fsoitem.dtmpricedate,

bos_sd_fsoitem.decqty,
bos_sd_fsoitem.decuomqty,

bos_sd_fsoitem.szuomid,
bos_sd_fsoitem.decprice,
bos_sd_fsoitem.decdiscount,
bos_sd_fsoitem.btaxable,
bos_sd_fsoitem.dectax,
bos_sd_fsoitem.decamount,
bos_sd_fsoitem.decdpp,
bos_sd_fsoitem.szpaymenttype,
bos_sd_fsoitem.szprincipaldiscrefid,
prdiscref.szdescription as szprincipaldiscrefdesc_j,

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,

-- cubication and tonase
bos_sd_fsoitem.dectonase,
bos_sd_fsoitem.deccubication,

bos_sd_fsoitem.szparentid,
parent.szname as szparentnm_j,

bos_ar_customerproductitem.szrefproductid as szcustproductid_j,
bos_ar_customerproductitem.szrefproductname as szcustproductnm_j,

bos_sd_fsoitem.szdistproductid,  
bos_sd_fsoitem.decdistqty,  
bos_sd_fsoitem.decdistprice  

from 
bos_sd_fsoitem 
left join bos_sd_fso as bsf on bsf.szfsoid = bos_sd_fsoitem.szfsoid
left join bos_inv_product on bos_sd_fsoitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_fsoitem.szparentid = parent.szproductid
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fsoitem.szorderitemtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on prdiscref.szprincipaldiscrefid = bos_sd_fsoitem.szprincipaldiscrefid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid    
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fso.szcustid 
and bos_ar_customerproductitem.szproductid = bos_sd_fsoitem.szproductid
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid
and bgwp.szproductid = bos_sd_fsoitem.szproductid

where 
bos_sd_fsoitem.szfsoid = p_szfsoid

order by
bos_sd_fsoitem.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitem_016(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select
bos_sd_fsoitem.shitemnumber,

bos_sd_fsoitem.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,
bos_inv_orderitemtype.bsubjecttoinvoice as borderitemtypesubjecttoinvoice_j,

bos_sd_fsoitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j
, coalesce(bgwp.szdiscountgroupid, '') as szproductdiscgroupid_j_wp

, bos_sd_fsoitem.szpriceid,
bos_sd_fsoitem.szpriceorderid,
bos_sd_fsoitem.decdiscprocent,

bos_sd_fsoitem.dtmpricedate,

bos_sd_fsoitem.decqty,
bos_sd_fsoitem.decuomqty,

bos_sd_fsoitem.szuomid,
bos_sd_fsoitem.decprice,
bos_sd_fsoitem.decdiscount,
bos_sd_fsoitem.btaxable,
bos_sd_fsoitem.dectax,
bos_sd_fsoitem.decamount,
bos_sd_fsoitem.decdpp,
bos_sd_fsoitem.szpaymenttype,
bos_sd_fsoitem.szprincipaldiscrefid,
coalesce(prdiscref.szdescription,'') as szprincipaldiscrefdesc_j,

bos_inv_orderitemtype.bmustfilltrnreason as borderitemtypemustfilltrnreason_j,
bos_inv_orderitemtype.ballowemptytrnreason as borderitemtypeallowemptytrnreason_j,
bos_inv_orderitemtype.ballowdifferentsigninqty as borderitemtypeallowdifferentsigninqty_j,

-- cubication and tonase
bos_sd_fsoitem.dectonase,
bos_sd_fsoitem.deccubication,

bos_sd_fsoitem.szparentid,
coalesce(parent.szname,'') as szparentnm_j,

coalesce(bos_ar_customerproductitem.szrefproductid,'') as szcustproductid_j,
coalesce(bos_ar_customerproductitem.szrefproductname,'') as szcustproductnm_j,

bos_sd_fsoitem.szdistproductid,  
bos_sd_fsoitem.decdistqty,  
bos_sd_fsoitem.decdistprice,

bos_sd_fsoitem.szbudgetid,  
bos_sd_fsoitem.decprincipalcostamount,
bos_sd_fsoitem.decprincipalcostqty,
bos_sd_fsoitem.bbudgettransferred
from 
bos_sd_fsoitem 
left join bos_sd_fso as bsf on bsf.szfsoid = bos_sd_fsoitem.szfsoid
left join bos_inv_product on bos_sd_fsoitem.szproductid = bos_inv_product.szproductid
left join bos_inv_product as parent on bos_sd_fsoitem.szparentid = parent.szproductid
left join bos_gl_taxtype on bos_inv_product.sztaxtypeid = bos_gl_taxtype.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fsoitem.szorderitemtypeid
left join bos_sd_orgstru_principaldiscref as prdiscref on prdiscref.szprincipaldiscrefid = bos_sd_fsoitem.szprincipaldiscrefid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid    
left join bos_ar_customerproductitem on bos_ar_customerproductitem.szcustid = bos_sd_fso.szcustid 
and bos_ar_customerproductitem.szproductid = bos_sd_fsoitem.szproductid
left join bos_gl_workplaceproduct as bgwp on bgwp.szworkplaceid = bsf.szworkplaceid
and bgwp.szproductid = bos_sd_fsoitem.szproductid

where 
bos_sd_fsoitem.szfsoid = p_szfsoid

order by
bos_sd_fsoitem.shitemnumber;



end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitembonussource(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
	szorderitemtypeid,
	szpaymenttype,
	decbonusamount,
	decbonusqty,
	szparentid

from 
bos_sd_fsoitembonussource
where 
szfsoid = p_szfsoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitembonussource_014(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
 szorderitemtypeid,
    szpaymenttype,
    decbonusamount,
    decbonusqty,
    szparentid

from 
bos_sd_fsoitembonussource
where 
szfsoid = p_szfsoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitemdelivery(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin

select	
bos_sd_fsoitemdelivery.dtmdelivery,
bos_sd_fsoitemdelivery.szcustid,
custloc.szcustdeliverynm as szcustnm_j,
bos_sd_fsoitemdelivery.decqty,
bos_sd_fsoitemdelivery.szfromwpid,
wp.szname as szfromwpnm_j,
bos_sd_fsoitemdelivery.szdjrtrackingid,
bos_sd_djrtracking.bfinished as bdjrtrackingfinish_j,
bos_sd_fsoitemdelivery.szfdoid,
bos_sd_fsoitemdelivery.decremainingqty,
doo.dtmdelivery as dtmactualdelivery_j

from  
bos_sd_fsoitemdelivery
left join bos_ar_custlocation as custloc on 
custloc.szcustid = bos_sd_fsoitemdelivery.szcustid
and custloc.btlocid = 0

left join bos_gl_workplace as wp on wp.szworkplaceid = bos_sd_fsoitemdelivery.szfromwpid
left join bos_sd_fdo as doo on doo.szdoid = bos_sd_fsoitemdelivery.szfdoid
and doo.bapplied = 1

left join bos_sd_djrtracking on bos_sd_djrtracking.szdjrtrackingid = bos_sd_fsoitemdelivery.szdjrtrackingid

where
bos_sd_fsoitemdelivery.szfsoid = p_szfsoid and 
bos_sd_fsoitemdelivery.shitemnumber = p_shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoitemreason(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
bos_sd_fsoitemreason.szreasonid,
bos_gen_reason.szdescription as szreasondesc_j,
bos_sd_fsoitemreason.decqty

from 
bos_sd_fsoitemreason
where 
bos_sd_fsoitemreason.szfsoid = p_szfsoid and bos_sd_fsoitemreason.shitemnumber = p_shitemnumber;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoproductdepositbonusitem(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_fsoproductdepositbonusitem.shitemnumber,

bos_sd_fsoproductdepositbonusitem.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,

bos_sd_fsoproductdepositbonusitem.decqty,
bos_sd_fsoproductdepositbonusitem.szuomid,
bos_sd_fsoproductdepositbonusitem.szorderitemtypeid,

bos_sd_fsoproductdepositbonusitem.bgenbytotal


from 
bos_sd_fsoproductdepositbonusitem
left join bos_inv_product on bos_sd_fsoproductdepositbonusitem.szproductid = bos_inv_product.szproductid

where 
bos_sd_fsoproductdepositbonusitem.szfsoid = p_szfsoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getfsoproductdepositbonusitembonussource(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
select 
szproductid,
szorderitemtypeid,
	szpaymenttype,
	decbonusamount,
	decbonusqty

from 
bos_sd_fsoproductdepositbonusitembonussource
where 
szfsoid = p_szfsoid and shitemnumber = p_shitemnumber ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistoffcalloffso(
p_szfsoid bos_dt_szid,
p_szcalltype bos_dt_szsmallid)
returns void as
$body$
begin
select 
fcall.szfcallid

from 
bos_crl_fcall as fcall
left join bos_sd_totracking as totracking

on totracking.sztotrackingid = fcall.sztrackingid and szcalltype = p_szcalltype
where 
totracking.szfsoid = p_szfsoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistoffso()
returns void as
$body$
begin
select 
szfsoid,
dtmorder,
szcustid

from 
bos_sd_fso;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistoffsowhereworkplaceanddate(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin
select 
szfsoid


from 
bos_sd_fso

where 
szworkplaceid like p_szworkplaceid and dtmorder >= p_dtmfrom and dtmorder < interval '1 day' +  p_dtmto 
order by 
szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistofpendingfso(
p_szcustid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fso.szfsoid, 
coalesce(bos_sd_totracking.sztotrackingid, '') as sztotrackingid,
bos_sd_fso.dtmorder,
coalesce(bos_sd_totracking.szsalesid, '') as szsalesid,
bos_sd_fso.szcustid,
coalesce(bos_pi_employee.szname,'') as szsalesnm,
coalesce(bos_ar_customer.szname,'') as szcustnm,
bos_sd_fso.bapplied

from
bos_sd_fso
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fso.szcustid
left join bos_ar_customer as invcust on invcust.szcustid = bos_ar_customer.szinvoicetocustid
left join bos_sd_totracking on bos_sd_totracking.szfsoid = bos_sd_fso.szfsoid
left join bos_pi_employee on bos_pi_employee.szemployeeid = bos_sd_totracking.szsalesid

where 
invcust.szcustid = p_szcustid and
bos_sd_fso.bapplied = 0 and
bos_sd_fso.bvoid = 0;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistofunappliedfso(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
distinct bos_sd_fsoitem.szfsoid as szfsoid
from
bos_sd_fsoitem
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0 and
dtmorder >= p_dtmfrom and dtmorder < interval '1 day' +  p_dtmto;
--and bos_sd_fso.szsalesid = p_szopuserid
else
select
distinct bos_sd_fsoitem.szfsoid as szfsoid
from
bos_sd_fsoitem
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0 and
dtmorder >= p_dtmfrom and dtmorder < interval '1 day' +  p_dtmto
and bos_sd_fso.szsalesid = p_szopuserid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistofunappliedfso_014(
p_szworkplaceid bos_dt_szid,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin

if p_szopuserid = '%' --modified by arir, bogor 2014-04-19
  then
select
distinct bos_sd_fsoitem.szfsoid as szfsoid
from
bos_sd_fsoitem
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0 and
dtmorder >= p_dtmfrom and dtmorder < interval '1 day' +  p_dtmto;
--and bos_sd_fso.szsalesid = p_szopuserid
else
select
distinct bos_sd_fsoitem.szfsoid as szfsoid
from
bos_sd_fsoitem
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_fsoitem.szfsoid
where
bos_sd_fso.szworkplaceid = p_szworkplaceid and
bos_sd_fso.bvoid = 0 and bos_sd_fso.bapplied = 0 and
dtmorder >= p_dtmfrom and dtmorder < interval '1 day' +  p_dtmto
and bos_sd_fso.szsalesid = p_szopuserid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_getlistofuninvoicedfso(
p_szinvtocustid bos_dt_szid,
p_szccyid bos_dt_szsmallid,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

select distinct
bos_ar_customer.szcustid,
bos_sd_fso.szfsoid,
bos_sd_fso.dtmorder

from 
bos_sd_fso 
inner join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_fso.szcustid
--left join bos_sd_fsoitem on bos_sd_fsoitem.szfsoid = bos_sd_fso.szfsoid
--left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_fsoitem.szorderitemtypeid

where
bos_sd_fso.szcompletedfinvoiceid = '' and 
bos_sd_fso.bapplied = 1 and 
(
(bos_ar_customer.binvoicetocust = 1  and bos_ar_customer.szcustid = p_szinvtocustid)  or  
(bos_ar_customer.binvoicetocust = 0  and  bos_ar_customer.szinvoicetocustid = p_szinvtocustid)
)
and
bos_sd_fso.dtmorder < interval '1 day' +   p_dtmend and
bos_sd_fso.dtmorder >= p_dtmstart and
bos_sd_fso.szccyid = p_szccyid and
bos_sd_fso.szstatus = 'clo'	--clo = closed.
and
(
--
--  previously do cannot recalculate separate discount / bonus if it is created from so becoz we think it is
--  too complicated. however by fulfilling requirement from sns, it turns out that the process is not really 
--  that hard.
--
--  this makes there's no need to invoice the so directly. in fact if we still do so, it would make the process
--  becoming very very complicated becoz we have to match the adjusted separate discount / bonus in two different
--  process. that is we have to match those separate items with their pair items in so.
--
--  if now do can adjust this separate discount / bonus, invoice can work directly to do, regardless it comes
--  from so or not, and forget the direct-so-invoicing process completely.
--
--  this is very beutiful.
--

--  this obsolete code is still maintained here for easy reference (and i cannot connect to ss right now).

----there is item that is not be included in the do but to the invoice directly,
----such discount to reduce the amount to be paid.
--(bos_inv_orderitemtype.bsubjecttoinvoice = 1 and bos_sd_fsoitem.szproductid = '')
--or
----down payment that must be included in the invoice to reduce the amount.
(bos_sd_fso.decdownpayment > 0)
)

order by 
bos_ar_customer.szcustid,
bos_sd_fso.dtmorder,
bos_sd_fso.szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_isfsoexist(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select 
szfsoid

from 
bos_sd_fso
where 
szfsoid = p_szfsoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_lockfso(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
dtmprice = dtmprice
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsocompletedinvoiced(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szcompletedfinvoiceid = p_szfinvoiceid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsocompletedinvoiced_013(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szcompletedfinvoiceid = p_szfinvoiceid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsofirstcompletedinvoiced(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szfirstcompletedfinvoiceid = p_szfinvoiceid

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsofirstcompletedinvoiced_013(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szfirstcompletedfinvoiceid = p_szfinvoiceid

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsoinvoiced(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szfinvoiceid = p_szfinvoiceid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_markfsoinvoiced_013(
p_szfsoid bos_dt_szid,
p_szfinvoiceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szfinvoiceid = p_szfinvoiceid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_setfsostatus(
p_szfsoid bos_dt_szid,
p_szstatus bos_dt_szsmallid)
returns void as
$body$
begin
update bos_sd_fso
set 
szstatus = p_szstatus

where 
szfsoid=p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_unmarkfsocompletedinvoiced(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szcompletedfinvoiceid = ''
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatecustidoffso(
p_szfsoid bos_dt_szid,
p_sznewcustid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szcustid = p_sznewcustid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefso(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fso
set 
szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmorder = p_dtmorder,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
decdownpayment = p_decdownpayment,
szstatus = p_szstatus,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

bneedfinvoice = p_bneedfinvoice,

szpaymenttermid = p_szpaymenttermid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,
szfdoreffid =p_szfdoreffid
, dtmlastupdated = p_dtmlastupdated,
dtmstartvisit = p_dtmstartvisit,
dtmendvisit = p_dtmendvisit,
decvisitspendtime = p_decvisitspendtime,
bscansuccess =  p_bscansuccess,
szscanfailreason = p_szscanfailreason

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefso_013(
p_szfsoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szordertypeid bos_dt_szid,
p_dtmorder timestamp,
p_dtmprice timestamp,
p_szcustid bos_dt_szid,
p_decamount bos_dt_decamount,
p_dectax bos_dt_dectax,
p_decdownpayment bos_dt_decamount,
p_szstatus bos_dt_szsmallid,
p_szccyid bos_dt_szsmallid,
p_szccyrateid bos_dt_szmediumid,
p_decccyrate bos_dt_decccyrate,
p_bdropship bit,
p_szsalesid bos_dt_szid,
p_szsalessupervisorid bos_dt_szid,
p_szsalessupervisorid_2 bos_dt_szid,
p_szsalessupervisorid_3 bos_dt_szid,
p_szsalesdivisionid bos_dt_szid,
p_szsalesdepartmentid bos_dt_szid,
p_szsalesteamid bos_dt_szid,
p_szremark bos_dt_szmessage,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szcustpoid bos_dt_szid,
p_dtmcustpo timestamp,
p_bcash bit,
p_gdcreditlimitapprovedid bytea,
p_bneedfinvoice smallint,
p_szpaymenttermid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid varchar,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_buploadedfrommodis bos_dt_bboolean,
p_szfdoreffid bos_dt_szid,
p_dtmlastupdated timestamp,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime bos_dt_decamount,
p_decjourneyspendtime bos_dt_decamount,
p_bscansuccess smallint,
p_szscanfailreason bos_dt_szid,
p_szbarcodescanfailreason bos_dt_szid,
p_adcid bos_dt_szid,
p_dtmexpiration timestamp)
returns void as
$body$
begin
update bos_sd_fso
set 
szsalesorgid = p_szsalesorgid,
szordertypeid = p_szordertypeid,

dtmorder = p_dtmorder,
dtmprice = p_dtmprice,

szcustid = p_szcustid,
decamount = p_decamount,
dectax = p_dectax,
decdownpayment = p_decdownpayment,
szstatus = p_szstatus,
szccyid = p_szccyid,
szccyrateid = p_szccyrateid,
decccyrate = p_decccyrate,
bdropship = p_bdropship,

szsalesid = p_szsalesid,
szsalessupervisorid = p_szsalessupervisorid,
szsalessupervisorid_2 = p_szsalessupervisorid_2,
szsalessupervisorid_3 = p_szsalessupervisorid_3,
szsalesdivisionid = p_szsalesdivisionid,
szsalesdepartmentid = p_szsalesdepartmentid,
szsalesteamid = p_szsalesteamid,

szremark = p_szremark,
szlatitude = p_szlatitude,
szlongitude = p_szlongitude,

szcustpoid = p_szcustpoid,
dtmcustpo = p_dtmcustpo,
bcash = p_bcash,
gdcreditlimitapprovedid = p_gdcreditlimitapprovedid,

bneedfinvoice = p_bneedfinvoice,

szpaymenttermid = p_szpaymenttermid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,
bneedapproval = p_bneedapproval,
gdapprovedid = p_gdapprovedid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

-- weight and volume
dectonase = p_dectonase,
deccubication = p_deccubication,
buploadedfrommodis = p_buploadedfrommodis,
szfdoreffid =p_szfdoreffid,
dtmlastupdated = p_dtmlastupdated,
dtmstartvisit = p_dtmstartvisit,
dtmendvisit = p_dtmendvisit,
decvisitspendtime = p_decvisitspendtime,
decjourneyspendtime=p_decjourneyspendtime,
bscansuccess =  p_bscansuccess,
szscanfailreason = p_szscanfailreason,
szbarcodescanfailreason = p_szbarcodescanfailreason,
adcid = p_adcid,
dtmexpiration = p_dtmexpiration
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitem_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitem_byitem_013(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fsoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitem_byitem_014(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice)
returns void as
$body$
begin
update bos_sd_fsoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitem_byitem_015(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szorderitemtypeid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_decdiscprocent bos_dt_decprice,
p_dtmpricedate timestamp,
p_decqty bos_dt_decamount,
p_decuomqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_decprice bos_dt_decprice,
p_decdiscount bos_dt_decamount,
p_btaxable bit,
p_dectax bos_dt_dectax,
p_decamount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_szpaymenttype bos_dt_szsmallid,
p_szprincipaldiscrefid bos_dt_szid,
p_dectonase numeric,
p_deccubication numeric,
p_szparentid bos_dt_szid,
p_szdistproductid bos_dt_szid,
p_decdistqty bos_dt_decamount,
p_decdistprice bos_dt_decprice,
p_szbudgetid bos_dt_szid,
p_decprincipalcostamount bos_dt_decamount,
p_decprincipalcostqty bos_dt_decamount,
p_bbudgettransferred bos_dt_bboolean)
returns void as
$body$
begin
update bos_sd_fsoitem
set 
szorderitemtypeid = p_szorderitemtypeid,
szproductid = p_szproductid,

szpriceid = p_szpriceid,
szpriceorderid = p_szpriceorderid,
decdiscprocent = p_decdiscprocent,

dtmpricedate = p_dtmpricedate,

decqty = p_decqty,
decuomqty = p_decuomqty,

szuomid = p_szuomid,
decprice = p_decprice,
decdiscount = p_decdiscount,
btaxable = p_btaxable,
dectax = p_dectax,
decamount = p_decamount,
decdpp = p_decdpp,
szpaymenttype = p_szpaymenttype,
szprincipaldiscrefid = p_szprincipaldiscrefid,

-- cubication and tonase
dectonase = p_dectonase,
deccubication = p_deccubication,

szparentid = p_szparentid,

szdistproductid = p_szdistproductid,
decdistqty = p_decdistqty,
decdistprice = p_decdistprice,

szbudgetid = p_szbudgetid,
decprincipalcostamount = p_decprincipalcostamount,
decprincipalcostqty = p_decprincipalcostqty,
bbudgettransferred = p_bbudgettransferred

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitembonussource_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szpaymenttype bos_dt_szsmallid,
p_decbonusamount bos_dt_decamount,
p_decbonusqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fsoitembonussource
set 
decbonusamount = p_decbonusamount,
decbonusqty = p_decbonusqty
where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitemdelivery_byitem(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmdelivery timestamp,
p_szcustid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szfromwpid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_decremainingqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fsoitemdelivery
set 
decqty = p_decqty,
szdjrtrackingid = p_szdjrtrackingid,
szfdoid = p_szfdoid,
decremainingqty = p_decremainingqty

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fso_updatefsoitemdelivery_byitem_013(
p_szfsoid bos_dt_szid,
p_shitemnumber smallint,
p_dtmdelivery timestamp,
p_szcustid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szfromwpid bos_dt_szid,
p_szdjrtrackingid bos_dt_szid,
p_szfdoid bos_dt_szid,
p_decremainingqty bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_fsoitemdelivery
set 
decqty = p_decqty,
szdjrtrackingid = p_szdjrtrackingid,
szfdoid = p_szfdoid,
decremainingqty = p_decremainingqty

where 
szfsoid = p_szfsoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createfto(
p_szftoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfto timestamp,
p_szsalesid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp)
returns void as
$body$
begin
insert into bos_sd_fto
(
szftoid,
szsalesorgid,
szbaserouteid,
dtmfto,
szsalesid,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
-- data status.,
dtmlastupdated,
balreadytransferred,
szvehicleid,
decstartkm,
decendkm,
dtmstarttime,
dtmendtime
)
values
(
p_szftoid,
p_szsalesorgid,
p_szbaserouteid,
p_dtmfto,
p_szsalesid,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred,
p_szvehicleid,
p_decstartkm,
p_decendkm,
p_dtmstarttime,
p_dtmendtime
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createftoitem(
p_szftoid bos_dt_szid,
p_shitemnumber smallint,
p_sztotrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdesciption varchar,
p_bsuccess bit,
p_bstarted bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime numeric,
p_decjourneyspendtime bos_dt_decamount,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szbarcodescanfailreasonid bos_dt_szid,
p_szgpsscanfailreasonid bos_dt_szid,
p_bbarcodescansuccess bos_dt_bboolean,
p_bgpsscansuccess bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_ftoitem
(
szftoid,
shitemnumber,
sztotrackingid,
szreasonid,
szdescription,
bsuccess,
bstarted,
dtmstartvisit,
dtmendvisit,
decvisitspendtime,
decjourneyspendtime,
szlatitude,
szlongitude,
szbarcodescanfailreasonid,
szgpsscanfailreasonid,
bbarcodescansuccess,
bgpsscansuccess
)
values
(
p_szftoid,
p_shitemnumber,
p_sztotrackingid,
p_szreasonid,
p_szdesciption,
p_bsuccess,
p_bstarted,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_decjourneyspendtime,
p_szlatitude,
p_szlongitude,
p_szbarcodescanfailreasonid,
p_szgpsscanfailreasonid,
p_bbarcodescansuccess,
p_bgpsscansuccess
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createftoitem_014(
p_szftoid bos_dt_szid,
p_shitemnumber smallint,
p_sztotrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdesciption varchar,
p_bsuccess bit,
p_bstarted bos_dt_bboolean,
p_dtmstartvisit timestamp,
p_dtmendvisit timestamp,
p_decvisitspendtime numeric,
p_decjourneyspendtime bos_dt_decamount,
p_szlatitude bos_dt_szgpscoordinate,
p_szlongitude bos_dt_szgpscoordinate,
p_szbarcodescanfailreasonid bos_dt_szid,
p_szgpsscanfailreasonid bos_dt_szid,
p_bbarcodescansuccess bos_dt_bboolean,
p_bgpsscansuccess bos_dt_bboolean)
returns void as
$body$
begin
insert into bos_sd_ftoitem
(
szftoid,
shitemnumber,
sztotrackingid,
szreasonid,
szdescription,
bsuccess,
bstarted,
dtmstartvisit,
dtmendvisit,
decvisitspendtime,
decjourneyspendtime,
szlatitude,
szlongitude,
szbarcodescanfailreasonid,
szgpsscanfailreasonid,
bbarcodescansuccess,
bgpsscansuccess
)
values
(
p_szftoid,
p_shitemnumber,
p_sztotrackingid,
p_szreasonid,
p_szdesciption,
p_bsuccess,
p_bstarted,
p_dtmstartvisit,
p_dtmendvisit,
p_decvisitspendtime,
p_decjourneyspendtime,
p_szlatitude,
p_szlongitude,
p_szbarcodescanfailreasonid,
p_szgpsscanfailreasonid,
p_bbarcodescansuccess,
p_bgpsscansuccess
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createtotracking(
p_sztotrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szftoid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_deccustsalestarget bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_totracking
(
sztotrackingid,
sztype,
szcustid,
szfsoid,
szsalesid,
szftoid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szteamid,
szscheduleid,
decvalue,
szfcallid,
deccustsalestarget,
 dtmlastupdated
)
values
(
p_sztotrackingid,
p_sztype,
p_szcustid,
p_szfsoid,
p_szsalesid,
p_szftoid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_szfcallid,
p_deccustsalestarget,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createtotracking_013(
p_sztotrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szftoid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_deccustsalestarget bos_dt_decamount,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sd_totracking
(
sztotrackingid,
sztype,
szcustid,
szfsoid,
szsalesid,
szftoid,
bfinished,
bsuccess,
btasked,
dtmnext,
bttrialcount,
szteamid,
szscheduleid,
decvalue,
szfcallid,
deccustsalestarget,
 dtmlastupdated
)
values
(
p_sztotrackingid,
p_sztype,
p_szcustid,
p_szfsoid,
p_szsalesid,
p_szftoid,
p_bfinished,
p_bsuccess,
p_btasked,
p_dtmnext,
p_bttrialcount,
p_szteamid,
p_szscheduleid,
p_decvalue,
p_szfcallid,
p_deccustsalestarget,
 p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createtotrackingproduct(
p_sztotrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_totrackingproduct
(
sztotrackingid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
szparentid
)
values
(
p_sztotrackingid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_createtotrackingproduct_014(
p_sztotrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_totrackingproduct
(
sztotrackingid,
shitemnumber,
szproductid,
decqty,
szuomid,
szorderitemtypeid,
szparentid
)
values
(
p_sztotrackingid,
p_shitemnumber,
p_szproductid,
p_decqty,
p_szuomid,
p_szorderitemtypeid,
p_szparentid
-- ==================================================================,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_deletefto(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_fto
where
szftoid = p_szftoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_deleteftoitem(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_ftoitem
where
szftoid = p_szftoid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_deletetotrackingproduct(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_totrackingproduct
where
sztotrackingid = p_sztotrackingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_deletetotrackingproduct_byitem(
p_sztotrackingid bos_dt_szid,
p_shitemnumber smallint)
returns void as
$body$
begin
delete from
bos_sd_totrackingproduct
where
sztotrackingid = p_sztotrackingid
and shitemnumber = p_shitemnumber;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getfto(
p_szftoid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_fto.szsalesorgid,
bos_sd_fto.szbaserouteid,
bos_sd_fto.dtmfto,

bos_sd_fto.szsalesid,
bos_pi_employee.szname as szsalesnm,
bos_pi_employee.szteamid as szsalesteamid_j,

bos_sd_fto.bresultfrtransfer,
bos_sd_fto.bvoid,
bos_gen_approved.bapproved,
bos_sd_fto.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_sd_fto.btprintedcount,
bos_sd_fto.btransferred,

bos_sd_fto.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_sd_fto.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_sd_fto.sztaxentityid,
bos_sd_fto.bneedapproval,
bos_gen_approved.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,

bos_sd_fto.dtmcreated,
bos_sd_fto.bsystemcreated,
bos_sd_fto.szuserid,
bos_sm_user.szname as szusernm_j,

-- data status.
bos_sd_fto.dtmlastupdated,
bos_sd_fto.balreadytransferred,

bos_sd_fto.szvehicleid,
bos_inv_vehicle.szpoliceno as szvehiclenumber_j,
bos_sd_fto.decstartkm,
bos_sd_fto.decendkm,
bos_sd_fto.dtmstarttime,
bos_sd_fto.dtmendtime

from
((bos_sd_fto left join bos_gen_approved on bos_sd_fto.gdapprovedid = bos_gen_approved.gdapprovedid)
left join bos_gl_fjournaltrans on bos_sd_fto.szfjournalid = bos_gl_fjournaltrans.szfjournalid)
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sd_fto.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_sd_fto.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_sd_fto.szuserid
left join bos_pi_employee on bos_sd_fto.szsalesid = bos_pi_employee.szemployeeid

left join bos_inv_vehicle on bos_inv_vehicle.szvehicleid = bos_sd_fto.szvehicleid
left join bos_inv_vehiclecapacity on bos_inv_vehiclecapacity.szvehiclecapacityid = bos_inv_vehicle.szvehiclecapacityid

where
bos_sd_fto.szftoid = p_szftoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getftoitem(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_ftoitem.shitemnumber,
bos_sd_ftoitem.sztotrackingid,
bos_sd_ftoitem.szreasonid,
bos_sd_ftoitem.szdescription,
bos_sd_ftoitem.bsuccess,
coalesce(bos_sd_totracking.szcustid, '') as szcustid,
bos_sd_totracking.bfinished as btotrackingfinished_j,
bos_sd_totracking.szfsoid as sztotrackingfsoid_j,
bos_sd_ftoitem.bstarted,
bos_sd_ftoitem.dtmstartvisit,
bos_sd_ftoitem.dtmendvisit,
bos_sd_ftoitem.decvisitspendtime,
bos_sd_ftoitem.decjourneyspendtime,
bos_sd_ftoitem.szlatitude,
bos_sd_ftoitem.szlongitude,
bos_sd_ftoitem.szbarcodescanfailreasonid,
bos_sd_ftoitem.szgpsscanfailreasonid,
bos_sd_ftoitem.bbarcodescansuccess,
bos_sd_ftoitem.bgpsscansuccess,
coalesce(bos_ar_customer.szname, '') as szcustname


from 
bos_sd_ftoitem
left join bos_sd_totracking on bos_sd_ftoitem.sztotrackingid = bos_sd_totracking.sztotrackingid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_totracking.szcustid

where 
bos_sd_ftoitem.szftoid = p_szftoid 
order by 
bos_sd_ftoitem.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getftoitem_014(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sd_ftoitem.shitemnumber,
bos_sd_ftoitem.sztotrackingid,
bos_sd_ftoitem.szreasonid,
bos_sd_ftoitem.szdescription,
bos_sd_ftoitem.bsuccess,
coalesce(bos_sd_totracking.szcustid, '') as szcustid,
bos_sd_totracking.bfinished as btotrackingfinished_j,
bos_sd_totracking.szfsoid as sztotrackingfsoid_j,
bos_sd_ftoitem.bstarted,
bos_sd_ftoitem.dtmstartvisit,
bos_sd_ftoitem.dtmendvisit,
bos_sd_ftoitem.decvisitspendtime,
bos_sd_ftoitem.decjourneyspendtime,
bos_sd_ftoitem.szlatitude,
bos_sd_ftoitem.szlongitude,
bos_sd_ftoitem.szbarcodescanfailreasonid,
bos_sd_ftoitem.szgpsscanfailreasonid,
bos_sd_ftoitem.bbarcodescansuccess,
bos_sd_ftoitem.bgpsscansuccess,
coalesce(bos_ar_customer.szname, '') as szcustname


from 
bos_sd_ftoitem
left join bos_sd_totracking on bos_sd_ftoitem.sztotrackingid = bos_sd_totracking.sztotrackingid
left join bos_ar_customer on bos_ar_customer.szcustid = bos_sd_totracking.szcustid

where 
bos_sd_ftoitem.szftoid = p_szftoid 
order by 
bos_sd_ftoitem.shitemnumber;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofactivetotrackingid(
p_sztype bos_dt_szsmallid,
p_szsalesid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szscheduletype = ''
  then
select
sztotrackingid

from
bos_sd_totracking

where
bfinished = 0 and
sztype = p_sztype and
szsalesid = p_szsalesid and
szcustid = p_szcustid and
szteamid like p_szteamid and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' +   p_dtmend);
else
select
sztotrackingid

from
bos_sd_totracking
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_totracking.szscheduleid

where
bfinished = 0 and
sztype = p_sztype and
szsalesid = p_szsalesid and
szcustid = p_szcustid and
szteamid like p_szteamid and
bos_gen_routineschedule.szscheduletype = p_szscheduletype and
decvalue = p_decvalue and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' +   p_dtmend);

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofactivetotrackingid_013(
p_sztype bos_dt_szsmallid,
p_szsalesid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szscheduletype bos_dt_szsmallid,
p_decvalue bos_dt_decamount,
p_dtmstart timestamp,
p_dtmend timestamp)
returns void as
$body$
begin

if p_szscheduletype = ''
  then
select
sztotrackingid

from
bos_sd_totracking

where
bfinished = 0 and
sztype = p_sztype and
szsalesid = p_szsalesid and
szcustid = p_szcustid and
szteamid like p_szteamid and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' +   p_dtmend);
else
select
sztotrackingid

from
bos_sd_totracking
left join bos_gen_routineschedule on bos_gen_routineschedule.szscheduleid = bos_sd_totracking.szscheduleid

where
bfinished = 0 and
sztype = p_sztype and
szsalesid = p_szsalesid and
szcustid = p_szcustid and
szteamid like p_szteamid and
bos_gen_routineschedule.szscheduletype = p_szscheduletype and
decvalue = p_decvalue and
(dtmnext  >= p_dtmstart and dtmnext < interval '1 day' +   p_dtmend);

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistoffto()
returns void as
$body$
begin
select 
szftoid,
dtmfto

from 
bos_sd_fto;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofnottaskedtotracking(
p_sztype bos_dt_szsmallid,
p_szsalesid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szstatusact varchar,
p_szstatusfde varchar)
returns void as
$body$
begin
select 
bos_sd_totracking.sztotrackingid,
bos_sd_totracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,
bos_sd_totracking.szfsoid


from 
bos_sd_totracking 
left join bos_ar_customer 
on bos_sd_totracking.szcustid = bos_ar_customer.szcustidbos_sd_totracking 
left join bos_ar_customer 
on bos_sd_totracking.szcustid = bos_ar_customer.szcustid

where 
(bos_ar_customer.szstatus = p_szstatusact or bos_ar_customer.szstatus = p_szstatusfde) and bos_sd_totracking.bfinished = 0 and bos_sd_totracking.btasked = 0 and bos_sd_totracking.sztype like p_sztype and bos_sd_totracking.szsalesid like p_szsalesid and bos_sd_totracking.szcustid like p_szcustid and bos_sd_totracking.szteamid like p_szteamid and (bos_sd_totracking.dtmnext  >= p_dtmstart and bos_sd_totracking.dtmnext < interval '1 day' +   p_dtmend) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofnottaskedtotracking_013(
p_sztype bos_dt_szsmallid,
p_szsalesid bos_dt_szid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmstart timestamp,
p_dtmend timestamp,
p_szstatusact varchar,
p_szstatusfde varchar)
returns void as
$body$
begin
select 
bos_sd_totracking.sztotrackingid,
bos_sd_totracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,
bos_sd_totracking.szfsoid


from 
bos_sd_totracking left join bos_ar_customer 
on bos_sd_totracking.szcustid = bos_ar_customer.szcustidbos_sd_totracking 
left join bos_ar_customer 
on bos_sd_totracking.szcustid = bos_ar_customer.szcustid

where 
(bos_ar_customer.szstatus = p_szstatusact or bos_ar_customer.szstatus = p_szstatusfde) 
and bos_sd_totracking.bfinished = 0 
and bos_sd_totracking.btasked = 0 
and bos_sd_totracking.sztype like p_sztype 
and bos_sd_totracking.szsalesid like p_szsalesid 
and bos_sd_totracking.szcustid like p_szcustid 
and bos_sd_totracking.szteamid like p_szteamid 
and (bos_sd_totracking.dtmnext  >= p_dtmstart 
and bos_sd_totracking.dtmnext < interval '1 day' +   p_dtmend);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofrangefto(
p_szftoid_from varchar,
p_szftoid_to varchar)
returns void as
$body$
begin
select 
szftoid

from 
bos_sd_fto
where 
szftoid >= p_szftoid_from and szftoid <= p_szftoid_to and bvoid = 0 ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportfto(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.sztotrackingid,
bsd.szcustid,
coalesce(bac.szname, '') as szcustname,
bsd.szfsoid,
bacs.ballowtocredit as ballowtocredit, 	/*check null or !null in .net code*/
coalesce(bsc.szdefaultscheduleid, '') as szscheduleid,
baam.decamount as decoutstanding, 	/*check null or !null in .net code*/
bsfdlast.dtmorder,			/*check null or !null in .net code*/
bac.szcategory_3 as szcustcategory_3

from 
bos_sd_fto as bsf
inner join bos_sd_ftoitem as bsfi on bsf.szftoid = bsfi.szftoid
inner join bos_sd_totracking as bsd on bsfi.sztotrackingid = bsd.sztotrackingid
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid
left join bos_ar_custsales as bacs on bsd.szcustid = bacs.szcustid
left join bos_sd_custtoroutine as bsc on bsd.szcustid = bsc.szcustid
left join bos_sd_fso as bsfdlast on bsc.szlastfsoid = bsfdlast.szfsoid
left join bos_sd_fso as bsfd on bsd.szfsoid = bsfd.szfsoid
left join bos_ar_armaster as baam on bsd.szcustid = baam.szcustid and bsfd.szccyid = baam.szccyid
where 
bsf.szftoid = p_szftoid 
order by 
bsfi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportfto_013(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.sztotrackingid,
bsd.szcustid,
coalesce(bac.szname, '') as szcustname,
bsd.szfsoid,
bacs.ballowtocredit as ballowtocredit, 	/*check null or !null in .net code*/
coalesce(bsc.szdefaultscheduleid, '') as szscheduleid,
baam.decamount as decoutstanding, 	/*check null or !null in .net code*/
bsfdlast.dtmorder,			/*check null or !null in .net code*/
bac.szcategory_3 as szcustcategory_3

from 
bos_sd_fto as bsf
inner join bos_sd_ftoitem as bsfi on bsf.szftoid = bsfi.szftoid
inner join bos_sd_totracking as bsd on bsfi.sztotrackingid = bsd.sztotrackingid
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid
left join bos_ar_custsales as bacs on bsd.szcustid = bacs.szcustid
left join bos_sd_custtoroutine as bsc on bsd.szcustid = bsc.szcustid
left join bos_sd_fso as bsfdlast on bsc.szlastfsoid = bsfdlast.szfsoid
left join bos_sd_fso as bsfd on bsd.szfsoid = bsfd.szfsoid
left join bos_ar_armaster as baam on bsd.szcustid = baam.szcustid and bsfd.szccyid = baam.szccyid
where 
bsf.szftoid = p_szftoid 
order by 
bsfi.shitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportftofordepositremain(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bacpd.szproductid,
coalesce(bip.szname, '') as szproductname,
bacpd.decqty


from 
bos_ar_custproductdeposit as bacpd
left join bos_inv_product as bip on bacpd.szproductid = bip.szproductid

where 
bacpd.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportftoforfocremain(
p_szcustid varchar)
returns void as
$body$
begin
select 
bscfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bscfi.decqtyremain


from 
bos_sd_custfocitem as bscfi
left join bos_inv_product as bip on bscfi.szproductid = bip.szproductid

where 
bscfi.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportftoforlastsentfso(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bsfi.decqty,
bsfi.szparentid,
bsfi.szuomid

from 
bos_sd_fso as bsf
inner join bos_sd_fsoitem as bsfi on bsf.szfsoid = bsfi.szfsoid
inner join bos_sd_custtoroutine as bsc on bsf.szfsoid = bsc.szlastfsoid
left join bos_inv_product as bip on bsfi.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistofreportftoforlastsentfso_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bsfi.szproductid,
coalesce(bip.szname, '') as szproductname,
bsfi.decqty,
bsfi.szparentid,
bsfi.szuomid

from 
bos_sd_fso as bsf
inner join bos_sd_fsoitem as bsfi on bsf.szfsoid = bsfi.szfsoid
inner join bos_sd_custtoroutine as bsc on bsf.szfsoid = bsc.szlastfsoid
left join bos_inv_product as bip on bsfi.szproductid = bip.szproductid
where 
bsc.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistoftotracking()
returns void as
$body$
begin
select 
sztotrackingid


from 
bos_sd_totracking;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistoftotrackingtobereschedule(
p_szsalesid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szsalesid = '%'
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szsalesid,  
coalesce(bpe.szname, '') as szsalesname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastorderdate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.sztotrackingid,  
coalesce(bsd.szftoid, '') as szftoid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfsoid,  
bsd.decvalue,  
bsd.szteamid  

from  
bos_sd_totracking as bsd   
left join bos_pi_employee as bpe on bsd.szsalesid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_ftoitem as bsf on bsd.szftoid = bsf.szftoid and bsd.sztotrackingid = bsf.sztotrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' +  p_dtmto and  
--bsd.szsalesid like p_szsalesid and  
bsd.bfinished = p_bfinished 

order by  
bsd.szsalesid;    
else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szsalesid,  
coalesce(bpe.szname, '') as szsalesname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastorderdate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.sztotrackingid,  
coalesce(bsd.szftoid, '') as szftoid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfsoid,  
bsd.decvalue,  
bsd.szteamid  

from  
bos_sd_totracking as bsd   
left join bos_pi_employee as bpe on bsd.szsalesid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_ftoitem as bsf on bsd.szftoid = bsf.szftoid and bsd.sztotrackingid = bsf.sztotrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' +  p_dtmto and
bsd.szsalesid = p_szsalesid and  
bsd.bfinished = p_bfinished     

order by  
bsd.szsalesid;

end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_getlistoftotrackingtobereschedule_014(
p_szsalesid bos_dt_szid,
p_bfinished bit,
p_dtmfrom timestamp,
p_dtmto timestamp)
returns void as
$body$
begin

if p_szsalesid = '%'
  then
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szsalesid,  
coalesce(bpe.szname, '') as szsalesname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastorderdate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.sztotrackingid,  
coalesce(bsd.szftoid, '') as szftoid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfsoid,  
bsd.decvalue,  
bsd.szteamid  

from  
bos_sd_totracking as bsd   
left join bos_pi_employee as bpe on bsd.szsalesid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_ftoitem as bsf on bsd.szftoid = bsf.szftoid and bsd.sztotrackingid = bsf.sztotrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' +  p_dtmto and  
--bsd.szsalesid like p_szsalesid and  
bsd.bfinished = p_bfinished 

order by  
bsd.szsalesid;    
else
select  
bsd.bfinished,  
bsd.bsuccess,  
bsd.szsalesid,  
coalesce(bpe.szname, '') as szsalesname,  
bsd.szcustid,  
coalesce(bac.szname, '') as szcustname,  
bsd.dtmnext as dtmlastorderdate,  
coalesce(bsf.szreasonid, '') as szreasonid,  
coalesce(bsf.szdescription, '') as szdescription,  
bsd.sztotrackingid,  
coalesce(bsd.szftoid, '') as szftoid,  
bsd.szscheduleid,  
coalesce(bgrs.szdescription, '') as szschdescription_j,  
bsd.szfsoid,  
bsd.decvalue,  
bsd.szteamid  

from  
bos_sd_totracking as bsd   
left join bos_pi_employee as bpe on bsd.szsalesid = bpe.szemployeeid  
left join bos_ar_customer as bac on bsd.szcustid = bac.szcustid  
left join bos_sd_ftoitem as bsf on bsd.szftoid = bsf.szftoid and bsd.sztotrackingid = bsf.sztotrackingid  
left join bos_gen_routineschedule as bgrs on bgrs.szscheduleid = bsd.szscheduleid  

where  
bsd.dtmnext >= p_dtmfrom and bsd.dtmnext < interval '1 day' +  p_dtmto and
bsd.szsalesid = p_szsalesid and  
bsd.bfinished = p_bfinished     

order by  
bsd.szsalesid;


end if;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_gettotracking(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_sd_totracking.sztotrackingid,
bos_sd_totracking.sztype,
bos_sd_totracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_totracking.szfsoid,
bos_sd_fso.bapplied as bfsoapplied_j,

bos_sd_totracking.szsalesid,
coalesce(bos_pi_employee.szname, '') as szsalesnm,
bos_sd_totracking.szftoid,
bos_sd_totracking.bfinished,
bos_sd_totracking.bsuccess,
bos_sd_totracking.btasked,
bos_sd_totracking.dtmnext,
bos_sd_totracking.bttrialcount,
bos_sd_totracking.szteamid,
bos_sd_totracking.szscheduleid,
bos_sd_totracking.decvalue,
coalesce(bos_sd_ftoitem.szreasonid, '') as szreasonid,
coalesce(bos_sd_ftoitem.szdescription, '') as szdescription,
bos_sd_totracking.szfcallid,
coalesce(bos_crl_fcall.szcalltype, '') as szcalltype

--new
,  bos_sd_totracking.deccustsalestarget as deccustsalestarget
,  bos_sd_totracking.dtmlastupdated as dtmlastupdated

from
bos_sd_totracking left join bos_ar_customer on bos_sd_totracking.szcustid = bos_ar_customer.szcustid
left join bos_pi_employee on bos_sd_totracking.szsalesid = bos_pi_employee.szemployeeid
left join bos_sd_ftoitem on bos_sd_ftoitem.szftoid = bos_sd_totracking.szftoid 
and bos_sd_ftoitem.sztotrackingid = bos_sd_totracking.sztotrackingid
left join bos_crl_fcall on bos_crl_fcall.szfcallid = bos_sd_totracking.szfcallid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_totracking.szfsoid

where
bos_sd_totracking.sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_gettotracking_014(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin
select distinct
bos_sd_totracking.sztotrackingid,
bos_sd_totracking.sztype,
bos_sd_totracking.szcustid,
coalesce(bos_ar_customer.szname, '') as szcustnm,

bos_sd_totracking.szfsoid,
bos_sd_fso.bapplied as bfsoapplied_j,

bos_sd_totracking.szsalesid,
coalesce(bos_pi_employee.szname, '') as szsalesnm,
bos_sd_totracking.szftoid,
bos_sd_totracking.bfinished,
bos_sd_totracking.bsuccess,
bos_sd_totracking.btasked,
bos_sd_totracking.dtmnext,
bos_sd_totracking.bttrialcount,
bos_sd_totracking.szteamid,
bos_sd_totracking.szscheduleid,
bos_sd_totracking.decvalue,
coalesce(bos_sd_ftoitem.szreasonid, '') as szreasonid,
coalesce(bos_sd_ftoitem.szdescription, '') as szdescription,
bos_sd_totracking.szfcallid,
coalesce(bos_crl_fcall.szcalltype, '') as szcalltype

--new
,  bos_sd_totracking.deccustsalestarget as deccustsalestarget
,  bos_sd_totracking.dtmlastupdated as dtmlastupdated

from
bos_sd_totracking left join bos_ar_customer on bos_sd_totracking.szcustid = bos_ar_customer.szcustid
left join bos_pi_employee on bos_sd_totracking.szsalesid = bos_pi_employee.szemployeeid
left join bos_sd_ftoitem on bos_sd_ftoitem.szftoid = bos_sd_totracking.szftoid 
and bos_sd_ftoitem.sztotrackingid = bos_sd_totracking.sztotrackingid
left join bos_crl_fcall on bos_crl_fcall.szfcallid = bos_sd_totracking.szfcallid
left join bos_sd_fso on bos_sd_fso.szfsoid = bos_sd_totracking.szfsoid

where
bos_sd_totracking.sztotrackingid = p_sztotrackingid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_gettotrackingoffso(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select 
sztotrackingid


from 
bos_sd_totracking

where 
szfsoid = p_szfsoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_gettotrackingproduct(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_totrackingproduct.shitemnumber,
bos_sd_totrackingproduct.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,

bos_sd_totrackingproduct.decqty,
bos_sd_totrackingproduct.szuomid,

bos_sd_totrackingproduct.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,

-- add parent id
bos_sd_totrackingproduct.szparentid	


from
bos_sd_totrackingproduct
left join bos_inv_product on bos_sd_totrackingproduct.szproductid = bos_inv_product.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_totrackingproduct.szorderitemtypeid

where
bos_sd_totrackingproduct.sztotrackingid = p_sztotrackingid
order by
bos_sd_totrackingproduct.shitemnumber;

--
--	do not add any "order-by" clause, our updating function depends on item number to always be sorted.
--

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_gettotrackingproduct_014(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin

select
bos_sd_totrackingproduct.shitemnumber,
bos_sd_totrackingproduct.szproductid,

bos_inv_product.szname as szproductname_j,
bos_inv_product.sznickname as szproductnickname_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.sztrackingtype as szproducttrackingtype_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,

bos_sd_totrackingproduct.decqty,
bos_sd_totrackingproduct.szuomid,

bos_sd_totrackingproduct.szorderitemtypeid,
bos_inv_orderitemtype.btaxable as borderitemtypetaxable_j,
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,
bos_inv_orderitemtype.szrentchargecalcid as szorderitemtyperentchargecalcid_j,

-- add parent id
bos_sd_totrackingproduct.szparentid    


from
bos_sd_totrackingproduct
left join bos_inv_product on bos_sd_totrackingproduct.szproductid = bos_inv_product.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_totrackingproduct.szorderitemtypeid

where
bos_sd_totrackingproduct.sztotrackingid = p_sztotrackingid
order by
bos_sd_totrackingproduct.shitemnumber;

--
--    do not add any "order-by" clause, our updating function depends on item number to always be sorted.
--

--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_isassignedtotracking(
p_szfsoid bos_dt_szid)
returns void as
$body$
begin
select 
sztotrackingid

from 
bos_sd_totracking
where 
szfsoid = p_szfsoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_isftocreated(
p_szsalesid bos_dt_szid,
p_dtmfromdate timestamp,
p_dtmtodate timestamp)
returns void as
$body$
begin
select 
szftoid


from 
bos_sd_fto

where 
bvoid = 0 and szsalesid = p_szsalesid and (dtmfto >= p_dtmfromdate and dtmfto < p_dtmtodate + 1) ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_isftoexist(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
select 
szftoid

from 
bos_sd_fto
where 
szftoid = p_szftoid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_istotrackingexist(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin
select 
sztotrackingid

from 
bos_sd_totracking
where 
sztotrackingid = p_sztotrackingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_lockfto(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fto
set 
btransferred = btransferred
where 
szftoid = p_szftoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_locktotracking(
p_sztotrackingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_totracking
set 
decvalue = decvalue
where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_markftovoid(
p_szftoid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_fto
set 
bvoid = 1,
bapplied = 0

where 
szftoid=p_szftoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_marktotracking(
p_sztotrackingid bos_dt_szid,
p_btasked bit,
p_bfinished bit,
p_dtmnext timestamp,
p_szsalesid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
btasked = p_btasked,
bfinished = p_bfinished,
dtmnext = p_dtmnext,
szsalesid = p_szsalesid,
szftoid = p_szdocid
, dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_marktotracking_013(
p_sztotrackingid bos_dt_szid,
p_btasked bit,
p_bfinished bit,
p_dtmnext timestamp,
p_szsalesid bos_dt_szid,
p_szdocid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
btasked = p_btasked,
bfinished = p_bfinished,
dtmnext = p_dtmnext,
szsalesid = p_szsalesid,
szftoid = p_szdocid
, dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_marktotrackingtasked(
p_sztotrackingid bos_dt_szid,
p_btasked bit,
p_szdocid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
btasked = p_btasked,
szftoid = p_szdocid
, dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_marktotrackingtasked_013(
p_sztotrackingid bos_dt_szid,
p_btasked bit,
p_szdocid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
btasked = p_btasked,
szftoid = p_szdocid
, dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatefto(
p_szftoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfto timestamp,
p_szsalesid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
update bos_sd_fto
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfto = p_dtmfto,
szsalesid = p_szsalesid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

szvehicleid = p_szvehicleid,
decstartkm = p_decstartkm,
decendkm = p_decendkm,
dtmstarttime = p_dtmstarttime,
dtmendtime = p_dtmendtime,
dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred

where 
szftoid = p_szftoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatefto_014(
p_szftoid bos_dt_szid,
p_szsalesorgid bos_dt_szid,
p_szbaserouteid bos_dt_szid,
p_dtmfto timestamp,
p_szsalesid bos_dt_szid,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_szvehicleid bos_dt_szid,
p_decstartkm bos_dt_decamount,
p_decendkm bos_dt_decamount,
p_dtmstarttime timestamp,
p_dtmendtime timestamp,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
update bos_sd_fto
set 
szsalesorgid = p_szsalesorgid,
szbaserouteid = p_szbaserouteid,
dtmfto = p_dtmfto,
szsalesid = p_szsalesid,

bvoid = p_bvoid,
bapplied = p_bapplied,
szcompanyid = p_szcompanyid,
szworkplaceid = p_szworkplaceid,
sztaxentityid = p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

szvehicleid = p_szvehicleid,
decstartkm = p_decstartkm,
decendkm = p_decendkm,
dtmstarttime = p_dtmstarttime,
dtmendtime = p_dtmendtime,
dtmlastupdated = p_dtmlastupdated,
balreadytransferred = p_balreadytransferred

where 
szftoid = p_szftoid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updateftoitemreason(
p_szftoid bos_dt_szid,
p_sztotrackingid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sd_ftoitem
set 
szreasonid = p_szreasonid,
szdescription = p_szdescription
where 
szftoid = p_szftoid and
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updateftoitemsuccess(
p_szftoid bos_dt_szid,
p_sztotrackingid bos_dt_szid,
p_bsuccess bit)
returns void as
$body$
begin
update bos_sd_ftoitem
set 
bsuccess = p_bsuccess
where 
szftoid = p_szftoid and
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotracking(
p_sztotrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szftoid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
sztype = p_sztype,
szcustid = p_szcustid,
szfsoid = p_szfsoid,
szsalesid = p_szsalesid,
szftoid = p_szftoid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount,
szteamid = p_szteamid,
szscheduleid = p_szscheduleid,
decvalue = p_decvalue,
szfcallid = p_szfcallid, 
dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotracking_013(
p_sztotrackingid bos_dt_szid,
p_sztype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szfsoid bos_dt_szid,
p_szsalesid bos_dt_szid,
p_szftoid bos_dt_szid,
p_bfinished bit,
p_bsuccess bit,
p_btasked bit,
p_dtmnext timestamp,
p_bttrialcount smallint,
p_szteamid bos_dt_szid,
p_szscheduleid bos_dt_szid,
p_decvalue bos_dt_decamount,
p_szfcallid bos_dt_szid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
sztype = p_sztype,
szcustid = p_szcustid,
szfsoid = p_szfsoid,
szsalesid = p_szsalesid,
szftoid = p_szftoid,
bfinished = p_bfinished,
bsuccess = p_bsuccess,
btasked = p_btasked,
dtmnext = p_dtmnext,
bttrialcount = p_bttrialcount,
szteamid = p_szteamid,
szscheduleid = p_szscheduleid,
decvalue = p_decvalue,
szfcallid = p_szfcallid, 
dtmlastupdated = p_dtmlastupdated

where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotrackingnextschedule(
p_sztotrackingid bos_dt_szid,
p_dtmnext timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
dtmnext = p_dtmnext
, dtmlastupdated = p_dtmlastupdated
where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotrackingnextschedule_014(
p_sztotrackingid bos_dt_szid,
p_dtmnext timestamp,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
update bos_sd_totracking
set 
dtmnext = p_dtmnext
, dtmlastupdated = p_dtmlastupdated
where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotrackingproduct_byitem(
p_sztotrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_totrackingproduct
set 
szproductid = p_szproductid,
decqty = p_decqty,
szuomid = p_szuomid,
szorderitemtypeid = p_szorderitemtypeid,
szparentid = p_szparentid
where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_fto_updatetotrackingproduct_byitem_014(
p_sztotrackingid bos_dt_szid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_decqty bos_dt_decamount,
p_szuomid bos_dt_szid,
p_szorderitemtypeid bos_dt_szid,
p_szparentid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_totrackingproduct
set 
szproductid = p_szproductid,
decqty = p_decqty,
szuomid = p_szuomid,
szorderitemtypeid = p_szorderitemtypeid,
szparentid = p_szparentid
where 
sztotrackingid = p_sztotrackingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_createinvoiceprocessing(
p_szinvoiceprocessingid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bimmediateinvoice bit,
p_szscheduleid bos_dt_szid,
p_szrentscheduleid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprintingtype bos_dt_szsmallid,
p_bprintpaymentnote bit,
p_bprintsnreport bit,
p_bprintaccountstatement bit,
p_bprintdeliveryreport bit,
p_szpromopriceorderid bos_dt_szid,
p_decprocessifamount bos_dt_szid,
p_decprocessifdlvcnt bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_invoiceprocessing
(
szinvoiceprocessingid,
szdescription,
bimmediateinvoice,
szscheduleid,
szrentscheduleid,
szpriceorderid,
szinvoiceprintingtype,
bprintpaymentnote,
bprintsnreport,
bprintaccountstatement,
bprintdeliveryreport,
szpromopriceorderid,
decprocessifamount,
decprocessifdlvcnt,
szpriceid,
szpromopriceid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szinvoiceprocessingid,
p_szdescription,
p_bimmediateinvoice,
p_szscheduleid,
p_szrentscheduleid,
p_szpriceorderid,
p_szinvoiceprintingtype,
p_bprintpaymentnote,
p_bprintsnreport,
p_bprintaccountstatement,
p_bprintdeliveryreport,
p_szpromopriceorderid,
p_decprocessifamount,
p_decprocessifdlvcnt,
p_szpriceid,
p_szpromopriceid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_createinvoiceprocessing_013(
p_szinvoiceprocessingid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bimmediateinvoice bit,
p_szscheduleid bos_dt_szid,
p_szrentscheduleid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprintingtype bos_dt_szsmallid,
p_bprintpaymentnote bit,
p_bprintsnreport bit,
p_bprintaccountstatement bit,
p_bprintdeliveryreport bit,
p_szpromopriceorderid bos_dt_szid,
p_decprocessifamount bos_dt_szid,
p_decprocessifdlvcnt bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_invoiceprocessing
(
szinvoiceprocessingid,
szdescription,
bimmediateinvoice,
szscheduleid,
szrentscheduleid,
szpriceorderid,
szinvoiceprintingtype,
bprintpaymentnote,
bprintsnreport,
bprintaccountstatement,
bprintdeliveryreport,
szpromopriceorderid,
decprocessifamount,
decprocessifdlvcnt,
szpriceid,
szpromopriceid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szinvoiceprocessingid,
p_szdescription,
p_bimmediateinvoice,
p_szscheduleid,
p_szrentscheduleid,
p_szpriceorderid,
p_szinvoiceprintingtype,
p_bprintpaymentnote,
p_bprintsnreport,
p_bprintaccountstatement,
p_bprintdeliveryreport,
p_szpromopriceorderid,
p_decprocessifamount,
p_decprocessifdlvcnt,
p_szpriceid,
p_szpromopriceid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_deleteinvoiceprocessing(
p_szinvoiceprocessingid bos_dt_szid)
returns void as
$body$
begin
delete from
bos_sd_invoiceprocessing
where
szinvoiceprocessingid = p_szinvoiceprocessingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sd_invoiceprocessing;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_getinvoiceprocessing(
p_szinvoiceprocessingid bos_dt_szid)
returns void as
$body$
begin
select 
szdescription,
bimmediateinvoice,
szscheduleid,
szrentscheduleid,
szpriceorderid,
szinvoiceprintingtype,
bprintpaymentnote,
bprintsnreport,
bprintaccountstatement,
bprintdeliveryreport,
szpromopriceorderid,
decprocessifamount,
decprocessifdlvcnt,
szpriceid,
szpromopriceid,

dtmlastupdated,
balreadytransferred


from 
bos_sd_invoiceprocessing
where 
szinvoiceprocessingid = p_szinvoiceprocessingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_getlistofinvoiceprocessing()
returns void as
$body$
begin
select 
szinvoiceprocessingid,
szdescription,
szscheduleid,
szrentscheduleid,
decprocessifamount,
decprocessifdlvcnt

from 
bos_sd_invoiceprocessing;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_isinvoiceprocessingexist(
p_szinvoiceprocessingid bos_dt_szid)
returns void as
$body$
begin
select 
szinvoiceprocessingid

from 
bos_sd_invoiceprocessing
where 
szinvoiceprocessingid = p_szinvoiceprocessingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_lockinvoiceprocessing(
p_szinvoiceprocessingid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_invoiceprocessing
set 
bprintpaymentnote = bprintpaymentnote
where 
szinvoiceprocessingid = p_szinvoiceprocessingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_updateinvoiceprocessing(
p_szinvoiceprocessingid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bimmediateinvoice bit,
p_szscheduleid bos_dt_szid,
p_szrentscheduleid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprintingtype bos_dt_szsmallid,
p_bprintpaymentnote bit,
p_bprintsnreport bit,
p_bprintaccountstatement bit,
p_bprintdeliveryreport bit,
p_szpromopriceorderid bos_dt_szid,
p_decprocessifamount bos_dt_szid,
p_decprocessifdlvcnt bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_invoiceprocessing
set 
szdescription = p_szdescription,
szscheduleid = p_szscheduleid,
szrentscheduleid = p_szrentscheduleid,
bimmediateinvoice = p_bimmediateinvoice,
szpriceorderid = p_szpriceorderid,
szinvoiceprintingtype = p_szinvoiceprintingtype,
bprintpaymentnote = p_bprintpaymentnote,
bprintsnreport = p_bprintsnreport,
bprintaccountstatement = p_bprintaccountstatement,
bprintdeliveryreport = p_bprintdeliveryreport,
szpromopriceorderid = p_szpromopriceorderid,
decprocessifamount = p_decprocessifamount,
decprocessifdlvcnt = p_decprocessifdlvcnt,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid

where 
szinvoiceprocessingid = p_szinvoiceprocessingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_invoiceprocessing_updateinvoiceprocessing_013(
p_szinvoiceprocessingid bos_dt_szid,
p_szdescription bos_dt_szdescription,
p_bimmediateinvoice bit,
p_szscheduleid bos_dt_szid,
p_szrentscheduleid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szinvoiceprintingtype bos_dt_szsmallid,
p_bprintpaymentnote bit,
p_bprintsnreport bit,
p_bprintaccountstatement bit,
p_bprintdeliveryreport bit,
p_szpromopriceorderid bos_dt_szid,
p_decprocessifamount bos_dt_szid,
p_decprocessifdlvcnt bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpromopriceid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_invoiceprocessing
set 
szdescription = p_szdescription,
szscheduleid = p_szscheduleid,
szrentscheduleid = p_szrentscheduleid,
bimmediateinvoice = p_bimmediateinvoice,
szpriceorderid = p_szpriceorderid,
szinvoiceprintingtype = p_szinvoiceprintingtype,
bprintpaymentnote = p_bprintpaymentnote,
bprintsnreport = p_bprintsnreport,
bprintaccountstatement = p_bprintaccountstatement,
bprintdeliveryreport = p_bprintdeliveryreport,
szpromopriceorderid = p_szpromopriceorderid,
decprocessifamount = p_decprocessifamount,
decprocessifdlvcnt = p_decprocessifdlvcnt,
szpriceid = p_szpriceid,
szpromopriceid = p_szpromopriceid

where 
szinvoiceprocessingid = p_szinvoiceprocessingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_createrebateprocessing(
p_szrebateprocessingid varchar,
p_szdescription bos_dt_szdescription,
p_szorderitemtypeid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_rebateprocessing
(
szrebateprocessingid,
szdescription,
szorderitemtypeid,
szpriceorderid,
szpromopriceorderid
)
values
(
p_szrebateprocessingid,
p_szdescription,
p_szorderitemtypeid,
p_szpriceorderid,
p_szpromopriceorderid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_deleterebateprocessing(
p_szrebateprocessingid varchar)
returns void as
$body$
begin
delete from
bos_sd_rebateprocessing
where
szrebateprocessingid = p_szrebateprocessingid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_getlistofrebateprocessing()
returns void as
$body$
begin
select 
szrebateprocessingid,
szdescription

from 
bos_sd_rebateprocessing;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_getrebateprocessing(
p_szrebateprocessingid varchar)
returns void as
$body$
begin
select 
szdescription,
szorderitemtypeid,
szpriceorderid,
szpromopriceorderid


from 
bos_sd_rebateprocessing
where 
szrebateprocessingid = p_szrebateprocessingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_isrebateprocessingexist(
p_szrebateprocessingid varchar)
returns void as
$body$
begin
select 
szrebateprocessingid

from 
bos_sd_rebateprocessing
where 
szrebateprocessingid = p_szrebateprocessingid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_lockrebateprocessing(
p_szrebateprocessingid varchar)
returns void as
$body$
begin
update bos_sd_rebateprocessing
set 
szdescription = szdescription
where 
szrebateprocessingid = p_szrebateprocessingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rebateprocessing_updaterebateprocessing(
p_szrebateprocessingid varchar,
p_szdescription bos_dt_szdescription,
p_szorderitemtypeid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_rebateprocessing
set 
szdescription = p_szdescription,
szorderitemtypeid = p_szorderitemtypeid,
szpriceorderid = p_szpriceorderid,
szpromopriceorderid = p_szpromopriceorderid

where 
szrebateprocessingid = p_szrebateprocessingid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_createremainstockincustomer(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szproductid bos_dt_szid,
p_szproductcategory bos_dt_szid,
p_decuomremainqty bos_dt_decamount,
p_decremainqty bos_dt_decamount,
p_decuomdisplayqty bos_dt_decamount,
p_decdisplayqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szsalesid bos_dt_szid,
p_szroutinetype bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_remainstockincustomer
(
szcustid,
dtmdate,
szproductid,
szproductcategory,
decuomremainqty,
decremainqty,
decuomdisplayqty,
decdisplayqty,
szuomid,
szsalesid,
szroutinetype,
szworkplaceid,
szteamid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_dtmdate,
p_szproductid,
p_szproductcategory,
p_decuomremainqty,
p_decremainqty,
p_decuomdisplayqty,
p_decdisplayqty,
p_szuomid,
p_szsalesid,
p_szroutinetype,
p_szworkplaceid,
p_szteamid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_createremainstockincustomer_014(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szproductid bos_dt_szid,
p_szproductcategory bos_dt_szid,
p_decuomremainqty bos_dt_decamount,
p_decremainqty bos_dt_decamount,
p_decuomdisplayqty bos_dt_decamount,
p_decdisplayqty bos_dt_decamount,
p_szuomid bos_dt_szmediumid,
p_szsalesid bos_dt_szid,
p_szroutinetype bos_dt_szid,
p_szworkplaceid bos_dt_szid,
p_szteamid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_remainstockincustomer
(
szcustid,
dtmdate,
szproductid,
szproductcategory,
decuomremainqty,
decremainqty,
decuomdisplayqty,
decdisplayqty,
szuomid,
szsalesid,
szroutinetype,
szworkplaceid,
szteamid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_dtmdate,
p_szproductid,
p_szproductcategory,
p_decuomremainqty,
p_decremainqty,
p_decuomdisplayqty,
p_decdisplayqty,
p_szuomid,
p_szsalesid,
p_szroutinetype,
p_szworkplaceid,
p_szteamid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_deleteremainstockincustomer(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_remainstockincustomer
where
szcustid = p_szcustid and dtmdate >= p_dtmdate and 
dtmdate < interval '1 day' +   p_dtmdate and 
szsalesid = p_szsalesid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_deleteremainstockincustomer_014(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sd_remainstockincustomer
where
szcustid = p_szcustid and dtmdate >= p_dtmdate and dtmdate < interval '1 day' +   p_dtmdate and
szsalesid = p_szsalesid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_getremainstockincustomer(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bac.szname, '') as szcustname,
bsrs.szproductid,
coalesce(bip.szname, '') as szproductname_j,
bsrs.szproductcategory as szproductcategory,

bsrs.szsalesid,
coalesce(emp.szname, '') as szsalesname_j,
bsrs.szroutinetype,
bsrs.szworkplaceid,
coalesce(wp.szname, '') as szworkplacename_j,
bsrs.szteamid,
coalesce(tm.szdescription, '') as szteamname_j,

bip.szqtyformat as szproductqtyformat_j,
bip.szuomid as szproductuomid_j,
bip.szcompuomid as szproductcompuomid_j,
bip.szuomclassid as szproductuomclassid_j,

bsrs.decuomremainqty,
bsrs.decremainqty,

bsrs.decuomdisplayqty,
bsrs.decdisplayqty,

bsrs.szuomid,
bsrs.dtmlastupdated,
bsrs.balreadytransferred


from 
bos_sd_remainstockincustomer as bsrs
left join bos_inv_product as bip on bsrs.szproductid = bip.szproductid
left join bos_ar_customer as bac on bsrs.szcustid = bac.szcustid
left join bos_pi_employee as emp on emp.szemployeeid = bsrs.szsalesid
left join bos_pi_team as tm on tm.szteamid = bsrs.szteamid
left join bos_gl_workplace as wp on wp.szworkplaceid = bsrs.szworkplaceid
where 
bsrs.szcustid = p_szcustid and bsrs.dtmdate >= p_dtmdate and bsrs.dtmdate < interval '1 day' +   p_dtmdate and bsrs.szsalesid = p_szsalesid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_getremainstockincustomer_014(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
select 
coalesce(bac.szname, '') as szcustname,
bsrs.szproductid,
coalesce(bip.szname, '') as szproductname_j,
bsrs.szproductcategory as szproductcategory,

bsrs.szsalesid,
coalesce(emp.szname, '') as szsalesname_j,
bsrs.szroutinetype,
bsrs.szworkplaceid,
coalesce(wp.szname, '') as szworkplacename_j,
bsrs.szteamid,
coalesce(tm.szdescription, '') as szteamname_j,

bip.szqtyformat as szproductqtyformat_j,
bip.szuomid as szproductuomid_j,
bip.szcompuomid as szproductcompuomid_j,
bip.szuomclassid as szproductuomclassid_j,

bsrs.decuomremainqty,
bsrs.decremainqty,

bsrs.decuomdisplayqty,
bsrs.decdisplayqty,

bsrs.szuomid,
bsrs.dtmlastupdated,
bsrs.balreadytransferred


from 
bos_sd_remainstockincustomer as bsrs
left join bos_inv_product as bip on bsrs.szproductid = bip.szproductid
left join bos_ar_customer as bac on bsrs.szcustid = bac.szcustid
left join bos_pi_employee as emp on emp.szemployeeid = bsrs.szsalesid
left join bos_pi_team as tm on tm.szteamid = bsrs.szteamid
left join bos_gl_workplace as wp on wp.szworkplaceid = bsrs.szworkplaceid
where 
bsrs.szcustid = p_szcustid and bsrs.dtmdate >= p_dtmdate and bsrs.dtmdate < interval '1 day' +   p_dtmdate and bsrs.szsalesid = p_szsalesid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_isremainstockincustomerexist(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_remainstockincustomer
where 
szcustid = p_szcustid and dtmdate >= p_dtmdate and dtmdate < interval '1 day' +   p_dtmdate and szsalesid = p_szsalesid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_isremainstockincustomerexist_014(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid

from 
bos_sd_remainstockincustomer
where 
szcustid = p_szcustid and dtmdate >= p_dtmdate and dtmdate < interval '1 day' +   p_dtmdate and szsalesid = p_szsalesid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_lockremainstockincustomer(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_remainstockincustomer
set 
szuomid = szuomid
where 
szcustid = p_szcustid and
 dtmdate >= p_dtmdate and dtmdate < interval '1 day' +   p_dtmdate and
 szsalesid = p_szsalesid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_remainstockincustomer_lockremainstockincustomer_014(
p_szcustid bos_dt_szid,
p_dtmdate timestamp,
p_szsalesid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_remainstockincustomer
set 
szuomid = szuomid
where 
szcustid = p_szcustid and
 dtmdate >= p_dtmdate and dtmdate < interval '1 day' +   p_dtmdate and
 szsalesid = p_szsalesid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_createrentalproduct(
p_szsernum varchar,
p_szcustid bos_dt_szid,
p_szorderitemtype varchar,
p_btaxable bit,
p_deccharge bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_dtmlastinvoiced timestamp,
p_dtmprevlastinvoiced timestamp,
p_szstatusid varchar,
p_btrouble bit,
p_sztroubledescr varchar,
p_szrentchargecalcid bos_dt_szid,
p_szurl bos_dt_szurl,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_rentalproduct
(
szsernum,
szcustid,
szorderitemtype,
btaxable,
deccharge,
szccyid,
dtmlastinvoiced,
dtmprevlastinvoiced,
szstatusid,
btrouble,
sztroubledescr,
szrentchargecalcid,
szurl,
sztrnid,
szdocid,
szreasonid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsernum,
p_szcustid,
p_szorderitemtype,
p_btaxable,
p_deccharge,
p_szccyid,
p_dtmlastinvoiced,
p_dtmprevlastinvoiced,
p_szstatusid,
p_btrouble,
p_sztroubledescr,
p_szrentchargecalcid,
p_szurl,
p_sztrnid,
p_szdocid,
p_szreasonid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_createrentalproduct_013(
p_szsernum varchar,
p_szcustid bos_dt_szid,
p_szorderitemtype varchar,
p_btaxable bit,
p_deccharge bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_dtmlastinvoiced timestamp,
p_dtmprevlastinvoiced timestamp,
p_szstatusid varchar,
p_btrouble bit,
p_sztroubledescr varchar,
p_szrentchargecalcid bos_dt_szid,
p_szurl bos_dt_szurl,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_szreasonid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_rentalproduct
(
szsernum,
szcustid,
szorderitemtype,
btaxable,
deccharge,
szccyid,
dtmlastinvoiced,
dtmprevlastinvoiced,
szstatusid,
btrouble,
sztroubledescr,
szrentchargecalcid,
szurl,
sztrnid,
szdocid,
szreasonid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsernum,
p_szcustid,
p_szorderitemtype,
p_btaxable,
p_deccharge,
p_szccyid,
p_dtmlastinvoiced,
p_dtmprevlastinvoiced,
p_szstatusid,
p_btrouble,
p_sztroubledescr,
p_szrentchargecalcid,
p_szurl,
p_sztrnid,
p_szdocid,
p_szreasonid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_deleterentalproduct(
p_szsernum varchar)
returns void as
$body$
begin
delete 
 from bos_sd_rentalproduct
where
szsernum = p_szsernum;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_getlistofrentalproduct()
returns void as
$body$
begin
select 
bos_sd_rentalproduct.szsernum,
bos_inv_stocksnproduct.szproductid

from 
bos_sd_rentalproduct
left join bos_inv_stocksnproduct on 
bos_sd_rentalproduct.szsernum = bos_inv_stocksnproduct.szproductsn;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_getlistofrentalproductforcustomworkplace(
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin
select 
bsrp.szsernum, bsrp.szcustid

from 
bos_sd_rentalproduct as bsrp
left join bos_ar_customer as bac on bsrp.szcustid = bac.szcustid
where 
bac.szdlvworkplaceid like p_szworkplaceid 
order by 
bsrp.szsernum, bsrp.szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_getlistofrentalproductwherecustproductsn(
p_szcustid bos_dt_szid,
p_szproductid bos_dt_szid,
p_szsernum varchar)
returns void as
$body$
begin
select
-- fields from stocksnproduct.
bos_inv_stocksnproduct.szproductid,
bos_inv_stocksnproduct.dtmlastchecked as dtmlastchecked_j,
bos_inv_stocksnproduct.szsuppid as szsuppid_j,
bos_inv_stocksnproduct.szcheckerid as szcheckerid_j,
bos_inv_stocksnproduct.szchassisnumber as szchassisnumber_j,

product.szname as szproductnm_j,	
product.szdiscountgroupid as szproductdiscgroupid_j,
product.szqtyformat as szproductqtyformat_j,
product.szuomid as szproductuomid_j,
product.szuomclassid as szproductuomclassid_j,
product.szcompuomid as szproductcompuomid_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,

bos_sd_rentalproduct.szsernum,
bos_sd_rentalproduct.szcustid,

bos_sd_rentalproduct.szorderitemtype, 
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,

bos_sd_rentalproduct.btaxable,
bos_sd_rentalproduct.deccharge,
bos_sd_rentalproduct.szccyid,
bos_sd_rentalproduct.dtmlastinvoiced,
bos_sd_rentalproduct.dtmprevlastinvoiced,
bos_sd_rentalproduct.szstatusid,
bos_sd_rentalproduct.btrouble,
bos_sd_rentalproduct.sztroubledescr,
bos_sd_rentalproduct.szrentchargecalcid,
bos_sd_rentalproduct.szurl,
bos_sd_rentalproduct.sztrnid,
bos_sd_rentalproduct.szdocid,
bos_sd_rentalproduct.szreasonid,

-- data status.
bos_sd_rentalproduct.dtmlastupdated,
bos_sd_rentalproduct.balreadytransferred

from 
bos_sd_rentalproduct
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_sd_rentalproduct.szsernum
left join bos_inv_product as product on product.szproductid = bos_inv_stocksnproduct.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_rentalproduct.szorderitemtype

where
bos_sd_rentalproduct.szcustid like p_szcustid and 
bos_inv_stocksnproduct.szproductid like p_szproductid and 
bos_sd_rentalproduct.szsernum like p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_getrentalproduct(
p_szsernum varchar)
returns void as
$body$
begin

select
-- fields from stocksnproduct.
bos_inv_stocksnproduct.szproductid,
bos_inv_stocksnproduct.dtmlastchecked as dtmlastchecked_j,
bos_inv_stocksnproduct.szsuppid as szsuppid_j,
bos_inv_stocksnproduct.szcheckerid as szcheckerid_j,
bos_inv_stocksnproduct.szchassisnumber as szchassisnumber_j,

bos_inv_product.szname as szproductnm_j,
bos_inv_product.szdiscountgroupid as szproductdiscgroupid_j,
bos_inv_product.szqtyformat as szproductqtyformat_j,
bos_inv_product.szuomid as szproductuomid_j,
bos_inv_product.szuomclassid as szproductuomclassid_j,
bos_inv_product.szcompuomid as szproductcompuomid_j,
bos_gl_taxtype.decrate as decproducttaxrate_j,

bos_sd_rentalproduct.szsernum,
bos_sd_rentalproduct.szcustid,

bos_sd_rentalproduct.szorderitemtype, 
bos_inv_orderitemtype.sztrntype as szorderitemtypetrntype_j,

bos_sd_rentalproduct.btaxable,
bos_sd_rentalproduct.deccharge,
bos_sd_rentalproduct.szccyid,
bos_sd_rentalproduct.dtmlastinvoiced,
bos_sd_rentalproduct.dtmprevlastinvoiced,
bos_sd_rentalproduct.szstatusid,
bos_sd_rentalproduct.btrouble,
bos_sd_rentalproduct.sztroubledescr,
bos_sd_rentalproduct.szrentchargecalcid,
bos_sd_rentalproduct.szurl,
bos_sd_rentalproduct.sztrnid,
bos_sd_rentalproduct.szdocid,
bos_sd_rentalproduct.szreasonid,

-- data status.
bos_sd_rentalproduct.dtmlastupdated,
bos_sd_rentalproduct.balreadytransferred

from 
bos_sd_rentalproduct
left join bos_inv_stocksnproduct on bos_inv_stocksnproduct.szproductsn = bos_sd_rentalproduct.szsernum
left join bos_inv_product on bos_inv_stocksnproduct.szproductid = bos_inv_product.szproductid
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid
left join bos_inv_orderitemtype on bos_inv_orderitemtype.szorderitemtypeid = bos_sd_rentalproduct.szorderitemtype
where
bos_sd_rentalproduct.szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_isrentalproductexist(
p_szsernum varchar)
returns void as
$body$
begin
select 
szsernum

from 
bos_sd_rentalproduct
where 
szsernum = p_szsernum ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_lockrentalproduct(
p_szsernum varchar)
returns void as
$body$
begin
update bos_sd_rentalproduct
set 
btaxable = btaxable
where 
szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_settrouble(
p_szsernum varchar,
p_btrouble bit,
p_sztroubledescr varchar)
returns void as
$body$
begin
update bos_sd_rentalproduct
set 
btrouble = p_btrouble,
sztroubledescr = p_sztroubledescr

where 
szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_updatelastinvoiced(
p_szsernum varchar,
p_dtmlastinvoiced timestamp,
p_dtmprevlastinvoiced timestamp)
returns void as
$body$
begin
update bos_sd_rentalproduct
set 
dtmlastinvoiced = p_dtmlastinvoiced,
dtmprevlastinvoiced = p_dtmprevlastinvoiced
where 
szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_updaterentalproduct(
p_szsernum varchar,
p_szcustid bos_dt_szid,
p_szorderitemtype varchar,
p_btaxable bit,
p_deccharge bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szurl bos_dt_szurl,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_btrouble bit,
p_sztroubledescr varchar,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_rentalproduct
set 
szcustid = p_szcustid ,
szorderitemtype = p_szorderitemtype,
btaxable = p_btaxable,
deccharge = p_deccharge,
szccyid = p_szccyid,
szurl = p_szurl,
sztrnid = p_sztrnid,
szdocid = p_szdocid,
btrouble=p_btrouble,
sztroubledescr=p_sztroubledescr,
szreasonid=p_szreasonid
where 
szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentalproduct_updaterentalproduct_013(
p_szsernum varchar,
p_szcustid bos_dt_szid,
p_szorderitemtype varchar,
p_btaxable bit,
p_deccharge bos_dt_decamount,
p_szccyid bos_dt_szsmallid,
p_szurl bos_dt_szurl,
p_sztrnid bos_dt_szmediumid,
p_szdocid bos_dt_szid,
p_btrouble bit,
p_sztroubledescr varchar,
p_szreasonid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_rentalproduct
set 
szcustid = p_szcustid ,
szorderitemtype = p_szorderitemtype,
btaxable = p_btaxable,
deccharge = p_deccharge,
szccyid = p_szccyid,
szurl = p_szurl,
sztrnid = p_sztrnid,
szdocid = p_szdocid,
btrouble=p_btrouble,
sztroubledescr=p_sztroubledescr,
szreasonid=p_szreasonid
where 
szsernum = p_szsernum;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_createrentchargecalc(
p_szrentchargecalcid bos_dt_szid,
p_szchargecalctype bos_dt_szsmallid,
p_decvalue1 bos_dt_decamount,
p_decvalue2 bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_rentchargecalc
(
szrentchargecalcid,
szchargecalctype,
decvalue1,
decvalue2,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrentchargecalcid,
p_szchargecalctype,
p_decvalue1,
p_decvalue2,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_createrentchargecalc_014(
p_szrentchargecalcid bos_dt_szid,
p_szchargecalctype bos_dt_szsmallid,
p_decvalue1 bos_dt_decamount,
p_decvalue2 bos_dt_decamount,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_rentchargecalc
(
szrentchargecalcid,
szchargecalctype,
decvalue1,
decvalue2,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrentchargecalcid,
p_szchargecalctype,
p_decvalue1,
p_decvalue2,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_deleterentchargecalc(
p_szrentchargecalcid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_rentchargecalc
where
szrentchargecalcid = p_szrentchargecalcid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_getlistofrentchargecalc()
returns void as
$body$
begin
select 
szrentchargecalcid,
szchargecalctype,
decvalue1,
decvalue2

from 
bos_sd_rentchargecalc;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_getrentchargecalc(
p_szrentchargecalcid bos_dt_szid)
returns void as
$body$
begin
select 
szrentchargecalcid,
szchargecalctype,
decvalue1,
decvalue2,

dtmlastupdated,
balreadytransferred

from 
bos_sd_rentchargecalc
where 
szrentchargecalcid = p_szrentchargecalcid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_getrentchargecalc_014(
p_szrentchargecalcid bos_dt_szid)
returns void as
$body$
begin
select 
szrentchargecalcid,
szchargecalctype,
decvalue1,
decvalue2,

dtmlastupdated,
balreadytransferred

from 
bos_sd_rentchargecalc
where 
szrentchargecalcid = p_szrentchargecalcid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_isrentchargecalcexist(
p_szrentchargecalcid bos_dt_szid)
returns void as
$body$
begin
select 
szrentchargecalcid

from 
bos_sd_rentchargecalc
where 
szrentchargecalcid = p_szrentchargecalcid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_lockrentchargecalc(
p_szrentchargecalcid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_rentchargecalc
set 
szchargecalctype = szchargecalctype
where 
szrentchargecalcid = p_szrentchargecalcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rentchargecalc_updaterentchargecalc(
p_szrentchargecalcid bos_dt_szid,
p_szchargecalctype bos_dt_szsmallid,
p_decvalue1 bos_dt_decamount,
p_decvalue2 bos_dt_decamount)
returns void as
$body$
begin
update bos_sd_rentchargecalc
set 
szchargecalctype = p_szchargecalctype,
decvalue1 = p_decvalue1,
decvalue2 = p_decvalue2
where 
szrentchargecalcid = p_szrentchargecalcid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createroute(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_route
(
szrouteid,
szdescription,
szworkplaceid,
szareaid,
szroutetype,
szscheduleid,
szopuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrouteid,
p_szdescription,
p_szworkplaceid,
p_szareaid,
p_szroutetype,
p_szscheduleid,
p_szopuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createroute_013(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_route
(
szrouteid,
szdescription,
szworkplaceid,
szareaid,
szroutetype,
szscheduleid,
szopuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrouteid,
p_szdescription,
p_szworkplaceid,
p_szareaid,
p_szroutetype,
p_szscheduleid,
p_szopuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createroute_013_draft(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_route_draft
(
szrouteid,
szdescription,
szworkplaceid,
szareaid,
szroutetype,
szscheduleid,
szopuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrouteid,
p_szdescription,
p_szworkplaceid,
p_szareaid,
p_szroutetype,
p_szscheduleid,
p_szopuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createroute_draft(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred smallint)
returns void as
$body$
begin
insert into bos_sd_route_draft
(
szrouteid,
szdescription,
szworkplaceid,
szareaid,
szroutetype,
szscheduleid,
szopuserid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szrouteid,
p_szdescription,
p_szworkplaceid,
p_szareaid,
p_szroutetype,
p_szscheduleid,
p_szopuserid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createrouteitem(
p_szrouteid bos_dt_szbigid,
p_intitemnumber integer,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_routeitem
(
szrouteid,
intitemnumber,
szcustid
)
values
(
p_szrouteid,
p_intitemnumber,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_createrouteitem_draft(
p_szrouteid bos_dt_szbigid,
p_intitemnumber integer,
p_szcustid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sd_routeitem_draft
(
szrouteid,
intitemnumber,
szcustid
)
values
(
p_szrouteid,
p_intitemnumber,
p_szcustid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_deleteroute(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sd_route
where
szrouteid = p_szrouteid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_deleteroute_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sd_route_draft
where
szrouteid = p_szrouteid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_deleterouteitem(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sd_routeitem
where
szrouteid = p_szrouteid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_deleterouteitem_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sd_routeitem_draft
where
szrouteid = p_szrouteid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofopuserroute(
p_szopuserid bos_dt_szid,
p_szroutetype bos_dt_szsmallid)
returns void as
$body$
begin

select
bsr.szrouteid,
bsr.szscheduleid as szroutescheduleid,
coalesce(bgr.szdescription, '') as szrouteschedulename,
coalesce(bsri.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
coalesce(bac.custszaddress_1, '') as szaddr,
coalesce(bac.custszzipcode, '') as szzipcode

from
bos_sd_route as bsr 
inner join bos_sd_routeitem as bsri on bsr.szrouteid = bsri.szrouteid
left join bos_gen_routineschedule as bgr on bsr.szscheduleid = bgr.szscheduleid
left join bos_ar_customer as bac on bsri.szcustid = bac.szcustid

where
bsr.szroutetype like p_szroutetype and bsr.szopuserid like p_szopuserid

order by
bsr.szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofopuserroute_draft(
p_szopuserid bos_dt_szid,
p_szroutetype bos_dt_szsmallid)
returns void as
$body$
begin

select
bsr.szrouteid,
bsr.szscheduleid as szroutescheduleid,
coalesce(bgr.szdescription, '') as szrouteschedulename,
coalesce(bsri.szcustid, '') as szcustid,
coalesce(bac.szname, '') as szcustname,
coalesce(bac.custszaddress_1, '') as szaddr,
coalesce(bac.custszzipcode, '') as szzipcode

from
bos_sd_route_draft as bsr 
inner join bos_sd_routeitem_draft as bsri on bsr.szrouteid = bsri.szrouteid
left join bos_gen_routineschedule as bgr on bsr.szscheduleid = bgr.szscheduleid
left join bos_ar_customer as bac on bsri.szcustid = bac.szcustid

where
bsr.szroutetype like p_szroutetype and bsr.szopuserid like p_szopuserid

order by
bsr.szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustcollroutine(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bscc.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custcollroutine as bscc 
on bscc.szscheduleid = bgri2.szscheduleid
inner join bos_ar_customer as bac 
on bac.szcustid = bscc.szcustid
where
--there's no team for collection routine.
bgri.szscheduleid = p_szrouteschid and
bac.szcollworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustcollroutine_013(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bscc.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custcollroutine as bscc on bscc.szscheduleid = bgri2.szscheduleid
inner join bos_ar_customer as bac on bac.szcustid = bscc.szcustid
where
--there's no team for collection routine.
bgri.szscheduleid = p_szrouteschid and
bac.szcollworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustcollroutine_draft(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bscc.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custcollroutine_draft as bscc on bscc.szscheduleid = bgri2.szscheduleid
inner join bos_ar_customer as bac on bac.szcustid = bscc.szcustid
where
--there's no team for collection routine.
bgri.szscheduleid = p_szrouteschid and
bac.szcollworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustroutine(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bsci.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custroutineitem as bsci on bsci.szscheduleid = bgri2.szscheduleid and
bsci.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bsci.szcustid

where
bsci.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustroutine_013(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bsci.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custroutineitem as bsci on bsci.szscheduleid = bgri2.szscheduleid and
bsci.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bsci.szcustid

where
bsci.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecustroutine_draft(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct 
bsci.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid 
and bgri2.decvalue = bgri.decvalue
inner join bos_sd_custroutineitem_draft as bsci on bsci.szscheduleid = bgri2.szscheduleid and
bsci.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bsci.szcustid

where
bsci.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecusttakingorderroutine(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct
bscri.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid and 
bgri2.decvalue = bgri.decvalue
inner join bos_sd_custtoroutineitem as bscri on bscri.szscheduleid = bgri2.szscheduleid and
bscri.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bscri.szcustid

where
bscri.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecusttakingorderroutine_013(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct
bscri.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid and 
bgri2.decvalue = bgri.decvalue
inner join bos_sd_custtoroutineitem as bscri on bscri.szscheduleid = bgri2.szscheduleid and
bscri.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bscri.szcustid

where
bscri.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofpossiblecusttakingorderroutine_draft(
p_szrouteteamid bos_dt_szid,
p_szrouteschid bos_dt_szid,
p_szworkplaceid bos_dt_szid)
returns void as
$body$
begin

select distinct
bscri.szcustid

from
bos_gen_routineschedule as bgr
inner join bos_gen_routinescheduleitem as bgri on bgri.szscheduleid = bgr.szscheduleid and bgri.shscheduleitem = 0
inner join bos_gen_routineschedule as bgr2 on bgr2.szscheduletype = bgr.szscheduletype
inner join bos_gen_routinescheduleitem as bgri2 on bgri2.szscheduleid = bgr2.szscheduleid and 
bgri2.decvalue = bgri.decvalue
inner join bos_sd_custtoroutineitem_draft as bscri on bscri.szscheduleid = bgri2.szscheduleid and
bscri.decvalue = bgri2.decvalue
inner join bos_ar_customer as bac on bac.szcustid = bscri.szcustid

where
bscri.szteamid = p_szrouteteamid and
bgri.szscheduleid = p_szrouteschid and
bac.szdlvworkplaceid = p_szworkplaceid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutebytypecustomerteamroutesch(
p_szroutetype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szrouteschid bos_dt_szid)
returns void as
$body$
begin

select
bsri.szrouteid

from
bos_sd_route as bsr 
inner join bos_sd_routeitem as bsri on bsr.szrouteid = bsri.szrouteid

inner join bos_pi_employee as r_e on r_e.szemployeeid = bsr.szopuserid

where
bsr.szroutetype = p_szroutetype
and bsri.szcustid = p_szcustid
and r_e.szteamid like p_szteamid		--use like becoz collection doesn't support team.
and bsr.szscheduleid = p_szrouteschid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutebytypecustomerteamroutesch_013(
p_szroutetype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szrouteschid bos_dt_szid)
returns void as
$body$
begin

select
bsri.szrouteid

from
bos_sd_route as bsr 
inner join bos_sd_routeitem as bsri on bsr.szrouteid = bsri.szrouteid

inner join bos_pi_employee as r_e on r_e.szemployeeid = bsr.szopuserid

where
bsr.szroutetype = p_szroutetype
and bsri.szcustid = p_szcustid
and r_e.szteamid like p_szteamid		--use like becoz collection doesn't support team.
and bsr.szscheduleid = p_szrouteschid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutebytypecustomerteamroutesch_draft(
p_szroutetype bos_dt_szsmallid,
p_szcustid bos_dt_szid,
p_szteamid bos_dt_szid,
p_szrouteschid bos_dt_szid)
returns void as
$body$
begin

select
bsri.szrouteid

from
bos_sd_route_draft as bsr 
inner join bos_sd_routeitem_draft as bsri on bsr.szrouteid = bsri.szrouteid

inner join bos_pi_employee as r_e on r_e.szemployeeid = bsr.szopuserid

where
bsr.szroutetype = p_szroutetype
and bsri.szcustid = p_szcustid
and r_e.szteamid like p_szteamid		--use like becoz collection doesn't support team.
and bsr.szscheduleid = p_szrouteschid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewhereemployee(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route
where 
szopuserid like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewhereemployee_draft(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route_draft
where 
szopuserid like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewheretype(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route
where 
szroutetype like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewheretype_draft(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route_draft
where 
szroutetype like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewhereworkplace(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route
where 
szworkplaceid like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getlistofroutewhereworkplace_draft(
p_szid bos_dt_szid)
returns void as
$body$
begin
select 
szrouteid,
szdescription,
szscheduleid,
szroutetype

from 
bos_sd_route_draft
where 
szworkplaceid like p_szid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getroute(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin

select
bos_sd_route.szrouteid,
bos_sd_route.szdescription,
bos_sd_route.szworkplaceid,
bos_sd_route.szareaid,
bos_sd_route.szroutetype,

bos_sd_route.szscheduleid,
bos_gen_routineschedule.szdescription as szschedulename_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,
bgrsi.decvalue as decschedulevalue_j,

bos_sd_route.szopuserid,
coalesce(bos_pi_employee.szname,'') as szopusernm,
coalesce(((case when bos_pi_employee.szteamid = '' then mgm.szteamid else bos_pi_employee.szteamid end)), mgm.szteamid)as szopuserteamid_j,
bos_pi_employee.szworkplaceid as szopuserworkplaceid_j,

-- data status.
bos_sd_route.dtmlastupdated,
bos_sd_route.balreadytransferred
from
bos_sd_route left join bos_pi_employee on bos_sd_route.szopuserid = bos_pi_employee.szemployeeid
left join bos_gen_routineschedule on bos_sd_route.szscheduleid = bos_gen_routineschedule.szscheduleid
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and
bgrsi.shscheduleitem = 0
left join bos_sd_mgm_area mgm on mgm.szareaid = bos_sd_route.szareaid 

where
bos_sd_route.szrouteid = p_szrouteid;

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getroute_013(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin

select
bos_sd_route.szrouteid,
bos_sd_route.szdescription,
bos_sd_route.szworkplaceid,
bos_sd_route.szareaid,
bos_sd_route.szroutetype,

bos_sd_route.szscheduleid,
bos_gen_routineschedule.szdescription as szschedulename_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,
bgrsi.decvalue as decschedulevalue_j,

bos_sd_route.szopuserid,
coalesce(bos_pi_employee.szname,'') as szopusernm,
coalesce(((case when bos_pi_employee.szteamid = '' then mgm.szteamid else bos_pi_employee.szteamid end)), mgm.szteamid)as szopuserteamid_j,
bos_pi_employee.szworkplaceid as szopuserworkplaceid_j,

-- data status.
bos_sd_route.dtmlastupdated,
bos_sd_route.balreadytransferred
from
bos_sd_route left join bos_pi_employee on bos_sd_route.szopuserid = bos_pi_employee.szemployeeid
left join bos_gen_routineschedule on bos_sd_route.szscheduleid = bos_gen_routineschedule.szscheduleid
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and
bgrsi.shscheduleitem = 0
left join bos_sd_mgm_area mgm on mgm.szareaid = bos_sd_route.szareaid 

where
bos_sd_route.szrouteid = p_szrouteid;

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getroute_013_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin

select  
bos_sd_route_draft.szrouteid,  
bos_sd_route_draft.szdescription,  
bos_sd_route_draft.szworkplaceid,  
bos_sd_route_draft.szareaid,  
bos_sd_route_draft.szroutetype,  

bos_sd_route_draft.szscheduleid,  
bos_gen_routineschedule.szdescription as szschedulename_j,  
bos_gen_routineschedule.szscheduletype as szscheduletype_j,  
bgrsi.decvalue as decschedulevalue_j,  

bos_sd_route_draft.szopuserid,  
coalesce(bos_pi_employee.szname,'') as szopusernm,  
coalesce(((case when bos_pi_employee.szteamid = '' then mgm.szteamid else bos_pi_employee.szteamid end)), mgm.szteamid)as szopuserteamid_j,  
bos_pi_employee.szworkplaceid as szopuserworkplaceid_j,  

-- data status.  
bos_sd_route_draft.dtmlastupdated,  
bos_sd_route_draft.balreadytransferred  
from  
bos_sd_route_draft   
left join bos_pi_employee on bos_sd_route_draft.szopuserid = bos_pi_employee.szemployeeid  
left join bos_gen_routineschedule on bos_sd_route_draft.szscheduleid = bos_gen_routineschedule.szscheduleid  
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and  
bgrsi.shscheduleitem = 0  
left join bos_sd_mgm_area mgm on mgm.szareaid = bos_sd_route_draft.szareaid   

where  
bos_sd_route_draft.szrouteid = p_szrouteid;  


------------------------------------  

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getroute_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin

select
bos_sd_route_draft.szrouteid,
bos_sd_route_draft.szdescription,
bos_sd_route_draft.szworkplaceid,
bos_sd_route_draft.szareaid,
bos_sd_route_draft.szroutetype,

bos_sd_route_draft.szscheduleid,
bos_gen_routineschedule.szdescription as szschedulename_j,
bos_gen_routineschedule.szscheduletype as szscheduletype_j,
bgrsi.decvalue as decschedulevalue_j,

bos_sd_route_draft.szopuserid,
coalesce(bos_pi_employee.szname,'') as szopusernm,
coalesce(((case when bos_pi_employee.szteamid = '' then mgm.szteamid else bos_pi_employee.szteamid end)), mgm.szteamid)as szopuserteamid_j,
bos_pi_employee.szworkplaceid as szopuserworkplaceid_j,

-- data status.
bos_sd_route_draft.dtmlastupdated,
bos_sd_route_draft.balreadytransferred
from
bos_sd_route_draft 
left join bos_pi_employee on bos_sd_route_draft.szopuserid = bos_pi_employee.szemployeeid
left join bos_gen_routineschedule on bos_sd_route_draft.szscheduleid = bos_gen_routineschedule.szscheduleid
left join bos_gen_routinescheduleitem as bgrsi on bgrsi.szscheduleid = bos_gen_routineschedule.szscheduleid and
bgrsi.shscheduleitem = 0
left join bos_sd_mgm_area mgm on mgm.szareaid = bos_sd_route_draft.szareaid 

where
bos_sd_route_draft.szrouteid = p_szrouteid;


------------------------------------

--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getrouteitem(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
select 
bos_sd_routeitem.intitemnumber,
bos_sd_routeitem.szcustid,
bos_ar_customer.szname as szcustnm

from 
bos_sd_routeitem 
left join bos_ar_customer on 
bos_sd_routeitem.szcustid = bos_ar_customer.szcustid
where 
bos_sd_routeitem.szrouteid = p_szrouteid 
order by 
--must be explicit becoz the behavior of index in un-commited isolation level is un-guessed.
bos_sd_routeitem.intitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_getrouteitem_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
select 
bos_sd_routeitem_draft.intitemnumber,
bos_sd_routeitem_draft.szcustid,
bos_ar_customer.szname as szcustnm

from 
bos_sd_routeitem_draft
left join bos_ar_customer on 
bos_sd_routeitem_draft.szcustid = bos_ar_customer.szcustid
where 
bos_sd_routeitem_draft.szrouteid = p_szrouteid 
order by 
--must be explicit becoz the behavior of index in un-commited isolation level is un-guessed.
bos_sd_routeitem_draft.intitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_isrouteexist(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
select 
szrouteid

from 
bos_sd_route
where 
szrouteid = p_szrouteid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_isrouteexist_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
select 
szrouteid

from 
bos_sd_route_draft
where 
szrouteid = p_szrouteid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_lockroute(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sd_route
set 
szroutetype = szroutetype
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_lockroute_draft(
p_szrouteid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sd_route_draft
set 
szroutetype = szroutetype
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_updateroute(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_route
set 
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid,
szareaid = p_szareaid,
szroutetype = p_szroutetype,
szscheduleid = p_szscheduleid,
szopuserid = p_szopuserid
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_updateroute_013(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_route
set 
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid,
szareaid = p_szareaid,
szroutetype = p_szroutetype,
szscheduleid = p_szscheduleid,
szopuserid = p_szopuserid
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_updateroute_013_draft(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_route_draft
set 
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid,
szareaid = p_szareaid,
szroutetype = p_szroutetype,
szscheduleid = p_szscheduleid,
szopuserid = p_szopuserid
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_route_updateroute_draft(
p_szrouteid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szworkplaceid bos_dt_szid,
p_szareaid bos_dt_szid,
p_szroutetype bos_dt_szsmallid,
p_szscheduleid bos_dt_szid,
p_szopuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_route_draft
set 
szdescription = p_szdescription,
szworkplaceid = p_szworkplaceid,
szareaid = p_szareaid,
szroutetype = p_szroutetype,
szscheduleid = p_szscheduleid,
szopuserid = p_szopuserid
where 
szrouteid = p_szrouteid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofcollectionresult_cash(
p_szworkplaceid varchar,
p_szcollectorid varchar,
p_dtmdate timestamp,
p_bcollectapplied bit)
returns void as
$body$
begin
select
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, '') as szcustname,
bat.decamount - coalesce((select
sum(sub_bacpi.decpaidbycashreceipt) as decpaid
from
bos_ar_fcustpayment sub_bacp
inner join bos_ar_fcustpaymentitem sub_bacpi on sub_bacpi.szfcustpaymentid = sub_bacp.szfcustpaymentid
where
sub_bacp.bapplied = 1 and
sub_bacp.dtmfcustpayment < dbo.kgenreturndatenotime(fcp.dtmfcustpayment) and
sub_bacpi.sztrnid = bat.sztrnid and
sub_bacpi.szdocid = bat.szdocid), 0) as decar,
sum(fcpid.decamount) as decpaidbycash,

cast (0 as decimal) as decpaidbygiro,
'' as szbankid,
'' as szrefdocid,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '') as szsalesid
from
bos_ar_fcustpaymentitemdetail fcpid
inner join bos_ar_fcustpaymentitem fcpi on fcpi.szfcustpaymentid = fcpid.szfcustpaymentid and
fcpi.shitemnumber = fcpid.shitemnumber
inner join bos_ar_fcustpayment fcp on fcp.szfcustpaymentid = fcpi.szfcustpaymentid
inner join bos_ar_artrans bat on bat.sztrnid = fcpi.sztrnid and
bat.szdocid = fcpi.szdocid and
bat.szcustid = fcpi.szcustid and
bat.shrevno = 0
left join bos_ar_customer bac on bac.szcustid = bat.szcustid
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = fcpi.szdocid
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoice.szfirstfdoid_s
where
fcp.bvoid = 0 and
fcp.bapplied = p_bcollectapplied and
fcp.szworkplaceid = p_szworkplaceid and
fcp.szdeposanid = p_szcollectorid and
fcp.dtmfcustpayment >= p_dtmdate and
fcp.dtmfcustpayment < p_dtmdate+1 and
fcpid.bvalue = 1 and
fcpid.bdeposit = 0
group by
bat.sztrnid,
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, ''),
bat.decamount,
fcp.dtmfcustpayment,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '')
order by
bat.sztrnid,
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, ''),
bat.decamount,
fcp.dtmfcustpayment,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '');

--go

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofcollectionresult_giro(
p_szworkplaceid varchar,
p_szcollectorid varchar,
p_dtmdate timestamp,
p_bcollectapplied bit)
returns void as
$body$
begin
select
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, '') as szcustname,
bat.decamount - coalesce((select
sum(sub_bacpi.decpaidbycashreceipt) as decpaid
from
bos_ar_fcustpayment sub_bacp
inner join bos_ar_fcustpaymentitem sub_bacpi on sub_bacpi.szfcustpaymentid = sub_bacp.szfcustpaymentid
where
sub_bacp.bapplied = 1 and
sub_bacp.dtmfcustpayment < dbo.kgenreturndatenotime(fcp.dtmfcustpayment) and
sub_bacpi.sztrnid = bat.sztrnid and
sub_bacpi.szdocid = bat.szdocid), 0) as decar,

cast (0 as decimal) as decpaidbycash,
sum(fcpid.decamount) as decpaidbygiro,
fcpid.szbankid as szbankid,
fcpid.szrefdocid as szrefdocid,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '') as szsalesid
from
bos_ar_fcustpaymentitemdetail fcpid
inner join bos_ar_fcustpaymentitem fcpi on fcpi.szfcustpaymentid = fcpid.szfcustpaymentid and
fcpi.shitemnumber = fcpid.shitemnumber
inner join bos_ar_fcustpayment fcp on fcp.szfcustpaymentid = fcpi.szfcustpaymentid
inner join bos_ar_artrans bat on bat.sztrnid = fcpi.sztrnid and
bat.szdocid = fcpi.szdocid and
bat.szcustid = fcpi.szcustid and
bat.shrevno = 0
left join bos_ar_customer bac on bac.szcustid = bat.szcustid
left join bos_sd_finvoice on bos_sd_finvoice.szfinvoiceid = fcpi.szdocid
left join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_finvoice.szfirstfdoid_s
where
fcp.bvoid = 0 and
fcp.bapplied = p_bcollectapplied and
fcp.szworkplaceid = p_szworkplaceid and
fcp.szdeposanid = p_szcollectorid and
fcp.dtmfcustpayment >= p_dtmdate and
fcp.dtmfcustpayment < p_dtmdate+1 and
fcpid.bdeposit = 0 and
fcpid.bvalue = 0 and
fcpid.szbankid <> '' and
fcpid.szrefdocid <> ''
group by
bat.sztrnid,
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, ''),
bat.decamount,
fcp.dtmfcustpayment,
fcpid.szbankid,
fcpid.szrefdocid,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '')
order by
bat.sztrnid,
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, ''),
bat.decamount,
fcp.dtmfcustpayment,
fcpid.szbankid,
fcpid.szrefdocid,
bat.dtmdue,
bat.bcash,
coalesce(bos_sd_fdo.szsalesid, '');

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofsalesresult(
p_szworkplaceid varchar,
p_szsalesid varchar,
p_dtmdate timestamp,
p_sztrnid varchar,
p_bsalesapplied bit)
returns void as
$body$
begin

select
bat.szdocid,
bat.dtmdate,
bat.szcustid,
coalesce(bac.szname, '') as szcustname,
bat.decamount as decar,
bat.decamount as decpaidbycash,
0 as decpaidbygiro,
'' as szbankid,
'' as szrefdocid,
bat.dtmdue,
bat.bcash,
bsd.szsalesid
from
bos_sd_fdo bsd
left join bos_ar_artrans bat on bat.sztrnid = p_sztrnid and
bat.szdocid = bsd.szfinvoiceid and
bat.szcustid = bsd.szcustid and
bat.shrevno = 0
left join bos_ar_customer bac on bac.szcustid = bat.szcustid
where
bsd.bvoid = 0 and
bsd.bapplied = p_bsalesapplied and
bsd.szworkplaceid = p_szworkplaceid and
bsd.szsalesid = p_szsalesid and
bsd.dtmdelivery >= p_dtmdate and bsd.dtmdelivery < p_dtmdate+1 and
bsd.szfinvoiceid <> '' and
bsd.bcash = 1 and
bat.bclosed = 1
order by
bat.szdocid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofstockindist_fdo_sold(
p_szworkplaceid varchar,
p_szemployeeid varchar,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
bos_sd_fdoitem.szproductid
, bos_inv_product.szname as szproductname
, cast(0 as decimal) as decbeginningqty
, cast (0 as decimal) as decqtyin
, sum(bos_sd_fdoitem.decqty) as decqtysold
, cast( 0 as decimal) as decqtysoldreturn
, cast (0 as decimal) as decqtyreturn
from
bos_sd_fdoitem inner join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid
where
bos_sd_fdo.bapplied = p_bsalesapplied
and bos_sd_fdo.szworkplaceid =p_szworkplaceid
and bos_sd_fdo.szsalesid = p_szemployeeid
and bos_sd_fdo.dtmdelivery >= p_dtmfrom
and bos_sd_fdo.dtmdelivery < p_dtmto+1
and bos_sd_fdo.szlogistictype <> 'inv'
and bos_sd_fdoitem.decqty > 0
group by
bos_sd_fdoitem.szproductid
, bos_inv_product.szname
order by
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofstockindist_fdo_sold_014(
p_szworkplaceid varchar,
p_szemployeeid varchar,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
bos_sd_fdoitem.szproductid
, bos_inv_product.szname as szproductname
, cast(0 as decimal) as decbeginningqty
, cast(0 as decimal) as decqtyin
, sum(bos_sd_fdoitem.decqty) as decqtysold
, cast( 0 as decimal) as decqtysoldreturn
, cast ( 0 as decimal) as decqtyreturn
from
bos_sd_fdoitem inner join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid
where
bos_sd_fdo.bapplied = p_bsalesapplied
and bos_sd_fdo.szworkplaceid =p_szworkplaceid
and bos_sd_fdo.szsalesid = p_szemployeeid
and bos_sd_fdo.dtmdelivery >= p_dtmfrom
and bos_sd_fdo.dtmdelivery < p_dtmto+1
and bos_sd_fdo.szlogistictype <> 'inv'
and bos_sd_fdoitem.decqty > 0
group by
bos_sd_fdoitem.szproductid
, bos_inv_product.szname
order by
bos_sd_fdoitem.szproductid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofstockindist_fdo_soldreturn(
p_szworkplaceid varchar,
p_szemployeeid varchar,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
bos_sd_fdoitem.szproductid
, bos_inv_product.szname as szproductname
, cast( 0 as decimal) as decbeginningqty
, cast ( 0 as decimal) as decqtyin
, cast( 0 as decimal) as decqtysold
, sum(bos_sd_fdoitem.decqty) as decqtysoldreturn
, cast( 0 as decimal) as decqtyreturn
from
bos_sd_fdoitem inner join bos_sd_fdo on bos_sd_fdo.szdoid = bos_sd_fdoitem.szdoid
left join bos_inv_product on bos_inv_product.szproductid = bos_sd_fdoitem.szproductid
where
bos_sd_fdo.bapplied = p_bsalesapplied
and bos_sd_fdo.szworkplaceid =p_szworkplaceid
and bos_sd_fdo.szsalesid = p_szemployeeid
and bos_sd_fdo.dtmdelivery >= p_dtmfrom
and bos_sd_fdo.dtmdelivery < p_dtmto+1
and bos_sd_fdo.breturntowarehouse = 0
and bos_sd_fdoitem.decqty < 0
group by
bos_sd_fdoitem.szproductid
, bos_inv_product.szname
order by
bos_sd_fdoitem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofstockindist_fsid(
p_szworkplaceid varchar,
p_szemployeeid varchar,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
bos_inv_fsiditem.szproductid
, bos_inv_product.szname as szproductname
, cast( 0 as decimal) as decbeginningqty
, cast( 0 as decimal) as decqtyin
, cast( 0 as decimal) as decqtysold
, cast( 0 as decimal) as decqtysoldreturn
, sum(bos_inv_fsiditem.decqty) as decqtyreturn
from
bos_inv_fsiditem inner join bos_inv_fsid on bos_inv_fsid.szfsidid = bos_inv_fsiditem.szfsidid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsiditem.szproductid
where
bos_inv_fsid.bapplied = 1
and bos_inv_fsid.szfadjustmentid = ''
and bos_inv_fsid.szworkplaceid =p_szworkplaceid
and bos_inv_fsid.szdriverid = p_szemployeeid
and bos_inv_fsid.dtmin >= p_dtmfrom
and bos_inv_fsid.dtmin < p_dtmto+1
group by
bos_inv_fsiditem.szproductid
, bos_inv_product.szname
order by
bos_inv_fsiditem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofstockindist_fsod(
p_szworkplaceid varchar,
p_szemployeeid varchar,
p_dtmfrom timestamp,
p_dtmto timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
bos_inv_fsoditem.szproductid,
 bos_inv_product.szname as szproductname,
 cast(0 as decimal) as  decbeginningqty,
 sum(bos_inv_fsoditem.decqty) as decqtyin,
 cast(0 as decimal) as  decqtysold,
 cast(0 as decimal) as  decqtysoldreturn,
 cast(0 as decimal) as  decqtyreturn

from
bos_inv_fsoditem inner join bos_inv_fsod on bos_inv_fsod.szfsodid = bos_inv_fsoditem.szfsodid
left join bos_inv_product on bos_inv_product.szproductid = bos_inv_fsoditem.szproductid
where
bos_inv_fsod.bapplied = 1
and bos_inv_fsod.szfadjustmentid = ''
and bos_inv_fsod.szworkplaceid =p_szworkplaceid
and bos_inv_fsod.szdriverid = p_szemployeeid
and bos_inv_fsod.dtmout >= p_dtmfrom
and bos_inv_fsod.dtmout < p_dtmto+1
group by
bos_inv_fsoditem.szproductid
, bos_inv_product.szname
order by
bos_inv_fsoditem.szproductid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_rptlph_getlistofsummary(
p_szworkplaceid varchar,
p_szsalesid varchar,
p_dtmdate timestamp,
p_bsalesapplied bit)
returns void as
$body$
begin
select
penjualankotor = sum(bosfdoitem.decamount) - sum(bosfdoitem.dectax),
discount = sum(bosfdoitem.decdiscount),
ppn = sum(bosfdoitem.dectax),
syd =
(select
coalesce(sum(bcci.decamount), 0) as decamount
from
bos_cas_fcashtemp bcc
inner join bos_cas_fcashtempitem bcci on bcci.szfcashtempid = bcc.szfcashtempid
where
bcc.bapplied = 1 and
bcc.szworkplaceid = p_szworkplaceid and
bcc.szemployeeid = p_szsalesid and
bcc.dtmtransaction >= p_dtmdate and
bcc.dtmtransaction < p_dtmdate+1 and
bcc.szcashdirection = 'in' and
bcci.btitemnumber = 0),
tpk =
(select
sum(bos_sd_fdo.decamount)
from
bos_sd_fdo
where
bos_sd_fdo.szsalesid = p_szsalesid
and bos_sd_fdo.szworkplaceid = p_szworkplaceid
and bos_sd_fdo.bapplied = p_bsalesapplied
and bos_sd_fdo.dtmdelivery >= p_dtmdate
and bos_sd_fdo.dtmdelivery < p_dtmdate+1
and bos_sd_fdo.bcash = 0)
from dbo.bos_sd_fdo bfdo inner join 
dbo.bos_sd_fdoitem bosfdoitem on bfdo.szdoid = bosfdoitem.szdoid
where bfdo.szsalesid = p_szsalesid
and bfdo.szworkplaceid = p_szworkplaceid
and bfdo.bapplied = p_bsalesapplied
and bfdo.dtmdelivery >= p_dtmdate and 
bfdo.dtmdelivery < p_dtmdate+1;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_createsalesorganization(
p_szsalesorgid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription,
p_szfullpathid varchar,
p_bytelevel smallint,
p_szparentsalesorgid bos_dt_szid,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sd_salesorganization
(
szsalesorgid,
szname,
szdescription,
szfullpathid,
bytelevel,
szparentsalesorgid,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsalesorgid,
p_szname,
p_szdescription,
p_szfullpathid,
p_bytelevel,
p_szparentsalesorgid,
p_szpriceid,
p_szpriceorderid,
p_szpromopriceid,
p_szpromopriceorderid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_deletesalesorganization(
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sd_salesorganization
where
szsalesorgid = p_szsalesorgid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_getlistofallsalesorganization()
returns void as
$body$
begin
select 
szsalesorgid,
szname,
szdescription,
szfullpathid

from 
bos_sd_salesorganization

order by 
szsalesorgid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_getlistofsalesorganization(
p_szfullpathid bos_dt_szid,
p_bytelevel smallint)
returns void as
$body$
begin
select 
szsalesorgid,
szname,
szdescription,
szfullpathid

from 
bos_sd_salesorganization
where 
szfullpathid like p_szfullpathid+'%' and bytelevel = p_bytelevel 
order by 
szsalesorgid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_getlistofsalesorganizationwithchild(
p_szfullpathid bos_dt_szid,
p_bytelevel smallint)
returns void as
$body$
begin
select 
szsalesorgid,
szname,
szdescription,
szfullpathid

from 
bos_sd_salesorganization
where 
szfullpathid like p_szfullpathid+'%' and bytelevel >= p_bytelevel 
order by 
szsalesorgid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_getsalesorganization(
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
select 
szsalesorgid,
szname,
szdescription,
szfullpathid,
bytelevel,
szpriceid,
szpriceorderid,
szpromopriceid,
szpromopriceorderid,

dtmlastupdated,
balreadytransferred

from 
bos_sd_salesorganization
where 
szsalesorgid = p_szsalesorgid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_issalesorganizationexist(
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
select 
szsalesorgid

from 
bos_sd_salesorganization
where 
szsalesorgid = p_szsalesorgid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_locksalesorganization(
p_szsalesorgid bos_dt_szid)
returns void as
$body$
begin
update bos_sd_salesorganization
set 
szdescription = szdescription
where 
szsalesorgid = p_szsalesorgid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sd_salesorganization_updatesalesorganization(
p_szsalesorgid bos_dt_szid,
p_szname bos_dt_szname,
p_szdescription bos_dt_szdescription,
p_szfullpathid varchar,
p_bytelevel smallint,
p_szparentsalesorgid bos_dt_szid,
p_szprevfullpathid varchar,
p_shdifflevel smallint,
p_szpriceid bos_dt_szid,
p_szpriceorderid bos_dt_szid,
p_szpromopriceid bos_dt_szid,
p_szpromopriceorderid bos_dt_szid)
returns void as
$body$
begin
-- ### 2 update #####
update bos_sd_salesorganization set
	szname = p_szname,
	szdescription = p_szdescription,
	szfullpathid = p_szfullpathid,
	bytelevel = p_bytelevel,
	szparentsalesorgid = p_szparentsalesorgid,
	szpriceid = p_szpriceid,
	szpriceorderid = p_szpriceorderid,
	szpromopriceid = p_szpromopriceid,
	szpromopriceorderid = p_szpromopriceorderid

where
	szsalesorgid = p_szsalesorgid;


update bos_sd_salesorganization set
	szfullpathid = p_szfullpathid + substring(szfullpathid, len(p_szprevfullpathid) + 1, len(szfullpathid) - len(p_szprevfullpathid)),
	bytelevel = bytelevel - p_shdifflevel
where
	szfullpathid like p_szprevfullpathid+'%' and
	szsalesorgid <> p_szsalesorgid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_audittrail_getaudittrail(
p_gdtxid bytea)
returns void as
$body$
begin
select 
zdescription, szuserid, dtmcommitted

from 
bos_sm_bostxaudittrail
where 
 gdtxid = p_gdtxid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_audittrail_getaudittrailitem(
p_gdtxid bytea)
returns void as
$body$
begin
select 
siitemnumber, gdrecordaudittrailid, szdescription

from 
bos_sm_bostxaudittrailitem
where 
 gdtxid = p_gdtxid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_audittrail_getlistofrecordaudittrail(
p_gdaudittrailid bytea,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
bos_sm_bostxaudittrail.szuserid,
bos_sm_user.szname as szusername,
bos_sm_bostxaudittrailitem.szdescription,
bos_sm_bostxaudittrail.dtmcommitted

from 
bos_sm_bostxaudittrail
inner join bos_sm_bostxaudittrailitem on bos_sm_bostxaudittrail.gdtxid = bos_sm_bostxaudittrailitem.gdtxid
left join bos_sm_user on bos_sm_bostxaudittrail.szuserid = bos_sm_user.szuserid
where 
bos_sm_bostxaudittrailitem.gdrecordaudittrailid = p_gdaudittrailid and bos_sm_bostxaudittrail.szuserid like p_szuserid 
order by 
bos_sm_bostxaudittrail.dtmcommitted,
bos_sm_bostxaudittrail.szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboq(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szselectclause varchar,
p_szorderbyclause varchar,
p_szwhereclause varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_boq
(
szboqtemplateid,
szboqname,
szboqid,
szselectclause,
szorderbyclause,
szwhereclause,
dtmlastupdated,
balreadytransferred
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szboqid,
p_szselectclause,
p_szorderbyclause,
p_szwhereclause,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboq_014(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szselectclause bos_dt_szmessage,
p_szorderbyclause bos_dt_szmessage,
p_szwhereclause bos_dt_szmessage,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_boq
(
szboqtemplateid,
szboqname,
szboqid,
szselectclause,
szorderbyclause,
szwhereclause,
dtmlastupdated,
balreadytransferred
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szboqid,
p_szselectclause,
p_szorderbyclause,
p_szwhereclause,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboqlastused(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid,
p_szboqid bos_dt_szbigid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sm_boqlastused
(
szboqtemplateid,
szboqname,
szuserid,
szboqid,
dtmlastupdated
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szuserid,
p_szboqid,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboqlastused_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid,
p_szboqid bos_dt_szbigid,
p_dtmlastupdated timestamp)
returns void as
$body$
begin
insert into bos_sm_boqlastused
(
szboqtemplateid,
szboqname,
szuserid,
szboqid,
dtmlastupdated
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szuserid,
p_szboqid,
p_dtmlastupdated
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboqtemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szfromclause varchar,
p_szdescription bos_dt_szdescription,
p_bsystemboq bit,
p_szworkplacefilter varchar,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_boqtemplate
(
szboqtemplateid,
szboqname,
szfromclause,
szdescription,
bsystemboq,
szworkplacefilter,
dtmlastupdated,
balreadytransferred
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szfromclause,
p_szdescription,
p_bsystemboq,
p_szworkplacefilter,
p_dtmlastupdated,
p_balreadytransferred
---------------------------------
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_createboqtemplate_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szfromclause varchar,
p_szdescription bos_dt_szdescription,
p_bsystemboq bit,
p_szworkplacefilter bos_dt_szbigid,
p_szcompanyfilter bos_dt_szbigid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_boqtemplate
(
szboqtemplateid,
szboqname,
szfromclause,
szdescription,
bsystemboq,
szworkplacefilter,
szcompanyfilter,
dtmlastupdated,
balreadytransferred
)
values
(
p_szboqtemplateid,
p_szboqname,
p_szfromclause,
p_szdescription,
p_bsystemboq,
p_szworkplacefilter,
p_szcompanyfilter,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_deleteboq(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_boq
where
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname and
szboqid = p_szboqid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_deleteboqlastused(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_boqlastused
where
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname and
szuserid = p_szuserid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_deleteboqtemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_boqtemplate
where
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_deleteboqtemplatebyboqtemplateid(
p_szboqtemplateid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_boqtemplate
where
szboqtemplateid = p_szboqtemplateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboq(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin

select
bos_sm_boq.szselectclause,
bos_sm_boq.szorderbyclause,
bos_sm_boq.szwhereclause,
bos_sm_boqtemplate.szfromclause as szfromclause,
bos_sm_boqlastused.szboqid as szlastusedboqid_j,
bos_sm_boq.dtmlastupdated,
bos_sm_boq.balreadytransferred
from 
bos_sm_boq

left join bos_sm_boqtemplate on bos_sm_boq.szboqtemplateid = bos_sm_boqtemplate.szboqtemplateid and
bos_sm_boq.szboqname = bos_sm_boqtemplate.szboqname

left join bos_sm_boqlastused on bos_sm_boqlastused.szboqtemplateid = bos_sm_boq.szboqtemplateid and
bos_sm_boqlastused.szboqname = bos_sm_boq.szboqname and 
bos_sm_boqlastused.szuserid = p_szuserid

where
bos_sm_boq.szboqtemplateid = p_szboqtemplateid and 
bos_sm_boq.szboqname = p_szboqname and
bos_sm_boq.szboqid = p_szboqid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboq_014(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin

select
bos_sm_boq.szselectclause,
bos_sm_boq.szorderbyclause,
bos_sm_boq.szwhereclause,
bos_sm_boqtemplate.szfromclause as szfromclause,
bos_sm_boqlastused.szboqid as szlastusedboqid_j,
bos_sm_boq.dtmlastupdated,
bos_sm_boq.balreadytransferred
from 
bos_sm_boq

left join bos_sm_boqtemplate on bos_sm_boq.szboqtemplateid = bos_sm_boqtemplate.szboqtemplateid and
bos_sm_boq.szboqname = bos_sm_boqtemplate.szboqname

left join bos_sm_boqlastused on bos_sm_boqlastused.szboqtemplateid = bos_sm_boq.szboqtemplateid and
bos_sm_boqlastused.szboqname = bos_sm_boq.szboqname and 
bos_sm_boqlastused.szuserid = p_szuserid

where
bos_sm_boq.szboqtemplateid = p_szboqtemplateid and 
bos_sm_boq.szboqname = p_szboqname and
bos_sm_boq.szboqid = p_szboqid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboqlastused(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
szboqid,
dtmlastupdated

from 
bos_sm_boqlastused
where 
szboqtemplateid = p_szboqtemplateid and 
szboqname = p_szboqname and szuserid = p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboqlastused_014(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
szboqid,
dtmlastupdated

from 
bos_sm_boqlastused
where 
szboqtemplateid = p_szboqtemplateid and 
szboqname = p_szboqname and szuserid = p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboqtemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
select 
szfromclause,
szdescription,
bsystemboq,
dtmlastupdated,
balreadytransferred,
szworkplacefilter


from 
bos_sm_boqtemplate

where 
szboqtemplateid = p_szboqtemplateid and 
szboqname = p_szboqname;
-- set ansi_nulls on ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getboqtemplate_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
select 
szfromclause,
szdescription,
bsystemboq,
dtmlastupdated,
balreadytransferred,
szworkplacefilter,
szcompanyfilter


from 
bos_sm_boqtemplate

where 
szboqtemplateid = p_szboqtemplateid and szboqname = p_szboqname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboq()
returns void as
$body$
begin
select 
szboqtemplateid,
szboqname,
szboqid

from 
bos_sm_boq;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqbytemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
select 
szboqid

from 
bos_sm_boq
where 
szboqtemplateid = p_szboqtemplateid and szboqname = p_szboqname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqlastused()
returns void as
$body$
begin
select 
szboqtemplateid,
szboqname,
szuserid

from 
bos_sm_boqlastused;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqtemplate()
returns void as
$body$
begin
select 
szboqtemplateid,
szboqname,
szfromclause,
szworkplacefilter

from 
bos_sm_boqtemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqtemplate_013()
returns void as
$body$
begin
select 
szboqtemplateid,
szboqname,
szfromclause,
szworkplacefilter,
szcompanyfilter

from 
bos_sm_boqtemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqtemplatebyboqtemplateid(
p_szboqtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
szboqname

from 
bos_sm_boqtemplate
where 
szboqtemplateid = p_szboqtemplateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_getlistofboqtemplateuri()
returns void as
$body$
begin
select distinct
szboqtemplateid

from 
bos_sm_boqtemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_isboqexist(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid)
returns void as
$body$
begin
select 
szboqid

from 
bos_sm_boq
where 
szboqtemplateid = p_szboqtemplateid and 
szboqname = p_szboqname and szboqid = p_szboqid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_isboqlastusedexist(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
szboqname

from 
bos_sm_boqlastused
where 
szboqtemplateid = p_szboqtemplateid and 
szboqname = p_szboqname and szuserid = p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_isboqtemplateexist(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
select 
szboqname

from 
bos_sm_boqtemplate
where 
szboqtemplateid = p_szboqtemplateid and szboqname = p_szboqname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_lockboq(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_boq
set 
szorderbyclause = szorderbyclause
where 
szboqtemplateid = p_szboqtemplateid and
	szboqname = p_szboqname and
	szboqid = p_szboqid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_lockboqlastused(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sm_boqlastused
set 
szboqid = szboqid
where 
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname and
	szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_lockboqtemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_boqtemplate
set 
bsystemboq = bsystemboq
where 
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_updateboq(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szselectclause bos_dt_szmessage,
p_szorderbyclause bos_dt_szmessage,
p_szwhereclause bos_dt_szmessage)
returns void as
$body$
begin
update bos_sm_boq
set 
szselectclause = p_szselectclause,
szorderbyclause = p_szorderbyclause,
szwhereclause = p_szwhereclause

where 
szboqtemplateid = p_szboqtemplateid and
	szboqname = p_szboqname and
	szboqid = p_szboqid;

end;
$body$
language plpgsql volatile;

create or replace function bos_sm_boq_updateboq_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szboqid bos_dt_szbigid,
p_szselectclause bos_dt_szmessage,
p_szorderbyclause bos_dt_szmessage,
p_szwhereclause bos_dt_szmessage)
returns void as
$body$
begin
update bos_sm_boq
set 
szselectclause = p_szselectclause,
szorderbyclause = p_szorderbyclause,
szwhereclause = p_szwhereclause

where 
szboqtemplateid = p_szboqtemplateid and
	szboqname = p_szboqname and
	szboqid = p_szboqid;

end;
$body$
language plpgsql volatile;

create or replace function bos_sm_boq_updateboqlastused(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szuserid bos_dt_szid,
p_szboqid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_boqlastused
set 
szboqid = p_szboqid
where 
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname and
szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_updateboqtemplate(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szfromclause varchar,
p_szdescription bos_dt_szdescription,
p_bsystemboq bit,
p_szworkplacefilter varchar)
returns void as
$body$
begin
update bos_sm_boqtemplate
set 
szfromclause = p_szfromclause,
szdescription = p_szdescription,
bsystemboq = p_bsystemboq,
szworkplacefilter = p_szworkplacefilter
where 
szboqtemplateid = p_szboqtemplateid and
szboqname = p_szboqname;

--set ansi_nulls on;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_boq_updateboqtemplate_013(
p_szboqtemplateid bos_dt_szbigid,
p_szboqname bos_dt_szbigid,
p_szfromclause varchar,
p_szdescription bos_dt_szdescription,
p_bsystemboq bit,
p_szworkplacefilter bos_dt_szbigid,
p_szcompanyfilter bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_boqtemplate
set 
szfromclause = p_szfromclause,
szdescription = p_szdescription,
bsystemboq = p_bsystemboq,
szworkplacefilter = p_szworkplacefilter,
szcompanyfilter = p_szcompanyfilter
where 
szboqtemplateid = p_szboqtemplateid and
 szboqname = p_szboqname;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_createbosobjecttemplate(
p_szclassname bos_dt_szname,
p_szdesc bos_dt_szdescription,
p_szauthor varchar,
p_szmodulecode varchar,
p_bprovideaudittrail bit)
returns void as
$body$
begin
insert into bos_sm_bosobjecttemplate
(
szclassname,
szdesc,
szauthor,
szmodulecode,
bprovideaudittrail
)
values
(
p_szclassname,
p_szdesc,
p_szauthor,
p_szmodulecode,
p_bprovideaudittrail
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_createbosobjecttemplateitem(
p_szclassname bos_dt_szname,
p_btlevel smallint,
p_szfieldname bos_dt_szname,
p_szfieldtype bos_dt_szsmallid,
p_slength smallint,
p_bprimarykey bit,
p_szdesc varchar,
p_btitemnumber smallint)
returns void as
$body$
begin
insert into bos_sm_bosobjecttemplateitem
(
szclassname,
btlevel,
szfieldname,
szfieldtype,
slength,
bprimarykey,
szdesc,
btitemnumber
)
values
(
p_szclassname,
p_btlevel,
p_szfieldname,
p_szfieldtype,
p_slength,
p_bprimarykey,
p_szdesc,
p_btitemnumber
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_deletebosobjecttemplate(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_sm_bosobjecttemplate
where
szclassname = p_szclassname;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_deletebosobjecttemplateitem(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
delete 
 from bos_sm_bosobjecttemplateitem
where
szclassname = p_szclassname;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_getbosobjecttemplate(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
select 
szclassname,
szdesc,
szauthor,
szmodulecode,
bprovideaudittrail

from 
bos_sm_bosobjecttemplate
where 
szclassname = p_szclassname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_getbosobjecttemplateitem(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
select 
btlevel,
szfieldname,
szfieldtype,
slength,
bprimarykey,
szdesc,
btitemnumber

from 
bos_sm_bosobjecttemplateitem
where 
szclassname = p_szclassname 
order by 
btlevel, bprimarykey desc, btitemnumber;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_getlistofbosobjecttemplate()
returns void as
$body$
begin
select 
szclassname,
szdesc

from 
bos_sm_bosobjecttemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_isbosobjecttemplateexist(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
select 
szclassname

from 
bos_sm_bosobjecttemplate
where 
szclassname = p_szclassname ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_lockbosobjecttemplate(
p_szclassname bos_dt_szname)
returns void as
$body$
begin
update bos_sm_bosobjecttemplate
set 
szdesc = szdesc
where 
szclassname = p_szclassname;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bosobjecttemplate_updatebosobjecttemplate(
p_szclassname bos_dt_szname,
p_szdesc bos_dt_szdescription,
p_szauthor varchar,
p_szmodulecode varchar,
p_bprovideaudittrail bit)
returns void as
$body$
begin
update bos_sm_bosobjecttemplate
set 
szdesc = p_szdesc,
szauthor = p_szauthor,
szmodulecode = p_szmodulecode,
bprovideaudittrail = p_bprovideaudittrail
where 
szclassname = p_szclassname;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bostx_createaudittrail(
p_gdtxid bytea,
p_szdescription bos_dt_szdescription,
p_szuserid bos_dt_szid,
p_dtmcommitted timestamp)
returns void as
$body$
begin
insert into bos_sm_bostxaudittrail
(
gdtxid,
szdescription,
szuserid,
dtmcommitted
)
values
(
p_gdtxid,
p_szdescription,
p_szuserid,
p_dtmcommitted
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bostx_createaudittrailitem(
p_gdtxid bytea,
p_siitemnumber smallint,
p_gdrecordaudittrailid bytea,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sm_bostxaudittrailitem
(
gdtxid,
siitemnumber,
gdrecordaudittrailid,
szdescription
)
values
(
p_gdtxid,
p_siitemnumber,
p_gdrecordaudittrailid,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_bostx_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sm_bostxaudittrailitem;
delete from
bos_sm_bostxaudittrail;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_createconfiginfo(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemid bos_dt_szbigid,
p_szconfigitemtypevalue bos_dt_szbigid,
p_szvalue bos_dt_szname,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_configinfoitem
(
szconfigtemplateid,
szconfigitemtypeid,
szconfigitemid,
szconfigitemtypevalue,
szvalue,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szconfigtemplateid,
p_szconfigitemtypeid,
p_szconfigitemid,
p_szconfigitemtypevalue,
p_szvalue,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_createconfiginfo_014(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemid bos_dt_szbigid,
p_szconfigitemtypevalue bos_dt_szbigid,
p_szvalue bos_dt_szname,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_configinfoitem
(
szconfigtemplateid,
szconfigitemtypeid,
szconfigitemid,
szconfigitemtypevalue,
szvalue,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szconfigtemplateid,
p_szconfigitemtypeid,
p_szconfigitemid,
p_szconfigitemtypevalue,
p_szvalue,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_createconfigtemplate(
p_szconfigtemplateid bos_dt_szbigid,
p_szdesc bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_configtemplate
(
szconfigtemplateid,
szdesc,
dtmlastupdated,
balreadytransferred
)
values
(
p_szconfigtemplateid,
p_szdesc,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_createconfigtemplate_014(
p_szconfigtemplateid bos_dt_szbigid,
p_szdesc bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_configtemplate
(
szconfigtemplateid,
szdesc,
dtmlastupdated,
balreadytransferred
)
values
(
p_szconfigtemplateid,
p_szdesc,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_createconfigtemplateitem(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szdefaultvalue bos_dt_szname,
p_szdesc bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sm_configtemplateitem
(
szconfigtemplateid,
szconfigitemid,
szconfigitemtypeid,
szdefaultvalue,
szdesc
)
values
(
p_szconfigtemplateid,
p_szconfigitemid,
p_szconfigitemtypeid,
p_szdefaultvalue,
p_szdesc
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_deleteconfiginfo(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_configinfoitem
where
szconfigtemplateid = p_szconfigtemplateid and 
szconfigitemtypeid = p_szconfigitemtypeid and 
szconfigitemtypevalue = p_szconfigitemtypevalue;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_deleteconfiginfoforsync(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemid bos_dt_szbigid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_configinfoitem
where
szconfigtemplateid = p_szconfigtemplateid and
szconfigitemtypeid = p_szconfigitemtypeid and
szconfigitemid = p_szconfigitemid and
szconfigitemtypevalue = p_szconfigitemtypevalue;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_deleteconfiginfowheretemplateid(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
delete 
from  bos_sm_configinfoitem
where
szconfigtemplateid = p_szconfigtemplateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_deleteconfigtemplate(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
delete 
from  bos_sm_configtemplate
where
szconfigtemplateid = p_szconfigtemplateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_deleteconfigtemplateitem(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_configtemplateitem
where
szconfigtemplateid = p_szconfigtemplateid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sm_configinfoitem;
delete from
bos_sm_configtemplateitem;
delete from
bos_sm_configtemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfiginfo(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
select 
*

from 
bos_sm_configinfoitem
where 
szconfigtemplateid = p_szconfigtemplateid and szconfigitemtypeid = p_szconfigitemtypeid and szconfigitemtypevalue = p_szconfigitemtypevalue ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfigtemplate(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdesc,
dtmlastupdated,
balreadytransferred
from 
bos_sm_configtemplate
where 
szconfigtemplateid = p_szconfigtemplateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfigtemplate_014(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdesc,
dtmlastupdated,
balreadytransferred

from 
bos_sm_configtemplate
where 
szconfigtemplateid = p_szconfigtemplateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfigtemplateforanitemtype(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szdesc 

from 
bos_sm_configtemplate 
where 
szconfigtemplateid = p_szconfigtemplateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfigtemplateitem(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
szconfigitemid,
szconfigitemtypeid,
szdefaultvalue,
szdesc

from 
bos_sm_configtemplateitem
where 
szconfigtemplateid = p_szconfigtemplateid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getconfigtemplateitemforanitemtype(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid)
returns void as
$body$
begin
select 
szconfigitemid,
szconfigitemtypeid,
szdefaultvalue,
szdesc

from 
bos_sm_configtemplateitem
where 
szconfigtemplateid = p_szconfigtemplateid and szconfigitemtypeid = p_szconfigitemtypeid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getguid(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sm_configinfoitem
where 
szconfigtemplateid = p_szconfigtemplateid and szconfigitemtypeid = p_szconfigitemtypeid and szconfigitemtypevalue = p_szconfigitemtypevalue ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getlistofconfigitemtypewheretemplate(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
distinct szconfigitemtypeid

from 
bos_sm_configtemplateitem
where 
 szconfigtemplateid = p_szconfigtemplateid
order by 
szconfigitemtypeid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_getlistofconfigtemplate()
returns void as
$body$
begin
select 
szconfigtemplateid, szdesc

from 
bos_sm_configtemplate

order by 
szconfigtemplateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_isconfiginfoexist(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
select 
szconfigtemplateid

from 
bos_sm_configinfoitem
where 
szconfigtemplateid = p_szconfigtemplateid and 
szconfigitemtypeid = p_szconfigitemtypeid and 
szconfigitemtypevalue = p_szconfigitemtypevalue ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_isconfiginfoforsyncexist(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemid bos_dt_szbigid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
select 
szconfigtemplateid

from 
bos_sm_configinfoitem
where 
szconfigtemplateid = p_szconfigtemplateid and 
szconfigitemtypeid = p_szconfigitemtypeid and 
szconfigitemid = p_szconfigitemid and szconfigitemtypevalue = p_szconfigitemtypevalue ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_isconfigtemplateexist(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdesc

from 
bos_sm_configtemplate
where 
 szconfigtemplateid = p_szconfigtemplateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_lockconfiginfo(
p_szconfigtemplateid bos_dt_szbigid,
p_szconfigitemtypeid bos_dt_szsmallid,
p_szconfigitemtypevalue bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_configinfoitem
set 
szvalue = szvalue
where 
szconfigtemplateid = p_szconfigtemplateid and
	szconfigitemtypeid = p_szconfigitemtypeid and
	szconfigitemtypevalue = p_szconfigitemtypevalue;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_lockconfigtemplate(
p_szconfigtemplateid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_configtemplate
set 
szdesc = szdesc
where 
szconfigtemplateid = p_szconfigtemplateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_setupalphardwelcomingpage()
returns void as
$body$
begin
insert into bos_sm_configtemplateitem 
values
('com.kontinum.bos.gen.menu', 'grp', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');

insert into bos_sm_configtemplateitem
values 
('com.kontinum.bos.gen.menu', 'usr', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_config_updateconfigtemplate(
p_szconfigtemplateid bos_dt_szbigid,
p_szdesc bos_dt_szdescription)
returns void as
$body$
begin
update bos_sm_configtemplate
set 
szdesc= p_szdesc
where 
szconfigtemplateid = p_szconfigtemplateid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_dev_deleteall()
returns void as
$body$
begin
 --exec pattern not set
 --exec bos_sm_bostx_dev_deleteall
--exec bos_sm_config_dev_deleteall
--exec bos_sm_group_dev_deleteall
--exec bos_sm_language_dev_deleteall
--exec bos_sm_security_dev_deleteall
--exec bos_sm_testresult_dev_deleteall
--exec bos_sm_user_dev_deleteall
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_dev_deleteall_014()
returns void as
$body$
begin
 --exec pattern not set
 --exec bos_sm_bostx_dev_deleteall
--exec bos_sm_config_dev_deleteall
--exec bos_sm_group_dev_deleteall
--exec bos_sm_language_dev_deleteall
--exec bos_sm_security_dev_deleteall
--exec bos_sm_testresult_dev_deleteall
--exec bos_sm_user_dev_deleteall
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_error_create(
p_szerrorlog varchar,
p_dtdatetime timestamp,
p_szclassdesc varchar)
returns void as
$body$
begin
insert into bos_sm_errorlog
(
szerrorlog,
dtdatetime,
szclassdesc
)
values
(
p_szerrorlog,
p_dtdatetime,
p_szclassdesc
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_addgrouptouser(
p_szuserid bos_dt_szid,
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_groupuser
(
szgroupid,
szuserid
)
values
(
p_szgroupid,
p_szuserid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_adduser(
p_szgroupid bos_dt_szid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_groupuser
(
szgroupid,
szuserid
)
values
(
p_szgroupid,
p_szuserid
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_creategroup(
p_szgroupid bos_dt_szid,
p_szfullpathgroupid varchar,
p_bytelevel smallint,
p_szname bos_dt_szname,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_group
(
szgroupid,
szfullpathgroupid,
bytelevel,
szname,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szgroupid,
p_szfullpathgroupid,
p_bytelevel,
p_szname,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_creategroup_014(
p_szgroupid bos_dt_szid,
p_szfullpathgroupid varchar,
p_bytelevel smallint,
p_szname bos_dt_szname,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_group
(
szgroupid,
szfullpathgroupid,
bytelevel,
szname,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szgroupid,
p_szfullpathgroupid,
p_bytelevel,
p_szname,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_deletegroup(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_group
where
szgroupid = p_szgroupid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sm_groupuser;
delete from
bos_sm_group;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getgroup(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
szfullpathgroupid, bytelevel, szname, gdaudittrailid, dtmlastupdated, balreadytransferred

from 
bos_sm_group
where 
szgroupid = p_szgroupid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getgroup_014(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
szfullpathgroupid, bytelevel, szname, gdaudittrailid, dtmlastupdated, balreadytransferred

from 
bos_sm_group
where 
szgroupid = p_szgroupid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getguid(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sm_group
where 
szgroupid=p_szgroupid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getlistofallgroup()
returns void as
$body$
begin
select 
szgroupid, szname, bytelevel, szfullpathgroupid

from 
bos_sm_group;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getlistofgroup(
p_szfullpathgroupid bos_dt_szid,
p_bytelevel smallint)
returns void as
$body$
begin
select 
szgroupid,
szfullpathgroupid

from 
bos_sm_group
where 
szfullpathgroupid like p_szfullpathgroupid + '%' and bytelevel = p_bytelevel ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getlistofgroupchild(
p_szfullpathgroupid bos_dt_szid,
p_bytelevel smallint)
returns void as
$body$
begin
select 
szgroupid,
szfullpathgroupid

from 
bos_sm_group
where 
szfullpathgroupid like p_szfullpathgroupid + '%' and bytelevel >= p_bytelevel ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getlistofuser(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
szuserid

from 
bos_sm_groupuser
where 
szgroupid = p_szgroupid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_getlistofusergroup(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
szgroupid

from 
bos_sm_groupuser
where 
szuserid = p_szuserid 
order by 
--in read-un-committed transaction, the behavior of index is --like-- un-defined.
szgroupid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_isgroupexist(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
szfullpathgroupid

from 
bos_sm_group
where 
szgroupid = p_szgroupid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_lockgroup(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
update bos_sm_group
set 
bytelevel= bytelevel
where 
szgroupid= p_szgroupid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_removeallgroupofuser(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_groupuser
where
szuserid = p_szuserid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_removealluser(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_groupuser
where
szgroupid = p_szgroupid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_removegroupofuser(
p_szuserid bos_dt_szid,
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_groupuser
where
szuserid = p_szuserid and szgroupid = p_szgroupid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_removeuser(
p_szgroupid bos_dt_szid,
p_szuserid bos_dt_szid)
returns void as
$body$
begin
delete 
 from bos_sm_groupuser
where
szgroupid = p_szgroupid and szuserid = p_szuserid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_group_updategroup(
p_szgroupid bos_dt_szid,
p_szfullpathgroupid varchar,
p_bytelevel smallint,
p_szname bos_dt_szname,
p_szprevfullpathgroupid varchar,
p_shdifflevel smallint)
returns void as
$body$
begin
-- ### 2 update #####
update bos_sm_group set
	szfullpathgroupid=p_szfullpathgroupid,
	bytelevel=p_bytelevel,
	szname=p_szname
where
	szgroupid=p_szgroupid;

update bos_sm_group set
	szfullpathgroupid = p_szfullpathgroupid + substring(szfullpathgroupid, len(p_szprevfullpathgroupid) + 1, len(szfullpathgroupid) - len(p_szprevfullpathgroupid)),
	bytelevel = bytelevel - p_shdifflevel
where
	szfullpathgroupid like p_szprevfullpathgroupid+'%' and
	szgroupid <> p_szgroupid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_iscustinvoiceexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
szcustid,
invoiceszcontactperson,
invoiceszroomno,
invoiceszfloor,
invoiceszbuilding,
invoiceszaddress_1,
invoiceszaddress_2,
invoiceszdistrict,
invoiceszcity,
invoiceszzipcode,
invoiceszstate,
invoiceszcountry,
invoiceszphoneno_1,
invoiceszphoneno_2,
invoiceszfaxno,
invoiceszmobileno,
invoiceszemail,
invoiceszwebsite,
bisdifftaxaddress,
taxszcontactperson,
taxszroomno,
taxszfloor,
taxszbuilding,
taxszaddress_1,
taxszaddress_2,
taxszdistrict,
taxszcity,
taxszzipcode,
taxszstate,
taxszcountry,
taxszphoneno_1,
taxszphoneno_2,
taxszfaxno,
taxszmobileno,
taxszemail,
taxszwebsite,
bisdiffcollectaddress,
collectszcontactperson,
collectszroomno,
collectszfloor,
collectszbuilding,
collectszaddress_1,
collectszaddress_2,
collectszdistrict,
collectszcity,
collectszzipcode,
collectszstate,
collectszcountry,
collectszphoneno_1,
collectszphoneno_2,
collectszfaxno,
collectszmobileno,
collectszemail,
collectszwebsite,
block

from 
bos_sm_custinvoice
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_language_createlang(
p_szdictid bos_dt_szbigid,
p_szlangid bos_dt_szsmallid,
p_szmsgtypeid varchar,
p_sztextid varchar,
p_sztext varchar,
p_szcontentid varchar)
returns void as
$body$
begin
insert into bos_sm_langdictitem
(
szdictid,
szlangid,
szmsgtypeid,
sztextid,
sztext,
bhaschanged,
szcontentid
)
values
(
p_szdictid,
p_szlangid,
p_szmsgtypeid,
p_sztextid,
p_sztext,
0,
p_szcontentid
);

end;
$body$
language plpgsql volatile;





create or replace function bos_sm_language_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sm_langdictitem;
delete from
bos_sm_langdict;
delete from
bos_sm_language;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_language_getchangedlang(
p_szdictid bos_dt_szbigid,
p_szlangid bos_dt_szsmallid)
returns void as
$body$
begin
--set nocount on
select 
bos_sm_langdict.szdictid,
bos_sm_langdictitem.szmsgtypeid,
bos_sm_langdictitem.szlangid,
bos_sm_langdictitem.sztextid,
bos_sm_langdictitem.sztext,
bos_sm_langdictitem.szcontentid

from 
bos_sm_langdict
inner join bos_sm_langdictitem on 
bos_sm_langdict.szdictid = bos_sm_langdictitem.szdictid
		
where 
bos_sm_langdict.szdictid = p_szdictid and 
bos_sm_langdictitem.szlangid = p_szlangid and bhaschanged = 1 ;
end;
$body$
language plpgsql volatile;



create or replace function bos_sm_language_getlang(
p_szdictid bos_dt_szbigid,
p_szlangid bos_dt_szsmallid)
returns void as
$body$
begin
select 
bos_sm_langdict.szdictid,
bos_sm_langdictitem.szmsgtypeid,
bos_sm_langdictitem.szlangid,
bos_sm_langdictitem.sztextid,
bos_sm_langdictitem.sztext,
bos_sm_langdictitem.szcontentid

from 
bos_sm_langdict
inner join bos_sm_langdictitem on 
bos_sm_langdict.szdictid = bos_sm_langdictitem.szdictid
where 
bos_sm_langdict.szdictid = p_szdictid and 
bos_sm_langdictitem.szlangid = p_szlangid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_language_getlangtext(
p_szdictid bos_dt_szbigid,
p_szlangid bos_dt_szsmallid,
p_szmsgtypeid varchar,
p_sztextid varchar,
p_szcontentid varchar)
returns void as
$body$
begin
select 
bos_sm_langdict.szdictid,
bos_sm_langdictitem.szmsgtypeid,
bos_sm_langdictitem.szlangid,
bos_sm_langdictitem.sztextid,
bos_sm_langdictitem.sztext,
bos_sm_langdictitem.szcontentid

from 
bos_sm_langdict
inner join bos_sm_langdictitem on 
	bos_sm_langdict.szdictid = bos_sm_langdictitem.szdictid
where 
bos_sm_langdict.szdictid = p_szdictid and bos_sm_langdictitem.szlangid = p_szlangid and bos_sm_langdictitem.szmsgtypeid = p_szmsgtypeid and bos_sm_langdictitem.sztextid = p_sztextid and bos_sm_langdictitem.szcontentid = p_szcontentid ;
end;
$body$
language plpgsql volatile;




create or replace function bos_sm_language_updatelanguageandsetchangedflag(
p_szdictid bos_dt_szbigid,
p_szlangid bos_dt_szsmallid,
p_szmsgtypeid varchar,
p_sztextid varchar,
p_sztext varchar,
p_szcontentid varchar)
returns void as
$body$
begin
--set nocount on
update bos_sm_langdictitem

set
sztext = p_sztext,
bhaschanged = 1

where 
szdictid = p_szdictid
and szlangid = p_szlangid
		and szmsgtypeid = p_szmsgtypeid
		and sztextid = p_sztextid
		and ltrim(rtrim(sztext)) <> ltrim(rtrim(p_sztext))
		and ltrim(rtrim(szcontentid)) = ltrim(rtrim(p_szcontentid));
end;
$body$
language plpgsql volatile;

create or replace function bos_sm_printerdriver_createprinterdriver(
p_szprinterid bos_dt_szid,
p_szname bos_dt_szname,
p_szbarcodeprinterid bos_dt_szsmallid,
p_szprintertype bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_printerdriver
(
szprinterid,
szname,
szbarcodeprinterid,
szprintertype
)
values
(
p_szprinterid,
p_szname,
p_szbarcodeprinterid,
p_szprintertype
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_createprinterdriver_014(
p_szprinterid bos_dt_szid,
p_szname bos_dt_szname,
p_szbarcodeprinterid bos_dt_szsmallid,
p_szprintertype bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_printerdriver
(
szprinterid,
szname,
szbarcodeprinterid,
szprintertype
)
values
(
p_szprinterid,
p_szname,
p_szbarcodeprinterid,
p_szprintertype
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_createprinterdriveritem(
p_szprinterid bos_dt_szid,
p_szcommandname bos_dt_szname,
p_szcommandcode varchar,
p_shcharwidth smallint,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
insert into bos_sm_printerdriveritem
(
szprinterid,
szcommandname,
szcommandcode,
shcharwidth,
szdescription
)
values
(
p_szprinterid,
p_szcommandname,
p_szcommandcode,
p_shcharwidth,
p_szdescription
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_deleteprinterdriver(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sm_printerdriver
where
szprinterid=p_szprinterid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_deleteprinterdriveritem(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_sm_printerdriveritem
where
szprinterid=p_szprinterid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_getlistofprinterdriver()
returns void as
$body$
begin
select 
szprinterid,
szname

from 
bos_sm_printerdriver;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_getprinterdriver(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
szbarcodeprinterid,
szprintertype

from 
bos_sm_printerdriver
where 
szprinterid=p_szprinterid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_getprinterdriver_014(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
szbarcodeprinterid,
szprintertype

from 
bos_sm_printerdriver
where 
szprinterid=p_szprinterid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_getprinterdriveritem(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
select 
szcommandname,
szcommandcode,
shcharwidth,
szdescription

from 
bos_sm_printerdriveritem
where 
szprinterid=p_szprinterid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_isprinterdriverexist(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
select 
szprinterid

from 
bos_sm_printerdriver
where 
szprinterid=p_szprinterid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_lockprinterdriver(
p_szprinterid bos_dt_szid)
returns void as
$body$
begin
update bos_sm_printerdriver
set 
szname=szname
where 
szprinterid=p_szprinterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_updateprinterdriver(
p_szprinterid bos_dt_szid,
p_szname bos_dt_szname,
p_szbarcodeprinterid bos_dt_szsmallid,
p_szprintertype bos_dt_szid)
returns void as
$body$
begin
update bos_sm_printerdriver
set 
szname = p_szname,
szbarcodeprinterid = p_szbarcodeprinterid,
szprintertype = p_szprintertype
where 
szprinterid=p_szprinterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_printerdriver_updateprinterdriver_014(
p_szprinterid bos_dt_szid,
p_szname bos_dt_szname,
p_szbarcodeprinterid bos_dt_szsmallid,
p_szprintertype bos_dt_szid)
returns void as
$body$
begin
update bos_sm_printerdriver
set 
szname = p_szname,
szbarcodeprinterid = p_szbarcodeprinterid,
szprintertype = p_szprintertype
where 
szprinterid=p_szprinterid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsecinfo(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_secinfo
(
szgroupid,
szsectplid,
block,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szgroupid,
p_szsectplid,
0,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsecinfo_014(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid,
p_gdaudittrailid bytea,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_secinfo
(
szgroupid,
szsectplid,
block,
gdaudittrailid,
dtmlastupdated,
balreadytransferred
)
values
(
p_szgroupid,
p_szsectplid,
0,
p_gdaudittrailid,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsecinfoitem(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid,
p_szsecinfoitemid bos_dt_szbigid,
p_szvalue bos_dt_szname,
p_btimelyaccess bit,
p_starttime1 timestamp,
p_endtime1 timestamp,
p_starttime2 timestamp,
p_endtime2 timestamp)
returns void as
$body$
begin
insert into bos_sm_secinfoitem
(
szgroupid,
szsectplid,
szsecinfoitemid,
szvalue,
btimelyaccess,
starttime1,
endtime1,
starttime2,
endtime2	
)
values
(
p_szgroupid,
p_szsectplid,
p_szsecinfoitemid,
p_szvalue,
p_btimelyaccess,
p_starttime1,
p_endtime1,
p_starttime2,
p_endtime2
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsectemplate(
p_szsectplid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_sectemplate
(
szsectplid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsectplid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsectemplate_014(
p_szsectplid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_sm_sectemplate
(
szsectplid,
szdescription,
dtmlastupdated,
balreadytransferred
)
values
(
p_szsectplid,
p_szdescription,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_createsectemplateitem(
p_szsectplid bos_dt_szbigid,
p_szsecinfoitemid bos_dt_szbigid,
p_szdescription bos_dt_szdescription,
p_szdefaultvalue bos_dt_szname)
returns void as
$body$
begin
insert into bos_sm_sectemplateitem
(
szsectplid,
szsecinfoitemid,
szdescription,
szdefaultvalue
)
values
(
p_szsectplid,
p_szsecinfoitemid,
p_szdescription,
p_szdefaultvalue
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_deletesecinfo(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
 delete from bos_sm_secinfo
where
	szgroupid=p_szgroupid and szsectplid=p_szsectplid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_deletesecinfoitem(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
 delete from bos_sm_secinfoitem
where
	szgroupid=p_szgroupid and
	szsectplid=p_szsectplid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_deletesecinfowheretemplateid(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
delete 
 from bos_sm_secinfoitem
where
szsectplid=p_szsectplid;

delete 
 from bos_sm_secinfo
where
szsectplid=p_szsectplid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_deletesectemplate(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sm_sectemplate
where
szsectplid = p_szsectplid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_deletesectemplateitem(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
delete from
bos_sm_sectemplateitem
where
szsectplid = p_szsectplid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_dev_deleteall()
returns void as
$body$
begin
delete from
bos_sm_secinfoitem;
delete from
bos_sm_secinfo;
delete from
bos_sm_sectemplateitem;
delete from
bos_sm_sectemplate;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getguid(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sm_secinfo
where 
szgroupid = p_szgroupid and szsectplid = p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getlistofgroupsecurity(
p_szgroupid bos_dt_szid)
returns void as
$body$
begin
select 
szsectplid, szsecinfoitemid, szvalue

from 
bos_sm_secinfoitem
where 
 szgroupid = p_szgroupid
order by 
szsectplid, szsecinfoitemid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getlistofsectemplate()
returns void as
$body$
begin
select 
szsectplid, szdescription

from 
bos_sm_sectemplate
order by
szsectplid;


end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsecinfo(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
block,dtmlastupdated,balreadytransferred 

from 
bos_sm_secinfo 
where 
szgroupid=p_szgroupid and szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsecinfo_014(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
block,dtmlastupdated,balreadytransferred 

from 
bos_sm_secinfo 
where 
szgroupid=p_szgroupid and szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsecinfoitem(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
szsecinfoitemid
, szvalue
, btimelyaccess
, starttime1
, endtime1
, starttime2
, endtime2

from 
bos_sm_secinfoitem
where 
szgroupid=p_szgroupid and szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsecinfoitemwheresecinfoitemid(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid,
p_szsecinfoitemid bos_dt_szbigid)
returns void as
$body$
begin
select 
szvalue
, btimelyaccess
, starttime1
, endtime1
, starttime2
, endtime2

from 
bos_sm_secinfoitem
where 
szgroupid=p_szgroupid and szsectplid=p_szsectplid and szsecinfoitemid=p_szsecinfoitemid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsectemplate(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred 

from 
bos_sm_sectemplate 
where 
szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsectemplate_014(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription, dtmlastupdated, balreadytransferred 

from 
bos_sm_sectemplate 
where 
szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_getsectemplateitem(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
szsecinfoitemid, szdescription, szdefaultvalue 

from 
bos_sm_sectemplateitem 
where 
szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_issecinfoexist(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
block 

from 
bos_sm_secinfo 
where 
szgroupid=p_szgroupid and szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_issectemplateexist(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
select 
szdescription 

from 
bos_sm_sectemplate 
where 
szsectplid=p_szsectplid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_locksecinfo(
p_szgroupid bos_dt_szid,
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_secinfo
set 
block=block
where 
szgroupid=p_szgroupid and
szsectplid=p_szsectplid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_locksectemplate(
p_szsectplid bos_dt_szbigid)
returns void as
$body$
begin
update bos_sm_sectemplate
set 
szdescription=szdescription
where 
szsectplid=p_szsectplid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_security_updatesectemplate(
p_szsectplid bos_dt_szbigid,
p_szdescription bos_dt_szdescription)
returns void as
$body$
begin
update bos_sm_sectemplate
set 
szdescription=p_szdescription
where 
szsectplid=p_szsectplid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_setup()
returns void as
$body$
begin
 --exec pattern not set
--exec bos_sm_group_creategroup 'administrator', 'administrator', 1, 'administrator', 0, '1900-01-01', 0
--exec bos_sm_group_adduser 'administrator', 'administrator'
perform bos_sm_group_creategroup('administrator', 'administrator', '1', 'administrator', '0', '1900-01-01', '0');

perform bos_sm_group_adduser('administrator', 'administrator');

---- create user
perform bos_sm_user_createuser('administrator', 'administrator', '-1509145000', '', '0', '1', '2100-02-16'
	, '1' --true        --bfirsttimelogin
	, '1900-01-01'    --dtmlockedforlogin,
	, '0'               --iwronglogincounter
	, '1900-01-01'    --dtmlastupdated,
	, '0'				  --balreadytransferred
	, '9998-01-01'
	, 'bnd');	
-- create language
delete from bos_sm_langmsgtype;
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('err',	'error message');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('frm',	'form');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('gen',	'general');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('obj',	'object');
insert into bos_sm_language (szlangid,szname) values ('en','english');
insert into bos_sm_language (szlangid,szname) values ('in','indonesia');	
--- create config
delete from bos_sm_configitemtype;
 
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('com', 'company');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('grp', 'group');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('usr', 'user');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('wor', 'workplace');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('dna', 'databasename');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('ase', 'applicationserver');
 
delete from bos_sm_configtemplate;
insert into bos_sm_configtemplate values('com.kontinum.bos.gen.menu', 'menu', getdate(),0);
insert into bos_sm_configtemplate values('com.kontinum.bos.sm.language', 'language', getdate(),0);
 
delete from bos_sm_configtemplateitem;
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.gen.menu', 'grp', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.gen.menu', 'usr', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.sm.language', 'usr', 'user default language', 'in','');
 
-------------------------------------create gen setup---------------------------------------------
delete from bos_gen_yesno;
insert into bos_gen_yesno (byesno, szname) values (0, 'no');
insert into bos_gen_yesno (byesno, szname) values (1, 'yes');

delete from bos_gen_flagcashcredit;
insert into bos_gen_flagcashcredit (bcash, szdescription) values (0, 'credit');
insert into bos_gen_flagcashcredit (bcash, szdescription) values (1, 'cash');

delete from bos_gen_one;
insert into bos_gen_one (decone) values(1);

--------------------------------------create pdr setup---------------------------------------------
delete from bos_cas_pdrstatustoyatidak;

insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('cle', 'ya');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('dep', 'tidak');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('rec', 'tidak');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('rej', 'tidak');



end;
$body$
language plpgsql volatile;


create or replace function bos_sm_setup_014()
returns void as
$body$
begin
 --exec pattern not set
 ----------------------------------create group-------------------------------------------
perform bos_sm_group_creategroup ('administrator', 'administrator', '1', 'administrator', '0', '1900-01-01', '0');
perform bos_sm_group_adduser ('administrator', 'administrator');

-----------------------------------create user-------------------------------------------
perform bos_sm_user_createuse ('administrator', 'administrator', '-1509145000', '', '0', '1', '2100-02-16'
    , '1' --true        --bfirsttimelogin
    , '1900-01-01'    --dtmlockedforlogin,
    , '0'               --iwronglogincounter
    , '1900-01-01'    --dtmlastupdated,
    , '0'                  --balreadytransferred
    , '9998-01-01'
    , 'bnd'); 
----------------------------------create language------------------------------------------
delete from bos_sm_langmsgtype;
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('err',    'error message');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('frm',    'form');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('gen',    'general');
insert into bos_sm_langmsgtype (szmsgtypeid, szdesc) values ('obj',    'object');
insert into bos_sm_language (szlangid,szname) values ('en','english');
insert into bos_sm_language (szlangid,szname) values ('in','indonesia');    

-------------------------------------create config-----------------------------------------
delete from bos_sm_configitemtype;
 
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('com', 'company');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('grp', 'group');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('usr', 'user');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('wor', 'workplace');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('dna', 'databasename');
insert into bos_sm_configitemtype (szconfigitemtypeid, szdesc) values ('ase', 'applicationserver');
 
delete from bos_sm_configtemplate;
insert into bos_sm_configtemplate values('com.kontinum.bos.gen.menu', 'menu', getdate(),0);
insert into bos_sm_configtemplate values('com.kontinum.bos.sm.language', 'language', getdate(),0);
 
delete from bos_sm_configtemplateitem;
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.gen.menu', 'grp', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.gen.menu', 'usr', 'welcoming page (alphard)', 'atp://../welcomepage.dll','');
insert into bos_sm_configtemplateitem values ('com.kontinum.bos.sm.language', 'usr', 'user default language', 'in','');
 
-------------------------------------create gen setup---------------------------------------------
delete from bos_gen_yesno;
insert into bos_gen_yesno (byesno, szname) values (0, 'no');
insert into bos_gen_yesno (byesno, szname) values (1, 'yes');

delete from bos_gen_flagcashcredit;
insert into bos_gen_flagcashcredit (bcash, szdescription) values (0, 'credit');
insert into bos_gen_flagcashcredit (bcash, szdescription) values (1, 'cash');

delete from bos_gen_one;
insert into bos_gen_one (decone) values(1);

--------------------------------------create pdr setup---------------------------------------------
delete from bos_cas_pdrstatustoyatidak;

insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('cle', 'ya');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('dep', 'tidak');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('rec', 'tidak');
insert into bos_cas_pdrstatustoyatidak (szstatus, szdescription) values ('rej', 'tidak');

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_changepassword(
p_szuserid bos_dt_szid,
p_decpasswordhash bos_dt_decamount,
p_dtmpasswordexpireddate timestamp)
returns void as
$body$
begin
update bos_sm_user
set 
decpasswordhash = p_decpasswordhash,
dtmpasswordexpireddate = p_dtmpasswordexpireddate

where 
szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_createuser(
p_szuserid bos_dt_szid,
p_szname bos_dt_szname,
p_decpasswordhash bos_dt_decamount,
p_szworkplaceid bos_dt_szid,
p_gdaudittrailid bytea,
p_bclearpdc bos_dt_bboolean,
p_dtmpasswordexpireddate timestamp,
p_bfirsttimelogin bos_dt_bboolean,
p_dtmlockedforlogin timestamp,
p_iwronglogincounter integer,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmloginexpireddate timestamp,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_user
(
szuserid,
szname,
decpasswordhash,
szworkplaceid,
gdaudittrailid,
bclearpdc,
dtmpasswordexpireddate,
bfirsttimelogin,
dtmlockedforlogin,
iwronglogincounter,
dtmlastupdated,
balreadytransferred,
dtmloginexpireddate,
szapplicationclass
)
values
(
p_szuserid,
p_szname,
p_decpasswordhash,
p_szworkplaceid,
p_gdaudittrailid,
p_bclearpdc,
p_dtmpasswordexpireddate,
p_bfirsttimelogin,
p_dtmlockedforlogin,
p_iwronglogincounter,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmloginexpireddate,
p_szapplicationclass
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_createuser_013(
p_szuserid bos_dt_szid,
p_szname bos_dt_szname,
p_decpasswordhash bos_dt_decamount,
p_szworkplaceid bos_dt_szid,
p_gdaudittrailid bytea,
p_bclearpdc bos_dt_bboolean,
p_dtmpasswordexpireddate timestamp,
p_bfirsttimelogin bos_dt_bboolean,
p_dtmlockedforlogin timestamp,
p_iwronglogincounter integer,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_dtmloginexpireddate timestamp,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
insert into bos_sm_user
(
szuserid,
szname,
decpasswordhash,
szworkplaceid,
gdaudittrailid,
bclearpdc,
dtmpasswordexpireddate,
bfirsttimelogin,
dtmlockedforlogin,
iwronglogincounter,
dtmlastupdated,
balreadytransferred,
dtmloginexpireddate,
szapplicationclass
)
values
(
p_szuserid,
p_szname,
p_decpasswordhash,
p_szworkplaceid,
p_gdaudittrailid,
p_bclearpdc,
p_dtmpasswordexpireddate,
p_bfirsttimelogin,
p_dtmlockedforlogin,
p_iwronglogincounter,
p_dtmlastupdated,
p_balreadytransferred,
p_dtmloginexpireddate,
p_szapplicationclass
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_deleteuser(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
delete from bos_sm_user
where
	szuserid=p_szuserid;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_dev_deleteall()
returns void as
$body$
begin
delete 
 from bos_sm_user where szuserid <> 'administrator';

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_getguid(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
gdaudittrailid

from 
bos_sm_user
where 
szuserid=p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_getlistofuser()
returns void as
$body$
begin
select 
szuserid,
szname
from 
bos_sm_user;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_getuser(
p_szuserid bos_dt_szid)
returns void as
$body$
begin

select
bos_sm_user.szname,
bos_sm_user.decpasswordhash,
bos_sm_user.szworkplaceid,

bos_gl_workplace.szsalesorgid as szworkplacesalesorgid_1_j,
so.szparentsalesorgid as szworkplacesalesorgid_2_j,

bos_gl_workplace.sztaxid as szworkplacetaxentityid_j,

bos_gl_workplace.szcompanyid,
bos_gl_company.szname as szcompanynm_j,

bos_sm_user.gdaudittrailid,

bos_sm_user.bclearpdc,
bos_sm_user.dtmpasswordexpireddate,
bos_sm_user.bfirsttimelogin,
bos_sm_user.dtmlockedforlogin,
bos_sm_user.iwronglogincounter,

bos_sm_user.dtmlastupdated,
bos_sm_user.balreadytransferred,
bos_sm_user.dtmloginexpireddate,
bos_sm_user.szapplicationclass 

from
bos_sm_user
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sm_user.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_gl_workplace.szcompanyid
left join bos_sd_salesorganization as so on so.szsalesorgid = bos_gl_workplace.szsalesorgid
where
bos_sm_user.szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_getuser_013(
p_szuserid bos_dt_szid)
returns void as
$body$
begin

select
bos_sm_user.szname,
bos_sm_user.decpasswordhash,
bos_sm_user.szworkplaceid,

bos_gl_workplace.szsalesorgid as szworkplacesalesorgid_1_j,
so.szparentsalesorgid as szworkplacesalesorgid_2_j,

bos_gl_workplace.sztaxid as szworkplacetaxentityid_j,

bos_gl_workplace.szcompanyid,
bos_gl_company.szname as szcompanynm_j,

bos_sm_user.gdaudittrailid,

bos_sm_user.bclearpdc,
bos_sm_user.dtmpasswordexpireddate,
bos_sm_user.bfirsttimelogin,
bos_sm_user.dtmlockedforlogin,
bos_sm_user.iwronglogincounter,

bos_sm_user.dtmlastupdated,
bos_sm_user.balreadytransferred,
bos_sm_user.dtmloginexpireddate,
bos_sm_user.szapplicationclass 

from
bos_sm_user
left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_sm_user.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_gl_workplace.szcompanyid
left join bos_sd_salesorganization as so on so.szsalesorgid = bos_gl_workplace.szsalesorgid
where
bos_sm_user.szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_isuserexist(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
select 
szname,
decpasswordhash,
	gdaudittrailid
	
from 
bos_sm_user
where 
szuserid=p_szuserid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_lockuser(
p_szuserid bos_dt_szid)
returns void as
$body$
begin
update bos_sm_user
set 
szname= szname
where 
szuserid= p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_updateuser(
p_szuserid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_bclearpdc bos_dt_bboolean,
p_decpasswordhash bos_dt_decamount,
p_dtmloginexpireddate timestamp,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
update bos_sm_user
set 
szname = p_szname,
szworkplaceid = p_szworkplaceid,
bclearpdc = p_bclearpdc,
decpasswordhash = p_decpasswordhash,
dtmloginexpireddate = p_dtmloginexpireddate,
szapplicationclass = p_szapplicationclass

where 
szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_sm_user_updateuser_013(
p_szuserid bos_dt_szid,
p_szname bos_dt_szname,
p_szworkplaceid bos_dt_szid,
p_bclearpdc bos_dt_bboolean,
p_decpasswordhash bos_dt_decamount,
p_dtmloginexpireddate timestamp,
p_szapplicationclass bos_dt_szid)
returns void as
$body$
begin
update bos_sm_user
set 
szname = p_szname,
szworkplaceid = p_szworkplaceid,
bclearpdc = p_bclearpdc,
decpasswordhash = p_decpasswordhash,
dtmloginexpireddate = p_dtmloginexpireddate,
szapplicationclass = p_szapplicationclass

where 
szuserid = p_szuserid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_createcusttaxindconfig(
p_szcustid bos_dt_szid,
p_sztaxindconfigid bos_dt_szid,
p_sznpwp bos_dt_sztaxid,
p_szpkp bos_dt_sztaxid,
p_dtmpkp timestamp,
p_sztaxtrnid bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_tin_custtaxindconfig
(
szcustid,
sztaxindconfigid,
sznpwp,
szpkp,
dtmpkp,
sztaxtrnid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_sztaxindconfigid,
p_sznpwp,
p_szpkp,
p_dtmpkp,
p_sztaxtrnid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_createcusttaxindconfig_014(
p_szcustid bos_dt_szid,
p_sztaxindconfigid bos_dt_szid,
p_sznpwp bos_dt_sztaxid,
p_szpkp bos_dt_sztaxid,
p_dtmpkp timestamp,
p_sztaxtrnid bos_dt_szdescription,
p_dtmlastupdated timestamp,
p_balreadytransferred bit)
returns void as
$body$
begin
insert into bos_tin_custtaxindconfig
(
szcustid,
sztaxindconfigid,
sznpwp,
szpkp,
dtmpkp,
sztaxtrnid,
-- data status.,
dtmlastupdated,
balreadytransferred
)
values
(
p_szcustid,
p_sztaxindconfigid,
p_sznpwp,
p_szpkp,
p_dtmpkp,
p_sztaxtrnid,
-- data status.,
p_dtmlastupdated,
p_balreadytransferred
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_deletecusttaxindconfig(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
delete from bos_tin_custtaxindconfig
where
	szcustid = p_szcustid;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_getcusttaxindconfig(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_tin_custtaxindconfig.sztaxindconfigid,
bos_tin_custtaxindconfig.sznpwp,
bos_tin_custtaxindconfig.szpkp,
bos_tin_custtaxindconfig.dtmpkp,
bos_tin_custtaxindconfig.sztaxtrnid,
bos_ar_custinvoice.szcusttaxnm as szcusttaxnm_j,
bos_tin_custtaxindconfig.dtmlastupdated,
bos_tin_custtaxindconfig.balreadytransferred

from 
bos_tin_custtaxindconfig
left join bos_ar_custinvoice on 
bos_tin_custtaxindconfig.szcustid = bos_ar_custinvoice.szcustid

where 
bos_tin_custtaxindconfig.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_getcusttaxindconfig_014(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
bos_tin_custtaxindconfig.sztaxindconfigid,
bos_tin_custtaxindconfig.sznpwp,
bos_tin_custtaxindconfig.szpkp,
bos_tin_custtaxindconfig.dtmpkp,
bos_tin_custtaxindconfig.sztaxtrnid,
bos_ar_custinvoice.szcusttaxnm as szcusttaxnm_j,
bos_tin_custtaxindconfig.dtmlastupdated,
bos_tin_custtaxindconfig.balreadytransferred

from 
bos_tin_custtaxindconfig
left join bos_ar_custinvoice on 
bos_tin_custtaxindconfig.szcustid = bos_ar_custinvoice.szcustid


where 
bos_tin_custtaxindconfig.szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_getlistofcusttaxindconfig()
returns void as
$body$
begin
select 
szcustid

from 
bos_tin_custtaxindconfig;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_iscusttaxindconfigexist(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
select 
sztaxindconfigid

from 
bos_tin_custtaxindconfig
where 
szcustid = p_szcustid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_lockcusttaxindconfig(
p_szcustid bos_dt_szid)
returns void as
$body$
begin
update bos_tin_custtaxindconfig
set 
sztaxindconfigid = sztaxindconfigid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_custtaxindconfig_updatecusttaxindconfig(
p_szcustid bos_dt_szid,
p_sztaxindconfigid bos_dt_szid,
p_sznpwp bos_dt_sztaxid,
p_szpkp bos_dt_sztaxid,
p_dtmpkp timestamp,
p_sztaxtrnid bos_dt_szdescription)
returns void as
$body$
begin
update bos_tin_custtaxindconfig
set 
sztaxindconfigid = p_sztaxindconfigid,
sznpwp = p_sznpwp,
szpkp = p_szpkp,
dtmpkp = p_dtmpkp,
sztaxtrnid = p_sztaxtrnid
where 
szcustid = p_szcustid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_createfakturpajak(
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_shtaxindconfigtype smallint)
returns void as
$body$
begin
insert into bos_tin_fakturpajak
(
szfakturpajakid,
dtmfakturpajak,
szcustid,
szcustnm,
szcustaddr,
szcustnpwp,
szcompid,
szcompnm,
szcompaddr,
szcompnpwp,
szcomppkpno,
dtmcomppkptg,
sztaxindconfigid,
bincludetax,
shfakturtype,
szccyid,
decamount,
decdiscount,
decdpp,
decppn,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred,
shtaxindconfigtype
)
values
(
p_szfakturpajakid,
p_dtmfakturpajak,
p_szcustid,
p_szcustnm,
p_szcustaddr,
p_szcustnpwp,
p_szcompid,
p_szcompnm,
p_szcompaddr,
p_szcompnpwp,
p_szcomppkpno,
p_dtmcomppkptg,
p_sztaxindconfigid,
p_bincludetax,
p_shfakturtype,
p_szccyid,
p_decamount,
p_decdiscount,
p_decdpp,
p_decppn,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred,
p_shtaxindconfigtype
-----------------------
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_createfakturpajak_013(
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_shtaxindconfigtype smallint)
returns void as
$body$
begin
insert into bos_tin_fakturpajak
(
szfakturpajakid,
dtmfakturpajak,
szcustid,
szcustnm,
szcustaddr,
szcustnpwp,
szcompid,
szcompnm,
szcompaddr,
szcompnpwp,
szcomppkpno,
dtmcomppkptg,
sztaxindconfigid,
bincludetax,
shfakturtype,
szccyid,
decamount,
decdiscount,
decdpp,
decppn,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred,
shtaxindconfigtype
)
values
(
p_szfakturpajakid,
p_dtmfakturpajak,
p_szcustid,
p_szcustnm,
p_szcustaddr,
p_szcustnpwp,
p_szcompid,
p_szcompnm,
p_szcompaddr,
p_szcompnpwp,
p_szcomppkpno,
p_dtmcomppkptg,
p_sztaxindconfigid,
p_bincludetax,
p_shfakturtype,
p_szccyid,
p_decamount,
p_decdiscount,
p_decdpp,
p_decppn,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred,
p_shtaxindconfigtype
-----------------------
--set ansi_nulls on,
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_createfakturpajak_014(
p_szfakturpajakid bos_dt_szbigid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szbigdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_dtmlastupdated timestamp,
p_balreadytransferred bit,
p_shtaxindconfigtype smallint,
p_szfakturpajaktype bos_dt_szid,
p_szreturnrefid bos_dt_szbigid,
p_szcustreturntaxrefnote bos_dt_szbigid)
returns void as
$body$
begin
insert into bos_tin_fakturpajak
(
szfakturpajakid,
dtmfakturpajak,
szcustid,
szcustnm,
szcustaddr,
szcustnpwp,
szcompid,
szcompnm,
szcompaddr,
szcompnpwp,
szcomppkpno,
dtmcomppkptg,
sztaxindconfigid,
bincludetax,
shfakturtype,
szccyid,
decamount,
decdiscount,
decdpp,
decppn,
bresultfrtransfer,
bvoid,
bapplied,
btprintedcount,
btransferred,
szcompanyid,
szworkplaceid,
sztaxentityid,
bneedapproval,
gdapprovedid,
szfjournalid,
dtmcreated,
bsystemcreated,
szuserid,
dtmlastupdated,
balreadytransferred,
shtaxindconfigtype,
szfakturpajaktype,
szreturnrefid,
szcustreturntaxrefnote
)
values
(
p_szfakturpajakid,
p_dtmfakturpajak,
p_szcustid,
p_szcustnm,
p_szcustaddr,
p_szcustnpwp,
p_szcompid,
p_szcompnm,
p_szcompaddr,
p_szcompnpwp,
p_szcomppkpno,
p_dtmcomppkptg,
p_sztaxindconfigid,
p_bincludetax,
p_shfakturtype,
p_szccyid,
p_decamount,
p_decdiscount,
p_decdpp,
p_decppn,
p_bresultfrtransfer,
p_bvoid,
p_bapplied,
p_btprintedcount,
p_btransferred,
p_szcompanyid,
p_szworkplaceid,
p_sztaxentityid,
p_bneedapproval,
p_gdapprovedid,
p_szfjournalid,
p_dtmcreated,
p_bsystemcreated,
p_szuserid,
p_dtmlastupdated,
p_balreadytransferred,
p_shtaxindconfigtype,
p_szfakturpajaktype,
p_szreturnrefid,
p_szcustreturntaxrefnote
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_createfakturpajakitem_014(
p_szfakturpajakid bos_dt_szbigid,
p_shitemnumber smallint,
p_szproductid bos_dt_szid,
p_szproductnm bos_dt_szname,
p_decqty bos_dt_decamount,
p_decprice bos_dt_decamount,
p_decsubtotal bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_dectax bos_dt_dectax,
p_dectaxrate bos_dt_decamount,
p_decreturnqtyremaining bos_dt_decamount)
returns void as
$body$
begin
insert into bos_tin_fakturpajakitem
(
szfakturpajakid,
shitemnumber,
szproductid,
szproductnm,
decqty,
decprice,
decsubtotal,
decdiscount,
decdpp,
dectax,
dectaxrate,
decreturnqtyremaining
)
values
(
p_szfakturpajakid,
p_shitemnumber,
p_szproductid,
p_szproductnm,
p_decqty,
p_decprice,
p_decsubtotal,
p_decdiscount,
p_decdpp,
p_dectax,
p_dectaxrate,
p_decreturnqtyremaining
-----------------------,
--set ansi_nulls on
);

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_deletefakturpajak(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_tin_fakturpajak
where
szfakturpajakid = p_szfakturpajakid;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_deletefakturpajak_013(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_tin_fakturpajak
where
szfakturpajakid = p_szfakturpajakid;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_deletefakturpajakitem(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_tin_fakturpajakitem
where
szfakturpajakid = p_szfakturpajakid;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_deletefakturpajakitem_013(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
delete 
from  bos_tin_fakturpajakitem
where
szfakturpajakid = p_szfakturpajakid;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_getfakturpajak(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin

select
bos_tin_fakturpajak.szfakturpajakid,
bos_tin_fakturpajak.dtmfakturpajak,

bos_tin_fakturpajak.szcustid,
bos_tin_fakturpajak.szcustnm,
bos_tin_fakturpajak.szcustnpwp,
bos_tin_fakturpajak.szcustaddr,

bos_tin_fakturpajak.szcompid,
bos_tin_fakturpajak.szcompnm,
bos_tin_fakturpajak.szcompnpwp,
bos_tin_fakturpajak.szcomppkpno,
bos_tin_fakturpajak.dtmcomppkptg,
bos_tin_fakturpajak.szcompaddr,

bos_tin_fakturpajak.sztaxindconfigid,

bos_tin_fakturpajak.bincludetax,
bos_tin_fakturpajak.shfakturtype,

bos_tin_fakturpajak.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,

bos_tin_fakturpajak.decamount,
bos_tin_fakturpajak.decdiscount,
bos_tin_fakturpajak.decdpp,
bos_tin_fakturpajak.decppn,

bos_tin_fakturpajak.bresultfrtransfer,
bos_tin_fakturpajak.bvoid,
bos_gen_approved.bapproved,
bos_tin_fakturpajak.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_tin_fakturpajak.btprintedcount,
bos_tin_fakturpajak.btransferred,

bos_tin_fakturpajak.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_tin_fakturpajak.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_tin_fakturpajak.sztaxentityid,
bos_tin_fakturpajak.bneedapproval,
bos_tin_fakturpajak.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_tin_fakturpajak.dtmlastupdated,
bos_tin_fakturpajak.balreadytransferred,

bos_tin_fakturpajak.dtmcreated,
bos_tin_fakturpajak.bsystemcreated,

bos_tin_fakturpajak.szuserid,
bos_sm_user.szname as szusernm_j,

bos_tin_fakturpajak.shtaxindconfigtype
from
bos_tin_fakturpajak 
left join bos_gen_approved on bos_tin_fakturpajak.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_tin_fakturpajak.szfjournalid=bos_gl_fjournaltrans.szfjournalid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_tin_fakturpajak.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_tin_fakturpajak.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_tin_fakturpajak.szuserid

left join bos_cu_currency on bos_cu_currency.szccyid = bos_tin_fakturpajak.szccyid

where
bos_tin_fakturpajak.szfakturpajakid = p_szfakturpajakid;


-----------------------
--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_getfakturpajak_013(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin

select
bos_tin_fakturpajak.szfakturpajakid,
bos_tin_fakturpajak.dtmfakturpajak,

bos_tin_fakturpajak.szcustid,
bos_tin_fakturpajak.szcustnm,
bos_tin_fakturpajak.szcustnpwp,
bos_tin_fakturpajak.szcustaddr,

bos_tin_fakturpajak.szcompid,
bos_tin_fakturpajak.szcompnm,
bos_tin_fakturpajak.szcompnpwp,
bos_tin_fakturpajak.szcomppkpno,
bos_tin_fakturpajak.dtmcomppkptg,
bos_tin_fakturpajak.szcompaddr,

bos_tin_fakturpajak.sztaxindconfigid,

bos_tin_fakturpajak.bincludetax,
bos_tin_fakturpajak.shfakturtype,

bos_tin_fakturpajak.szccyid,
bos_cu_currency.szamountformat as szccyamountformat_j,

bos_tin_fakturpajak.decamount,
bos_tin_fakturpajak.decdiscount,
bos_tin_fakturpajak.decdpp,
bos_tin_fakturpajak.decppn,

bos_tin_fakturpajak.bresultfrtransfer,
bos_tin_fakturpajak.bvoid,
bos_gen_approved.bapproved,
bos_tin_fakturpajak.bapplied,
bos_gl_fjournaltrans.szfjournalid as bjournal,
bos_gl_fjournaltrans.bposted,
bos_tin_fakturpajak.btprintedcount,
bos_tin_fakturpajak.btransferred,

bos_tin_fakturpajak.szcompanyid,
bos_gl_company.szname as szcompanynm,

bos_tin_fakturpajak.szworkplaceid,
bos_gl_workplace.szname as szworkplacenm,

bos_tin_fakturpajak.sztaxentityid,
bos_tin_fakturpajak.bneedapproval,
bos_tin_fakturpajak.gdapprovedid,
bos_gen_approved.szapprovalid,
bos_gl_fjournaltrans.szfjournalid,
bos_tin_fakturpajak.dtmlastupdated,
bos_tin_fakturpajak.balreadytransferred,

bos_tin_fakturpajak.dtmcreated,
bos_tin_fakturpajak.bsystemcreated,

bos_tin_fakturpajak.szuserid,
bos_sm_user.szname as szusernm_j,

bos_tin_fakturpajak.shtaxindconfigtype
from
bos_tin_fakturpajak 
left join bos_gen_approved on bos_tin_fakturpajak.gdapprovedid=bos_gen_approved.gdapprovedid
left join bos_gl_fjournaltrans on bos_tin_fakturpajak.szfjournalid=bos_gl_fjournaltrans.szfjournalid

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_tin_fakturpajak.szworkplaceid
left join bos_gl_company on bos_gl_company.szcompanyid = bos_tin_fakturpajak.szcompanyid
left join bos_sm_user on bos_sm_user.szuserid = bos_tin_fakturpajak.szuserid


left join bos_cu_currency on bos_cu_currency.szccyid = bos_tin_fakturpajak.szccyid

where
bos_tin_fakturpajak.szfakturpajakid = p_szfakturpajakid;


-----------------------
--set ansi_nulls on

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_getfakturpajak_014(
p_szfakturpajakid bos_dt_szbigid)
returns void as
$body$
begin

select    
bos_tin_fakturpajak.szfakturpajakid,    
bos_tin_fakturpajak.dtmfakturpajak,    

bos_tin_fakturpajak.szcustid,    
bos_tin_fakturpajak.szcustnm,    
bos_tin_fakturpajak.szcustnpwp,    
bos_tin_fakturpajak.szcustaddr,    

bos_tin_fakturpajak.szcompid,    
bos_tin_fakturpajak.szcompnm,    
bos_tin_fakturpajak.szcompnpwp,    
bos_tin_fakturpajak.szcomppkpno,    
bos_tin_fakturpajak.dtmcomppkptg,    
bos_tin_fakturpajak.szcompaddr,    

bos_tin_fakturpajak.sztaxindconfigid,    

bos_tin_fakturpajak.bincludetax,    
bos_tin_fakturpajak.shfakturtype,    

bos_tin_fakturpajak.szccyid,    
bos_cu_currency.szamountformat as szccyamountformat_j,    

bos_tin_fakturpajak.decamount,    
bos_tin_fakturpajak.decdiscount,    
bos_tin_fakturpajak.decdpp,    
bos_tin_fakturpajak.decppn,    

bos_tin_fakturpajak.bresultfrtransfer,    
bos_tin_fakturpajak.bvoid,    
bos_gen_approved.bapproved,    
bos_tin_fakturpajak.bapplied,    
bos_gl_fjournaltrans.szfjournalid as bjournal,    
bos_gl_fjournaltrans.bposted,    
bos_tin_fakturpajak.btprintedcount,    
bos_tin_fakturpajak.btransferred,    

bos_tin_fakturpajak.szcompanyid,    
bos_gl_company.szname as szcompanynm,    

bos_tin_fakturpajak.szworkplaceid,    
bos_gl_workplace.szname as szworkplacenm,    

bos_tin_fakturpajak.sztaxentityid,    
bos_tin_fakturpajak.bneedapproval,    
bos_tin_fakturpajak.gdapprovedid,    
bos_gen_approved.szapprovalid,    
bos_gl_fjournaltrans.szfjournalid,    
bos_tin_fakturpajak.dtmlastupdated,    
bos_tin_fakturpajak.balreadytransferred,    

bos_tin_fakturpajak.dtmcreated,    
bos_tin_fakturpajak.bsystemcreated,    

bos_tin_fakturpajak.szuserid,    
bos_sm_user.szname as szusernm_j,    

bos_tin_fakturpajak.shtaxindconfigtype,
bos_tin_fakturpajak.szfakturpajaktype,
bos_tin_fakturpajak.szreturnrefid,   
bos_tin_fakturpajak.szcustreturntaxrefnote  
from    
bos_tin_fakturpajak     
left join bos_gen_approved on bos_tin_fakturpajak.gdapprovedid=bos_gen_approved.gdapprovedid    
left join bos_gl_fjournaltrans on bos_tin_fakturpajak.szfjournalid=bos_gl_fjournaltrans.szfjournalid    

left join bos_gl_workplace on bos_gl_workplace.szworkplaceid = bos_tin_fakturpajak.szworkplaceid    
left join bos_gl_company on bos_gl_company.szcompanyid = bos_tin_fakturpajak.szcompanyid    
left join bos_sm_user on bos_sm_user.szuserid = bos_tin_fakturpajak.szuserid    


left join bos_cu_currency on bos_cu_currency.szccyid = bos_tin_fakturpajak.szccyid    

where    
bos_tin_fakturpajak.szfakturpajakid = p_szfakturpajakid;   


end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_getfakturpajakitem_014(
p_szfakturpajakid bos_dt_szbigid)
returns void as
$body$
begin

select    
bos_tin_fakturpajakitem.szproductid,    
bos_tin_fakturpajakitem.shitemnumber,
bos_inv_product.szname as szproductnm_j,    
bos_inv_product.szqtyformat as szproductqtyformat_j,    
bos_gl_taxtype.decrate as decproducttaxrate_j,    
bos_inv_product.szuomid as szproductuomid_j,    
bos_inv_product.szcompuomid as szproductcompuomid_j,    
bos_inv_product.szuomclassid as szproductuomclassid_j,    

bos_tin_fakturpajakitem.szproductnm,    
bos_tin_fakturpajakitem.decqty,    
bos_tin_fakturpajakitem.decprice,    
bos_tin_fakturpajakitem.decsubtotal,    

bos_tin_fakturpajakitem.decdiscount,    
bos_tin_fakturpajakitem.decdpp,    
bos_tin_fakturpajakitem.dectax,    
bos_tin_fakturpajakitem.dectaxrate,      
bos_tin_fakturpajakitem.decreturnqtyremaining      

from    
bos_tin_fakturpajakitem
left join bos_inv_product on bos_inv_product.szproductid = bos_tin_fakturpajakitem.szproductid    
left join bos_gl_taxtype on bos_gl_taxtype.sztaxtypeid = bos_inv_product.sztaxtypeid    

where    
bos_tin_fakturpajakitem.szfakturpajakid = p_szfakturpajakid;   

-----------------------
--set ansi_nulls on


end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_getlistoffakturpajak_014()
returns void as
$body$
begin
select 
 distinct bos_tin_fakturpajakitem.szfakturpajakid, bos_tin_fakturpajakiteminvoicesource.szinvoiceid

from 
bos_tin_fakturpajakitem;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_isfakturpajakexist(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
select 
szfakturpajakid

from 
bos_tin_fakturpajak
where 
szfakturpajakid = p_szfakturpajakid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_isfakturpajakexist_013(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
select 
szfakturpajakid

from 
bos_tin_fakturpajak
where 
szfakturpajakid = p_szfakturpajakid ;
end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_lockfakturpajak(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
update bos_tin_fakturpajak
set 
btransferred = btransferred
where 
szfakturpajakid = p_szfakturpajakid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_lockfakturpajak_013(
p_szfakturpajakid bos_dt_szid)
returns void as
$body$
begin
update bos_tin_fakturpajak
set 
btransferred = btransferred
where 
szfakturpajakid = p_szfakturpajakid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_updatefakturpajak(
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_shtaxindconfigtype smallint)
returns void as
$body$
begin
update bos_tin_fakturpajak
set 
szfakturpajakid=p_szfakturpajakid,
dtmfakturpajak=p_dtmfakturpajak,
szcustid=p_szcustid,
szcustnm=p_szcustnm,
szcustaddr=p_szcustaddr,
szcustnpwp=p_szcustnpwp,
szcompid=p_szcompid,
szcompnm=p_szcompnm,
szcompaddr=p_szcompaddr,
szcompnpwp=p_szcompnpwp,
szcomppkpno=p_szcomppkpno,
dtmcomppkptg=p_dtmcomppkptg,
sztaxindconfigid=p_sztaxindconfigid,
bincludetax=p_bincludetax,
shfakturtype=p_shfakturtype,
szccyid = p_szccyid,

decamount=p_decamount,
decdiscount=p_decdiscount,
decdpp=p_decdpp,
decppn=p_decppn,

bvoid=p_bvoid,
bapplied=p_bapplied,

szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

shtaxindconfigtype = p_shtaxindconfigtype
where 
szfakturpajakid = p_szfakturpajakid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_updatefakturpajak_013(
p_szfakturpajakid bos_dt_szid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_shtaxindconfigtype smallint)
returns void as
$body$
begin
update bos_tin_fakturpajak
set 
szfakturpajakid=p_szfakturpajakid,
dtmfakturpajak=p_dtmfakturpajak,
szcustid=p_szcustid,
szcustnm=p_szcustnm,
szcustaddr=p_szcustaddr,
szcustnpwp=p_szcustnpwp,
szcompid=p_szcompid,
szcompnm=p_szcompnm,
szcompaddr=p_szcompaddr,
szcompnpwp=p_szcompnpwp,
szcomppkpno=p_szcomppkpno,
dtmcomppkptg=p_dtmcomppkptg,
sztaxindconfigid=p_sztaxindconfigid,
bincludetax=p_bincludetax,
shfakturtype=p_shfakturtype,
szccyid = p_szccyid,

decamount=p_decamount,
decdiscount=p_decdiscount,
decdpp=p_decdpp,
decppn=p_decppn,

bvoid=p_bvoid,
bapplied=p_bapplied,

szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

shtaxindconfigtype = p_shtaxindconfigtype
where 
szfakturpajakid = p_szfakturpajakid;

end;
$body$
language plpgsql volatile;


create or replace function bos_tin_fakturpajak_updatefakturpajak_014(
p_szfakturpajakid bos_dt_szbigid,
p_dtmfakturpajak timestamp,
p_szcustid bos_dt_szid,
p_szcustnm bos_dt_szname,
p_szcustaddr bos_dt_szbigdescription,
p_szcustnpwp bos_dt_sztaxid,
p_szcompid bos_dt_szid,
p_szcompnm bos_dt_szname,
p_szcompaddr varchar,
p_szcompnpwp bos_dt_sztaxid,
p_szcomppkpno bos_dt_sztaxid,
p_dtmcomppkptg timestamp,
p_sztaxindconfigid bos_dt_szid,
p_bincludetax smallint,
p_shfakturtype smallint,
p_szccyid bos_dt_szsmallid,
p_decamount bos_dt_decamount,
p_decdiscount bos_dt_decamount,
p_decdpp bos_dt_dectax,
p_decppn bos_dt_dectax,
p_bresultfrtransfer bit,
p_bvoid bit,
p_bapproved bit,
p_bapplied bit,
p_bjournal bit,
p_bposted bit,
p_btprintedcount smallint,
p_btransferred bit,
p_szcompanyid bos_dt_szmediumid,
p_szworkplaceid bos_dt_szid,
p_sztaxentityid bos_dt_szid,
p_bneedapproval bit,
p_gdapprovedid bytea,
p_szapprovalid bos_dt_szid,
p_szfjournalid bos_dt_szid,
p_dtmcreated timestamp,
p_bsystemcreated bit,
p_szuserid bos_dt_szid,
p_shtaxindconfigtype smallint,
p_szfakturpajaktype bos_dt_szid,
p_szreturnrefid bos_dt_szbigid,
p_szcustreturntaxrefnote bos_dt_szbigid)
returns void as
$body$
begin
update bos_tin_fakturpajak
set 
szfakturpajakid=p_szfakturpajakid,
dtmfakturpajak=p_dtmfakturpajak,
szcustid=p_szcustid,
szcustnm=p_szcustnm,
szcustaddr=p_szcustaddr,
szcustnpwp=p_szcustnpwp,
szcompid=p_szcompid,
szcompnm=p_szcompnm,
szcompaddr=p_szcompaddr,
szcompnpwp=p_szcompnpwp,
szcomppkpno=p_szcomppkpno,
dtmcomppkptg=p_dtmcomppkptg,
sztaxindconfigid=p_sztaxindconfigid,
bincludetax=p_bincludetax,
shfakturtype=p_shfakturtype,
szccyid = p_szccyid,

decamount=p_decamount,
decdiscount=p_decdiscount,
decdpp=p_decdpp,
decppn=p_decppn,

bvoid=p_bvoid,
bapplied=p_bapplied,

szcompanyid=p_szcompanyid,
szworkplaceid=p_szworkplaceid,
sztaxentityid=p_sztaxentityid,

dtmcreated = p_dtmcreated,
szuserid = p_szuserid,

shtaxindconfigtype = p_shtaxindconfigtype,
szfakturpajaktype = p_szfakturpajaktype,
szreturnrefid = p_szreturnrefid,
szcustreturntaxrefnote = p_szcustreturntaxrefnote
where 
szfakturpajakid = p_szfakturpajakid;

end;
$body$
language plpgsql volatile;

create or replace function count_rows(
    schema text,
    tablename text)
  RETURNS integer AS
$BODY$
declare
  result integer;
  query varchar;
begin
  query := 'SELECT count(1) FROM ' || schema || '.' || tablename;
  execute query into result;
  return result;
end;
$BODY$
  LANGUAGE plpgsql VOLATILE;
  
create or replace function sp_getrowsforalltables()
 returns table(skema varchar, tablename varchar, totalrow integer) as
$body$

begin
return query
select
  cast( table_schema as varchar),
  cast(  table_name as varchar),
 
  count_rows(table_schema, table_name)
from information_schema.tables
where 
  table_schema not in ('pg_catalog', 'information_schema') 
  and table_type='BASE TABLE'
order by 3 desc;
end;
$body$
language plpgsql volatile;